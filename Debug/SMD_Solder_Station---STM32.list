
SMD_Solder_Station---STM32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d0c0  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000020e0  0800d1d0  0800d1d0  0001d1d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800f2b0  0800f2b0  00020350  2**0
                  CONTENTS
  4 .ARM          00000000  0800f2b0  0800f2b0  00020350  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800f2b0  0800f2b0  00020350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800f2b0  0800f2b0  0001f2b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800f2b4  0800f2b4  0001f2b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000350  20000000  0800f2b8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000030b0  20000350  0800f608  00020350  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20003400  0800f608  00023400  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020350  2**0
                  CONTENTS, READONLY
 12 .debug_info   000b96aa  00000000  00000000  00020379  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000a655  00000000  00000000  000d9a23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00003548  00000000  00000000  000e4078  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  000213db  00000000  00000000  000e75c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   00046742  00000000  00000000  0010899b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    000affdf  00000000  00000000  0014f0dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000053  00000000  00000000  001ff0bc  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 00004ce0  00000000  00000000  001ff110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000be30  00000000  00000000  00203df0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    00040938  00000000  00000000  0020fc20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000350 	.word	0x20000350
 800012c:	00000000 	.word	0x00000000
 8000130:	0800d1b8 	.word	0x0800d1b8

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000354 	.word	0x20000354
 800014c:	0800d1b8 	.word	0x0800d1b8

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_frsub>:
 8000ac8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000acc:	e002      	b.n	8000ad4 <__addsf3>
 8000ace:	bf00      	nop

08000ad0 <__aeabi_fsub>:
 8000ad0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000ad4 <__addsf3>:
 8000ad4:	0042      	lsls	r2, r0, #1
 8000ad6:	bf1f      	itttt	ne
 8000ad8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000adc:	ea92 0f03 	teqne	r2, r3
 8000ae0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ae4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ae8:	d06a      	beq.n	8000bc0 <__addsf3+0xec>
 8000aea:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000aee:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000af2:	bfc1      	itttt	gt
 8000af4:	18d2      	addgt	r2, r2, r3
 8000af6:	4041      	eorgt	r1, r0
 8000af8:	4048      	eorgt	r0, r1
 8000afa:	4041      	eorgt	r1, r0
 8000afc:	bfb8      	it	lt
 8000afe:	425b      	neglt	r3, r3
 8000b00:	2b19      	cmp	r3, #25
 8000b02:	bf88      	it	hi
 8000b04:	4770      	bxhi	lr
 8000b06:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000b0a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b0e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000b12:	bf18      	it	ne
 8000b14:	4240      	negne	r0, r0
 8000b16:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b1a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000b1e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000b22:	bf18      	it	ne
 8000b24:	4249      	negne	r1, r1
 8000b26:	ea92 0f03 	teq	r2, r3
 8000b2a:	d03f      	beq.n	8000bac <__addsf3+0xd8>
 8000b2c:	f1a2 0201 	sub.w	r2, r2, #1
 8000b30:	fa41 fc03 	asr.w	ip, r1, r3
 8000b34:	eb10 000c 	adds.w	r0, r0, ip
 8000b38:	f1c3 0320 	rsb	r3, r3, #32
 8000b3c:	fa01 f103 	lsl.w	r1, r1, r3
 8000b40:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b44:	d502      	bpl.n	8000b4c <__addsf3+0x78>
 8000b46:	4249      	negs	r1, r1
 8000b48:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000b4c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000b50:	d313      	bcc.n	8000b7a <__addsf3+0xa6>
 8000b52:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000b56:	d306      	bcc.n	8000b66 <__addsf3+0x92>
 8000b58:	0840      	lsrs	r0, r0, #1
 8000b5a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b5e:	f102 0201 	add.w	r2, r2, #1
 8000b62:	2afe      	cmp	r2, #254	; 0xfe
 8000b64:	d251      	bcs.n	8000c0a <__addsf3+0x136>
 8000b66:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000b6a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b6e:	bf08      	it	eq
 8000b70:	f020 0001 	biceq.w	r0, r0, #1
 8000b74:	ea40 0003 	orr.w	r0, r0, r3
 8000b78:	4770      	bx	lr
 8000b7a:	0049      	lsls	r1, r1, #1
 8000b7c:	eb40 0000 	adc.w	r0, r0, r0
 8000b80:	3a01      	subs	r2, #1
 8000b82:	bf28      	it	cs
 8000b84:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000b88:	d2ed      	bcs.n	8000b66 <__addsf3+0x92>
 8000b8a:	fab0 fc80 	clz	ip, r0
 8000b8e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000b92:	ebb2 020c 	subs.w	r2, r2, ip
 8000b96:	fa00 f00c 	lsl.w	r0, r0, ip
 8000b9a:	bfaa      	itet	ge
 8000b9c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000ba0:	4252      	neglt	r2, r2
 8000ba2:	4318      	orrge	r0, r3
 8000ba4:	bfbc      	itt	lt
 8000ba6:	40d0      	lsrlt	r0, r2
 8000ba8:	4318      	orrlt	r0, r3
 8000baa:	4770      	bx	lr
 8000bac:	f092 0f00 	teq	r2, #0
 8000bb0:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000bb4:	bf06      	itte	eq
 8000bb6:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000bba:	3201      	addeq	r2, #1
 8000bbc:	3b01      	subne	r3, #1
 8000bbe:	e7b5      	b.n	8000b2c <__addsf3+0x58>
 8000bc0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000bc4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000bc8:	bf18      	it	ne
 8000bca:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bce:	d021      	beq.n	8000c14 <__addsf3+0x140>
 8000bd0:	ea92 0f03 	teq	r2, r3
 8000bd4:	d004      	beq.n	8000be0 <__addsf3+0x10c>
 8000bd6:	f092 0f00 	teq	r2, #0
 8000bda:	bf08      	it	eq
 8000bdc:	4608      	moveq	r0, r1
 8000bde:	4770      	bx	lr
 8000be0:	ea90 0f01 	teq	r0, r1
 8000be4:	bf1c      	itt	ne
 8000be6:	2000      	movne	r0, #0
 8000be8:	4770      	bxne	lr
 8000bea:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000bee:	d104      	bne.n	8000bfa <__addsf3+0x126>
 8000bf0:	0040      	lsls	r0, r0, #1
 8000bf2:	bf28      	it	cs
 8000bf4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000bf8:	4770      	bx	lr
 8000bfa:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000bfe:	bf3c      	itt	cc
 8000c00:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000c04:	4770      	bxcc	lr
 8000c06:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c0a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000c0e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c12:	4770      	bx	lr
 8000c14:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c18:	bf16      	itet	ne
 8000c1a:	4608      	movne	r0, r1
 8000c1c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c20:	4601      	movne	r1, r0
 8000c22:	0242      	lsls	r2, r0, #9
 8000c24:	bf06      	itte	eq
 8000c26:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c2a:	ea90 0f01 	teqeq	r0, r1
 8000c2e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000c32:	4770      	bx	lr

08000c34 <__aeabi_ui2f>:
 8000c34:	f04f 0300 	mov.w	r3, #0
 8000c38:	e004      	b.n	8000c44 <__aeabi_i2f+0x8>
 8000c3a:	bf00      	nop

08000c3c <__aeabi_i2f>:
 8000c3c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000c40:	bf48      	it	mi
 8000c42:	4240      	negmi	r0, r0
 8000c44:	ea5f 0c00 	movs.w	ip, r0
 8000c48:	bf08      	it	eq
 8000c4a:	4770      	bxeq	lr
 8000c4c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000c50:	4601      	mov	r1, r0
 8000c52:	f04f 0000 	mov.w	r0, #0
 8000c56:	e01c      	b.n	8000c92 <__aeabi_l2f+0x2a>

08000c58 <__aeabi_ul2f>:
 8000c58:	ea50 0201 	orrs.w	r2, r0, r1
 8000c5c:	bf08      	it	eq
 8000c5e:	4770      	bxeq	lr
 8000c60:	f04f 0300 	mov.w	r3, #0
 8000c64:	e00a      	b.n	8000c7c <__aeabi_l2f+0x14>
 8000c66:	bf00      	nop

08000c68 <__aeabi_l2f>:
 8000c68:	ea50 0201 	orrs.w	r2, r0, r1
 8000c6c:	bf08      	it	eq
 8000c6e:	4770      	bxeq	lr
 8000c70:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000c74:	d502      	bpl.n	8000c7c <__aeabi_l2f+0x14>
 8000c76:	4240      	negs	r0, r0
 8000c78:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c7c:	ea5f 0c01 	movs.w	ip, r1
 8000c80:	bf02      	ittt	eq
 8000c82:	4684      	moveq	ip, r0
 8000c84:	4601      	moveq	r1, r0
 8000c86:	2000      	moveq	r0, #0
 8000c88:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000c8c:	bf08      	it	eq
 8000c8e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000c92:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000c96:	fabc f28c 	clz	r2, ip
 8000c9a:	3a08      	subs	r2, #8
 8000c9c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000ca0:	db10      	blt.n	8000cc4 <__aeabi_l2f+0x5c>
 8000ca2:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ca6:	4463      	add	r3, ip
 8000ca8:	fa00 fc02 	lsl.w	ip, r0, r2
 8000cac:	f1c2 0220 	rsb	r2, r2, #32
 8000cb0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000cb4:	fa20 f202 	lsr.w	r2, r0, r2
 8000cb8:	eb43 0002 	adc.w	r0, r3, r2
 8000cbc:	bf08      	it	eq
 8000cbe:	f020 0001 	biceq.w	r0, r0, #1
 8000cc2:	4770      	bx	lr
 8000cc4:	f102 0220 	add.w	r2, r2, #32
 8000cc8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ccc:	f1c2 0220 	rsb	r2, r2, #32
 8000cd0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000cd4:	fa21 f202 	lsr.w	r2, r1, r2
 8000cd8:	eb43 0002 	adc.w	r0, r3, r2
 8000cdc:	bf08      	it	eq
 8000cde:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ce2:	4770      	bx	lr

08000ce4 <__aeabi_fmul>:
 8000ce4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000ce8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000cec:	bf1e      	ittt	ne
 8000cee:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000cf2:	ea92 0f0c 	teqne	r2, ip
 8000cf6:	ea93 0f0c 	teqne	r3, ip
 8000cfa:	d06f      	beq.n	8000ddc <__aeabi_fmul+0xf8>
 8000cfc:	441a      	add	r2, r3
 8000cfe:	ea80 0c01 	eor.w	ip, r0, r1
 8000d02:	0240      	lsls	r0, r0, #9
 8000d04:	bf18      	it	ne
 8000d06:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d0a:	d01e      	beq.n	8000d4a <__aeabi_fmul+0x66>
 8000d0c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000d10:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d14:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d18:	fba0 3101 	umull	r3, r1, r0, r1
 8000d1c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000d20:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000d24:	bf3e      	ittt	cc
 8000d26:	0049      	lslcc	r1, r1, #1
 8000d28:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d2c:	005b      	lslcc	r3, r3, #1
 8000d2e:	ea40 0001 	orr.w	r0, r0, r1
 8000d32:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000d36:	2afd      	cmp	r2, #253	; 0xfd
 8000d38:	d81d      	bhi.n	8000d76 <__aeabi_fmul+0x92>
 8000d3a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000d3e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d42:	bf08      	it	eq
 8000d44:	f020 0001 	biceq.w	r0, r0, #1
 8000d48:	4770      	bx	lr
 8000d4a:	f090 0f00 	teq	r0, #0
 8000d4e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000d52:	bf08      	it	eq
 8000d54:	0249      	lsleq	r1, r1, #9
 8000d56:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000d5a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000d5e:	3a7f      	subs	r2, #127	; 0x7f
 8000d60:	bfc2      	ittt	gt
 8000d62:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000d66:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000d6a:	4770      	bxgt	lr
 8000d6c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d70:	f04f 0300 	mov.w	r3, #0
 8000d74:	3a01      	subs	r2, #1
 8000d76:	dc5d      	bgt.n	8000e34 <__aeabi_fmul+0x150>
 8000d78:	f112 0f19 	cmn.w	r2, #25
 8000d7c:	bfdc      	itt	le
 8000d7e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000d82:	4770      	bxle	lr
 8000d84:	f1c2 0200 	rsb	r2, r2, #0
 8000d88:	0041      	lsls	r1, r0, #1
 8000d8a:	fa21 f102 	lsr.w	r1, r1, r2
 8000d8e:	f1c2 0220 	rsb	r2, r2, #32
 8000d92:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d96:	ea5f 0031 	movs.w	r0, r1, rrx
 8000d9a:	f140 0000 	adc.w	r0, r0, #0
 8000d9e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000da2:	bf08      	it	eq
 8000da4:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da8:	4770      	bx	lr
 8000daa:	f092 0f00 	teq	r2, #0
 8000dae:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000db2:	bf02      	ittt	eq
 8000db4:	0040      	lsleq	r0, r0, #1
 8000db6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000dba:	3a01      	subeq	r2, #1
 8000dbc:	d0f9      	beq.n	8000db2 <__aeabi_fmul+0xce>
 8000dbe:	ea40 000c 	orr.w	r0, r0, ip
 8000dc2:	f093 0f00 	teq	r3, #0
 8000dc6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000dca:	bf02      	ittt	eq
 8000dcc:	0049      	lsleq	r1, r1, #1
 8000dce:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000dd2:	3b01      	subeq	r3, #1
 8000dd4:	d0f9      	beq.n	8000dca <__aeabi_fmul+0xe6>
 8000dd6:	ea41 010c 	orr.w	r1, r1, ip
 8000dda:	e78f      	b.n	8000cfc <__aeabi_fmul+0x18>
 8000ddc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000de0:	ea92 0f0c 	teq	r2, ip
 8000de4:	bf18      	it	ne
 8000de6:	ea93 0f0c 	teqne	r3, ip
 8000dea:	d00a      	beq.n	8000e02 <__aeabi_fmul+0x11e>
 8000dec:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000df0:	bf18      	it	ne
 8000df2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000df6:	d1d8      	bne.n	8000daa <__aeabi_fmul+0xc6>
 8000df8:	ea80 0001 	eor.w	r0, r0, r1
 8000dfc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e00:	4770      	bx	lr
 8000e02:	f090 0f00 	teq	r0, #0
 8000e06:	bf17      	itett	ne
 8000e08:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000e0c:	4608      	moveq	r0, r1
 8000e0e:	f091 0f00 	teqne	r1, #0
 8000e12:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000e16:	d014      	beq.n	8000e42 <__aeabi_fmul+0x15e>
 8000e18:	ea92 0f0c 	teq	r2, ip
 8000e1c:	d101      	bne.n	8000e22 <__aeabi_fmul+0x13e>
 8000e1e:	0242      	lsls	r2, r0, #9
 8000e20:	d10f      	bne.n	8000e42 <__aeabi_fmul+0x15e>
 8000e22:	ea93 0f0c 	teq	r3, ip
 8000e26:	d103      	bne.n	8000e30 <__aeabi_fmul+0x14c>
 8000e28:	024b      	lsls	r3, r1, #9
 8000e2a:	bf18      	it	ne
 8000e2c:	4608      	movne	r0, r1
 8000e2e:	d108      	bne.n	8000e42 <__aeabi_fmul+0x15e>
 8000e30:	ea80 0001 	eor.w	r0, r0, r1
 8000e34:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000e38:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e3c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e40:	4770      	bx	lr
 8000e42:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000e46:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000e4a:	4770      	bx	lr

08000e4c <__aeabi_fdiv>:
 8000e4c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000e50:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000e54:	bf1e      	ittt	ne
 8000e56:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000e5a:	ea92 0f0c 	teqne	r2, ip
 8000e5e:	ea93 0f0c 	teqne	r3, ip
 8000e62:	d069      	beq.n	8000f38 <__aeabi_fdiv+0xec>
 8000e64:	eba2 0203 	sub.w	r2, r2, r3
 8000e68:	ea80 0c01 	eor.w	ip, r0, r1
 8000e6c:	0249      	lsls	r1, r1, #9
 8000e6e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000e72:	d037      	beq.n	8000ee4 <__aeabi_fdiv+0x98>
 8000e74:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000e78:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000e7c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000e80:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e84:	428b      	cmp	r3, r1
 8000e86:	bf38      	it	cc
 8000e88:	005b      	lslcc	r3, r3, #1
 8000e8a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000e8e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000e92:	428b      	cmp	r3, r1
 8000e94:	bf24      	itt	cs
 8000e96:	1a5b      	subcs	r3, r3, r1
 8000e98:	ea40 000c 	orrcs.w	r0, r0, ip
 8000e9c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000ea0:	bf24      	itt	cs
 8000ea2:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000ea6:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000eaa:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000eae:	bf24      	itt	cs
 8000eb0:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000eb4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000eb8:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000ebc:	bf24      	itt	cs
 8000ebe:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000ec2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000ec6:	011b      	lsls	r3, r3, #4
 8000ec8:	bf18      	it	ne
 8000eca:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000ece:	d1e0      	bne.n	8000e92 <__aeabi_fdiv+0x46>
 8000ed0:	2afd      	cmp	r2, #253	; 0xfd
 8000ed2:	f63f af50 	bhi.w	8000d76 <__aeabi_fmul+0x92>
 8000ed6:	428b      	cmp	r3, r1
 8000ed8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000edc:	bf08      	it	eq
 8000ede:	f020 0001 	biceq.w	r0, r0, #1
 8000ee2:	4770      	bx	lr
 8000ee4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000ee8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000eec:	327f      	adds	r2, #127	; 0x7f
 8000eee:	bfc2      	ittt	gt
 8000ef0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000ef4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000ef8:	4770      	bxgt	lr
 8000efa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000efe:	f04f 0300 	mov.w	r3, #0
 8000f02:	3a01      	subs	r2, #1
 8000f04:	e737      	b.n	8000d76 <__aeabi_fmul+0x92>
 8000f06:	f092 0f00 	teq	r2, #0
 8000f0a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000f0e:	bf02      	ittt	eq
 8000f10:	0040      	lsleq	r0, r0, #1
 8000f12:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000f16:	3a01      	subeq	r2, #1
 8000f18:	d0f9      	beq.n	8000f0e <__aeabi_fdiv+0xc2>
 8000f1a:	ea40 000c 	orr.w	r0, r0, ip
 8000f1e:	f093 0f00 	teq	r3, #0
 8000f22:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000f26:	bf02      	ittt	eq
 8000f28:	0049      	lsleq	r1, r1, #1
 8000f2a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000f2e:	3b01      	subeq	r3, #1
 8000f30:	d0f9      	beq.n	8000f26 <__aeabi_fdiv+0xda>
 8000f32:	ea41 010c 	orr.w	r1, r1, ip
 8000f36:	e795      	b.n	8000e64 <__aeabi_fdiv+0x18>
 8000f38:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f3c:	ea92 0f0c 	teq	r2, ip
 8000f40:	d108      	bne.n	8000f54 <__aeabi_fdiv+0x108>
 8000f42:	0242      	lsls	r2, r0, #9
 8000f44:	f47f af7d 	bne.w	8000e42 <__aeabi_fmul+0x15e>
 8000f48:	ea93 0f0c 	teq	r3, ip
 8000f4c:	f47f af70 	bne.w	8000e30 <__aeabi_fmul+0x14c>
 8000f50:	4608      	mov	r0, r1
 8000f52:	e776      	b.n	8000e42 <__aeabi_fmul+0x15e>
 8000f54:	ea93 0f0c 	teq	r3, ip
 8000f58:	d104      	bne.n	8000f64 <__aeabi_fdiv+0x118>
 8000f5a:	024b      	lsls	r3, r1, #9
 8000f5c:	f43f af4c 	beq.w	8000df8 <__aeabi_fmul+0x114>
 8000f60:	4608      	mov	r0, r1
 8000f62:	e76e      	b.n	8000e42 <__aeabi_fmul+0x15e>
 8000f64:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000f68:	bf18      	it	ne
 8000f6a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000f6e:	d1ca      	bne.n	8000f06 <__aeabi_fdiv+0xba>
 8000f70:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000f74:	f47f af5c 	bne.w	8000e30 <__aeabi_fmul+0x14c>
 8000f78:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000f7c:	f47f af3c 	bne.w	8000df8 <__aeabi_fmul+0x114>
 8000f80:	e75f      	b.n	8000e42 <__aeabi_fmul+0x15e>
 8000f82:	bf00      	nop

08000f84 <__gesf2>:
 8000f84:	f04f 3cff 	mov.w	ip, #4294967295
 8000f88:	e006      	b.n	8000f98 <__cmpsf2+0x4>
 8000f8a:	bf00      	nop

08000f8c <__lesf2>:
 8000f8c:	f04f 0c01 	mov.w	ip, #1
 8000f90:	e002      	b.n	8000f98 <__cmpsf2+0x4>
 8000f92:	bf00      	nop

08000f94 <__cmpsf2>:
 8000f94:	f04f 0c01 	mov.w	ip, #1
 8000f98:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000f9c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000fa0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000fa4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fa8:	bf18      	it	ne
 8000faa:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000fae:	d011      	beq.n	8000fd4 <__cmpsf2+0x40>
 8000fb0:	b001      	add	sp, #4
 8000fb2:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000fb6:	bf18      	it	ne
 8000fb8:	ea90 0f01 	teqne	r0, r1
 8000fbc:	bf58      	it	pl
 8000fbe:	ebb2 0003 	subspl.w	r0, r2, r3
 8000fc2:	bf88      	it	hi
 8000fc4:	17c8      	asrhi	r0, r1, #31
 8000fc6:	bf38      	it	cc
 8000fc8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000fcc:	bf18      	it	ne
 8000fce:	f040 0001 	orrne.w	r0, r0, #1
 8000fd2:	4770      	bx	lr
 8000fd4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fd8:	d102      	bne.n	8000fe0 <__cmpsf2+0x4c>
 8000fda:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000fde:	d105      	bne.n	8000fec <__cmpsf2+0x58>
 8000fe0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000fe4:	d1e4      	bne.n	8000fb0 <__cmpsf2+0x1c>
 8000fe6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000fea:	d0e1      	beq.n	8000fb0 <__cmpsf2+0x1c>
 8000fec:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ff0:	4770      	bx	lr
 8000ff2:	bf00      	nop

08000ff4 <__aeabi_cfrcmple>:
 8000ff4:	4684      	mov	ip, r0
 8000ff6:	4608      	mov	r0, r1
 8000ff8:	4661      	mov	r1, ip
 8000ffa:	e7ff      	b.n	8000ffc <__aeabi_cfcmpeq>

08000ffc <__aeabi_cfcmpeq>:
 8000ffc:	b50f      	push	{r0, r1, r2, r3, lr}
 8000ffe:	f7ff ffc9 	bl	8000f94 <__cmpsf2>
 8001002:	2800      	cmp	r0, #0
 8001004:	bf48      	it	mi
 8001006:	f110 0f00 	cmnmi.w	r0, #0
 800100a:	bd0f      	pop	{r0, r1, r2, r3, pc}

0800100c <__aeabi_fcmpeq>:
 800100c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001010:	f7ff fff4 	bl	8000ffc <__aeabi_cfcmpeq>
 8001014:	bf0c      	ite	eq
 8001016:	2001      	moveq	r0, #1
 8001018:	2000      	movne	r0, #0
 800101a:	f85d fb08 	ldr.w	pc, [sp], #8
 800101e:	bf00      	nop

08001020 <__aeabi_fcmplt>:
 8001020:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001024:	f7ff ffea 	bl	8000ffc <__aeabi_cfcmpeq>
 8001028:	bf34      	ite	cc
 800102a:	2001      	movcc	r0, #1
 800102c:	2000      	movcs	r0, #0
 800102e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001032:	bf00      	nop

08001034 <__aeabi_fcmple>:
 8001034:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001038:	f7ff ffe0 	bl	8000ffc <__aeabi_cfcmpeq>
 800103c:	bf94      	ite	ls
 800103e:	2001      	movls	r0, #1
 8001040:	2000      	movhi	r0, #0
 8001042:	f85d fb08 	ldr.w	pc, [sp], #8
 8001046:	bf00      	nop

08001048 <__aeabi_fcmpge>:
 8001048:	f84d ed08 	str.w	lr, [sp, #-8]!
 800104c:	f7ff ffd2 	bl	8000ff4 <__aeabi_cfrcmple>
 8001050:	bf94      	ite	ls
 8001052:	2001      	movls	r0, #1
 8001054:	2000      	movhi	r0, #0
 8001056:	f85d fb08 	ldr.w	pc, [sp], #8
 800105a:	bf00      	nop

0800105c <__aeabi_fcmpgt>:
 800105c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001060:	f7ff ffc8 	bl	8000ff4 <__aeabi_cfrcmple>
 8001064:	bf34      	ite	cc
 8001066:	2001      	movcc	r0, #1
 8001068:	2000      	movcs	r0, #0
 800106a:	f85d fb08 	ldr.w	pc, [sp], #8
 800106e:	bf00      	nop

08001070 <__aeabi_f2iz>:
 8001070:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001074:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001078:	d30f      	bcc.n	800109a <__aeabi_f2iz+0x2a>
 800107a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800107e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001082:	d90d      	bls.n	80010a0 <__aeabi_f2iz+0x30>
 8001084:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001088:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800108c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8001090:	fa23 f002 	lsr.w	r0, r3, r2
 8001094:	bf18      	it	ne
 8001096:	4240      	negne	r0, r0
 8001098:	4770      	bx	lr
 800109a:	f04f 0000 	mov.w	r0, #0
 800109e:	4770      	bx	lr
 80010a0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80010a4:	d101      	bne.n	80010aa <__aeabi_f2iz+0x3a>
 80010a6:	0242      	lsls	r2, r0, #9
 80010a8:	d105      	bne.n	80010b6 <__aeabi_f2iz+0x46>
 80010aa:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 80010ae:	bf08      	it	eq
 80010b0:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80010b4:	4770      	bx	lr
 80010b6:	f04f 0000 	mov.w	r0, #0
 80010ba:	4770      	bx	lr

080010bc <__aeabi_f2uiz>:
 80010bc:	0042      	lsls	r2, r0, #1
 80010be:	d20e      	bcs.n	80010de <__aeabi_f2uiz+0x22>
 80010c0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80010c4:	d30b      	bcc.n	80010de <__aeabi_f2uiz+0x22>
 80010c6:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80010ca:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80010ce:	d409      	bmi.n	80010e4 <__aeabi_f2uiz+0x28>
 80010d0:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80010d4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80010d8:	fa23 f002 	lsr.w	r0, r3, r2
 80010dc:	4770      	bx	lr
 80010de:	f04f 0000 	mov.w	r0, #0
 80010e2:	4770      	bx	lr
 80010e4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80010e8:	d101      	bne.n	80010ee <__aeabi_f2uiz+0x32>
 80010ea:	0242      	lsls	r2, r0, #9
 80010ec:	d102      	bne.n	80010f4 <__aeabi_f2uiz+0x38>
 80010ee:	f04f 30ff 	mov.w	r0, #4294967295
 80010f2:	4770      	bx	lr
 80010f4:	f04f 0000 	mov.w	r0, #0
 80010f8:	4770      	bx	lr
 80010fa:	bf00      	nop

080010fc <vApplicationGetIdleTaskMemory>:
 80010fc:	4b03      	ldr	r3, [pc, #12]	; (800110c <vApplicationGetIdleTaskMemory+0x10>)
 80010fe:	6003      	str	r3, [r0, #0]
 8001100:	4b03      	ldr	r3, [pc, #12]	; (8001110 <vApplicationGetIdleTaskMemory+0x14>)
 8001102:	600b      	str	r3, [r1, #0]
 8001104:	2340      	movs	r3, #64	; 0x40
 8001106:	6013      	str	r3, [r2, #0]
 8001108:	4770      	bx	lr
 800110a:	bf00      	nop
 800110c:	2000046c 	.word	0x2000046c
 8001110:	2000036c 	.word	0x2000036c

08001114 <vApplicationGetTimerTaskMemory>:
 8001114:	4b03      	ldr	r3, [pc, #12]	; (8001124 <vApplicationGetTimerTaskMemory+0x10>)
 8001116:	6003      	str	r3, [r0, #0]
 8001118:	4b03      	ldr	r3, [pc, #12]	; (8001128 <vApplicationGetTimerTaskMemory+0x14>)
 800111a:	600b      	str	r3, [r1, #0]
 800111c:	2380      	movs	r3, #128	; 0x80
 800111e:	6013      	str	r3, [r2, #0]
 8001120:	4770      	bx	lr
 8001122:	bf00      	nop
 8001124:	200006b8 	.word	0x200006b8
 8001128:	200004b8 	.word	0x200004b8

0800112c <EncoderRead>:
void EncoderRead(VisualInterface* Interface, TIM_HandleTypeDef* EncoderTimerHandler)
{
	static uint32_t EncLastValue;

	// Encoder counts reading
	uint32_t EncActValue = EncoderTimerHandler->Instance->CNT;
 800112c:	680b      	ldr	r3, [r1, #0]
{
 800112e:	b510      	push	{r4, lr}
	uint32_t EncActValue = EncoderTimerHandler->Instance->CNT;
 8001130:	6a59      	ldr	r1, [r3, #36]	; 0x24
	Interface->SignedEncActValue = (int16_t) EncActValue;
 8001132:	b20a      	sxth	r2, r1
 8001134:	8002      	strh	r2, [r0, #0]
	if (EncActValue != EncLastValue)
 8001136:	4807      	ldr	r0, [pc, #28]	; (8001154 <EncoderRead+0x28>)
 8001138:	6804      	ldr	r4, [r0, #0]
 800113a:	428c      	cmp	r4, r1
	{
		EncLastValue = EncActValue;
 800113c:	bf18      	it	ne
 800113e:	6001      	strne	r1, [r0, #0]

	}

	// Software counts limit
	if (Interface->SignedEncActValue<0)
 8001140:	2a00      	cmp	r2, #0
 8001142:	da02      	bge.n	800114a <EncoderRead+0x1e>
	{
		  __HAL_TIM_SET_COUNTER(EncoderTimerHandler, 0);
 8001144:	2200      	movs	r2, #0
	}
	if (Interface->SignedEncActValue>MAXTEMPERATURE)
	{
		  __HAL_TIM_SET_COUNTER(EncoderTimerHandler, MAXTEMPERATURE);
 8001146:	625a      	str	r2, [r3, #36]	; 0x24
	}
}
 8001148:	bd10      	pop	{r4, pc}
	if (Interface->SignedEncActValue>MAXTEMPERATURE)
 800114a:	2af0      	cmp	r2, #240	; 0xf0
 800114c:	ddfc      	ble.n	8001148 <EncoderRead+0x1c>
		  __HAL_TIM_SET_COUNTER(EncoderTimerHandler, MAXTEMPERATURE);
 800114e:	22f0      	movs	r2, #240	; 0xf0
 8001150:	e7f9      	b.n	8001146 <EncoderRead+0x1a>
 8001152:	bf00      	nop
 8001154:	20000708 	.word	0x20000708

08001158 <BlinkTimerCallback>:

void BlinkTimerCallback(void const * argument)
{
	BlinkVar = !BlinkVar;
 8001158:	4a02      	ldr	r2, [pc, #8]	; (8001164 <BlinkTimerCallback+0xc>)
 800115a:	7813      	ldrb	r3, [r2, #0]
 800115c:	f083 0301 	eor.w	r3, r3, #1
 8001160:	7013      	strb	r3, [r2, #0]
}
 8001162:	4770      	bx	lr
 8001164:	20000705 	.word	0x20000705

08001168 <MainPage>:
	}
	u8g2_SendBuffer(&u8g2);
}

void MainPage(VisualInterface* Interface, LPFilter *filter, PID *pid)
{
 8001168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	//*********************************
	//************* ICONS *************
	//*********************************

	// Draw target temperature icon
	u8g2_DrawXBMP(&u8g2, 2, 0, 22, 14, temperature_target_22x14);
 800116c:	270e      	movs	r7, #14
 800116e:	4b4b      	ldr	r3, [pc, #300]	; (800129c <MainPage+0x134>)
{
 8001170:	b086      	sub	sp, #24
	u8g2_DrawXBMP(&u8g2, 2, 0, 22, 14, temperature_target_22x14);
 8001172:	9301      	str	r3, [sp, #4]
{
 8001174:	4604      	mov	r4, r0
	u8g2_DrawXBMP(&u8g2, 2, 0, 22, 14, temperature_target_22x14);
 8001176:	2316      	movs	r3, #22
 8001178:	4849      	ldr	r0, [pc, #292]	; (80012a0 <MainPage+0x138>)
{
 800117a:	4688      	mov	r8, r1
 800117c:	4616      	mov	r6, r2
	u8g2_DrawXBMP(&u8g2, 2, 0, 22, 14, temperature_target_22x14);
 800117e:	2102      	movs	r1, #2
 8001180:	2200      	movs	r2, #0
 8001182:	9700      	str	r7, [sp, #0]
 8001184:	f001 fbc9 	bl	800291a <u8g2_DrawXBMP>

	// Draw actual temperature icon
	u8g2_DrawXBMP(&u8g2, 1, 20, 23, 39, temperature_23x39);
 8001188:	4b46      	ldr	r3, [pc, #280]	; (80012a4 <MainPage+0x13c>)

	// Draw alarm icon
	if (AlarmVar)
 800118a:	4d47      	ldr	r5, [pc, #284]	; (80012a8 <MainPage+0x140>)
	u8g2_DrawXBMP(&u8g2, 1, 20, 23, 39, temperature_23x39);
 800118c:	9301      	str	r3, [sp, #4]
 800118e:	2327      	movs	r3, #39	; 0x27
 8001190:	2214      	movs	r2, #20
 8001192:	9300      	str	r3, [sp, #0]
 8001194:	2101      	movs	r1, #1
 8001196:	2317      	movs	r3, #23
 8001198:	4841      	ldr	r0, [pc, #260]	; (80012a0 <MainPage+0x138>)
 800119a:	f001 fbbe 	bl	800291a <u8g2_DrawXBMP>
	if (AlarmVar)
 800119e:	782b      	ldrb	r3, [r5, #0]
 80011a0:	b143      	cbz	r3, 80011b4 <MainPage+0x4c>
	{
		u8g2_DrawXBMP(&u8g2, 110, 0, 14, 14, alarm_14x14);
 80011a2:	4b42      	ldr	r3, [pc, #264]	; (80012ac <MainPage+0x144>)
 80011a4:	2200      	movs	r2, #0
 80011a6:	e9cd 7300 	strd	r7, r3, [sp]
 80011aa:	216e      	movs	r1, #110	; 0x6e
 80011ac:	463b      	mov	r3, r7
 80011ae:	483c      	ldr	r0, [pc, #240]	; (80012a0 <MainPage+0x138>)
 80011b0:	f001 fbb3 	bl	800291a <u8g2_DrawXBMP>
	}

	// Draw heat icon
	if ((Interface->_ActualHeatState == HeatStatyState) ||
 80011b4:	7963      	ldrb	r3, [r4, #5]
 80011b6:	2b02      	cmp	r3, #2
 80011b8:	d004      	beq.n	80011c4 <MainPage+0x5c>
 80011ba:	2b01      	cmp	r3, #1
 80011bc:	d10c      	bne.n	80011d8 <MainPage+0x70>
			((Interface->_ActualHeatState == Heating) && (BlinkVar == 1)))
 80011be:	4b3c      	ldr	r3, [pc, #240]	; (80012b0 <MainPage+0x148>)
 80011c0:	781b      	ldrb	r3, [r3, #0]
 80011c2:	b14b      	cbz	r3, 80011d8 <MainPage+0x70>
	{
		u8g2_DrawXBMP(&u8g2, 96, 26, 30, 28, Heater_30x28);
 80011c4:	4b3b      	ldr	r3, [pc, #236]	; (80012b4 <MainPage+0x14c>)
 80011c6:	221a      	movs	r2, #26
 80011c8:	9301      	str	r3, [sp, #4]
 80011ca:	231c      	movs	r3, #28
 80011cc:	2160      	movs	r1, #96	; 0x60
 80011ce:	9300      	str	r3, [sp, #0]
 80011d0:	4833      	ldr	r0, [pc, #204]	; (80012a0 <MainPage+0x138>)
 80011d2:	231e      	movs	r3, #30
 80011d4:	f001 fba1 	bl	800291a <u8g2_DrawXBMP>
	//*********************************
	//************ VALUES *************
	//*********************************

	// Actual temperature value
	u8g2_SetFont(&u8g2, u8g2_font_helvR14_tf);
 80011d8:	4937      	ldr	r1, [pc, #220]	; (80012b8 <MainPage+0x150>)
 80011da:	4831      	ldr	r0, [pc, #196]	; (80012a0 <MainPage+0x138>)
 80011dc:	f001 fed8 	bl	8002f90 <u8g2_SetFont>
	if (filter->FilterOK && !AlarmVar)
 80011e0:	f898 3014 	ldrb.w	r3, [r8, #20]
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d044      	beq.n	8001272 <MainPage+0x10a>
 80011e8:	782b      	ldrb	r3, [r5, #0]
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d143      	bne.n	8001276 <MainPage+0x10e>
	{
		sprintf((uint8_t *)ScreenString[0], "%3.0f C",filter->FilteredValue);
 80011ee:	f8d8 0010 	ldr.w	r0, [r8, #16]
 80011f2:	f7ff f919 	bl	8000428 <__aeabi_f2d>
 80011f6:	4602      	mov	r2, r0
 80011f8:	460b      	mov	r3, r1
 80011fa:	a802      	add	r0, sp, #8
 80011fc:	492f      	ldr	r1, [pc, #188]	; (80012bc <MainPage+0x154>)
 80011fe:	f009 fda9 	bl	800ad54 <siprintf>
		u8g2_DrawStr(&u8g2, 32, 24, ScreenString[0]);
	}
	else
	{
		sprintf((uint8_t *)ScreenString[0], "Calc...");
		u8g2_DrawStr(&u8g2, 32, 24, ScreenString[0]);
 8001202:	ab02      	add	r3, sp, #8
 8001204:	2218      	movs	r2, #24
 8001206:	2120      	movs	r1, #32
 8001208:	4825      	ldr	r0, [pc, #148]	; (80012a0 <MainPage+0x138>)
 800120a:	f001 fe81 	bl	8002f10 <u8g2_DrawStr>
	}

	// Setpoint value
	u8g2_SetFont(&u8g2, u8g2_font_helvR10_tf);
 800120e:	492c      	ldr	r1, [pc, #176]	; (80012c0 <MainPage+0x158>)
 8001210:	4823      	ldr	r0, [pc, #140]	; (80012a0 <MainPage+0x138>)
 8001212:	f001 febd 	bl	8002f90 <u8g2_SetFont>
	if (Interface->SignedEncActValue <= MAXTEMPERATURE && Interface->SignedEncActValue >= 0)
 8001216:	8823      	ldrh	r3, [r4, #0]
 8001218:	f9b4 7000 	ldrsh.w	r7, [r4]
 800121c:	2bf0      	cmp	r3, #240	; 0xf0
 800121e:	d818      	bhi.n	8001252 <MainPage+0xea>
	{
		if (Interface->SignedEncActValue == pid->Setpoint)
 8001220:	f8d6 8000 	ldr.w	r8, [r6]
 8001224:	4638      	mov	r0, r7
 8001226:	f7ff fd09 	bl	8000c3c <__aeabi_i2f>
 800122a:	4641      	mov	r1, r8
 800122c:	f7ff feee 	bl	800100c <__aeabi_fcmpeq>
 8001230:	4605      	mov	r5, r0
 8001232:	b338      	cbz	r0, 8001284 <MainPage+0x11c>
		{
			sprintf(ScreenString[0], "%3.0f C", pid->Setpoint);
 8001234:	4640      	mov	r0, r8
 8001236:	f7ff f8f7 	bl	8000428 <__aeabi_f2d>
 800123a:	4602      	mov	r2, r0
 800123c:	460b      	mov	r3, r1
 800123e:	a802      	add	r0, sp, #8
 8001240:	491e      	ldr	r1, [pc, #120]	; (80012bc <MainPage+0x154>)
 8001242:	f009 fd87 	bl	800ad54 <siprintf>
			u8g2_DrawStr(&u8g2, 26, 0, ScreenString[0]);
 8001246:	2200      	movs	r2, #0
 8001248:	ab02      	add	r3, sp, #8
		else
		{
			if (BlinkVar == 1)
			{
				sprintf(ScreenString[0], "%d C", Interface->SignedEncActValue);
				u8g2_DrawStr(&u8g2, 26, 0, ScreenString[0]);
 800124a:	211a      	movs	r1, #26
 800124c:	4814      	ldr	r0, [pc, #80]	; (80012a0 <MainPage+0x138>)
 800124e:	f001 fe5f 	bl	8002f10 <u8g2_DrawStr>
			}
		}
	}
	if (Interface->_PulsEncoderPressed)
 8001252:	79a3      	ldrb	r3, [r4, #6]
 8001254:	b153      	cbz	r3, 800126c <MainPage+0x104>
	{
		Interface->_PulsEncoderPressed = false;
 8001256:	2500      	movs	r5, #0
		PIDNewSetpoint(pid, Interface->SignedEncActValue);
 8001258:	f9b4 0000 	ldrsh.w	r0, [r4]
		Interface->_PulsEncoderPressed = false;
 800125c:	71a5      	strb	r5, [r4, #6]
		PIDNewSetpoint(pid, Interface->SignedEncActValue);
 800125e:	f7ff fced 	bl	8000c3c <__aeabi_i2f>
 8001262:	4601      	mov	r1, r0
 8001264:	4630      	mov	r0, r6
 8001266:	f000 fd1f 	bl	8001ca8 <PIDNewSetpoint>
		Interface->_TargetChanging = false;
 800126a:	7265      	strb	r5, [r4, #9]
	}
}
 800126c:	b006      	add	sp, #24
 800126e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	else if (AlarmVar)
 8001272:	782b      	ldrb	r3, [r5, #0]
 8001274:	b123      	cbz	r3, 8001280 <MainPage+0x118>
		sprintf((uint8_t *)ScreenString[0], "???.? C");
 8001276:	4913      	ldr	r1, [pc, #76]	; (80012c4 <MainPage+0x15c>)
		sprintf((uint8_t *)ScreenString[0], "Calc...");
 8001278:	a802      	add	r0, sp, #8
 800127a:	f009 fd8b 	bl	800ad94 <strcpy>
 800127e:	e7c0      	b.n	8001202 <MainPage+0x9a>
 8001280:	4911      	ldr	r1, [pc, #68]	; (80012c8 <MainPage+0x160>)
 8001282:	e7f9      	b.n	8001278 <MainPage+0x110>
			if (BlinkVar == 1)
 8001284:	4b0a      	ldr	r3, [pc, #40]	; (80012b0 <MainPage+0x148>)
 8001286:	781b      	ldrb	r3, [r3, #0]
 8001288:	2b00      	cmp	r3, #0
 800128a:	d0e2      	beq.n	8001252 <MainPage+0xea>
				sprintf(ScreenString[0], "%d C", Interface->SignedEncActValue);
 800128c:	463a      	mov	r2, r7
 800128e:	490f      	ldr	r1, [pc, #60]	; (80012cc <MainPage+0x164>)
 8001290:	a802      	add	r0, sp, #8
 8001292:	f009 fd5f 	bl	800ad54 <siprintf>
				u8g2_DrawStr(&u8g2, 26, 0, ScreenString[0]);
 8001296:	462a      	mov	r2, r5
 8001298:	ab02      	add	r3, sp, #8
 800129a:	e7d6      	b.n	800124a <MainPage+0xe2>
 800129c:	0800d309 	.word	0x0800d309
 80012a0:	20001ba0 	.word	0x20001ba0
 80012a4:	0800d294 	.word	0x0800d294
 80012a8:	20000704 	.word	0x20000704
 80012ac:	0800d278 	.word	0x0800d278
 80012b0:	20000705 	.word	0x20000705
 80012b4:	0800d208 	.word	0x0800d208
 80012b8:	0800df2c 	.word	0x0800df2c
 80012bc:	0800d333 	.word	0x0800d333
 80012c0:	0800d400 	.word	0x0800d400
 80012c4:	0800d33b 	.word	0x0800d33b
 80012c8:	0800d343 	.word	0x0800d343
 80012cc:	0800d34b 	.word	0x0800d34b

080012d0 <TuningPage>:

void TuningPage(VisualInterface* Interface, LPFilter *filter, PID *pid, PID_AutoTune *pid_autotune)
{
 80012d0:	b530      	push	{r4, r5, lr}
 80012d2:	461c      	mov	r4, r3
 80012d4:	460d      	mov	r5, r1
	//*********************************

	//*********************************
	//************ VALUES *************
	//*********************************
	u8g2_SetFont(&u8g2, u8g2_font_helvR10_tf);
 80012d6:	4830      	ldr	r0, [pc, #192]	; (8001398 <TuningPage+0xc8>)
 80012d8:	4930      	ldr	r1, [pc, #192]	; (800139c <TuningPage+0xcc>)
{
 80012da:	b087      	sub	sp, #28
	u8g2_SetFont(&u8g2, u8g2_font_helvR10_tf);
 80012dc:	f001 fe58 	bl	8002f90 <u8g2_SetFont>

	if (pid_autotune->running)
 80012e0:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
 80012e4:	b373      	cbz	r3, 8001344 <TuningPage+0x74>
	{
		sprintf(ScreenString[0], "TUNE IS");
 80012e6:	492e      	ldr	r1, [pc, #184]	; (80013a0 <TuningPage+0xd0>)
 80012e8:	4668      	mov	r0, sp
 80012ea:	f009 fd53 	bl	800ad94 <strcpy>
		u8g2_DrawStr(&u8g2, 10, 15, ScreenString[0]);
 80012ee:	466b      	mov	r3, sp
 80012f0:	220f      	movs	r2, #15
 80012f2:	210a      	movs	r1, #10
 80012f4:	4828      	ldr	r0, [pc, #160]	; (8001398 <TuningPage+0xc8>)
 80012f6:	f001 fe0b 	bl	8002f10 <u8g2_DrawStr>
		sprintf(ScreenString[1], "RUNNING...");
 80012fa:	492a      	ldr	r1, [pc, #168]	; (80013a4 <TuningPage+0xd4>)
 80012fc:	a802      	add	r0, sp, #8
 80012fe:	f009 fd49 	bl	800ad94 <strcpy>
		u8g2_DrawStr(&u8g2, 10, 15 + u8g2_GetFontBBXHeight(&u8g2) + LINESPACE, ScreenString[1]);
 8001302:	4825      	ldr	r0, [pc, #148]	; (8001398 <TuningPage+0xc8>)
 8001304:	f001 fc17 	bl	8002b36 <u8g2_GetFontBBXHeight>
 8001308:	f100 0210 	add.w	r2, r0, #16
 800130c:	ab02      	add	r3, sp, #8
 800130e:	b2d2      	uxtb	r2, r2
 8001310:	210a      	movs	r1, #10
 8001312:	4821      	ldr	r0, [pc, #132]	; (8001398 <TuningPage+0xc8>)
 8001314:	f001 fdfc 	bl	8002f10 <u8g2_DrawStr>
		sprintf(ScreenString[2], "%3.0f C",filter->FilteredValue);
 8001318:	6928      	ldr	r0, [r5, #16]
 800131a:	f7ff f885 	bl	8000428 <__aeabi_f2d>
 800131e:	4602      	mov	r2, r0
 8001320:	460b      	mov	r3, r1
 8001322:	a804      	add	r0, sp, #16
 8001324:	4920      	ldr	r1, [pc, #128]	; (80013a8 <TuningPage+0xd8>)
 8001326:	f009 fd15 	bl	800ad54 <siprintf>
		u8g2_DrawStr(&u8g2, 15, 15 + 2*(u8g2_GetFontBBXHeight(&u8g2) + LINESPACE), ScreenString[2]);
 800132a:	481b      	ldr	r0, [pc, #108]	; (8001398 <TuningPage+0xc8>)
 800132c:	f001 fc03 	bl	8002b36 <u8g2_GetFontBBXHeight>
 8001330:	210f      	movs	r1, #15
 8001332:	0042      	lsls	r2, r0, #1
 8001334:	3211      	adds	r2, #17
 8001336:	ab04      	add	r3, sp, #16
 8001338:	b2d2      	uxtb	r2, r2
		sprintf(ScreenString[0], "Kp: %d", pid_autotune->Kp_Tuned);
		u8g2_DrawStr(&u8g2, 10, 15, ScreenString[0]);
		sprintf(ScreenString[1], "Ki: %d", pid_autotune->Ki_Tuned);
		u8g2_DrawStr(&u8g2, 10 + u8g2_GetExactStrWidth(&u8g2, ScreenString[0]) + 5, 15, ScreenString[1]);
		sprintf(ScreenString[2], "Kd: %d", pid_autotune->Kd_Tuned);
		u8g2_DrawStr(&u8g2, 10, 15 + u8g2_GetFontBBXHeight(&u8g2) + LINESPACE, ScreenString[2]);
 800133a:	4817      	ldr	r0, [pc, #92]	; (8001398 <TuningPage+0xc8>)
 800133c:	f001 fde8 	bl	8002f10 <u8g2_DrawStr>
	}
}
 8001340:	b007      	add	sp, #28
 8001342:	bd30      	pop	{r4, r5, pc}
		sprintf(ScreenString[0], "Kp: %d", pid_autotune->Kp_Tuned);
 8001344:	6822      	ldr	r2, [r4, #0]
 8001346:	4919      	ldr	r1, [pc, #100]	; (80013ac <TuningPage+0xdc>)
 8001348:	4668      	mov	r0, sp
 800134a:	f009 fd03 	bl	800ad54 <siprintf>
		u8g2_DrawStr(&u8g2, 10, 15, ScreenString[0]);
 800134e:	466b      	mov	r3, sp
 8001350:	220f      	movs	r2, #15
 8001352:	210a      	movs	r1, #10
 8001354:	4810      	ldr	r0, [pc, #64]	; (8001398 <TuningPage+0xc8>)
 8001356:	f001 fddb 	bl	8002f10 <u8g2_DrawStr>
		sprintf(ScreenString[1], "Ki: %d", pid_autotune->Ki_Tuned);
 800135a:	6862      	ldr	r2, [r4, #4]
 800135c:	4914      	ldr	r1, [pc, #80]	; (80013b0 <TuningPage+0xe0>)
 800135e:	a802      	add	r0, sp, #8
 8001360:	f009 fcf8 	bl	800ad54 <siprintf>
		u8g2_DrawStr(&u8g2, 10 + u8g2_GetExactStrWidth(&u8g2, ScreenString[0]) + 5, 15, ScreenString[1]);
 8001364:	4669      	mov	r1, sp
 8001366:	480c      	ldr	r0, [pc, #48]	; (8001398 <TuningPage+0xc8>)
 8001368:	f001 fe22 	bl	8002fb0 <u8g2_GetExactStrWidth>
 800136c:	f100 010f 	add.w	r1, r0, #15
 8001370:	ab02      	add	r3, sp, #8
 8001372:	220f      	movs	r2, #15
 8001374:	b2c9      	uxtb	r1, r1
 8001376:	4808      	ldr	r0, [pc, #32]	; (8001398 <TuningPage+0xc8>)
 8001378:	f001 fdca 	bl	8002f10 <u8g2_DrawStr>
		sprintf(ScreenString[2], "Kd: %d", pid_autotune->Kd_Tuned);
 800137c:	68a2      	ldr	r2, [r4, #8]
 800137e:	490d      	ldr	r1, [pc, #52]	; (80013b4 <TuningPage+0xe4>)
 8001380:	a804      	add	r0, sp, #16
 8001382:	f009 fce7 	bl	800ad54 <siprintf>
		u8g2_DrawStr(&u8g2, 10, 15 + u8g2_GetFontBBXHeight(&u8g2) + LINESPACE, ScreenString[2]);
 8001386:	4804      	ldr	r0, [pc, #16]	; (8001398 <TuningPage+0xc8>)
 8001388:	f001 fbd5 	bl	8002b36 <u8g2_GetFontBBXHeight>
 800138c:	f100 0210 	add.w	r2, r0, #16
 8001390:	210a      	movs	r1, #10
 8001392:	ab04      	add	r3, sp, #16
 8001394:	b2d2      	uxtb	r2, r2
 8001396:	e7d0      	b.n	800133a <TuningPage+0x6a>
 8001398:	20001ba0 	.word	0x20001ba0
 800139c:	0800d400 	.word	0x0800d400
 80013a0:	0800d350 	.word	0x0800d350
 80013a4:	0800d358 	.word	0x0800d358
 80013a8:	0800d333 	.word	0x0800d333
 80013ac:	0800d363 	.word	0x0800d363
 80013b0:	0800d36a 	.word	0x0800d36a
 80013b4:	0800d371 	.word	0x0800d371

080013b8 <Graphic>:
{
 80013b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ba:	4604      	mov	r4, r0
	u8g2_ClearBuffer(&u8g2);
 80013bc:	480d      	ldr	r0, [pc, #52]	; (80013f4 <Graphic+0x3c>)
{
 80013be:	461f      	mov	r7, r3
 80013c0:	460d      	mov	r5, r1
 80013c2:	4616      	mov	r6, r2
	u8g2_ClearBuffer(&u8g2);
 80013c4:	f001 fad8 	bl	8002978 <u8g2_ClearBuffer>
	switch(Interface->_ActualPage)
 80013c8:	78e3      	ldrb	r3, [r4, #3]
 80013ca:	b133      	cbz	r3, 80013da <Graphic+0x22>
 80013cc:	2b02      	cmp	r3, #2
 80013ce:	d00a      	beq.n	80013e6 <Graphic+0x2e>
}
 80013d0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	u8g2_SendBuffer(&u8g2);
 80013d4:	4807      	ldr	r0, [pc, #28]	; (80013f4 <Graphic+0x3c>)
 80013d6:	f001 bad9 	b.w	800298c <u8g2_SendBuffer>
			MainPage(Interface, filter, pid);
 80013da:	4632      	mov	r2, r6
 80013dc:	4629      	mov	r1, r5
 80013de:	4620      	mov	r0, r4
 80013e0:	f7ff fec2 	bl	8001168 <MainPage>
			break;
 80013e4:	e7f4      	b.n	80013d0 <Graphic+0x18>
			TuningPage(Interface, filter, pid, pid_autotune);
 80013e6:	463b      	mov	r3, r7
 80013e8:	4632      	mov	r2, r6
 80013ea:	4629      	mov	r1, r5
 80013ec:	4620      	mov	r0, r4
 80013ee:	f7ff ff6f 	bl	80012d0 <TuningPage>
			break;
 80013f2:	e7ed      	b.n	80013d0 <Graphic+0x18>
 80013f4:	20001ba0 	.word	0x20001ba0

080013f8 <PulsEncoderTimerCallback>:

/* PulsEncoderTimerCallback function */
void PulsEncoderTimerCallback(void const * argument)
{
  /* USER CODE BEGIN PulsEncoderTimerCallback */
	if (GraphicVar._ActualPage == PageMain)
 80013f8:	4b05      	ldr	r3, [pc, #20]	; (8001410 <PulsEncoderTimerCallback+0x18>)
 80013fa:	78da      	ldrb	r2, [r3, #3]
 80013fc:	b922      	cbnz	r2, 8001408 <PulsEncoderTimerCallback+0x10>
	{
		GraphicVar._ActualPage = PageTuning;
 80013fe:	2202      	movs	r2, #2
	}
	else if (GraphicVar._ActualPage == PageTuning)
	{
		GraphicVar._ActualPage = PageMain;
 8001400:	70da      	strb	r2, [r3, #3]
	}

	GraphicVar._PulsEncoderHolded = true;
 8001402:	2201      	movs	r2, #1
 8001404:	721a      	strb	r2, [r3, #8]
  /* USER CODE END PulsEncoderTimerCallback */
}
 8001406:	4770      	bx	lr
	else if (GraphicVar._ActualPage == PageTuning)
 8001408:	2a02      	cmp	r2, #2
 800140a:	d1fa      	bne.n	8001402 <PulsEncoderTimerCallback+0xa>
		GraphicVar._ActualPage = PageMain;
 800140c:	2200      	movs	r2, #0
 800140e:	e7f7      	b.n	8001400 <PulsEncoderTimerCallback+0x8>
 8001410:	20001ea8 	.word	0x20001ea8

08001414 <StartMainTask>:
{
 8001414:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	  if (GraphicVar._ActualPage == PageMain)
 8001418:	4d38      	ldr	r5, [pc, #224]	; (80014fc <StartMainTask+0xe8>)
{
 800141a:	b085      	sub	sp, #20
  MX_USB_DEVICE_Init();
 800141c:	f008 fdce 	bl	8009fbc <MX_USB_DEVICE_Init>
 8001420:	46a9      	mov	r9, r5
		  if (StartTuning)
 8001422:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 8001520 <StartMainTask+0x10c>
	  if (GraphicVar._ActualPage == PageMain)
 8001426:	78eb      	ldrb	r3, [r5, #3]
 8001428:	2b00      	cmp	r3, #0
 800142a:	d139      	bne.n	80014a0 <StartMainTask+0x8c>
		  if (EnablePWMOut && TempFilter.FilterOK)
 800142c:	4b34      	ldr	r3, [pc, #208]	; (8001500 <StartMainTask+0xec>)
 800142e:	781b      	ldrb	r3, [r3, #0]
 8001430:	2b00      	cmp	r3, #0
 8001432:	d02e      	beq.n	8001492 <StartMainTask+0x7e>
 8001434:	4b33      	ldr	r3, [pc, #204]	; (8001504 <StartMainTask+0xf0>)
 8001436:	7d1b      	ldrb	r3, [r3, #20]
 8001438:	b35b      	cbz	r3, 8001492 <StartMainTask+0x7e>
		  	  GraphicVar._ActualHeatState = Heating;
 800143a:	2301      	movs	r3, #1
 800143c:	716b      	strb	r3, [r5, #5]
		  	  TIM2->CCR2 = PIDUpdate(&TempPID, FilteredTemperature);
 800143e:	4b32      	ldr	r3, [pc, #200]	; (8001508 <StartMainTask+0xf4>)
 8001440:	4832      	ldr	r0, [pc, #200]	; (800150c <StartMainTask+0xf8>)
 8001442:	6819      	ldr	r1, [r3, #0]
 8001444:	f000 fc3a 	bl	8001cbc <PIDUpdate>
 8001448:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800144c:	6398      	str	r0, [r3, #56]	; 0x38
		   					  TempPID.PID_P, TempPID.PID_I, TempPID.PID_D);
 800144e:	4c2f      	ldr	r4, [pc, #188]	; (800150c <StartMainTask+0xf8>)
		   sprintf((uint8_t *) logBuf, "PID_P: %.1f, PID_I: %.1f, PID_D: %.1f\r\n",
 8001450:	69a0      	ldr	r0, [r4, #24]
 8001452:	f7fe ffe9 	bl	8000428 <__aeabi_f2d>
 8001456:	4606      	mov	r6, r0
 8001458:	6a20      	ldr	r0, [r4, #32]
 800145a:	460f      	mov	r7, r1
 800145c:	f7fe ffe4 	bl	8000428 <__aeabi_f2d>
 8001460:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8001464:	69e0      	ldr	r0, [r4, #28]
 8001466:	f7fe ffdf 	bl	8000428 <__aeabi_f2d>
 800146a:	4632      	mov	r2, r6
 800146c:	463b      	mov	r3, r7
 800146e:	e9cd 0100 	strd	r0, r1, [sp]
 8001472:	4927      	ldr	r1, [pc, #156]	; (8001510 <StartMainTask+0xfc>)
 8001474:	4827      	ldr	r0, [pc, #156]	; (8001514 <StartMainTask+0x100>)
 8001476:	f009 fc6d 	bl	800ad54 <siprintf>
		  CDC_Transmit_FS((uint8_t *) logBuf, strlen(logBuf));
 800147a:	4826      	ldr	r0, [pc, #152]	; (8001514 <StartMainTask+0x100>)
 800147c:	f7fe fe68 	bl	8000150 <strlen>
 8001480:	b281      	uxth	r1, r0
 8001482:	4824      	ldr	r0, [pc, #144]	; (8001514 <StartMainTask+0x100>)
 8001484:	f008 fde8 	bl	800a058 <CDC_Transmit_FS>
		  osDelay(1000/PID_LOOP_FREQUENCY_HZ);
 8001488:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
		  osDelay(1);
 800148c:	f007 f8f0 	bl	8008670 <osDelay>
 8001490:	e7c9      	b.n	8001426 <StartMainTask+0x12>
		  	  GraphicVar._ActualHeatState = HeatOFF;
 8001492:	2300      	movs	r3, #0
		  	  TIM2->CCR2 = 0;
 8001494:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
		  	  GraphicVar._ActualHeatState = HeatOFF;
 8001498:	f889 3005 	strb.w	r3, [r9, #5]
		  	  TIM2->CCR2 = 0;
 800149c:	6393      	str	r3, [r2, #56]	; 0x38
 800149e:	e7d6      	b.n	800144e <StartMainTask+0x3a>
	  else if (GraphicVar._ActualPage == PageTuning)
 80014a0:	2b02      	cmp	r3, #2
 80014a2:	d1c0      	bne.n	8001426 <StartMainTask+0x12>
		  if (StartTuning)
 80014a4:	f898 4000 	ldrb.w	r4, [r8]
 80014a8:	b304      	cbz	r4, 80014ec <StartMainTask+0xd8>
			  int8_t TuningStatus = PID_AutoTuneUpdate(&TempAutoTuneVar, &FilteredTemperature, &TIM2->CCR2);
 80014aa:	4c1b      	ldr	r4, [pc, #108]	; (8001518 <StartMainTask+0x104>)
 80014ac:	4a1b      	ldr	r2, [pc, #108]	; (800151c <StartMainTask+0x108>)
 80014ae:	4620      	mov	r0, r4
 80014b0:	4915      	ldr	r1, [pc, #84]	; (8001508 <StartMainTask+0xf4>)
 80014b2:	f000 fcdd 	bl	8001e70 <PID_AutoTuneUpdate>
			  if (TuningStatus == 1)
 80014b6:	2801      	cmp	r0, #1
 80014b8:	d116      	bne.n	80014e8 <StartMainTask+0xd4>
				  PID_AutoTuneCompute(&TempAutoTuneVar);
 80014ba:	4620      	mov	r0, r4
 80014bc:	f000 fca0 	bl	8001e00 <PID_AutoTuneCompute>
				  PID_AutoTuneGetCoeff(&TempAutoTuneVar, &TempPID);
 80014c0:	4912      	ldr	r1, [pc, #72]	; (800150c <StartMainTask+0xf8>)
 80014c2:	4620      	mov	r0, r4
 80014c4:	f000 fe24 	bl	8002110 <PID_AutoTuneGetCoeff>
				  PIDNewCoeff(&TempPID, TempAutoTuneVar.Kp_Tuned, TempAutoTuneVar.Ki_Tuned, TempAutoTuneVar.Kp_Tuned);
 80014c8:	6820      	ldr	r0, [r4, #0]
 80014ca:	f7ff fbb3 	bl	8000c34 <__aeabi_ui2f>
 80014ce:	4606      	mov	r6, r0
 80014d0:	6860      	ldr	r0, [r4, #4]
 80014d2:	f7ff fbaf 	bl	8000c34 <__aeabi_ui2f>
 80014d6:	4633      	mov	r3, r6
 80014d8:	4602      	mov	r2, r0
 80014da:	4631      	mov	r1, r6
 80014dc:	480b      	ldr	r0, [pc, #44]	; (800150c <StartMainTask+0xf8>)
 80014de:	f000 fbe5 	bl	8001cac <PIDNewCoeff>
				  StartTuning = false;
 80014e2:	2300      	movs	r3, #0
 80014e4:	f888 3000 	strb.w	r3, [r8]
		  osDelay(1);
 80014e8:	2001      	movs	r0, #1
 80014ea:	e7cf      	b.n	800148c <StartMainTask+0x78>
			  PID_AutoTuneStop(&TempAutoTuneVar);
 80014ec:	480a      	ldr	r0, [pc, #40]	; (8001518 <StartMainTask+0x104>)
 80014ee:	f000 fe6f 	bl	80021d0 <PID_AutoTuneStop>
			  TIM2->CCR2 = 0;
 80014f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80014f6:	639c      	str	r4, [r3, #56]	; 0x38
 80014f8:	e7f6      	b.n	80014e8 <StartMainTask+0xd4>
 80014fa:	bf00      	nop
 80014fc:	20001ea8 	.word	0x20001ea8
 8001500:	20001eb8 	.word	0x20001eb8
 8001504:	20001c84 	.word	0x20001c84
 8001508:	20001c28 	.word	0x20001c28
 800150c:	20001cf8 	.word	0x20001cf8
 8001510:	0800d38d 	.word	0x0800d38d
 8001514:	20001de5 	.word	0x20001de5
 8001518:	20001ec8 	.word	0x20001ec8
 800151c:	40000038 	.word	0x40000038
 8001520:	200022fc 	.word	0x200022fc

08001524 <StartGraphicTask>:
{
 8001524:	b508      	push	{r3, lr}
	  EncoderRead(&GraphicVar, &htim3);
 8001526:	4d0b      	ldr	r5, [pc, #44]	; (8001554 <StartGraphicTask+0x30>)
 8001528:	4e0b      	ldr	r6, [pc, #44]	; (8001558 <StartGraphicTask+0x34>)
	  printf("Signed encoder actual value: %d\r", GraphicVar.SignedEncActValue);
 800152a:	4c0c      	ldr	r4, [pc, #48]	; (800155c <StartGraphicTask+0x38>)
	  EncoderRead(&GraphicVar, &htim3);
 800152c:	4631      	mov	r1, r6
 800152e:	4809      	ldr	r0, [pc, #36]	; (8001554 <StartGraphicTask+0x30>)
 8001530:	f7ff fdfc 	bl	800112c <EncoderRead>
	  printf("Signed encoder actual value: %d\r", GraphicVar.SignedEncActValue);
 8001534:	f9b5 1000 	ldrsh.w	r1, [r5]
 8001538:	4620      	mov	r0, r4
 800153a:	f009 fbf3 	bl	800ad24 <iprintf>
	  Graphic(&GraphicVar, &TempFilter, &TempPID, &TempAutoTuneVar);
 800153e:	4b08      	ldr	r3, [pc, #32]	; (8001560 <StartGraphicTask+0x3c>)
 8001540:	4a08      	ldr	r2, [pc, #32]	; (8001564 <StartGraphicTask+0x40>)
 8001542:	4909      	ldr	r1, [pc, #36]	; (8001568 <StartGraphicTask+0x44>)
 8001544:	4803      	ldr	r0, [pc, #12]	; (8001554 <StartGraphicTask+0x30>)
 8001546:	f7ff ff37 	bl	80013b8 <Graphic>
	  osDelay(20);
 800154a:	2014      	movs	r0, #20
 800154c:	f007 f890 	bl	8008670 <osDelay>
  for(;;)
 8001550:	e7ec      	b.n	800152c <StartGraphicTask+0x8>
 8001552:	bf00      	nop
 8001554:	20001ea8 	.word	0x20001ea8
 8001558:	20002394 	.word	0x20002394
 800155c:	0800d3b5 	.word	0x0800d3b5
 8001560:	20001ec8 	.word	0x20001ec8
 8001564:	20001cf8 	.word	0x20001cf8
 8001568:	20001c84 	.word	0x20001c84

0800156c <ReadTempTimerCallback>:
{
 800156c:	b510      	push	{r4, lr}
	Max6675_Read_TempValue(&ActTemperature);
 800156e:	4c05      	ldr	r4, [pc, #20]	; (8001584 <ReadTempTimerCallback+0x18>)
 8001570:	4620      	mov	r0, r4
 8001572:	f002 f925 	bl	80037c0 <Max6675_Read_TempValue>
	FilteredTemperature = LPFilterUpdate(&TempFilter, ActTemperature);
 8001576:	6821      	ldr	r1, [r4, #0]
 8001578:	4803      	ldr	r0, [pc, #12]	; (8001588 <ReadTempTimerCallback+0x1c>)
 800157a:	f000 fb51 	bl	8001c20 <LPFilterUpdate>
 800157e:	4b03      	ldr	r3, [pc, #12]	; (800158c <ReadTempTimerCallback+0x20>)
 8001580:	6018      	str	r0, [r3, #0]
}
 8001582:	bd10      	pop	{r4, pc}
 8001584:	20002428 	.word	0x20002428
 8001588:	20001c84 	.word	0x20001c84
 800158c:	20001c28 	.word	0x20001c28

08001590 <_write>:
{
 8001590:	4610      	mov	r0, r2
  for(i=0 ; i<len ; i++)
 8001592:	2300      	movs	r3, #0
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001594:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
{
 8001598:	b530      	push	{r4, r5, lr}
  for(i=0 ; i<len ; i++)
 800159a:	4283      	cmp	r3, r0
 800159c:	db00      	blt.n	80015a0 <_write+0x10>
}
 800159e:	bd30      	pop	{r4, r5, pc}
 80015a0:	f8d2 4e80 	ldr.w	r4, [r2, #3712]	; 0xe80
 80015a4:	07e5      	lsls	r5, r4, #31
 80015a6:	d507      	bpl.n	80015b8 <_write+0x28>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80015a8:	f8d2 4e00 	ldr.w	r4, [r2, #3584]	; 0xe00
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80015ac:	07e4      	lsls	r4, r4, #31
 80015ae:	d503      	bpl.n	80015b8 <_write+0x28>
    ITM_SendChar((*ptr++));
 80015b0:	5ccc      	ldrb	r4, [r1, r3]
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80015b2:	6815      	ldr	r5, [r2, #0]
 80015b4:	b115      	cbz	r5, 80015bc <_write+0x2c>
    {
      __NOP();
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80015b6:	7014      	strb	r4, [r2, #0]
  for(i=0 ; i<len ; i++)
 80015b8:	3301      	adds	r3, #1
 80015ba:	e7ee      	b.n	800159a <_write+0xa>
      __NOP();
 80015bc:	bf00      	nop
 80015be:	e7f8      	b.n	80015b2 <_write+0x22>

080015c0 <SystemClock_Config>:
{
 80015c0:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015c2:	2410      	movs	r4, #16
{
 80015c4:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015c6:	4622      	mov	r2, r4
 80015c8:	2100      	movs	r1, #0
 80015ca:	a80d      	add	r0, sp, #52	; 0x34
 80015cc:	f008 ff42 	bl	800a454 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015d0:	2214      	movs	r2, #20
 80015d2:	2100      	movs	r1, #0
 80015d4:	eb0d 0002 	add.w	r0, sp, r2
 80015d8:	f008 ff3c 	bl	800a454 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80015dc:	4622      	mov	r2, r4
 80015de:	2100      	movs	r1, #0
 80015e0:	a801      	add	r0, sp, #4
 80015e2:	f008 ff37 	bl	800a454 <memset>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80015e6:	2502      	movs	r5, #2
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80015e8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80015ec:	2201      	movs	r2, #1
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80015ee:	2100      	movs	r1, #0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80015f0:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80015f4:	e9cd 5311 	strd	r5, r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80015f8:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015fc:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80015fe:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001600:	920e      	str	r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8001602:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001604:	f004 fa2c 	bl	8005a60 <HAL_RCC_OscConfig>
 8001608:	b108      	cbz	r0, 800160e <SystemClock_Config+0x4e>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800160a:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800160c:	e7fe      	b.n	800160c <SystemClock_Config+0x4c>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800160e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001610:	e9cd 3505 	strd	r3, r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001614:	f44f 6380 	mov.w	r3, #1024	; 0x400
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001618:	9007      	str	r0, [sp, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800161a:	e9cd 3008 	strd	r3, r0, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800161e:	4629      	mov	r1, r5
 8001620:	a805      	add	r0, sp, #20
 8001622:	f004 fbf3 	bl	8005e0c <HAL_RCC_ClockConfig>
 8001626:	b108      	cbz	r0, 800162c <SystemClock_Config+0x6c>
 8001628:	b672      	cpsid	i
  while (1)
 800162a:	e7fe      	b.n	800162a <SystemClock_Config+0x6a>
  PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 800162c:	9004      	str	r0, [sp, #16]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800162e:	a801      	add	r0, sp, #4
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 8001630:	9401      	str	r4, [sp, #4]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001632:	f004 fcc5 	bl	8005fc0 <HAL_RCCEx_PeriphCLKConfig>
 8001636:	b108      	cbz	r0, 800163c <SystemClock_Config+0x7c>
 8001638:	b672      	cpsid	i
  while (1)
 800163a:	e7fe      	b.n	800163a <SystemClock_Config+0x7a>
}
 800163c:	b015      	add	sp, #84	; 0x54
 800163e:	bd30      	pop	{r4, r5, pc}

08001640 <main>:
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001640:	f04f 0810 	mov.w	r8, #16
{
 8001644:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001648:	4cb0      	ldr	r4, [pc, #704]	; (800190c <main+0x2cc>)
{
 800164a:	b0a5      	sub	sp, #148	; 0x94
  HAL_Init();
 800164c:	f002 f8e6 	bl	800381c <HAL_Init>
  SystemClock_Config();
 8001650:	f7ff ffb6 	bl	80015c0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001654:	4642      	mov	r2, r8
 8001656:	2100      	movs	r1, #0
 8001658:	a81b      	add	r0, sp, #108	; 0x6c
 800165a:	f008 fefb 	bl	800a454 <memset>
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800165e:	69a3      	ldr	r3, [r4, #24]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001660:	f44f 4520 	mov.w	r5, #40960	; 0xa000
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001664:	ea43 0308 	orr.w	r3, r3, r8
 8001668:	61a3      	str	r3, [r4, #24]
 800166a:	69a3      	ldr	r3, [r4, #24]
  HAL_GPIO_WritePin(MAX6675_NSS_GPIO_Port, MAX6675_NSS_Pin, GPIO_PIN_RESET);
 800166c:	2200      	movs	r2, #0
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800166e:	ea03 0308 	and.w	r3, r3, r8
 8001672:	930a      	str	r3, [sp, #40]	; 0x28
 8001674:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001676:	69a3      	ldr	r3, [r4, #24]
  HAL_GPIO_WritePin(MAX6675_NSS_GPIO_Port, MAX6675_NSS_Pin, GPIO_PIN_RESET);
 8001678:	4641      	mov	r1, r8
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800167a:	f043 0320 	orr.w	r3, r3, #32
 800167e:	61a3      	str	r3, [r4, #24]
 8001680:	69a3      	ldr	r3, [r4, #24]
  HAL_GPIO_WritePin(MAX6675_NSS_GPIO_Port, MAX6675_NSS_Pin, GPIO_PIN_RESET);
 8001682:	48a3      	ldr	r0, [pc, #652]	; (8001910 <main+0x2d0>)
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001684:	f003 0320 	and.w	r3, r3, #32
 8001688:	930b      	str	r3, [sp, #44]	; 0x2c
 800168a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800168c:	69a3      	ldr	r3, [r4, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800168e:	2700      	movs	r7, #0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001690:	f043 0304 	orr.w	r3, r3, #4
 8001694:	61a3      	str	r3, [r4, #24]
 8001696:	69a3      	ldr	r3, [r4, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001698:	2602      	movs	r6, #2
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800169a:	f003 0304 	and.w	r3, r3, #4
 800169e:	930c      	str	r3, [sp, #48]	; 0x30
 80016a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016a2:	69a3      	ldr	r3, [r4, #24]
 80016a4:	f043 0308 	orr.w	r3, r3, #8
 80016a8:	61a3      	str	r3, [r4, #24]
 80016aa:	69a3      	ldr	r3, [r4, #24]
 80016ac:	f003 0308 	and.w	r3, r3, #8
 80016b0:	930d      	str	r3, [sp, #52]	; 0x34
 80016b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MAX6675_NSS_GPIO_Port, MAX6675_NSS_Pin, GPIO_PIN_RESET);
 80016b4:	f002 fb26 	bl	8003d04 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80016b8:	2200      	movs	r2, #0
 80016ba:	2102      	movs	r1, #2
 80016bc:	4895      	ldr	r0, [pc, #596]	; (8001914 <main+0x2d4>)
 80016be:	f002 fb21 	bl	8003d04 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80016c2:	4b95      	ldr	r3, [pc, #596]	; (8001918 <main+0x2d8>)
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016c4:	4895      	ldr	r0, [pc, #596]	; (800191c <main+0x2dc>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80016c6:	e9cd 531b 	strd	r5, r3, [sp, #108]	; 0x6c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80016ca:	2501      	movs	r5, #1
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016cc:	a91b      	add	r1, sp, #108	; 0x6c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80016ce:	951d      	str	r5, [sp, #116]	; 0x74
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016d0:	f002 fa36 	bl	8003b40 <HAL_GPIO_Init>
  HAL_GPIO_Init(MAX6675_NSS_GPIO_Port, &GPIO_InitStruct);
 80016d4:	488e      	ldr	r0, [pc, #568]	; (8001910 <main+0x2d0>)
 80016d6:	a91b      	add	r1, sp, #108	; 0x6c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016d8:	e9cd 761d 	strd	r7, r6, [sp, #116]	; 0x74
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016dc:	e9cd 851b 	strd	r8, r5, [sp, #108]	; 0x6c
  HAL_GPIO_Init(MAX6675_NSS_GPIO_Port, &GPIO_InitStruct);
 80016e0:	f002 fa2e 	bl	8003b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016e4:	e9cd 761d 	strd	r7, r6, [sp, #116]	; 0x74
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016e8:	e9cd 651b 	strd	r6, r5, [sp, #108]	; 0x6c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 80016ec:	2680      	movs	r6, #128	; 0x80
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 80016ee:	4889      	ldr	r0, [pc, #548]	; (8001914 <main+0x2d4>)
 80016f0:	a91b      	add	r1, sp, #108	; 0x6c
 80016f2:	f002 fa25 	bl	8003b40 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 80016f6:	4b8a      	ldr	r3, [pc, #552]	; (8001920 <main+0x2e0>)
  HAL_GPIO_Init(PulsEncoder_GPIO_Port, &GPIO_InitStruct);
 80016f8:	4886      	ldr	r0, [pc, #536]	; (8001914 <main+0x2d4>)
 80016fa:	a91b      	add	r1, sp, #108	; 0x6c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 80016fc:	e9cd 631b 	strd	r6, r3, [sp, #108]	; 0x6c
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001700:	951d      	str	r5, [sp, #116]	; 0x74
  HAL_GPIO_Init(PulsEncoder_GPIO_Port, &GPIO_InitStruct);
 8001702:	f002 fa1d 	bl	8003b40 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 8001706:	463a      	mov	r2, r7
 8001708:	2105      	movs	r1, #5
 800170a:	2017      	movs	r0, #23
 800170c:	f002 f8ce 	bl	80038ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001710:	2017      	movs	r0, #23
 8001712:	f002 f8fd 	bl	8003910 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8001716:	463a      	mov	r2, r7
 8001718:	2105      	movs	r1, #5
 800171a:	2028      	movs	r0, #40	; 0x28
 800171c:	f002 f8c6 	bl	80038ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001720:	2028      	movs	r0, #40	; 0x28
 8001722:	f002 f8f5 	bl	8003910 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001726:	6963      	ldr	r3, [r4, #20]
  HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 5, 0);
 8001728:	463a      	mov	r2, r7
  __HAL_RCC_DMA1_CLK_ENABLE();
 800172a:	432b      	orrs	r3, r5
 800172c:	6163      	str	r3, [r4, #20]
 800172e:	6963      	ldr	r3, [r4, #20]
  HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 5, 0);
 8001730:	2105      	movs	r1, #5
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001732:	402b      	ands	r3, r5
  HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 5, 0);
 8001734:	200e      	movs	r0, #14
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001736:	9309      	str	r3, [sp, #36]	; 0x24
 8001738:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 5, 0);
 800173a:	f002 f8b7 	bl	80038ac <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 800173e:	200e      	movs	r0, #14
 8001740:	f002 f8e6 	bl	8003910 <HAL_NVIC_EnableIRQ>
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001744:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi1.Instance = SPI1;
 8001748:	4876      	ldr	r0, [pc, #472]	; (8001924 <main+0x2e4>)
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800174a:	f8df c208 	ldr.w	ip, [pc, #520]	; 8001954 <main+0x314>
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 800174e:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8001752:	e9c0 c300 	strd	ip, r3, [r0]
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 8001756:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800175a:	e9c0 7704 	strd	r7, r7, [r0, #16]
  hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 800175e:	e9c0 e302 	strd	lr, r3, [r0, #8]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8001762:	e9c0 7708 	strd	r7, r7, [r0, #32]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8001766:	f44f 7300 	mov.w	r3, #512	; 0x200
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800176a:	6287      	str	r7, [r0, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 800176c:	270a      	movs	r7, #10
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 800176e:	e9c0 3806 	strd	r3, r8, [r0, #24]
  hspi1.Init.CRCPolynomial = 10;
 8001772:	62c7      	str	r7, [r0, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8001774:	f004 fd27 	bl	80061c6 <HAL_SPI_Init>
 8001778:	4603      	mov	r3, r0
 800177a:	b108      	cbz	r0, 8001780 <main+0x140>
 800177c:	b672      	cpsid	i
  while (1)
 800177e:	e7fe      	b.n	800177e <main+0x13e>
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001780:	f44f 4980 	mov.w	r9, #16384	; 0x4000
  hi2c1.Instance = I2C1;
 8001784:	4868      	ldr	r0, [pc, #416]	; (8001928 <main+0x2e8>)
  hi2c1.Init.ClockSpeed = 400000;
 8001786:	4a69      	ldr	r2, [pc, #420]	; (800192c <main+0x2ec>)
 8001788:	f8df a1cc 	ldr.w	sl, [pc, #460]	; 8001958 <main+0x318>
  hi2c1.Init.OwnAddress1 = 0;
 800178c:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001790:	e9c0 9304 	strd	r9, r3, [r0, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001794:	e9c0 3306 	strd	r3, r3, [r0, #24]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001798:	6203      	str	r3, [r0, #32]
  hi2c1.Init.ClockSpeed = 400000;
 800179a:	e9c0 2a00 	strd	r2, sl, [r0]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800179e:	f002 fb95 	bl	8003ecc <HAL_I2C_Init>
 80017a2:	4603      	mov	r3, r0
 80017a4:	b108      	cbz	r0, 80017aa <main+0x16a>
 80017a6:	b672      	cpsid	i
  while (1)
 80017a8:	e7fe      	b.n	80017a8 <main+0x168>
  huart2.Init.BaudRate = 115200;
 80017aa:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
  huart2.Instance = USART2;
 80017ae:	4860      	ldr	r0, [pc, #384]	; (8001930 <main+0x2f0>)
  huart2.Init.BaudRate = 115200;
 80017b0:	4c60      	ldr	r4, [pc, #384]	; (8001934 <main+0x2f4>)
  huart2.Init.StopBits = UART_STOPBITS_1;
 80017b2:	e9c0 3302 	strd	r3, r3, [r0, #8]
  huart2.Init.BaudRate = 115200;
 80017b6:	e9c0 4200 	strd	r4, r2, [r0]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80017ba:	220c      	movs	r2, #12
  huart2.Init.Parity = UART_PARITY_NONE;
 80017bc:	6103      	str	r3, [r0, #16]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80017be:	e9c0 2305 	strd	r2, r3, [r0, #20]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80017c2:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80017c4:	f005 fbfa 	bl	8006fbc <HAL_UART_Init>
 80017c8:	4683      	mov	fp, r0
 80017ca:	b108      	cbz	r0, 80017d0 <main+0x190>
 80017cc:	b672      	cpsid	i
  while (1)
 80017ce:	e7fe      	b.n	80017ce <main+0x18e>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80017d0:	4601      	mov	r1, r0
 80017d2:	4642      	mov	r2, r8
 80017d4:	a814      	add	r0, sp, #80	; 0x50
 80017d6:	f008 fe3d 	bl	800a454 <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80017da:	221c      	movs	r2, #28
 80017dc:	4659      	mov	r1, fp
 80017de:	a81b      	add	r0, sp, #108	; 0x6c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017e0:	e9cd bb12 	strd	fp, fp, [sp, #72]	; 0x48
  TIM_OC_InitTypeDef sConfigOC = {0};
 80017e4:	f008 fe36 	bl	800a454 <memset>
  htim2.Instance = TIM2;
 80017e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80017ec:	4c52      	ldr	r4, [pc, #328]	; (8001938 <main+0x2f8>)
  htim2.Init.Prescaler = 0;
 80017ee:	e9c4 3b00 	strd	r3, fp, [r4]
  htim2.Init.Period = 1024-1;
 80017f2:	f240 33ff 	movw	r3, #1023	; 0x3ff
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80017f6:	4620      	mov	r0, r4
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017f8:	e9c4 3b03 	strd	r3, fp, [r4, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017fc:	f8c4 b008 	str.w	fp, [r4, #8]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001800:	61a6      	str	r6, [r4, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001802:	f005 f93f 	bl	8006a84 <HAL_TIM_Base_Init>
 8001806:	b108      	cbz	r0, 800180c <main+0x1cc>
 8001808:	b672      	cpsid	i
  while (1)
 800180a:	e7fe      	b.n	800180a <main+0x1ca>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800180c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001810:	4620      	mov	r0, r4
 8001812:	a914      	add	r1, sp, #80	; 0x50
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001814:	9314      	str	r3, [sp, #80]	; 0x50
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001816:	f005 fa74 	bl	8006d02 <HAL_TIM_ConfigClockSource>
 800181a:	b108      	cbz	r0, 8001820 <main+0x1e0>
 800181c:	b672      	cpsid	i
  while (1)
 800181e:	e7fe      	b.n	800181e <main+0x1de>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001820:	4620      	mov	r0, r4
 8001822:	f005 f95b 	bl	8006adc <HAL_TIM_PWM_Init>
 8001826:	b108      	cbz	r0, 800182c <main+0x1ec>
 8001828:	b672      	cpsid	i
  while (1)
 800182a:	e7fe      	b.n	800182a <main+0x1ea>
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800182c:	e9cd 0012 	strd	r0, r0, [sp, #72]	; 0x48
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001830:	a912      	add	r1, sp, #72	; 0x48
 8001832:	4620      	mov	r0, r4
 8001834:	f005 fb58 	bl	8006ee8 <HAL_TIMEx_MasterConfigSynchronization>
 8001838:	b108      	cbz	r0, 800183e <main+0x1fe>
 800183a:	b672      	cpsid	i
  while (1)
 800183c:	e7fe      	b.n	800183c <main+0x1fc>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800183e:	2360      	movs	r3, #96	; 0x60
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001840:	901d      	str	r0, [sp, #116]	; 0x74
  sConfigOC.Pulse = 0;
 8001842:	e9cd 301b 	strd	r3, r0, [sp, #108]	; 0x6c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001846:	901f      	str	r0, [sp, #124]	; 0x7c
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001848:	2204      	movs	r2, #4
 800184a:	4620      	mov	r0, r4
 800184c:	a91b      	add	r1, sp, #108	; 0x6c
 800184e:	f005 f9f3 	bl	8006c38 <HAL_TIM_PWM_ConfigChannel>
 8001852:	4680      	mov	r8, r0
 8001854:	b108      	cbz	r0, 800185a <main+0x21a>
 8001856:	b672      	cpsid	i
  while (1)
 8001858:	e7fe      	b.n	8001858 <main+0x218>
  HAL_TIM_MspPostInit(&htim2);
 800185a:	4620      	mov	r0, r4
 800185c:	f000 fe5e 	bl	800251c <HAL_TIM_MspPostInit>
  hi2c2.Instance = I2C2;
 8001860:	4836      	ldr	r0, [pc, #216]	; (800193c <main+0x2fc>)
 8001862:	4b37      	ldr	r3, [pc, #220]	; (8001940 <main+0x300>)
  hi2c2.Init.OwnAddress1 = 0;
 8001864:	e9c0 8802 	strd	r8, r8, [r0, #8]
  hi2c2.Init.ClockSpeed = 400000;
 8001868:	e9c0 3a00 	strd	r3, sl, [r0]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800186c:	e9c0 9804 	strd	r9, r8, [r0, #16]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001870:	e9c0 8806 	strd	r8, r8, [r0, #24]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001874:	f8c0 8020 	str.w	r8, [r0, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8001878:	f002 fb28 	bl	8003ecc <HAL_I2C_Init>
 800187c:	b108      	cbz	r0, 8001882 <main+0x242>
 800187e:	b672      	cpsid	i
  while (1)
 8001880:	e7fe      	b.n	8001880 <main+0x240>
  htim3.Instance = TIM3;
 8001882:	4c30      	ldr	r4, [pc, #192]	; (8001944 <main+0x304>)
 8001884:	4b30      	ldr	r3, [pc, #192]	; (8001948 <main+0x308>)
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001886:	e9cd 0014 	strd	r0, r0, [sp, #80]	; 0x50
  htim3.Init.Prescaler = 0;
 800188a:	e9c4 3000 	strd	r3, r0, [r4]
  htim3.Init.Period = 65535;
 800188e:	f64f 73ff 	movw	r3, #65535	; 0xffff
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001892:	e9c4 3003 	strd	r3, r0, [r4, #12]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8001896:	2303      	movs	r3, #3
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8001898:	e9cd 501d 	strd	r5, r0, [sp, #116]	; 0x74
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800189c:	e9cd 301b 	strd	r3, r0, [sp, #108]	; 0x6c
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80018a0:	e9cd 701f 	strd	r7, r0, [sp, #124]	; 0x7c
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80018a4:	e9cd 5021 	strd	r5, r0, [sp, #132]	; 0x84
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018a8:	60a0      	str	r0, [r4, #8]
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 80018aa:	a91b      	add	r1, sp, #108	; 0x6c
 80018ac:	4620      	mov	r0, r4
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80018ae:	61a6      	str	r6, [r4, #24]
  sConfig.IC2Filter = 10;
 80018b0:	9723      	str	r7, [sp, #140]	; 0x8c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 80018b2:	f005 f93f 	bl	8006b34 <HAL_TIM_Encoder_Init>
 80018b6:	4626      	mov	r6, r4
 80018b8:	b108      	cbz	r0, 80018be <main+0x27e>
 80018ba:	b672      	cpsid	i
  while (1)
 80018bc:	e7fe      	b.n	80018bc <main+0x27c>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80018be:	2300      	movs	r3, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018c0:	4820      	ldr	r0, [pc, #128]	; (8001944 <main+0x304>)
 80018c2:	a914      	add	r1, sp, #80	; 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018c4:	e9cd 3314 	strd	r3, r3, [sp, #80]	; 0x50
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018c8:	f005 fb0e 	bl	8006ee8 <HAL_TIMEx_MasterConfigSynchronization>
 80018cc:	4603      	mov	r3, r0
 80018ce:	b108      	cbz	r0, 80018d4 <main+0x294>
 80018d0:	b672      	cpsid	i
  while (1)
 80018d2:	e7fe      	b.n	80018d2 <main+0x292>
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80018d4:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi2.Instance = SPI2;
 80018d8:	481c      	ldr	r0, [pc, #112]	; (800194c <main+0x30c>)
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80018da:	491d      	ldr	r1, [pc, #116]	; (8001950 <main+0x310>)
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80018dc:	e9c0 3308 	strd	r3, r3, [r0, #32]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80018e0:	e9c0 1200 	strd	r1, r2, [r0]
  hspi2.Init.DataSize = SPI_DATASIZE_16BIT;
 80018e4:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80018e8:	6083      	str	r3, [r0, #8]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 80018ea:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80018ee:	6143      	str	r3, [r0, #20]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 80018f0:	f44f 7200 	mov.w	r2, #512	; 0x200
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80018f4:	6283      	str	r3, [r0, #40]	; 0x28
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 80018f6:	2410      	movs	r4, #16
  hspi2.Init.CRCPolynomial = 10;
 80018f8:	230a      	movs	r3, #10
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 80018fa:	e9c0 2406 	strd	r2, r4, [r0, #24]
  hspi2.Init.CRCPolynomial = 10;
 80018fe:	62c3      	str	r3, [r0, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001900:	f004 fc61 	bl	80061c6 <HAL_SPI_Init>
 8001904:	4605      	mov	r5, r0
 8001906:	b348      	cbz	r0, 800195c <main+0x31c>
 8001908:	b672      	cpsid	i
  while (1)
 800190a:	e7fe      	b.n	800190a <main+0x2ca>
 800190c:	40021000 	.word	0x40021000
 8001910:	40010800 	.word	0x40010800
 8001914:	40010c00 	.word	0x40010c00
 8001918:	10210000 	.word	0x10210000
 800191c:	40011000 	.word	0x40011000
 8001920:	10310000 	.word	0x10310000
 8001924:	20001c9c 	.word	0x20001c9c
 8001928:	20001d90 	.word	0x20001d90
 800192c:	40005400 	.word	0x40005400
 8001930:	20001e68 	.word	0x20001e68
 8001934:	40004400 	.word	0x40004400
 8001938:	2000234c 	.word	0x2000234c
 800193c:	20001d3c 	.word	0x20001d3c
 8001940:	40005800 	.word	0x40005800
 8001944:	20002394 	.word	0x20002394
 8001948:	40000400 	.word	0x40000400
 800194c:	20001c2c 	.word	0x20001c2c
 8001950:	40003800 	.word	0x40003800
 8001954:	40013000 	.word	0x40013000
 8001958:	00061a80 	.word	0x00061a80
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800195c:	4622      	mov	r2, r4
 800195e:	4601      	mov	r1, r0
 8001960:	a81b      	add	r0, sp, #108	; 0x6c
 8001962:	f008 fd77 	bl	800a454 <memset>
  htim4.Init.Prescaler = 1000-1;
 8001966:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim4.Instance = TIM4;
 800196a:	4c63      	ldr	r4, [pc, #396]	; (8001af8 <main+0x4b8>)
  htim4.Init.Prescaler = 1000-1;
 800196c:	4a63      	ldr	r2, [pc, #396]	; (8001afc <main+0x4bc>)
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800196e:	4620      	mov	r0, r4
  htim4.Init.Prescaler = 1000-1;
 8001970:	e9c4 2300 	strd	r2, r3, [r4]
  htim4.Init.Period = 18000-1;
 8001974:	f244 634f 	movw	r3, #17999	; 0x464f
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001978:	e9c4 3503 	strd	r3, r5, [r4, #12]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800197c:	2380      	movs	r3, #128	; 0x80
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800197e:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001982:	60a5      	str	r5, [r4, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001984:	61a3      	str	r3, [r4, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001986:	f005 f87d 	bl	8006a84 <HAL_TIM_Base_Init>
 800198a:	b108      	cbz	r0, 8001990 <main+0x350>
 800198c:	b672      	cpsid	i
  while (1)
 800198e:	e7fe      	b.n	800198e <main+0x34e>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001990:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001994:	4620      	mov	r0, r4
 8001996:	a91b      	add	r1, sp, #108	; 0x6c
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001998:	931b      	str	r3, [sp, #108]	; 0x6c
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800199a:	f005 f9b2 	bl	8006d02 <HAL_TIM_ConfigClockSource>
 800199e:	b108      	cbz	r0, 80019a4 <main+0x364>
 80019a0:	b672      	cpsid	i
  while (1)
 80019a2:	e7fe      	b.n	80019a2 <main+0x362>
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80019a4:	e9cd 0014 	strd	r0, r0, [sp, #80]	; 0x50
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80019a8:	a914      	add	r1, sp, #80	; 0x50
 80019aa:	4620      	mov	r0, r4
 80019ac:	f005 fa9c 	bl	8006ee8 <HAL_TIMEx_MasterConfigSynchronization>
 80019b0:	4605      	mov	r5, r0
 80019b2:	b108      	cbz	r0, 80019b8 <main+0x378>
 80019b4:	b672      	cpsid	i
  while (1)
 80019b6:	e7fe      	b.n	80019b6 <main+0x376>
  HAL_TIM_Base_Start(&htim2);
 80019b8:	4851      	ldr	r0, [pc, #324]	; (8001b00 <main+0x4c0>)
 80019ba:	f004 fed9 	bl	8006770 <HAL_TIM_Base_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 80019be:	2104      	movs	r1, #4
 80019c0:	484f      	ldr	r0, [pc, #316]	; (8001b00 <main+0x4c0>)
 80019c2:	f005 fa8f 	bl	8006ee4 <HAL_TIM_PWM_Start>
  HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 80019c6:	213c      	movs	r1, #60	; 0x3c
 80019c8:	484e      	ldr	r0, [pc, #312]	; (8001b04 <main+0x4c4>)
 80019ca:	f004 ff22 	bl	8006812 <HAL_TIM_Encoder_Start>
  HAL_TIM_Base_Start_IT(&htim4);
 80019ce:	4620      	mov	r0, r4
 80019d0:	f004 fef4 	bl	80067bc <HAL_TIM_Base_Start_IT>
  __HAL_TIM_SET_COUNTER(&htim3, STARTTEMPERATURE);
 80019d4:	22b4      	movs	r2, #180	; 0xb4
 80019d6:	6833      	ldr	r3, [r6, #0]
  u8g2_Setup_ssd1306_i2c_128x64_noname_f(&u8g2,
 80019d8:	494b      	ldr	r1, [pc, #300]	; (8001b08 <main+0x4c8>)
  __HAL_TIM_SET_COUNTER(&htim3, STARTTEMPERATURE);
 80019da:	625a      	str	r2, [r3, #36]	; 0x24
  u8g2_Setup_ssd1306_i2c_128x64_noname_f(&u8g2,
 80019dc:	484b      	ldr	r0, [pc, #300]	; (8001b0c <main+0x4cc>)
 80019de:	4b4c      	ldr	r3, [pc, #304]	; (8001b10 <main+0x4d0>)
 80019e0:	4a4c      	ldr	r2, [pc, #304]	; (8001b14 <main+0x4d4>)
 80019e2:	f001 f82b 	bl	8002a3c <u8g2_Setup_ssd1306_i2c_128x64_noname_f>
  u8g2_InitDisplay(&u8g2);
 80019e6:	4849      	ldr	r0, [pc, #292]	; (8001b0c <main+0x4cc>)
 80019e8:	f001 fe81 	bl	80036ee <u8x8_InitDisplay>
  u8g2_SetPowerSave(&u8g2, 0);
 80019ec:	4629      	mov	r1, r5
 80019ee:	4847      	ldr	r0, [pc, #284]	; (8001b0c <main+0x4cc>)
 80019f0:	f001 fe85 	bl	80036fe <u8x8_SetPowerSave>
  u8g2_ClearDisplay(&u8g2);
 80019f4:	4845      	ldr	r0, [pc, #276]	; (8001b0c <main+0x4cc>)
 80019f6:	f001 f80b 	bl	8002a10 <u8g2_ClearDisplay>
  u8g2_SetFont(&u8g2, u8g2_font_helvR14_tf);
 80019fa:	4947      	ldr	r1, [pc, #284]	; (8001b18 <main+0x4d8>)
 80019fc:	4843      	ldr	r0, [pc, #268]	; (8001b0c <main+0x4cc>)
 80019fe:	f001 fac7 	bl	8002f90 <u8g2_SetFont>
  u8g2_SetFontPosTop(&u8g2);
 8001a02:	4842      	ldr	r0, [pc, #264]	; (8001b0c <main+0x4cc>)
 8001a04:	f001 fabe 	bl	8002f84 <u8g2_SetFontPosTop>
  LPFilterInit(&TempFilter);
 8001a08:	4844      	ldr	r0, [pc, #272]	; (8001b1c <main+0x4dc>)
 8001a0a:	f000 f8ff 	bl	8001c0c <LPFilterInit>
  PIDInit(&TempPID, TEMPERATURE_SAMPLE_TIME, MAXPWMOUTPUT, 0, 180, 8, 956, MAXPWMOUTPUT/2, -(MAXPWMOUTPUT/2), DERIVATIVE_TIME_CONSTANT);
 8001a0e:	4b44      	ldr	r3, [pc, #272]	; (8001b20 <main+0x4e0>)
 8001a10:	f04f 547a 	mov.w	r4, #1048576000	; 0x3e800000
 8001a14:	9305      	str	r3, [sp, #20]
 8001a16:	f04f 4344 	mov.w	r3, #3288334336	; 0xc4000000
 8001a1a:	9304      	str	r3, [sp, #16]
 8001a1c:	f04f 4388 	mov.w	r3, #1140850688	; 0x44000000
 8001a20:	9303      	str	r3, [sp, #12]
 8001a22:	4b40      	ldr	r3, [pc, #256]	; (8001b24 <main+0x4e4>)
 8001a24:	4e40      	ldr	r6, [pc, #256]	; (8001b28 <main+0x4e8>)
 8001a26:	9302      	str	r3, [sp, #8]
 8001a28:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 8001a2c:	f04f 4289 	mov.w	r2, #1149239296	; 0x44800000
 8001a30:	4621      	mov	r1, r4
 8001a32:	483e      	ldr	r0, [pc, #248]	; (8001b2c <main+0x4ec>)
 8001a34:	9301      	str	r3, [sp, #4]
 8001a36:	9600      	str	r6, [sp, #0]
 8001a38:	2300      	movs	r3, #0
 8001a3a:	f000 f91f 	bl	8001c7c <PIDInit>
  PIDNewSetpoint(&TempPID, STARTTEMPERATURE);
 8001a3e:	4631      	mov	r1, r6
 8001a40:	483a      	ldr	r0, [pc, #232]	; (8001b2c <main+0x4ec>)
 8001a42:	f000 f931 	bl	8001ca8 <PIDNewSetpoint>
  PID_AutoTuneInit(&TempAutoTuneVar, STARTTEMPERATURE, 0.5, TEMPERATURE_SAMPLE_TIME, 20, 0, 1024);
 8001a46:	2200      	movs	r2, #0
 8001a48:	4b39      	ldr	r3, [pc, #228]	; (8001b30 <main+0x4f0>)
 8001a4a:	483a      	ldr	r0, [pc, #232]	; (8001b34 <main+0x4f4>)
 8001a4c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001a50:	2200      	movs	r2, #0
 8001a52:	2300      	movs	r3, #0
 8001a54:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001a58:	2314      	movs	r3, #20
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	9303      	str	r3, [sp, #12]
 8001a5e:	4b36      	ldr	r3, [pc, #216]	; (8001b38 <main+0x4f8>)
 8001a60:	9402      	str	r4, [sp, #8]
 8001a62:	e9cd 2300 	strd	r2, r3, [sp]
 8001a66:	2200      	movs	r2, #0
 8001a68:	4b34      	ldr	r3, [pc, #208]	; (8001b3c <main+0x4fc>)
 8001a6a:	f000 f9a9 	bl	8001dc0 <PID_AutoTuneInit>
  osTimerDef(ReadTempTimer, ReadTempTimerCallback);
 8001a6e:	4b34      	ldr	r3, [pc, #208]	; (8001b40 <main+0x500>)
  ReadTempTimerHandle = osTimerCreate(osTimer(ReadTempTimer), osTimerPeriodic, NULL);
 8001a70:	462a      	mov	r2, r5
 8001a72:	2101      	movs	r1, #1
 8001a74:	a80e      	add	r0, sp, #56	; 0x38
  osTimerDef(ReadTempTimer, ReadTempTimerCallback);
 8001a76:	e9cd 350e 	strd	r3, r5, [sp, #56]	; 0x38
  ReadTempTimerHandle = osTimerCreate(osTimer(ReadTempTimer), osTimerPeriodic, NULL);
 8001a7a:	f006 fe01 	bl	8008680 <osTimerCreate>
 8001a7e:	4e31      	ldr	r6, [pc, #196]	; (8001b44 <main+0x504>)
  osTimerDef(BlinkTimer, BlinkTimerCallback);
 8001a80:	4b31      	ldr	r3, [pc, #196]	; (8001b48 <main+0x508>)
  ReadTempTimerHandle = osTimerCreate(osTimer(ReadTempTimer), osTimerPeriodic, NULL);
 8001a82:	6030      	str	r0, [r6, #0]
  BlinkTimerHandle = osTimerCreate(osTimer(BlinkTimer), osTimerPeriodic, NULL);
 8001a84:	462a      	mov	r2, r5
 8001a86:	2101      	movs	r1, #1
 8001a88:	a810      	add	r0, sp, #64	; 0x40
  osTimerDef(BlinkTimer, BlinkTimerCallback);
 8001a8a:	e9cd 3510 	strd	r3, r5, [sp, #64]	; 0x40
  BlinkTimerHandle = osTimerCreate(osTimer(BlinkTimer), osTimerPeriodic, NULL);
 8001a8e:	f006 fdf7 	bl	8008680 <osTimerCreate>
 8001a92:	4c2e      	ldr	r4, [pc, #184]	; (8001b4c <main+0x50c>)
  osTimerDef(PulsEncoderTimer, PulsEncoderTimerCallback);
 8001a94:	4b2e      	ldr	r3, [pc, #184]	; (8001b50 <main+0x510>)
  PulsEncoderTimerHandle = osTimerCreate(osTimer(PulsEncoderTimer), osTimerOnce, NULL);
 8001a96:	462a      	mov	r2, r5
  BlinkTimerHandle = osTimerCreate(osTimer(BlinkTimer), osTimerPeriodic, NULL);
 8001a98:	6020      	str	r0, [r4, #0]
  PulsEncoderTimerHandle = osTimerCreate(osTimer(PulsEncoderTimer), osTimerOnce, NULL);
 8001a9a:	4629      	mov	r1, r5
 8001a9c:	a812      	add	r0, sp, #72	; 0x48
  osTimerDef(PulsEncoderTimer, PulsEncoderTimerCallback);
 8001a9e:	e9cd 3512 	strd	r3, r5, [sp, #72]	; 0x48
  PulsEncoderTimerHandle = osTimerCreate(osTimer(PulsEncoderTimer), osTimerOnce, NULL);
 8001aa2:	f006 fded 	bl	8008680 <osTimerCreate>
 8001aa6:	4b2b      	ldr	r3, [pc, #172]	; (8001b54 <main+0x514>)
  osTimerStart(ReadTempTimerHandle, MAX6675_READ_DELAY_MS/portTICK_PERIOD_MS);
 8001aa8:	21fa      	movs	r1, #250	; 0xfa
  PulsEncoderTimerHandle = osTimerCreate(osTimer(PulsEncoderTimer), osTimerOnce, NULL);
 8001aaa:	6018      	str	r0, [r3, #0]
  osTimerStart(ReadTempTimerHandle, MAX6675_READ_DELAY_MS/portTICK_PERIOD_MS);
 8001aac:	6830      	ldr	r0, [r6, #0]
 8001aae:	f006 fdff 	bl	80086b0 <osTimerStart>
  osTimerStart(BlinkTimerHandle, BLINK_DELAY_MS/portTICK_PERIOD_MS);
 8001ab2:	6820      	ldr	r0, [r4, #0]
  osThreadDef(MainTask, StartMainTask, osPriorityNormal, 0, 256);
 8001ab4:	4c28      	ldr	r4, [pc, #160]	; (8001b58 <main+0x518>)
  osTimerStart(BlinkTimerHandle, BLINK_DELAY_MS/portTICK_PERIOD_MS);
 8001ab6:	21fa      	movs	r1, #250	; 0xfa
  osThreadDef(MainTask, StartMainTask, osPriorityNormal, 0, 256);
 8001ab8:	ae14      	add	r6, sp, #80	; 0x50
  osTimerStart(BlinkTimerHandle, BLINK_DELAY_MS/portTICK_PERIOD_MS);
 8001aba:	f006 fdf9 	bl	80086b0 <osTimerStart>
  osThreadDef(MainTask, StartMainTask, osPriorityNormal, 0, 256);
 8001abe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001ac0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8001ac2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8001ac6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
  MainTaskHandle = osThreadCreate(osThread(MainTask), NULL);
 8001aca:	4629      	mov	r1, r5
 8001acc:	a814      	add	r0, sp, #80	; 0x50
 8001ace:	f006 fda7 	bl	8008620 <osThreadCreate>
 8001ad2:	4b22      	ldr	r3, [pc, #136]	; (8001b5c <main+0x51c>)
  osThreadDef(GraphicTask, StartGraphicTask, osPriorityLow, 0, 256);
 8001ad4:	ae1b      	add	r6, sp, #108	; 0x6c
 8001ad6:	340c      	adds	r4, #12
  MainTaskHandle = osThreadCreate(osThread(MainTask), NULL);
 8001ad8:	6018      	str	r0, [r3, #0]
  osThreadDef(GraphicTask, StartGraphicTask, osPriorityLow, 0, 256);
 8001ada:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001adc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8001ade:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8001ae2:	e886 0007 	stmia.w	r6, {r0, r1, r2}
  GraphicTaskHandle = osThreadCreate(osThread(GraphicTask), NULL);
 8001ae6:	4629      	mov	r1, r5
 8001ae8:	a81b      	add	r0, sp, #108	; 0x6c
 8001aea:	f006 fd99 	bl	8008620 <osThreadCreate>
 8001aee:	4b1c      	ldr	r3, [pc, #112]	; (8001b60 <main+0x520>)
 8001af0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001af2:	f006 fd90 	bl	8008616 <osKernelStart>
  while (1)
 8001af6:	e7fe      	b.n	8001af6 <main+0x4b6>
 8001af8:	20002300 	.word	0x20002300
 8001afc:	40000800 	.word	0x40000800
 8001b00:	2000234c 	.word	0x2000234c
 8001b04:	20002394 	.word	0x20002394
 8001b08:	0800edf4 	.word	0x0800edf4
 8001b0c:	20001ba0 	.word	0x20001ba0
 8001b10:	080027fd 	.word	0x080027fd
 8001b14:	08002789 	.word	0x08002789
 8001b18:	0800df2c 	.word	0x0800df2c
 8001b1c:	20001c84 	.word	0x20001c84
 8001b20:	3dcccccd 	.word	0x3dcccccd
 8001b24:	446f0000 	.word	0x446f0000
 8001b28:	43340000 	.word	0x43340000
 8001b2c:	20001cf8 	.word	0x20001cf8
 8001b30:	40900000 	.word	0x40900000
 8001b34:	20001ec8 	.word	0x20001ec8
 8001b38:	3fe00000 	.word	0x3fe00000
 8001b3c:	40668000 	.word	0x40668000
 8001b40:	0800156d 	.word	0x0800156d
 8001b44:	20001ec0 	.word	0x20001ec0
 8001b48:	08001159 	.word	0x08001159
 8001b4c:	20002348 	.word	0x20002348
 8001b50:	080013f9 	.word	0x080013f9
 8001b54:	20001eb4 	.word	0x20001eb4
 8001b58:	0800d1d0 	.word	0x0800d1d0
 8001b5c:	20001ebc 	.word	0x20001ebc
 8001b60:	20001cf4 	.word	0x20001cf4

08001b64 <HAL_GPIO_EXTI_Callback>:
	if(GPIO_Pin == PulsStart_Pin)
 8001b64:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
{
 8001b68:	4601      	mov	r1, r0
 8001b6a:	b508      	push	{r3, lr}
	if(GPIO_Pin == PulsStart_Pin)
 8001b6c:	d10a      	bne.n	8001b84 <HAL_GPIO_EXTI_Callback+0x20>
		if (GraphicVar._ActualPage == PageMain)
 8001b6e:	4b1c      	ldr	r3, [pc, #112]	; (8001be0 <HAL_GPIO_EXTI_Callback+0x7c>)
 8001b70:	78db      	ldrb	r3, [r3, #3]
 8001b72:	b91b      	cbnz	r3, 8001b7c <HAL_GPIO_EXTI_Callback+0x18>
			EnablePWMOut = true;
 8001b74:	4b1b      	ldr	r3, [pc, #108]	; (8001be4 <HAL_GPIO_EXTI_Callback+0x80>)
			StartTuning = true;
 8001b76:	2201      	movs	r2, #1
			StartTuning = false;
 8001b78:	701a      	strb	r2, [r3, #0]
 8001b7a:	e00b      	b.n	8001b94 <HAL_GPIO_EXTI_Callback+0x30>
		else if (GraphicVar._ActualPage == PageTuning)
 8001b7c:	2b02      	cmp	r3, #2
 8001b7e:	d109      	bne.n	8001b94 <HAL_GPIO_EXTI_Callback+0x30>
			StartTuning = true;
 8001b80:	4b19      	ldr	r3, [pc, #100]	; (8001be8 <HAL_GPIO_EXTI_Callback+0x84>)
 8001b82:	e7f8      	b.n	8001b76 <HAL_GPIO_EXTI_Callback+0x12>
	else if (GPIO_Pin == PulsStop_Pin)
 8001b84:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8001b88:	d10a      	bne.n	8001ba0 <HAL_GPIO_EXTI_Callback+0x3c>
		if (GraphicVar._ActualPage == PageMain)
 8001b8a:	4b15      	ldr	r3, [pc, #84]	; (8001be0 <HAL_GPIO_EXTI_Callback+0x7c>)
 8001b8c:	78db      	ldrb	r3, [r3, #3]
 8001b8e:	b913      	cbnz	r3, 8001b96 <HAL_GPIO_EXTI_Callback+0x32>
			EnablePWMOut = false;
 8001b90:	4a14      	ldr	r2, [pc, #80]	; (8001be4 <HAL_GPIO_EXTI_Callback+0x80>)
 8001b92:	7013      	strb	r3, [r2, #0]
}
 8001b94:	bd08      	pop	{r3, pc}
		else if (GraphicVar._ActualPage == PageTuning)
 8001b96:	2b02      	cmp	r3, #2
 8001b98:	d1fc      	bne.n	8001b94 <HAL_GPIO_EXTI_Callback+0x30>
			StartTuning = false;
 8001b9a:	2200      	movs	r2, #0
 8001b9c:	4b12      	ldr	r3, [pc, #72]	; (8001be8 <HAL_GPIO_EXTI_Callback+0x84>)
 8001b9e:	e7eb      	b.n	8001b78 <HAL_GPIO_EXTI_Callback+0x14>
	if(GPIO_Pin == PulsEncoder_Pin && HAL_GPIO_ReadPin(PulsEncoder_GPIO_Port, PulsEncoder_Pin) == GPIO_PIN_RESET)
 8001ba0:	2880      	cmp	r0, #128	; 0x80
 8001ba2:	d1f7      	bne.n	8001b94 <HAL_GPIO_EXTI_Callback+0x30>
 8001ba4:	4811      	ldr	r0, [pc, #68]	; (8001bec <HAL_GPIO_EXTI_Callback+0x88>)
 8001ba6:	f002 f8a7 	bl	8003cf8 <HAL_GPIO_ReadPin>
 8001baa:	b940      	cbnz	r0, 8001bbe <HAL_GPIO_EXTI_Callback+0x5a>
		GraphicVar._PulsEncoderPressed = true;
 8001bac:	2201      	movs	r2, #1
 8001bae:	4b0c      	ldr	r3, [pc, #48]	; (8001be0 <HAL_GPIO_EXTI_Callback+0x7c>)
		osTimerStart(PulsEncoderTimerHandle, PULS_HOLDED_TIME_MS/portTICK_PERIOD_MS);
 8001bb0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
		GraphicVar._PulsEncoderPressed = true;
 8001bb4:	80da      	strh	r2, [r3, #6]
		osTimerStart(PulsEncoderTimerHandle, PULS_HOLDED_TIME_MS/portTICK_PERIOD_MS);
 8001bb6:	4b0e      	ldr	r3, [pc, #56]	; (8001bf0 <HAL_GPIO_EXTI_Callback+0x8c>)
 8001bb8:	6818      	ldr	r0, [r3, #0]
 8001bba:	f006 fd79 	bl	80086b0 <osTimerStart>
	if(GPIO_Pin == PulsEncoder_Pin && HAL_GPIO_ReadPin(PulsEncoder_GPIO_Port, PulsEncoder_Pin) == GPIO_PIN_SET)
 8001bbe:	2180      	movs	r1, #128	; 0x80
 8001bc0:	480a      	ldr	r0, [pc, #40]	; (8001bec <HAL_GPIO_EXTI_Callback+0x88>)
 8001bc2:	f002 f899 	bl	8003cf8 <HAL_GPIO_ReadPin>
 8001bc6:	2801      	cmp	r0, #1
 8001bc8:	d1e4      	bne.n	8001b94 <HAL_GPIO_EXTI_Callback+0x30>
		osTimerStop(PulsEncoderTimerHandle);
 8001bca:	4b09      	ldr	r3, [pc, #36]	; (8001bf0 <HAL_GPIO_EXTI_Callback+0x8c>)
 8001bcc:	6818      	ldr	r0, [r3, #0]
 8001bce:	f006 fd99 	bl	8008704 <osTimerStop>
		GraphicVar._PulsEncoderPressed = false;
 8001bd2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001bd6:	4b02      	ldr	r3, [pc, #8]	; (8001be0 <HAL_GPIO_EXTI_Callback+0x7c>)
 8001bd8:	80da      	strh	r2, [r3, #6]
		GraphicVar._PulsEncoderHolded = false;
 8001bda:	2200      	movs	r2, #0
 8001bdc:	721a      	strb	r2, [r3, #8]
}
 8001bde:	e7d9      	b.n	8001b94 <HAL_GPIO_EXTI_Callback+0x30>
 8001be0:	20001ea8 	.word	0x20001ea8
 8001be4:	20001eb8 	.word	0x20001eb8
 8001be8:	200022fc 	.word	0x200022fc
 8001bec:	40010c00 	.word	0x40010c00
 8001bf0:	20001eb4 	.word	0x20001eb4

08001bf4 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM1) {
 8001bf4:	6802      	ldr	r2, [r0, #0]
 8001bf6:	4b03      	ldr	r3, [pc, #12]	; (8001c04 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001bf8:	429a      	cmp	r2, r3
 8001bfa:	d101      	bne.n	8001c00 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001bfc:	f001 be20 	b.w	8003840 <HAL_IncTick>
}
 8001c00:	4770      	bx	lr
 8001c02:	bf00      	nop
 8001c04:	40012c00 	.word	0x40012c00

08001c08 <Error_Handler>:
 8001c08:	b672      	cpsid	i
  while (1)
 8001c0a:	e7fe      	b.n	8001c0a <Error_Handler+0x2>

08001c0c <LPFilterInit>:
void LPFilterInit(LPFilter *filter)
{
	/* Clear buffer */
	for (int8_t n = 0; n<FILTER_LENGTH; n++)
	{
		filter->buffer[n] = 0;
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	6003      	str	r3, [r0, #0]
 8001c10:	6043      	str	r3, [r0, #4]
 8001c12:	6083      	str	r3, [r0, #8]
 8001c14:	60c3      	str	r3, [r0, #12]

	/* Reset index */
	filter->bufferIndex = 0;

	/* Reset Output values */
	filter->FilteredValue = 0;
 8001c16:	6103      	str	r3, [r0, #16]
	filter->FilterOK = false;
 8001c18:	2300      	movs	r3, #0
 8001c1a:	8283      	strh	r3, [r0, #20]
}
 8001c1c:	4770      	bx	lr
	...

08001c20 <LPFilterUpdate>:

float LPFilterUpdate(LPFilter *filter, float InValue)
{
 8001c20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	/* Store last input value into the buffer */
	filter->buffer[filter->bufferIndex] = InValue;
 8001c24:	7d43      	ldrb	r3, [r0, #21]
		filter->bufferIndex = 0;
		filter->FilterOK = true;
	}

	/* Compute output */
	filter->FilteredValue = 0;
 8001c26:	2500      	movs	r5, #0
	filter->buffer[filter->bufferIndex] = InValue;
 8001c28:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
	filter->bufferIndex++;
 8001c2c:	3301      	adds	r3, #1
 8001c2e:	b2db      	uxtb	r3, r3
	if (filter->bufferIndex>=FILTER_LENGTH)
 8001c30:	2b03      	cmp	r3, #3
		filter->FilterOK = true;
 8001c32:	bf88      	it	hi
 8001c34:	2301      	movhi	r3, #1
{
 8001c36:	4604      	mov	r4, r0

	uint8_t ConvolvIndex = filter->bufferIndex;
 8001c38:	f04f 0704 	mov.w	r7, #4
	filter->bufferIndex++;
 8001c3c:	bf94      	ite	ls
 8001c3e:	7543      	strbls	r3, [r0, #21]
		filter->FilterOK = true;
 8001c40:	8283      	strhhi	r3, [r0, #20]
	uint8_t ConvolvIndex = filter->bufferIndex;
 8001c42:	7d46      	ldrb	r6, [r0, #21]
 8001c44:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8001c78 <LPFilterUpdate+0x58>
	filter->FilteredValue = 0;
 8001c48:	6105      	str	r5, [r0, #16]

	for (int8_t n = 0; n<FILTER_LENGTH; n++)
	{
		/* Shift the index (formula require [n-k] value ) */
		if (ConvolvIndex>0)
 8001c4a:	b19e      	cbz	r6, 8001c74 <LPFilterUpdate+0x54>
		{
			ConvolvIndex--;
 8001c4c:	3e01      	subs	r6, #1
 8001c4e:	b2f6      	uxtb	r6, r6
		else
		{
			ConvolvIndex = FILTER_LENGTH - 1;
		}
		/* Do the Convolution */
		filter->FilteredValue += LPFILTER_COEFFICIENTS[n] * filter->buffer[ConvolvIndex];
 8001c50:	f854 1026 	ldr.w	r1, [r4, r6, lsl #2]
 8001c54:	f858 0b04 	ldr.w	r0, [r8], #4
 8001c58:	f7ff f844 	bl	8000ce4 <__aeabi_fmul>
 8001c5c:	4601      	mov	r1, r0
 8001c5e:	4628      	mov	r0, r5
 8001c60:	f7fe ff38 	bl	8000ad4 <__addsf3>
 8001c64:	3f01      	subs	r7, #1
	for (int8_t n = 0; n<FILTER_LENGTH; n++)
 8001c66:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
		filter->FilteredValue += LPFILTER_COEFFICIENTS[n] * filter->buffer[ConvolvIndex];
 8001c6a:	4605      	mov	r5, r0
	for (int8_t n = 0; n<FILTER_LENGTH; n++)
 8001c6c:	d1ed      	bne.n	8001c4a <LPFilterUpdate+0x2a>
 8001c6e:	6120      	str	r0, [r4, #16]
	}

	/* Return the actual filtered value output */

	return filter->FilteredValue;
}
 8001c70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			ConvolvIndex = FILTER_LENGTH - 1;
 8001c74:	2603      	movs	r6, #3
 8001c76:	e7eb      	b.n	8001c50 <LPFilterUpdate+0x30>
 8001c78:	0800d3d8 	.word	0x0800d3d8

08001c7c <PIDInit>:
{
	/* Assign the value to the struct variable */
	PID->SampleTime = SampleTime;

	PID->MaxOutputVal = MaxOuputValue;
	PID->MinOutputVal = MinOutputVal;
 8001c7c:	6283      	str	r3, [r0, #40]	; 0x28

	PID->Kp = Kp;
 8001c7e:	9b00      	ldr	r3, [sp, #0]
	PID->SampleTime = SampleTime;
 8001c80:	6341      	str	r1, [r0, #52]	; 0x34
	PID->Kp = Kp;
 8001c82:	6083      	str	r3, [r0, #8]
	PID->Ki = Ki;
 8001c84:	9b01      	ldr	r3, [sp, #4]
	PID->MaxOutputVal = MaxOuputValue;
 8001c86:	6242      	str	r2, [r0, #36]	; 0x24
	PID->Ki = Ki;
 8001c88:	60c3      	str	r3, [r0, #12]
	PID->Kd = Kd;
 8001c8a:	9b02      	ldr	r3, [sp, #8]
 8001c8c:	6103      	str	r3, [r0, #16]

	PID->PID_I_Max = PID_I_Max;
 8001c8e:	9b03      	ldr	r3, [sp, #12]
 8001c90:	62c3      	str	r3, [r0, #44]	; 0x2c
	PID->PID_I_Min = PID_I_Min;
 8001c92:	9b04      	ldr	r3, [sp, #16]
 8001c94:	6303      	str	r3, [r0, #48]	; 0x30

	PID->PID_D_Tau = PID_D_Tau;
 8001c96:	9b05      	ldr	r3, [sp, #20]
 8001c98:	6143      	str	r3, [r0, #20]

	/* Reset the memory */
	PID->Setpoint = 0;
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	6003      	str	r3, [r0, #0]
	PID->OutputVal = 0;
 8001c9e:	6043      	str	r3, [r0, #4]
	PID->lastError = 0;
 8001ca0:	6383      	str	r3, [r0, #56]	; 0x38
	PID->lastInValue = 0;
 8001ca2:	63c3      	str	r3, [r0, #60]	; 0x3c
	PID->PID_Error = 0;
 8001ca4:	6403      	str	r3, [r0, #64]	; 0x40
}
 8001ca6:	4770      	bx	lr

08001ca8 <PIDNewSetpoint>:

void PIDNewSetpoint(PID *PID, float Setpoint)
{
	PID->Setpoint = Setpoint;
 8001ca8:	6001      	str	r1, [r0, #0]
}
 8001caa:	4770      	bx	lr

08001cac <PIDNewCoeff>:

void PIDNewCoeff(PID *PID, float Kp, float Ki, float Kd)
{
	PID->Kp = Kp;
	PID->Ki = Ki;
	PID->Kd = Kd;
 8001cac:	6103      	str	r3, [r0, #16]

	/* Reset the memory */
	PID->OutputVal = 0;
 8001cae:	2300      	movs	r3, #0
	PID->Kp = Kp;
 8001cb0:	6081      	str	r1, [r0, #8]
	PID->Ki = Ki;
 8001cb2:	60c2      	str	r2, [r0, #12]
	PID->OutputVal = 0;
 8001cb4:	6043      	str	r3, [r0, #4]
	PID->lastError = 0;
 8001cb6:	6383      	str	r3, [r0, #56]	; 0x38
	PID->lastInValue = 0;
 8001cb8:	63c3      	str	r3, [r0, #60]	; 0x3c
}
 8001cba:	4770      	bx	lr

08001cbc <PIDUpdate>:

uint32_t PIDUpdate(PID *PID, float ActValue)
{
 8001cbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001cc0:	4604      	mov	r4, r0
	/* Calculation of the actual error */
	PID->PID_Error = PID->Setpoint - ActValue;
 8001cc2:	6800      	ldr	r0, [r0, #0]
{
 8001cc4:	460e      	mov	r6, r1
	PID->PID_Error = PID->Setpoint - ActValue;
 8001cc6:	f7fe ff03 	bl	8000ad0 <__aeabi_fsub>

	/* Calculate the PROPORTIONAL part */
	PID->PID_P = PID->Kp * PID->PID_Error;
 8001cca:	68a1      	ldr	r1, [r4, #8]
	PID->PID_Error = PID->Setpoint - ActValue;
 8001ccc:	6420      	str	r0, [r4, #64]	; 0x40
 8001cce:	4605      	mov	r5, r0
	PID->PID_P = PID->Kp * PID->PID_Error;
 8001cd0:	f7ff f808 	bl	8000ce4 <__aeabi_fmul>

	/* Calculate the INTEGRATIVE part */
	PID->PID_I = PID->PID_I + (0.5f * PID->Ki * PID->SampleTime * (PID->PID_Error - PID->lastError));
 8001cd4:	f8d4 9034 	ldr.w	r9, [r4, #52]	; 0x34
 8001cd8:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
	PID->PID_P = PID->Kp * PID->PID_Error;
 8001cdc:	61a0      	str	r0, [r4, #24]
 8001cde:	4680      	mov	r8, r0
	PID->PID_I = PID->PID_I + (0.5f * PID->Ki * PID->SampleTime * (PID->PID_Error - PID->lastError));
 8001ce0:	68e0      	ldr	r0, [r4, #12]
 8001ce2:	f7fe ffff 	bl	8000ce4 <__aeabi_fmul>
 8001ce6:	4649      	mov	r1, r9
 8001ce8:	f7fe fffc 	bl	8000ce4 <__aeabi_fmul>
 8001cec:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8001cee:	4607      	mov	r7, r0
 8001cf0:	4628      	mov	r0, r5
 8001cf2:	f7fe feed 	bl	8000ad0 <__aeabi_fsub>
 8001cf6:	4601      	mov	r1, r0
 8001cf8:	4638      	mov	r0, r7
 8001cfa:	f7fe fff3 	bl	8000ce4 <__aeabi_fmul>
 8001cfe:	69e1      	ldr	r1, [r4, #28]
 8001d00:	f7fe fee8 	bl	8000ad4 <__addsf3>

	//Anti-wind-up via integrator clamping
	if (PID->PID_I>PID->PID_I_Max)
 8001d04:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
	PID->PID_I = PID->PID_I + (0.5f * PID->Ki * PID->SampleTime * (PID->PID_Error - PID->lastError));
 8001d08:	61e0      	str	r0, [r4, #28]
	if (PID->PID_I>PID->PID_I_Max)
 8001d0a:	4651      	mov	r1, sl
	PID->PID_I = PID->PID_I + (0.5f * PID->Ki * PID->SampleTime * (PID->PID_Error - PID->lastError));
 8001d0c:	4607      	mov	r7, r0
	if (PID->PID_I>PID->PID_I_Max)
 8001d0e:	f7ff f9a5 	bl	800105c <__aeabi_fcmpgt>
 8001d12:	b110      	cbz	r0, 8001d1a <PIDUpdate+0x5e>
	{
		PID->PID_I = PID->PID_I_Max;
	}
	else if (PID->PID_I<PID->PID_I_Min)
	{
		PID->PID_I = PID->PID_I_Min;
 8001d14:	f8c4 a01c 	str.w	sl, [r4, #28]
 8001d18:	e007      	b.n	8001d2a <PIDUpdate+0x6e>
	else if (PID->PID_I<PID->PID_I_Min)
 8001d1a:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
 8001d1e:	4638      	mov	r0, r7
 8001d20:	4651      	mov	r1, sl
 8001d22:	f7ff f97d 	bl	8001020 <__aeabi_fcmplt>
 8001d26:	2800      	cmp	r0, #0
 8001d28:	d1f4      	bne.n	8001d14 <PIDUpdate+0x58>
	}

	/* Calculate the DERIVATIVE part (band limited and measurement dependent) */
	PID->PID_D = -(2.0f * PID->Kd * (ActValue - PID->lastInValue)
				+ (2.0f * PID->PID_D_Tau - PID->SampleTime) * PID->PID_D)
 8001d2a:	6961      	ldr	r1, [r4, #20]
 8001d2c:	4608      	mov	r0, r1
 8001d2e:	f7fe fed1 	bl	8000ad4 <__addsf3>
	PID->PID_D = -(2.0f * PID->Kd * (ActValue - PID->lastInValue)
 8001d32:	6921      	ldr	r1, [r4, #16]
				+ (2.0f * PID->PID_D_Tau - PID->SampleTime) * PID->PID_D)
 8001d34:	4607      	mov	r7, r0
	PID->PID_D = -(2.0f * PID->Kd * (ActValue - PID->lastInValue)
 8001d36:	4608      	mov	r0, r1
 8001d38:	f7fe fecc 	bl	8000ad4 <__addsf3>
 8001d3c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8001d3e:	4682      	mov	sl, r0
 8001d40:	4630      	mov	r0, r6
 8001d42:	f7fe fec5 	bl	8000ad0 <__aeabi_fsub>
 8001d46:	4601      	mov	r1, r0
 8001d48:	4650      	mov	r0, sl
 8001d4a:	f7fe ffcb 	bl	8000ce4 <__aeabi_fmul>
				+ (2.0f * PID->PID_D_Tau - PID->SampleTime) * PID->PID_D)
 8001d4e:	4649      	mov	r1, r9
	PID->PID_D = -(2.0f * PID->Kd * (ActValue - PID->lastInValue)
 8001d50:	4682      	mov	sl, r0
				+ (2.0f * PID->PID_D_Tau - PID->SampleTime) * PID->PID_D)
 8001d52:	4638      	mov	r0, r7
 8001d54:	f7fe febc 	bl	8000ad0 <__aeabi_fsub>
 8001d58:	6a21      	ldr	r1, [r4, #32]
 8001d5a:	f7fe ffc3 	bl	8000ce4 <__aeabi_fmul>
 8001d5e:	4601      	mov	r1, r0
 8001d60:	4650      	mov	r0, sl
 8001d62:	f7fe feb7 	bl	8000ad4 <__addsf3>
				/ (2.0f * PID->PID_D_Tau + PID->SampleTime);
 8001d66:	4639      	mov	r1, r7
	PID->PID_D = -(2.0f * PID->Kd * (ActValue - PID->lastInValue)
 8001d68:	f100 4a00 	add.w	sl, r0, #2147483648	; 0x80000000
				/ (2.0f * PID->PID_D_Tau + PID->SampleTime);
 8001d6c:	4648      	mov	r0, r9
 8001d6e:	f7fe feb1 	bl	8000ad4 <__addsf3>
 8001d72:	4601      	mov	r1, r0
 8001d74:	4650      	mov	r0, sl
 8001d76:	f7ff f869 	bl	8000e4c <__aeabi_fdiv>
 8001d7a:	4607      	mov	r7, r0

	/* Calculate the total PID value and check the upper/lower output limits*/
	PID->OutputVal = PID->PID_P + PID->PID_I + PID->PID_D;
 8001d7c:	69e1      	ldr	r1, [r4, #28]
	PID->PID_D = -(2.0f * PID->Kd * (ActValue - PID->lastInValue)
 8001d7e:	6220      	str	r0, [r4, #32]
	PID->OutputVal = PID->PID_P + PID->PID_I + PID->PID_D;
 8001d80:	4640      	mov	r0, r8
 8001d82:	f7fe fea7 	bl	8000ad4 <__addsf3>
 8001d86:	4639      	mov	r1, r7
 8001d88:	f7fe fea4 	bl	8000ad4 <__addsf3>

	if (PID->OutputVal>PID->MaxOutputVal)
 8001d8c:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
	PID->OutputVal = PID->PID_P + PID->PID_I + PID->PID_D;
 8001d90:	6060      	str	r0, [r4, #4]
	if (PID->OutputVal>PID->MaxOutputVal)
 8001d92:	4641      	mov	r1, r8
	PID->OutputVal = PID->PID_P + PID->PID_I + PID->PID_D;
 8001d94:	4607      	mov	r7, r0
	if (PID->OutputVal>PID->MaxOutputVal)
 8001d96:	f7ff f961 	bl	800105c <__aeabi_fcmpgt>
 8001d9a:	b110      	cbz	r0, 8001da2 <PIDUpdate+0xe6>
	{
		PID->OutputVal = PID->MaxOutputVal;
	}
	else if (PID->OutputVal<PID->MinOutputVal)
	{
		PID->OutputVal = PID->MinOutputVal;
 8001d9c:	f8c4 8004 	str.w	r8, [r4, #4]
 8001da0:	e007      	b.n	8001db2 <PIDUpdate+0xf6>
	else if (PID->OutputVal<PID->MinOutputVal)
 8001da2:	f8d4 8028 	ldr.w	r8, [r4, #40]	; 0x28
 8001da6:	4638      	mov	r0, r7
 8001da8:	4641      	mov	r1, r8
 8001daa:	f7ff f939 	bl	8001020 <__aeabi_fcmplt>
 8001dae:	2800      	cmp	r0, #0
 8001db0:	d1f4      	bne.n	8001d9c <PIDUpdate+0xe0>
	/* Update the last values*/
	PID->lastError = PID->PID_Error;
	PID->lastInValue = ActValue;

	/* Return the actual PID output value */
	return (uint32_t)PID->OutputVal;
 8001db2:	6860      	ldr	r0, [r4, #4]
	PID->lastError = PID->PID_Error;
 8001db4:	63a5      	str	r5, [r4, #56]	; 0x38
	PID->lastInValue = ActValue;
 8001db6:	63e6      	str	r6, [r4, #60]	; 0x3c
	return (uint32_t)PID->OutputVal;
 8001db8:	f7ff f980 	bl	80010bc <__aeabi_f2uiz>
}
 8001dbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001dc0 <PID_AutoTuneInit>:

void PID_AutoTuneInit(PID_AutoTune *PID_AutoTuneStruct, double Setpoint, double NyquistSensorResolution,
						float SampleTime/*Second*/, int16_t TunningDeep, double OutputStartVal, double OutputStepVal)
{
 8001dc0:	b510      	push	{r4, lr}
	PID_AutoTuneStruct->setpoint = Setpoint;
	PID_AutoTuneStruct->noiseBand = NyquistSensorResolution;
	PID_AutoTuneStruct->sampleTime = SampleTime * 1000;
 8001dc2:	490d      	ldr	r1, [pc, #52]	; (8001df8 <PID_AutoTuneInit+0x38>)
{
 8001dc4:	4604      	mov	r4, r0
	PID_AutoTuneStruct->setpoint = Setpoint;
 8001dc6:	e9c0 2306 	strd	r2, r3, [r0, #24]
	PID_AutoTuneStruct->noiseBand = NyquistSensorResolution;
 8001dca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001dce:	e9c0 2308 	strd	r2, r3, [r0, #32]
	PID_AutoTuneStruct->sampleTime = SampleTime * 1000;
 8001dd2:	9804      	ldr	r0, [sp, #16]
 8001dd4:	f7fe ff86 	bl	8000ce4 <__aeabi_fmul>
 8001dd8:	f7ff f94a 	bl	8001070 <__aeabi_f2iz>
	PID_AutoTuneStruct->nLookBack = TunningDeep * 4;
 8001ddc:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
	PID_AutoTuneStruct->sampleTime = SampleTime * 1000;
 8001de0:	8720      	strh	r0, [r4, #56]	; 0x38
	PID_AutoTuneStruct->nLookBack = TunningDeep * 4;
 8001de2:	009b      	lsls	r3, r3, #2
 8001de4:	8763      	strh	r3, [r4, #58]	; 0x3a
	PID_AutoTuneStruct->outputStart = OutputStartVal;
 8001de6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8001dea:	e9c4 23f6 	strd	r2, r3, [r4, #984]	; 0x3d8
	PID_AutoTuneStruct->oStep = OutputStepVal;
 8001dee:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001df2:	e9c4 23f4 	strd	r2, r3, [r4, #976]	; 0x3d0
}
 8001df6:	bd10      	pop	{r4, pc}
 8001df8:	447a0000 	.word	0x447a0000
 8001dfc:	00000000 	.word	0x00000000

08001e00 <PID_AutoTuneCompute>:
	  PID_AutoTuneStruct->justchanged = false;
	  return 0;
}

void PID_AutoTuneCompute(PID_AutoTune *PID_AutoTuneStruct)
{
 8001e00:	b5d0      	push	{r4, r6, r7, lr}
	PID_AutoTuneStruct->Ku = 4 * (2 * PID_AutoTuneStruct->oStep)/((PID_AutoTuneStruct->absMax - PID_AutoTuneStruct->absMin)*3.14159);
 8001e02:	e9d0 23f4 	ldrd	r2, r3, [r0, #976]	; 0x3d0
{
 8001e06:	4604      	mov	r4, r0
	PID_AutoTuneStruct->Ku = 4 * (2 * PID_AutoTuneStruct->oStep)/((PID_AutoTuneStruct->absMax - PID_AutoTuneStruct->absMin)*3.14159);
 8001e08:	4619      	mov	r1, r3
 8001e0a:	4610      	mov	r0, r2
 8001e0c:	f7fe f9ae 	bl	800016c <__adddf3>
 8001e10:	2200      	movs	r2, #0
 8001e12:	4b15      	ldr	r3, [pc, #84]	; (8001e68 <PID_AutoTuneCompute+0x68>)
 8001e14:	f7fe fb60 	bl	80004d8 <__aeabi_dmul>
 8001e18:	e9d4 23f2 	ldrd	r2, r3, [r4, #968]	; 0x3c8
 8001e1c:	4606      	mov	r6, r0
 8001e1e:	460f      	mov	r7, r1
 8001e20:	e9d4 01f0 	ldrd	r0, r1, [r4, #960]	; 0x3c0
 8001e24:	f7fe f9a0 	bl	8000168 <__aeabi_dsub>
 8001e28:	a30d      	add	r3, pc, #52	; (adr r3, 8001e60 <PID_AutoTuneCompute+0x60>)
 8001e2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e2e:	f7fe fb53 	bl	80004d8 <__aeabi_dmul>
 8001e32:	4602      	mov	r2, r0
 8001e34:	460b      	mov	r3, r1
 8001e36:	4630      	mov	r0, r6
 8001e38:	4639      	mov	r1, r7
 8001e3a:	f7fe fc77 	bl	800072c <__aeabi_ddiv>
 8001e3e:	e9c4 01f8 	strd	r0, r1, [r4, #992]	; 0x3e0
	PID_AutoTuneStruct->Pu = (double)(PID_AutoTuneStruct->peak1 - PID_AutoTuneStruct->peak2) / 1000;
 8001e42:	e9d4 030b 	ldrd	r0, r3, [r4, #44]	; 0x2c
 8001e46:	1ac0      	subs	r0, r0, r3
 8001e48:	f7fe facc 	bl	80003e4 <__aeabi_ui2d>
 8001e4c:	2200      	movs	r2, #0
 8001e4e:	4b07      	ldr	r3, [pc, #28]	; (8001e6c <PID_AutoTuneCompute+0x6c>)
 8001e50:	f7fe fc6c 	bl	800072c <__aeabi_ddiv>
 8001e54:	e9c4 01fa 	strd	r0, r1, [r4, #1000]	; 0x3e8
}
 8001e58:	bdd0      	pop	{r4, r6, r7, pc}
 8001e5a:	bf00      	nop
 8001e5c:	f3af 8000 	nop.w
 8001e60:	f01b866e 	.word	0xf01b866e
 8001e64:	400921f9 	.word	0x400921f9
 8001e68:	40100000 	.word	0x40100000
 8001e6c:	408f4000 	.word	0x408f4000

08001e70 <PID_AutoTuneUpdate>:
	PID_AutoTuneStruct->justevaled = false;
 8001e70:	2300      	movs	r3, #0
{
 8001e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e76:	4615      	mov	r5, r2
	if(PID_AutoTuneStruct->peakCount>9 && PID_AutoTuneStruct->running)
 8001e78:	f9b0 23b8 	ldrsh.w	r2, [r0, #952]	; 0x3b8
{
 8001e7c:	4604      	mov	r4, r0
	if(PID_AutoTuneStruct->peakCount>9 && PID_AutoTuneStruct->running)
 8001e7e:	2a09      	cmp	r2, #9
{
 8001e80:	460e      	mov	r6, r1
 8001e82:	b085      	sub	sp, #20
	PID_AutoTuneStruct->justevaled = false;
 8001e84:	f880 33bb 	strb.w	r3, [r0, #955]	; 0x3bb
	if(PID_AutoTuneStruct->peakCount>9 && PID_AutoTuneStruct->running)
 8001e88:	dd10      	ble.n	8001eac <PID_AutoTuneUpdate+0x3c>
 8001e8a:	f890 202a 	ldrb.w	r2, [r0, #42]	; 0x2a
 8001e8e:	b16a      	cbz	r2, 8001eac <PID_AutoTuneUpdate+0x3c>
		PID_AutoTuneStruct->running = false;
 8001e90:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
		*Output = PID_AutoTuneStruct->outputStart;
 8001e94:	f500 7176 	add.w	r1, r0, #984	; 0x3d8
 8001e98:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001e9c:	f7fe fdf4 	bl	8000a88 <__aeabi_d2uiz>
 8001ea0:	6028      	str	r0, [r5, #0]
		PID_AutoTuneCompute(PID_AutoTuneStruct);
 8001ea2:	4620      	mov	r0, r4
 8001ea4:	f7ff ffac 	bl	8001e00 <PID_AutoTuneCompute>
			return 1;
 8001ea8:	2001      	movs	r0, #1
 8001eaa:	e009      	b.n	8001ec0 <PID_AutoTuneUpdate+0x50>
	uint32_t now = xTaskGetTickCount();
 8001eac:	f007 f9b6 	bl	800921c <xTaskGetTickCount>
	if((now - PID_AutoTuneStruct->lastTime) < PID_AutoTuneStruct->sampleTime)
 8001eb0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001eb2:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8001eb6:	1ac3      	subs	r3, r0, r3
 8001eb8:	4293      	cmp	r3, r2
	uint32_t now = xTaskGetTickCount();
 8001eba:	9001      	str	r0, [sp, #4]
	if((now - PID_AutoTuneStruct->lastTime) < PID_AutoTuneStruct->sampleTime)
 8001ebc:	d203      	bcs.n	8001ec6 <PID_AutoTuneUpdate+0x56>
		return false;
 8001ebe:	2000      	movs	r0, #0
}
 8001ec0:	b005      	add	sp, #20
 8001ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	PID_AutoTuneStruct->lastTime = now;
 8001ec6:	9b01      	ldr	r3, [sp, #4]
	double refVal = *Input;
 8001ec8:	6830      	ldr	r0, [r6, #0]
	PID_AutoTuneStruct->lastTime = now;
 8001eca:	6363      	str	r3, [r4, #52]	; 0x34
	double refVal = *Input;
 8001ecc:	f7fe faac 	bl	8000428 <__aeabi_f2d>
	PID_AutoTuneStruct->justevaled = true;
 8001ed0:	2201      	movs	r2, #1
	if(!PID_AutoTuneStruct->running)
 8001ed2:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
	double refVal = *Input;
 8001ed6:	4606      	mov	r6, r0
 8001ed8:	460f      	mov	r7, r1
	PID_AutoTuneStruct->justevaled = true;
 8001eda:	f884 23bb 	strb.w	r2, [r4, #955]	; 0x3bb
	if(!PID_AutoTuneStruct->running)
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	d158      	bne.n	8001f94 <PID_AutoTuneUpdate+0x124>
		PID_AutoTuneStruct->outputStart = *Output;
 8001ee2:	6828      	ldr	r0, [r5, #0]
		PID_AutoTuneStruct->peakType = 0;
 8001ee4:	87a3      	strh	r3, [r4, #60]	; 0x3c
		PID_AutoTuneStruct->peakCount = 0;
 8001ee6:	f8a4 33b8 	strh.w	r3, [r4, #952]	; 0x3b8
		PID_AutoTuneStruct->justchanged = false;
 8001eea:	f884 33ba 	strb.w	r3, [r4, #954]	; 0x3ba
		PID_AutoTuneStruct->running = true;
 8001eee:	f884 202a 	strb.w	r2, [r4, #42]	; 0x2a
		PID_AutoTuneStruct->absMax = refVal;
 8001ef2:	e9c4 67f0 	strd	r6, r7, [r4, #960]	; 0x3c0
		PID_AutoTuneStruct->absMin = refVal;
 8001ef6:	e9c4 67f2 	strd	r6, r7, [r4, #968]	; 0x3c8
		PID_AutoTuneStruct->setpoint = refVal;
 8001efa:	e9c4 6706 	strd	r6, r7, [r4, #24]
		PID_AutoTuneStruct->outputStart = *Output;
 8001efe:	f7fe fa71 	bl	80003e4 <__aeabi_ui2d>
 8001f02:	4602      	mov	r2, r0
 8001f04:	460b      	mov	r3, r1
 8001f06:	e9c4 23f6 	strd	r2, r3, [r4, #984]	; 0x3d8
		*Output = PID_AutoTuneStruct->outputStart + PID_AutoTuneStruct->oStep;
 8001f0a:	e9d4 23f4 	ldrd	r2, r3, [r4, #976]	; 0x3d0
 8001f0e:	f7fe f92d 	bl	800016c <__adddf3>
 8001f12:	f7fe fdb9 	bl	8000a88 <__aeabi_d2uiz>
 8001f16:	6028      	str	r0, [r5, #0]
	if(refVal>PID_AutoTuneStruct->setpoint + PID_AutoTuneStruct->noiseBand)
 8001f18:	e9d4 8906 	ldrd	r8, r9, [r4, #24]
 8001f1c:	e9d4 ab08 	ldrd	sl, fp, [r4, #32]
 8001f20:	4640      	mov	r0, r8
 8001f22:	4652      	mov	r2, sl
 8001f24:	465b      	mov	r3, fp
 8001f26:	4649      	mov	r1, r9
 8001f28:	f7fe f920 	bl	800016c <__adddf3>
 8001f2c:	4632      	mov	r2, r6
 8001f2e:	463b      	mov	r3, r7
 8001f30:	f7fe fd44 	bl	80009bc <__aeabi_dcmplt>
 8001f34:	2800      	cmp	r0, #0
 8001f36:	d041      	beq.n	8001fbc <PID_AutoTuneUpdate+0x14c>
		*Output = PID_AutoTuneStruct->outputStart - PID_AutoTuneStruct->oStep;
 8001f38:	e9d4 23f4 	ldrd	r2, r3, [r4, #976]	; 0x3d0
 8001f3c:	e9d4 01f6 	ldrd	r0, r1, [r4, #984]	; 0x3d8
 8001f40:	f7fe f912 	bl	8000168 <__aeabi_dsub>
		*Output = PID_AutoTuneStruct->outputStart + PID_AutoTuneStruct->oStep;
 8001f44:	f7fe fda0 	bl	8000a88 <__aeabi_d2uiz>
 8001f48:	6028      	str	r0, [r5, #0]
	PID_AutoTuneStruct->isMax = true;
 8001f4a:	f240 1301 	movw	r3, #257	; 0x101
	for(int i=PID_AutoTuneStruct->nLookBack-1; i>=0 ;i--)
 8001f4e:	f9b4 a03a 	ldrsh.w	sl, [r4, #58]	; 0x3a
	PID_AutoTuneStruct->isMax = true;
 8001f52:	82a3      	strh	r3, [r4, #20]
	for(int i=PID_AutoTuneStruct->nLookBack-1; i>=0 ;i--)
 8001f54:	f10a 0908 	add.w	r9, sl, #8
 8001f58:	f10a 3bff 	add.w	fp, sl, #4294967295
 8001f5c:	eb04 09c9 	add.w	r9, r4, r9, lsl #3
 8001f60:	f1bb 0f00 	cmp.w	fp, #0
 8001f64:	da3d      	bge.n	8001fe2 <PID_AutoTuneUpdate+0x172>
	if (PID_AutoTuneStruct->nLookBack<9)
 8001f66:	f1ba 0f08 	cmp.w	sl, #8
	PID_AutoTuneStruct->lastInputs[0] = refVal;
 8001f6a:	e9c4 6710 	strd	r6, r7, [r4, #64]	; 0x40
	if (PID_AutoTuneStruct->nLookBack<9)
 8001f6e:	dda6      	ble.n	8001ebe <PID_AutoTuneUpdate+0x4e>
	if(PID_AutoTuneStruct->isMax)
 8001f70:	7d23      	ldrb	r3, [r4, #20]
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d061      	beq.n	800203a <PID_AutoTuneUpdate+0x1ca>
		if(PID_AutoTuneStruct->peakType==0)
 8001f76:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 8001f7a:	2b00      	cmp	r3, #0
 8001f7c:	d154      	bne.n	8002028 <PID_AutoTuneUpdate+0x1b8>
			PID_AutoTuneStruct->peakType = 1;
 8001f7e:	2301      	movs	r3, #1
 8001f80:	87a3      	strh	r3, [r4, #60]	; 0x3c
	    PID_AutoTuneStruct->peak1 = now;
 8001f82:	9b01      	ldr	r3, [sp, #4]
 8001f84:	62e3      	str	r3, [r4, #44]	; 0x2c
	    PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount] = refVal;
 8001f86:	f9b4 33b8 	ldrsh.w	r3, [r4, #952]	; 0x3b8
	    	PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount] = refVal;
 8001f8a:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8001f8e:	e9c3 67da 	strd	r6, r7, [r3, #872]	; 0x368
 8001f92:	e05f      	b.n	8002054 <PID_AutoTuneUpdate+0x1e4>
		if(refVal>PID_AutoTuneStruct->absMax)
 8001f94:	4602      	mov	r2, r0
 8001f96:	460b      	mov	r3, r1
 8001f98:	e9d4 01f0 	ldrd	r0, r1, [r4, #960]	; 0x3c0
 8001f9c:	f7fe fd0e 	bl	80009bc <__aeabi_dcmplt>
 8001fa0:	b108      	cbz	r0, 8001fa6 <PID_AutoTuneUpdate+0x136>
			PID_AutoTuneStruct->absMax = refVal;
 8001fa2:	e9c4 67f0 	strd	r6, r7, [r4, #960]	; 0x3c0
		if(refVal<PID_AutoTuneStruct->absMin)
 8001fa6:	e9d4 01f2 	ldrd	r0, r1, [r4, #968]	; 0x3c8
 8001faa:	4632      	mov	r2, r6
 8001fac:	463b      	mov	r3, r7
 8001fae:	f7fe fd23 	bl	80009f8 <__aeabi_dcmpgt>
 8001fb2:	2800      	cmp	r0, #0
 8001fb4:	d0b0      	beq.n	8001f18 <PID_AutoTuneUpdate+0xa8>
			PID_AutoTuneStruct->absMin = refVal;
 8001fb6:	e9c4 67f2 	strd	r6, r7, [r4, #968]	; 0x3c8
 8001fba:	e7ad      	b.n	8001f18 <PID_AutoTuneUpdate+0xa8>
	else if (refVal<PID_AutoTuneStruct->setpoint - PID_AutoTuneStruct->noiseBand)
 8001fbc:	4652      	mov	r2, sl
 8001fbe:	465b      	mov	r3, fp
 8001fc0:	4640      	mov	r0, r8
 8001fc2:	4649      	mov	r1, r9
 8001fc4:	f7fe f8d0 	bl	8000168 <__aeabi_dsub>
 8001fc8:	4632      	mov	r2, r6
 8001fca:	463b      	mov	r3, r7
 8001fcc:	f7fe fd14 	bl	80009f8 <__aeabi_dcmpgt>
 8001fd0:	2800      	cmp	r0, #0
 8001fd2:	d0ba      	beq.n	8001f4a <PID_AutoTuneUpdate+0xda>
		*Output = PID_AutoTuneStruct->outputStart + PID_AutoTuneStruct->oStep;
 8001fd4:	e9d4 23f4 	ldrd	r2, r3, [r4, #976]	; 0x3d0
 8001fd8:	e9d4 01f6 	ldrd	r0, r1, [r4, #984]	; 0x3d8
 8001fdc:	f7fe f8c6 	bl	800016c <__adddf3>
 8001fe0:	e7b0      	b.n	8001f44 <PID_AutoTuneUpdate+0xd4>
		double val = PID_AutoTuneStruct->lastInputs[i];
 8001fe2:	e959 2302 	ldrd	r2, r3, [r9, #-8]
 8001fe6:	e9cd 2302 	strd	r2, r3, [sp, #8]
		if(PID_AutoTuneStruct->isMax)
 8001fea:	7d23      	ldrb	r3, [r4, #20]
 8001fec:	b14b      	cbz	r3, 8002002 <PID_AutoTuneUpdate+0x192>
			PID_AutoTuneStruct->isMax = refVal>val;
 8001fee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001ff2:	4630      	mov	r0, r6
 8001ff4:	4639      	mov	r1, r7
 8001ff6:	f7fe fcff 	bl	80009f8 <__aeabi_dcmpgt>
 8001ffa:	3800      	subs	r0, #0
 8001ffc:	bf18      	it	ne
 8001ffe:	2001      	movne	r0, #1
 8002000:	7520      	strb	r0, [r4, #20]
		if(PID_AutoTuneStruct->isMin)
 8002002:	7d63      	ldrb	r3, [r4, #21]
 8002004:	b14b      	cbz	r3, 800201a <PID_AutoTuneUpdate+0x1aa>
			PID_AutoTuneStruct->isMin = refVal<val;
 8002006:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800200a:	4630      	mov	r0, r6
 800200c:	4639      	mov	r1, r7
 800200e:	f7fe fcd5 	bl	80009bc <__aeabi_dcmplt>
 8002012:	3800      	subs	r0, #0
 8002014:	bf18      	it	ne
 8002016:	2001      	movne	r0, #1
 8002018:	7560      	strb	r0, [r4, #21]
		PID_AutoTuneStruct->lastInputs[i+1] = PID_AutoTuneStruct->lastInputs[i];
 800201a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
	for(int i=PID_AutoTuneStruct->nLookBack-1; i>=0 ;i--)
 800201e:	f10b 3bff 	add.w	fp, fp, #4294967295
		PID_AutoTuneStruct->lastInputs[i+1] = PID_AutoTuneStruct->lastInputs[i];
 8002022:	e869 2302 	strd	r2, r3, [r9], #-8
	for(int i=PID_AutoTuneStruct->nLookBack-1; i>=0 ;i--)
 8002026:	e79b      	b.n	8001f60 <PID_AutoTuneUpdate+0xf0>
	    if(PID_AutoTuneStruct->peakType==-1)
 8002028:	3301      	adds	r3, #1
 800202a:	d1aa      	bne.n	8001f82 <PID_AutoTuneUpdate+0x112>
	    	PID_AutoTuneStruct->peakType = 1;
 800202c:	2301      	movs	r3, #1
 800202e:	87a3      	strh	r3, [r4, #60]	; 0x3c
	    	PID_AutoTuneStruct->justchanged = true;
 8002030:	f884 33ba 	strb.w	r3, [r4, #954]	; 0x3ba
	    	PID_AutoTuneStruct->peak2 = PID_AutoTuneStruct->peak1;
 8002034:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002036:	6323      	str	r3, [r4, #48]	; 0x30
 8002038:	e7a3      	b.n	8001f82 <PID_AutoTuneUpdate+0x112>
	  else if(PID_AutoTuneStruct->isMin)
 800203a:	7d63      	ldrb	r3, [r4, #21]
 800203c:	b153      	cbz	r3, 8002054 <PID_AutoTuneUpdate+0x1e4>
	    if(PID_AutoTuneStruct->peakType==0)
 800203e:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 8002042:	2b00      	cmp	r3, #0
 8002044:	d14c      	bne.n	80020e0 <PID_AutoTuneUpdate+0x270>
	    	PID_AutoTuneStruct->peakType = -1;
 8002046:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800204a:	87a3      	strh	r3, [r4, #60]	; 0x3c
	    if(PID_AutoTuneStruct->peakCount<10)
 800204c:	f9b4 33b8 	ldrsh.w	r3, [r4, #952]	; 0x3b8
 8002050:	2b09      	cmp	r3, #9
 8002052:	dd9a      	ble.n	8001f8a <PID_AutoTuneUpdate+0x11a>
	  if(PID_AutoTuneStruct->justchanged && PID_AutoTuneStruct->peakCount>2)
 8002054:	f894 33ba 	ldrb.w	r3, [r4, #954]	; 0x3ba
 8002058:	2b00      	cmp	r3, #0
 800205a:	d04e      	beq.n	80020fa <PID_AutoTuneUpdate+0x28a>
 800205c:	f9b4 93b8 	ldrsh.w	r9, [r4, #952]	; 0x3b8
 8002060:	f1b9 0f02 	cmp.w	r9, #2
 8002064:	dd49      	ble.n	80020fa <PID_AutoTuneUpdate+0x28a>
	    double avgSeparation = (abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-1] -
 8002066:	eb04 09c9 	add.w	r9, r4, r9, lsl #3
	    		PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-2]) +
 800206a:	e9d9 67d6 	ldrd	r6, r7, [r9, #856]	; 0x358
	    double avgSeparation = (abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-1] -
 800206e:	e9d9 01d8 	ldrd	r0, r1, [r9, #864]	; 0x360
 8002072:	4632      	mov	r2, r6
 8002074:	463b      	mov	r3, r7
 8002076:	f7fe f877 	bl	8000168 <__aeabi_dsub>
 800207a:	f008 f9af 	bl	800a3dc <abs>
	    		abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-2] -
 800207e:	e9d9 23d4 	ldrd	r2, r3, [r9, #848]	; 0x350
	    double avgSeparation = (abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-1] -
 8002082:	4680      	mov	r8, r0
	    		abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-2] -
 8002084:	4639      	mov	r1, r7
 8002086:	4630      	mov	r0, r6
 8002088:	f7fe f86e 	bl	8000168 <__aeabi_dsub>
 800208c:	f008 f9a6 	bl	800a3dc <abs>
	    if (avgSeparation < 0.05*(PID_AutoTuneStruct->absMax - PID_AutoTuneStruct->absMin))
 8002090:	e9d4 23f2 	ldrd	r2, r3, [r4, #968]	; 0x3c8
	    		abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-2] -
 8002094:	4681      	mov	r9, r0
	    if (avgSeparation < 0.05*(PID_AutoTuneStruct->absMax - PID_AutoTuneStruct->absMin))
 8002096:	e9d4 01f0 	ldrd	r0, r1, [r4, #960]	; 0x3c0
 800209a:	f7fe f865 	bl	8000168 <__aeabi_dsub>
 800209e:	a31a      	add	r3, pc, #104	; (adr r3, 8002108 <PID_AutoTuneUpdate+0x298>)
 80020a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020a4:	f7fe fa18 	bl	80004d8 <__aeabi_dmul>
	    		PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-2]) +
 80020a8:	eb08 0309 	add.w	r3, r8, r9
	    				PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-3]))/2;
 80020ac:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
	    if (avgSeparation < 0.05*(PID_AutoTuneStruct->absMax - PID_AutoTuneStruct->absMin))
 80020b0:	4606      	mov	r6, r0
	    double avgSeparation = (abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-1] -
 80020b2:	1058      	asrs	r0, r3, #1
	    if (avgSeparation < 0.05*(PID_AutoTuneStruct->absMax - PID_AutoTuneStruct->absMin))
 80020b4:	460f      	mov	r7, r1
	    double avgSeparation = (abs(PID_AutoTuneStruct->peaks[PID_AutoTuneStruct->peakCount-1] -
 80020b6:	f7fe f9a5 	bl	8000404 <__aeabi_i2d>
 80020ba:	4602      	mov	r2, r0
 80020bc:	460b      	mov	r3, r1
	    if (avgSeparation < 0.05*(PID_AutoTuneStruct->absMax - PID_AutoTuneStruct->absMin))
 80020be:	4630      	mov	r0, r6
 80020c0:	4639      	mov	r1, r7
 80020c2:	f7fe fc99 	bl	80009f8 <__aeabi_dcmpgt>
 80020c6:	b1c0      	cbz	r0, 80020fa <PID_AutoTuneUpdate+0x28a>
	    	*Output = PID_AutoTuneStruct->outputStart;
 80020c8:	e9d4 01f6 	ldrd	r0, r1, [r4, #984]	; 0x3d8
 80020cc:	f7fe fcdc 	bl	8000a88 <__aeabi_d2uiz>
 80020d0:	6028      	str	r0, [r5, #0]
	    	PID_AutoTuneCompute(PID_AutoTuneStruct);
 80020d2:	4620      	mov	r0, r4
 80020d4:	f7ff fe94 	bl	8001e00 <PID_AutoTuneCompute>
			PID_AutoTuneStruct->running = false;
 80020d8:	2300      	movs	r3, #0
 80020da:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 80020de:	e6e3      	b.n	8001ea8 <PID_AutoTuneUpdate+0x38>
	    if(PID_AutoTuneStruct->peakType==1)
 80020e0:	2b01      	cmp	r3, #1
 80020e2:	d1b3      	bne.n	800204c <PID_AutoTuneUpdate+0x1dc>
	    	PID_AutoTuneStruct->peakType = -1;
 80020e4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80020e8:	f9b4 23b8 	ldrsh.w	r2, [r4, #952]	; 0x3b8
 80020ec:	87a1      	strh	r1, [r4, #60]	; 0x3c
	    	PID_AutoTuneStruct->peakCount++;
 80020ee:	3201      	adds	r2, #1
 80020f0:	f8a4 23b8 	strh.w	r2, [r4, #952]	; 0x3b8
	    	PID_AutoTuneStruct->justchanged = true;
 80020f4:	f884 33ba 	strb.w	r3, [r4, #954]	; 0x3ba
 80020f8:	e7a8      	b.n	800204c <PID_AutoTuneUpdate+0x1dc>
	  PID_AutoTuneStruct->justchanged = false;
 80020fa:	2000      	movs	r0, #0
 80020fc:	f884 03ba 	strb.w	r0, [r4, #954]	; 0x3ba
	  return 0;
 8002100:	e6de      	b.n	8001ec0 <PID_AutoTuneUpdate+0x50>
 8002102:	bf00      	nop
 8002104:	f3af 8000 	nop.w
 8002108:	9999999a 	.word	0x9999999a
 800210c:	3fa99999 	.word	0x3fa99999

08002110 <PID_AutoTuneGetCoeff>:

void PID_AutoTuneGetCoeff(PID_AutoTune *PID_AutoTuneStruct, PID *PID)
{
 8002110:	460b      	mov	r3, r1
 8002112:	e92d 43d0 	stmdb	sp!, {r4, r6, r7, r8, r9, lr}
 8002116:	e9d0 67f8 	ldrd	r6, r7, [r0, #992]	; 0x3e0
 800211a:	e9d0 89fa 	ldrd	r8, r9, [r0, #1000]	; 0x3e8
 800211e:	4604      	mov	r4, r0
	if (PID->Kd != 0)
 8002120:	2100      	movs	r1, #0
 8002122:	6918      	ldr	r0, [r3, #16]
 8002124:	f7fe ff72 	bl	800100c <__aeabi_fcmpeq>
 8002128:	bb38      	cbnz	r0, 800217a <PID_AutoTuneGetCoeff+0x6a>
	{
		PID_AutoTuneStruct->Kp_Tuned = 0.6 * PID_AutoTuneStruct->Ku;
 800212a:	a321      	add	r3, pc, #132	; (adr r3, 80021b0 <PID_AutoTuneGetCoeff+0xa0>)
 800212c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002130:	4630      	mov	r0, r6
 8002132:	4639      	mov	r1, r7
 8002134:	f7fe f9d0 	bl	80004d8 <__aeabi_dmul>
 8002138:	f7fe fca6 	bl	8000a88 <__aeabi_d2uiz>
		PID_AutoTuneStruct->Ki_Tuned = 1.2 * PID_AutoTuneStruct->Ku / PID_AutoTuneStruct->Pu;
 800213c:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 8002140:	4b21      	ldr	r3, [pc, #132]	; (80021c8 <PID_AutoTuneGetCoeff+0xb8>)
		PID_AutoTuneStruct->Kp_Tuned = 0.6 * PID_AutoTuneStruct->Ku;
 8002142:	6020      	str	r0, [r4, #0]
		PID_AutoTuneStruct->Ki_Tuned = 1.2 * PID_AutoTuneStruct->Ku / PID_AutoTuneStruct->Pu;
 8002144:	4639      	mov	r1, r7
 8002146:	4630      	mov	r0, r6
 8002148:	f7fe f9c6 	bl	80004d8 <__aeabi_dmul>
 800214c:	4642      	mov	r2, r8
 800214e:	464b      	mov	r3, r9
 8002150:	f7fe faec 	bl	800072c <__aeabi_ddiv>
 8002154:	f7fe fc98 	bl	8000a88 <__aeabi_d2uiz>
		PID_AutoTuneStruct->Kd_Tuned = 0.075 * PID_AutoTuneStruct->Ku * PID_AutoTuneStruct->Pu;
 8002158:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 800215c:	4b1b      	ldr	r3, [pc, #108]	; (80021cc <PID_AutoTuneGetCoeff+0xbc>)
		PID_AutoTuneStruct->Ki_Tuned = 1.2 * PID_AutoTuneStruct->Ku / PID_AutoTuneStruct->Pu;
 800215e:	6060      	str	r0, [r4, #4]
		PID_AutoTuneStruct->Kd_Tuned = 0.075 * PID_AutoTuneStruct->Ku * PID_AutoTuneStruct->Pu;
 8002160:	4639      	mov	r1, r7
 8002162:	4630      	mov	r0, r6
 8002164:	f7fe f9b8 	bl	80004d8 <__aeabi_dmul>
 8002168:	4642      	mov	r2, r8
 800216a:	464b      	mov	r3, r9
 800216c:	f7fe f9b4 	bl	80004d8 <__aeabi_dmul>
 8002170:	f7fe fc8a 	bl	8000a88 <__aeabi_d2uiz>
 8002174:	60a0      	str	r0, [r4, #8]
	{
		PID_AutoTuneStruct->Kp_Tuned = 0.4 * PID_AutoTuneStruct->Ku;
		PID_AutoTuneStruct->Ki_Tuned = 0.48 * PID_AutoTuneStruct->Ku / PID_AutoTuneStruct->Pu;
		PID_AutoTuneStruct->Kd_Tuned = 0;
	}
}
 8002176:	e8bd 83d0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
		PID_AutoTuneStruct->Kp_Tuned = 0.4 * PID_AutoTuneStruct->Ku;
 800217a:	a30f      	add	r3, pc, #60	; (adr r3, 80021b8 <PID_AutoTuneGetCoeff+0xa8>)
 800217c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002180:	4630      	mov	r0, r6
 8002182:	4639      	mov	r1, r7
 8002184:	f7fe f9a8 	bl	80004d8 <__aeabi_dmul>
 8002188:	f7fe fc7e 	bl	8000a88 <__aeabi_d2uiz>
		PID_AutoTuneStruct->Ki_Tuned = 0.48 * PID_AutoTuneStruct->Ku / PID_AutoTuneStruct->Pu;
 800218c:	a30c      	add	r3, pc, #48	; (adr r3, 80021c0 <PID_AutoTuneGetCoeff+0xb0>)
 800218e:	e9d3 2300 	ldrd	r2, r3, [r3]
		PID_AutoTuneStruct->Kp_Tuned = 0.4 * PID_AutoTuneStruct->Ku;
 8002192:	6020      	str	r0, [r4, #0]
		PID_AutoTuneStruct->Ki_Tuned = 0.48 * PID_AutoTuneStruct->Ku / PID_AutoTuneStruct->Pu;
 8002194:	4639      	mov	r1, r7
 8002196:	4630      	mov	r0, r6
 8002198:	f7fe f99e 	bl	80004d8 <__aeabi_dmul>
 800219c:	464b      	mov	r3, r9
 800219e:	4642      	mov	r2, r8
 80021a0:	f7fe fac4 	bl	800072c <__aeabi_ddiv>
 80021a4:	f7fe fc70 	bl	8000a88 <__aeabi_d2uiz>
		PID_AutoTuneStruct->Kd_Tuned = 0;
 80021a8:	2300      	movs	r3, #0
		PID_AutoTuneStruct->Ki_Tuned = 0.48 * PID_AutoTuneStruct->Ku / PID_AutoTuneStruct->Pu;
 80021aa:	6060      	str	r0, [r4, #4]
		PID_AutoTuneStruct->Kd_Tuned = 0;
 80021ac:	60a3      	str	r3, [r4, #8]
}
 80021ae:	e7e2      	b.n	8002176 <PID_AutoTuneGetCoeff+0x66>
 80021b0:	33333333 	.word	0x33333333
 80021b4:	3fe33333 	.word	0x3fe33333
 80021b8:	9999999a 	.word	0x9999999a
 80021bc:	3fd99999 	.word	0x3fd99999
 80021c0:	eb851eb8 	.word	0xeb851eb8
 80021c4:	3fdeb851 	.word	0x3fdeb851
 80021c8:	3ff33333 	.word	0x3ff33333
 80021cc:	3fb33333 	.word	0x3fb33333

080021d0 <PID_AutoTuneStop>:

void PID_AutoTuneStop(PID_AutoTune *PID_AutoTuneStruct)
{
	PID_AutoTuneStruct->running = false;
 80021d0:	2300      	movs	r3, #0
 80021d2:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
}
 80021d6:	4770      	bx	lr

080021d8 <HAL_MspInit>:
 80021d8:	4b11      	ldr	r3, [pc, #68]	; (8002220 <HAL_MspInit+0x48>)
 80021da:	b507      	push	{r0, r1, r2, lr}
 80021dc:	699a      	ldr	r2, [r3, #24]
 80021de:	210f      	movs	r1, #15
 80021e0:	f042 0201 	orr.w	r2, r2, #1
 80021e4:	619a      	str	r2, [r3, #24]
 80021e6:	699a      	ldr	r2, [r3, #24]
 80021e8:	f06f 0001 	mvn.w	r0, #1
 80021ec:	f002 0201 	and.w	r2, r2, #1
 80021f0:	9200      	str	r2, [sp, #0]
 80021f2:	9a00      	ldr	r2, [sp, #0]
 80021f4:	69da      	ldr	r2, [r3, #28]
 80021f6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80021fa:	61da      	str	r2, [r3, #28]
 80021fc:	69db      	ldr	r3, [r3, #28]
 80021fe:	2200      	movs	r2, #0
 8002200:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002204:	9301      	str	r3, [sp, #4]
 8002206:	9b01      	ldr	r3, [sp, #4]
 8002208:	f001 fb50 	bl	80038ac <HAL_NVIC_SetPriority>
 800220c:	4a05      	ldr	r2, [pc, #20]	; (8002224 <HAL_MspInit+0x4c>)
 800220e:	6853      	ldr	r3, [r2, #4]
 8002210:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8002214:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002218:	6053      	str	r3, [r2, #4]
 800221a:	b003      	add	sp, #12
 800221c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002220:	40021000 	.word	0x40021000
 8002224:	40010000 	.word	0x40010000

08002228 <HAL_I2C_MspInit>:
 8002228:	b570      	push	{r4, r5, r6, lr}
 800222a:	2610      	movs	r6, #16
 800222c:	4605      	mov	r5, r0
 800222e:	b088      	sub	sp, #32
 8002230:	4632      	mov	r2, r6
 8002232:	2100      	movs	r1, #0
 8002234:	eb0d 0006 	add.w	r0, sp, r6
 8002238:	f008 f90c 	bl	800a454 <memset>
 800223c:	682b      	ldr	r3, [r5, #0]
 800223e:	4a3b      	ldr	r2, [pc, #236]	; (800232c <HAL_I2C_MspInit+0x104>)
 8002240:	4293      	cmp	r3, r2
 8002242:	d137      	bne.n	80022b4 <HAL_I2C_MspInit+0x8c>
 8002244:	4c3a      	ldr	r4, [pc, #232]	; (8002330 <HAL_I2C_MspInit+0x108>)
 8002246:	f44f 7140 	mov.w	r1, #768	; 0x300
 800224a:	69a3      	ldr	r3, [r4, #24]
 800224c:	4839      	ldr	r0, [pc, #228]	; (8002334 <HAL_I2C_MspInit+0x10c>)
 800224e:	f043 0308 	orr.w	r3, r3, #8
 8002252:	61a3      	str	r3, [r4, #24]
 8002254:	69a3      	ldr	r3, [r4, #24]
 8002256:	f003 0308 	and.w	r3, r3, #8
 800225a:	9300      	str	r3, [sp, #0]
 800225c:	9b00      	ldr	r3, [sp, #0]
 800225e:	2312      	movs	r3, #18
 8002260:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8002264:	2303      	movs	r3, #3
 8002266:	eb0d 0106 	add.w	r1, sp, r6
 800226a:	9307      	str	r3, [sp, #28]
 800226c:	f001 fc68 	bl	8003b40 <HAL_GPIO_Init>
 8002270:	4a31      	ldr	r2, [pc, #196]	; (8002338 <HAL_I2C_MspInit+0x110>)
 8002272:	2105      	movs	r1, #5
 8002274:	6853      	ldr	r3, [r2, #4]
 8002276:	201f      	movs	r0, #31
 8002278:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 800227c:	f043 0302 	orr.w	r3, r3, #2
 8002280:	6053      	str	r3, [r2, #4]
 8002282:	69e3      	ldr	r3, [r4, #28]
 8002284:	2200      	movs	r2, #0
 8002286:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800228a:	61e3      	str	r3, [r4, #28]
 800228c:	69e3      	ldr	r3, [r4, #28]
 800228e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002292:	9301      	str	r3, [sp, #4]
 8002294:	9b01      	ldr	r3, [sp, #4]
 8002296:	f001 fb09 	bl	80038ac <HAL_NVIC_SetPriority>
 800229a:	201f      	movs	r0, #31
 800229c:	f001 fb38 	bl	8003910 <HAL_NVIC_EnableIRQ>
 80022a0:	2020      	movs	r0, #32
 80022a2:	2200      	movs	r2, #0
 80022a4:	2105      	movs	r1, #5
 80022a6:	f001 fb01 	bl	80038ac <HAL_NVIC_SetPriority>
 80022aa:	2020      	movs	r0, #32
 80022ac:	f001 fb30 	bl	8003910 <HAL_NVIC_EnableIRQ>
 80022b0:	b008      	add	sp, #32
 80022b2:	bd70      	pop	{r4, r5, r6, pc}
 80022b4:	4a21      	ldr	r2, [pc, #132]	; (800233c <HAL_I2C_MspInit+0x114>)
 80022b6:	4293      	cmp	r3, r2
 80022b8:	d1fa      	bne.n	80022b0 <HAL_I2C_MspInit+0x88>
 80022ba:	4c1d      	ldr	r4, [pc, #116]	; (8002330 <HAL_I2C_MspInit+0x108>)
 80022bc:	f44f 6240 	mov.w	r2, #3072	; 0xc00
 80022c0:	69a3      	ldr	r3, [r4, #24]
 80022c2:	481c      	ldr	r0, [pc, #112]	; (8002334 <HAL_I2C_MspInit+0x10c>)
 80022c4:	f043 0308 	orr.w	r3, r3, #8
 80022c8:	61a3      	str	r3, [r4, #24]
 80022ca:	69a3      	ldr	r3, [r4, #24]
 80022cc:	a904      	add	r1, sp, #16
 80022ce:	f003 0308 	and.w	r3, r3, #8
 80022d2:	9302      	str	r3, [sp, #8]
 80022d4:	9b02      	ldr	r3, [sp, #8]
 80022d6:	2312      	movs	r3, #18
 80022d8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80022dc:	2303      	movs	r3, #3
 80022de:	9307      	str	r3, [sp, #28]
 80022e0:	f001 fc2e 	bl	8003b40 <HAL_GPIO_Init>
 80022e4:	69e3      	ldr	r3, [r4, #28]
 80022e6:	2280      	movs	r2, #128	; 0x80
 80022e8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80022ec:	61e3      	str	r3, [r4, #28]
 80022ee:	69e3      	ldr	r3, [r4, #28]
 80022f0:	4c13      	ldr	r4, [pc, #76]	; (8002340 <HAL_I2C_MspInit+0x118>)
 80022f2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80022f6:	9303      	str	r3, [sp, #12]
 80022f8:	9b03      	ldr	r3, [sp, #12]
 80022fa:	4b12      	ldr	r3, [pc, #72]	; (8002344 <HAL_I2C_MspInit+0x11c>)
 80022fc:	4620      	mov	r0, r4
 80022fe:	e9c4 3600 	strd	r3, r6, [r4]
 8002302:	2300      	movs	r3, #0
 8002304:	e9c4 3202 	strd	r3, r2, [r4, #8]
 8002308:	e9c4 3304 	strd	r3, r3, [r4, #16]
 800230c:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8002310:	f001 fb0c 	bl	800392c <HAL_DMA_Init>
 8002314:	b108      	cbz	r0, 800231a <HAL_I2C_MspInit+0xf2>
 8002316:	f7ff fc77 	bl	8001c08 <Error_Handler>
 800231a:	2021      	movs	r0, #33	; 0x21
 800231c:	2200      	movs	r2, #0
 800231e:	2105      	movs	r1, #5
 8002320:	636c      	str	r4, [r5, #52]	; 0x34
 8002322:	6265      	str	r5, [r4, #36]	; 0x24
 8002324:	f001 fac2 	bl	80038ac <HAL_NVIC_SetPriority>
 8002328:	2021      	movs	r0, #33	; 0x21
 800232a:	e7bf      	b.n	80022ac <HAL_I2C_MspInit+0x84>
 800232c:	40005400 	.word	0x40005400
 8002330:	40021000 	.word	0x40021000
 8002334:	40010c00 	.word	0x40010c00
 8002338:	40010000 	.word	0x40010000
 800233c:	40005800 	.word	0x40005800
 8002340:	200022b8 	.word	0x200022b8
 8002344:	40020044 	.word	0x40020044

08002348 <HAL_SPI_MspInit>:
 8002348:	2210      	movs	r2, #16
 800234a:	b510      	push	{r4, lr}
 800234c:	4604      	mov	r4, r0
 800234e:	b088      	sub	sp, #32
 8002350:	eb0d 0002 	add.w	r0, sp, r2
 8002354:	2100      	movs	r1, #0
 8002356:	f008 f87d 	bl	800a454 <memset>
 800235a:	6823      	ldr	r3, [r4, #0]
 800235c:	4a32      	ldr	r2, [pc, #200]	; (8002428 <HAL_SPI_MspInit+0xe0>)
 800235e:	4293      	cmp	r3, r2
 8002360:	d12f      	bne.n	80023c2 <HAL_SPI_MspInit+0x7a>
 8002362:	4b32      	ldr	r3, [pc, #200]	; (800242c <HAL_SPI_MspInit+0xe4>)
 8002364:	2120      	movs	r1, #32
 8002366:	699a      	ldr	r2, [r3, #24]
 8002368:	4831      	ldr	r0, [pc, #196]	; (8002430 <HAL_SPI_MspInit+0xe8>)
 800236a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800236e:	619a      	str	r2, [r3, #24]
 8002370:	699a      	ldr	r2, [r3, #24]
 8002372:	2400      	movs	r4, #0
 8002374:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8002378:	9200      	str	r2, [sp, #0]
 800237a:	9a00      	ldr	r2, [sp, #0]
 800237c:	699a      	ldr	r2, [r3, #24]
 800237e:	f042 0204 	orr.w	r2, r2, #4
 8002382:	619a      	str	r2, [r3, #24]
 8002384:	699b      	ldr	r3, [r3, #24]
 8002386:	f003 0304 	and.w	r3, r3, #4
 800238a:	9301      	str	r3, [sp, #4]
 800238c:	9b01      	ldr	r3, [sp, #4]
 800238e:	2302      	movs	r3, #2
 8002390:	e9cd 1304 	strd	r1, r3, [sp, #16]
 8002394:	2303      	movs	r3, #3
 8002396:	a904      	add	r1, sp, #16
 8002398:	9307      	str	r3, [sp, #28]
 800239a:	f001 fbd1 	bl	8003b40 <HAL_GPIO_Init>
 800239e:	2340      	movs	r3, #64	; 0x40
 80023a0:	4823      	ldr	r0, [pc, #140]	; (8002430 <HAL_SPI_MspInit+0xe8>)
 80023a2:	a904      	add	r1, sp, #16
 80023a4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80023a8:	9406      	str	r4, [sp, #24]
 80023aa:	f001 fbc9 	bl	8003b40 <HAL_GPIO_Init>
 80023ae:	2023      	movs	r0, #35	; 0x23
 80023b0:	4622      	mov	r2, r4
 80023b2:	2105      	movs	r1, #5
 80023b4:	f001 fa7a 	bl	80038ac <HAL_NVIC_SetPriority>
 80023b8:	2023      	movs	r0, #35	; 0x23
 80023ba:	f001 faa9 	bl	8003910 <HAL_NVIC_EnableIRQ>
 80023be:	b008      	add	sp, #32
 80023c0:	bd10      	pop	{r4, pc}
 80023c2:	4a1c      	ldr	r2, [pc, #112]	; (8002434 <HAL_SPI_MspInit+0xec>)
 80023c4:	4293      	cmp	r3, r2
 80023c6:	d1fa      	bne.n	80023be <HAL_SPI_MspInit+0x76>
 80023c8:	4b18      	ldr	r3, [pc, #96]	; (800242c <HAL_SPI_MspInit+0xe4>)
 80023ca:	481b      	ldr	r0, [pc, #108]	; (8002438 <HAL_SPI_MspInit+0xf0>)
 80023cc:	69da      	ldr	r2, [r3, #28]
 80023ce:	a904      	add	r1, sp, #16
 80023d0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80023d4:	61da      	str	r2, [r3, #28]
 80023d6:	69da      	ldr	r2, [r3, #28]
 80023d8:	2400      	movs	r4, #0
 80023da:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 80023de:	9202      	str	r2, [sp, #8]
 80023e0:	9a02      	ldr	r2, [sp, #8]
 80023e2:	699a      	ldr	r2, [r3, #24]
 80023e4:	f042 0208 	orr.w	r2, r2, #8
 80023e8:	619a      	str	r2, [r3, #24]
 80023ea:	699b      	ldr	r3, [r3, #24]
 80023ec:	f44f 4220 	mov.w	r2, #40960	; 0xa000
 80023f0:	f003 0308 	and.w	r3, r3, #8
 80023f4:	9303      	str	r3, [sp, #12]
 80023f6:	9b03      	ldr	r3, [sp, #12]
 80023f8:	2302      	movs	r3, #2
 80023fa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80023fe:	2303      	movs	r3, #3
 8002400:	9307      	str	r3, [sp, #28]
 8002402:	f001 fb9d 	bl	8003b40 <HAL_GPIO_Init>
 8002406:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800240a:	480b      	ldr	r0, [pc, #44]	; (8002438 <HAL_SPI_MspInit+0xf0>)
 800240c:	a904      	add	r1, sp, #16
 800240e:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002412:	9406      	str	r4, [sp, #24]
 8002414:	f001 fb94 	bl	8003b40 <HAL_GPIO_Init>
 8002418:	2024      	movs	r0, #36	; 0x24
 800241a:	4622      	mov	r2, r4
 800241c:	2105      	movs	r1, #5
 800241e:	f001 fa45 	bl	80038ac <HAL_NVIC_SetPriority>
 8002422:	2024      	movs	r0, #36	; 0x24
 8002424:	e7c9      	b.n	80023ba <HAL_SPI_MspInit+0x72>
 8002426:	bf00      	nop
 8002428:	40013000 	.word	0x40013000
 800242c:	40021000 	.word	0x40021000
 8002430:	40010800 	.word	0x40010800
 8002434:	40003800 	.word	0x40003800
 8002438:	40010c00 	.word	0x40010c00

0800243c <HAL_TIM_Base_MspInit>:
 800243c:	6803      	ldr	r3, [r0, #0]
 800243e:	b507      	push	{r0, r1, r2, lr}
 8002440:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002444:	d115      	bne.n	8002472 <HAL_TIM_Base_MspInit+0x36>
 8002446:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800244a:	69da      	ldr	r2, [r3, #28]
 800244c:	201c      	movs	r0, #28
 800244e:	f042 0201 	orr.w	r2, r2, #1
 8002452:	61da      	str	r2, [r3, #28]
 8002454:	69db      	ldr	r3, [r3, #28]
 8002456:	2200      	movs	r2, #0
 8002458:	f003 0301 	and.w	r3, r3, #1
 800245c:	9300      	str	r3, [sp, #0]
 800245e:	2105      	movs	r1, #5
 8002460:	9b00      	ldr	r3, [sp, #0]
 8002462:	f001 fa23 	bl	80038ac <HAL_NVIC_SetPriority>
 8002466:	201c      	movs	r0, #28
 8002468:	b003      	add	sp, #12
 800246a:	f85d eb04 	ldr.w	lr, [sp], #4
 800246e:	f001 ba4f 	b.w	8003910 <HAL_NVIC_EnableIRQ>
 8002472:	4a0b      	ldr	r2, [pc, #44]	; (80024a0 <HAL_TIM_Base_MspInit+0x64>)
 8002474:	4293      	cmp	r3, r2
 8002476:	d110      	bne.n	800249a <HAL_TIM_Base_MspInit+0x5e>
 8002478:	4b0a      	ldr	r3, [pc, #40]	; (80024a4 <HAL_TIM_Base_MspInit+0x68>)
 800247a:	201e      	movs	r0, #30
 800247c:	69da      	ldr	r2, [r3, #28]
 800247e:	2105      	movs	r1, #5
 8002480:	f042 0204 	orr.w	r2, r2, #4
 8002484:	61da      	str	r2, [r3, #28]
 8002486:	69db      	ldr	r3, [r3, #28]
 8002488:	2200      	movs	r2, #0
 800248a:	f003 0304 	and.w	r3, r3, #4
 800248e:	9301      	str	r3, [sp, #4]
 8002490:	9b01      	ldr	r3, [sp, #4]
 8002492:	f001 fa0b 	bl	80038ac <HAL_NVIC_SetPriority>
 8002496:	201e      	movs	r0, #30
 8002498:	e7e6      	b.n	8002468 <HAL_TIM_Base_MspInit+0x2c>
 800249a:	b003      	add	sp, #12
 800249c:	f85d fb04 	ldr.w	pc, [sp], #4
 80024a0:	40000800 	.word	0x40000800
 80024a4:	40021000 	.word	0x40021000

080024a8 <HAL_TIM_Encoder_MspInit>:
 80024a8:	b510      	push	{r4, lr}
 80024aa:	4604      	mov	r4, r0
 80024ac:	b086      	sub	sp, #24
 80024ae:	2210      	movs	r2, #16
 80024b0:	2100      	movs	r1, #0
 80024b2:	a802      	add	r0, sp, #8
 80024b4:	f007 ffce 	bl	800a454 <memset>
 80024b8:	6822      	ldr	r2, [r4, #0]
 80024ba:	4b15      	ldr	r3, [pc, #84]	; (8002510 <HAL_TIM_Encoder_MspInit+0x68>)
 80024bc:	429a      	cmp	r2, r3
 80024be:	d125      	bne.n	800250c <HAL_TIM_Encoder_MspInit+0x64>
 80024c0:	f503 3303 	add.w	r3, r3, #134144	; 0x20c00
 80024c4:	69da      	ldr	r2, [r3, #28]
 80024c6:	4813      	ldr	r0, [pc, #76]	; (8002514 <HAL_TIM_Encoder_MspInit+0x6c>)
 80024c8:	f042 0202 	orr.w	r2, r2, #2
 80024cc:	61da      	str	r2, [r3, #28]
 80024ce:	69da      	ldr	r2, [r3, #28]
 80024d0:	a902      	add	r1, sp, #8
 80024d2:	f002 0202 	and.w	r2, r2, #2
 80024d6:	9200      	str	r2, [sp, #0]
 80024d8:	9a00      	ldr	r2, [sp, #0]
 80024da:	699a      	ldr	r2, [r3, #24]
 80024dc:	f042 0208 	orr.w	r2, r2, #8
 80024e0:	619a      	str	r2, [r3, #24]
 80024e2:	699b      	ldr	r3, [r3, #24]
 80024e4:	2230      	movs	r2, #48	; 0x30
 80024e6:	f003 0308 	and.w	r3, r3, #8
 80024ea:	9301      	str	r3, [sp, #4]
 80024ec:	9b01      	ldr	r3, [sp, #4]
 80024ee:	2300      	movs	r3, #0
 80024f0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80024f4:	9304      	str	r3, [sp, #16]
 80024f6:	f001 fb23 	bl	8003b40 <HAL_GPIO_Init>
 80024fa:	4a07      	ldr	r2, [pc, #28]	; (8002518 <HAL_TIM_Encoder_MspInit+0x70>)
 80024fc:	6853      	ldr	r3, [r2, #4]
 80024fe:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8002502:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8002506:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800250a:	6053      	str	r3, [r2, #4]
 800250c:	b006      	add	sp, #24
 800250e:	bd10      	pop	{r4, pc}
 8002510:	40000400 	.word	0x40000400
 8002514:	40010c00 	.word	0x40010c00
 8002518:	40010000 	.word	0x40010000

0800251c <HAL_TIM_MspPostInit>:
 800251c:	b510      	push	{r4, lr}
 800251e:	4604      	mov	r4, r0
 8002520:	b086      	sub	sp, #24
 8002522:	2210      	movs	r2, #16
 8002524:	2100      	movs	r1, #0
 8002526:	a802      	add	r0, sp, #8
 8002528:	f007 ff94 	bl	800a454 <memset>
 800252c:	6823      	ldr	r3, [r4, #0]
 800252e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002532:	d112      	bne.n	800255a <HAL_TIM_MspPostInit+0x3e>
 8002534:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8002538:	699a      	ldr	r2, [r3, #24]
 800253a:	4809      	ldr	r0, [pc, #36]	; (8002560 <HAL_TIM_MspPostInit+0x44>)
 800253c:	f042 0204 	orr.w	r2, r2, #4
 8002540:	619a      	str	r2, [r3, #24]
 8002542:	699b      	ldr	r3, [r3, #24]
 8002544:	a902      	add	r1, sp, #8
 8002546:	f003 0304 	and.w	r3, r3, #4
 800254a:	9301      	str	r3, [sp, #4]
 800254c:	9b01      	ldr	r3, [sp, #4]
 800254e:	2302      	movs	r3, #2
 8002550:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002554:	9305      	str	r3, [sp, #20]
 8002556:	f001 faf3 	bl	8003b40 <HAL_GPIO_Init>
 800255a:	b006      	add	sp, #24
 800255c:	bd10      	pop	{r4, pc}
 800255e:	bf00      	nop
 8002560:	40010800 	.word	0x40010800

08002564 <HAL_UART_MspInit>:
 8002564:	b510      	push	{r4, lr}
 8002566:	4604      	mov	r4, r0
 8002568:	b086      	sub	sp, #24
 800256a:	2210      	movs	r2, #16
 800256c:	2100      	movs	r1, #0
 800256e:	a802      	add	r0, sp, #8
 8002570:	f007 ff70 	bl	800a454 <memset>
 8002574:	6822      	ldr	r2, [r4, #0]
 8002576:	4b16      	ldr	r3, [pc, #88]	; (80025d0 <HAL_UART_MspInit+0x6c>)
 8002578:	429a      	cmp	r2, r3
 800257a:	d126      	bne.n	80025ca <HAL_UART_MspInit+0x66>
 800257c:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 8002580:	69da      	ldr	r2, [r3, #28]
 8002582:	4814      	ldr	r0, [pc, #80]	; (80025d4 <HAL_UART_MspInit+0x70>)
 8002584:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002588:	61da      	str	r2, [r3, #28]
 800258a:	69da      	ldr	r2, [r3, #28]
 800258c:	a902      	add	r1, sp, #8
 800258e:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 8002592:	9200      	str	r2, [sp, #0]
 8002594:	9a00      	ldr	r2, [sp, #0]
 8002596:	699a      	ldr	r2, [r3, #24]
 8002598:	f042 0204 	orr.w	r2, r2, #4
 800259c:	619a      	str	r2, [r3, #24]
 800259e:	699b      	ldr	r3, [r3, #24]
 80025a0:	2204      	movs	r2, #4
 80025a2:	f003 0304 	and.w	r3, r3, #4
 80025a6:	9301      	str	r3, [sp, #4]
 80025a8:	9b01      	ldr	r3, [sp, #4]
 80025aa:	2302      	movs	r3, #2
 80025ac:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80025b0:	2303      	movs	r3, #3
 80025b2:	9305      	str	r3, [sp, #20]
 80025b4:	f001 fac4 	bl	8003b40 <HAL_GPIO_Init>
 80025b8:	2108      	movs	r1, #8
 80025ba:	2300      	movs	r3, #0
 80025bc:	4805      	ldr	r0, [pc, #20]	; (80025d4 <HAL_UART_MspInit+0x70>)
 80025be:	e9cd 1302 	strd	r1, r3, [sp, #8]
 80025c2:	a902      	add	r1, sp, #8
 80025c4:	9304      	str	r3, [sp, #16]
 80025c6:	f001 fabb 	bl	8003b40 <HAL_GPIO_Init>
 80025ca:	b006      	add	sp, #24
 80025cc:	bd10      	pop	{r4, pc}
 80025ce:	bf00      	nop
 80025d0:	40004400 	.word	0x40004400
 80025d4:	40010800 	.word	0x40010800

080025d8 <HAL_InitTick>:
 80025d8:	b510      	push	{r4, lr}
 80025da:	4601      	mov	r1, r0
 80025dc:	b088      	sub	sp, #32
 80025de:	2200      	movs	r2, #0
 80025e0:	2019      	movs	r0, #25
 80025e2:	f001 f963 	bl	80038ac <HAL_NVIC_SetPriority>
 80025e6:	2019      	movs	r0, #25
 80025e8:	f001 f992 	bl	8003910 <HAL_NVIC_EnableIRQ>
 80025ec:	4b14      	ldr	r3, [pc, #80]	; (8002640 <HAL_InitTick+0x68>)
 80025ee:	a901      	add	r1, sp, #4
 80025f0:	699a      	ldr	r2, [r3, #24]
 80025f2:	a803      	add	r0, sp, #12
 80025f4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80025f8:	619a      	str	r2, [r3, #24]
 80025fa:	699b      	ldr	r3, [r3, #24]
 80025fc:	4c11      	ldr	r4, [pc, #68]	; (8002644 <HAL_InitTick+0x6c>)
 80025fe:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002602:	9302      	str	r3, [sp, #8]
 8002604:	9b02      	ldr	r3, [sp, #8]
 8002606:	f003 fcbd 	bl	8005f84 <HAL_RCC_GetClockConfig>
 800260a:	f003 fcab 	bl	8005f64 <HAL_RCC_GetPCLK2Freq>
 800260e:	4b0e      	ldr	r3, [pc, #56]	; (8002648 <HAL_InitTick+0x70>)
 8002610:	6023      	str	r3, [r4, #0]
 8002612:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002616:	60e3      	str	r3, [r4, #12]
 8002618:	4b0c      	ldr	r3, [pc, #48]	; (800264c <HAL_InitTick+0x74>)
 800261a:	fbb0 f0f3 	udiv	r0, r0, r3
 800261e:	2300      	movs	r3, #0
 8002620:	3801      	subs	r0, #1
 8002622:	6060      	str	r0, [r4, #4]
 8002624:	4620      	mov	r0, r4
 8002626:	6123      	str	r3, [r4, #16]
 8002628:	60a3      	str	r3, [r4, #8]
 800262a:	f004 fa2b 	bl	8006a84 <HAL_TIM_Base_Init>
 800262e:	b920      	cbnz	r0, 800263a <HAL_InitTick+0x62>
 8002630:	4620      	mov	r0, r4
 8002632:	f004 f8c3 	bl	80067bc <HAL_TIM_Base_Start_IT>
 8002636:	b008      	add	sp, #32
 8002638:	bd10      	pop	{r4, pc}
 800263a:	2001      	movs	r0, #1
 800263c:	e7fb      	b.n	8002636 <HAL_InitTick+0x5e>
 800263e:	bf00      	nop
 8002640:	40021000 	.word	0x40021000
 8002644:	200023dc 	.word	0x200023dc
 8002648:	40012c00 	.word	0x40012c00
 800264c:	000f4240 	.word	0x000f4240

08002650 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002650:	e7fe      	b.n	8002650 <NMI_Handler>

08002652 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002652:	e7fe      	b.n	8002652 <HardFault_Handler>

08002654 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002654:	e7fe      	b.n	8002654 <MemManage_Handler>

08002656 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002656:	e7fe      	b.n	8002656 <BusFault_Handler>

08002658 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002658:	e7fe      	b.n	8002658 <UsageFault_Handler>

0800265a <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800265a:	4770      	bx	lr

0800265c <DMA1_Channel4_IRQHandler>:
void DMA1_Channel4_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */

  /* USER CODE END DMA1_Channel4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c2_tx);
 800265c:	4801      	ldr	r0, [pc, #4]	; (8002664 <DMA1_Channel4_IRQHandler+0x8>)
 800265e:	f001 b9d9 	b.w	8003a14 <HAL_DMA_IRQHandler>
 8002662:	bf00      	nop
 8002664:	200022b8 	.word	0x200022b8

08002668 <USB_LP_CAN1_RX0_IRQHandler>:
void USB_LP_CAN1_RX0_IRQHandler(void)
{
  /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */

  /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8002668:	4801      	ldr	r0, [pc, #4]	; (8002670 <USB_LP_CAN1_RX0_IRQHandler+0x8>)
 800266a:	f002 bca7 	b.w	8004fbc <HAL_PCD_IRQHandler>
 800266e:	bf00      	nop
 8002670:	20003104 	.word	0x20003104

08002674 <EXTI9_5_IRQHandler>:
void EXTI9_5_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 8002674:	2080      	movs	r0, #128	; 0x80
 8002676:	f001 bb4b 	b.w	8003d10 <HAL_GPIO_EXTI_IRQHandler>
	...

0800267c <TIM1_UP_IRQHandler>:
void TIM1_UP_IRQHandler(void)
{
  /* USER CODE BEGIN TIM1_UP_IRQn 0 */

  /* USER CODE END TIM1_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 800267c:	4801      	ldr	r0, [pc, #4]	; (8002684 <TIM1_UP_IRQHandler+0x8>)
 800267e:	f004 b927 	b.w	80068d0 <HAL_TIM_IRQHandler>
 8002682:	bf00      	nop
 8002684:	200023dc 	.word	0x200023dc

08002688 <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
{
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002688:	4801      	ldr	r0, [pc, #4]	; (8002690 <TIM2_IRQHandler+0x8>)
 800268a:	f004 b921 	b.w	80068d0 <HAL_TIM_IRQHandler>
 800268e:	bf00      	nop
 8002690:	2000234c 	.word	0x2000234c

08002694 <TIM4_IRQHandler>:
void TIM4_IRQHandler(void)
{
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8002694:	4801      	ldr	r0, [pc, #4]	; (800269c <TIM4_IRQHandler+0x8>)
 8002696:	f004 b91b 	b.w	80068d0 <HAL_TIM_IRQHandler>
 800269a:	bf00      	nop
 800269c:	20002300 	.word	0x20002300

080026a0 <I2C1_EV_IRQHandler>:
void I2C1_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C1_EV_IRQn 0 */

  /* USER CODE END I2C1_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c1);
 80026a0:	4801      	ldr	r0, [pc, #4]	; (80026a8 <I2C1_EV_IRQHandler+0x8>)
 80026a2:	f001 bef7 	b.w	8004494 <HAL_I2C_EV_IRQHandler>
 80026a6:	bf00      	nop
 80026a8:	20001d90 	.word	0x20001d90

080026ac <I2C1_ER_IRQHandler>:
void I2C1_ER_IRQHandler(void)
{
  /* USER CODE BEGIN I2C1_ER_IRQn 0 */

  /* USER CODE END I2C1_ER_IRQn 0 */
  HAL_I2C_ER_IRQHandler(&hi2c1);
 80026ac:	4801      	ldr	r0, [pc, #4]	; (80026b4 <I2C1_ER_IRQHandler+0x8>)
 80026ae:	f002 bb41 	b.w	8004d34 <HAL_I2C_ER_IRQHandler>
 80026b2:	bf00      	nop
 80026b4:	20001d90 	.word	0x20001d90

080026b8 <I2C2_EV_IRQHandler>:
void I2C2_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C2_EV_IRQn 0 */

  /* USER CODE END I2C2_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c2);
 80026b8:	4801      	ldr	r0, [pc, #4]	; (80026c0 <I2C2_EV_IRQHandler+0x8>)
 80026ba:	f001 beeb 	b.w	8004494 <HAL_I2C_EV_IRQHandler>
 80026be:	bf00      	nop
 80026c0:	20001d3c 	.word	0x20001d3c

080026c4 <SPI1_IRQHandler>:
void SPI1_IRQHandler(void)
{
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 80026c4:	4801      	ldr	r0, [pc, #4]	; (80026cc <SPI1_IRQHandler+0x8>)
 80026c6:	f003 bf61 	b.w	800658c <HAL_SPI_IRQHandler>
 80026ca:	bf00      	nop
 80026cc:	20001c9c 	.word	0x20001c9c

080026d0 <SPI2_IRQHandler>:
void SPI2_IRQHandler(void)
{
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 80026d0:	4801      	ldr	r0, [pc, #4]	; (80026d8 <SPI2_IRQHandler+0x8>)
 80026d2:	f003 bf5b 	b.w	800658c <HAL_SPI_IRQHandler>
 80026d6:	bf00      	nop
 80026d8:	20001c2c 	.word	0x20001c2c

080026dc <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80026dc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 80026de:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80026e2:	f001 fb15 	bl	8003d10 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80026e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
 80026ea:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80026ee:	f001 bb0f 	b.w	8003d10 <HAL_GPIO_EXTI_IRQHandler>

080026f2 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80026f2:	2001      	movs	r0, #1
 80026f4:	4770      	bx	lr

080026f6 <_kill>:

int _kill(int pid, int sig)
{
 80026f6:	b508      	push	{r3, lr}
	errno = EINVAL;
 80026f8:	f007 fe74 	bl	800a3e4 <__errno>
 80026fc:	2316      	movs	r3, #22
 80026fe:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002700:	f04f 30ff 	mov.w	r0, #4294967295
 8002704:	bd08      	pop	{r3, pc}

08002706 <_exit>:

void _exit (int status)
{
 8002706:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002708:	f007 fe6c 	bl	800a3e4 <__errno>
 800270c:	2316      	movs	r3, #22
 800270e:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002710:	e7fe      	b.n	8002710 <_exit+0xa>

08002712 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002712:	b570      	push	{r4, r5, r6, lr}
 8002714:	460e      	mov	r6, r1
 8002716:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002718:	2500      	movs	r5, #0
 800271a:	42a5      	cmp	r5, r4
 800271c:	db01      	blt.n	8002722 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800271e:	4620      	mov	r0, r4
 8002720:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002722:	f3af 8000 	nop.w
 8002726:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002728:	3501      	adds	r5, #1
 800272a:	e7f6      	b.n	800271a <_read+0x8>

0800272c <_close>:
}

int _close(int file)
{
	return -1;
}
 800272c:	f04f 30ff 	mov.w	r0, #4294967295
 8002730:	4770      	bx	lr

08002732 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002732:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 8002736:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8002738:	604b      	str	r3, [r1, #4]
}
 800273a:	4770      	bx	lr

0800273c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800273c:	2001      	movs	r0, #1
 800273e:	4770      	bx	lr

08002740 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002740:	2000      	movs	r0, #0
 8002742:	4770      	bx	lr

08002744 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002744:	4b0b      	ldr	r3, [pc, #44]	; (8002774 <_sbrk+0x30>)
{
 8002746:	4602      	mov	r2, r0
  if (NULL == __sbrk_heap_end)
 8002748:	6819      	ldr	r1, [r3, #0]
{
 800274a:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 800274c:	b909      	cbnz	r1, 8002752 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 800274e:	490a      	ldr	r1, [pc, #40]	; (8002778 <_sbrk+0x34>)
 8002750:	6019      	str	r1, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002752:	6818      	ldr	r0, [r3, #0]
 8002754:	4909      	ldr	r1, [pc, #36]	; (800277c <_sbrk+0x38>)
 8002756:	4c0a      	ldr	r4, [pc, #40]	; (8002780 <_sbrk+0x3c>)
 8002758:	4402      	add	r2, r0
 800275a:	1b09      	subs	r1, r1, r4
 800275c:	428a      	cmp	r2, r1
 800275e:	d906      	bls.n	800276e <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8002760:	f007 fe40 	bl	800a3e4 <__errno>
 8002764:	230c      	movs	r3, #12
 8002766:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8002768:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 800276c:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 800276e:	601a      	str	r2, [r3, #0]
  return (void *)prev_heap_end;
 8002770:	e7fc      	b.n	800276c <_sbrk+0x28>
 8002772:	bf00      	nop
 8002774:	2000070c 	.word	0x2000070c
 8002778:	20003400 	.word	0x20003400
 800277c:	20005000 	.word	0x20005000
 8002780:	00000400 	.word	0x00000400

08002784 <SystemInit>:

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002784:	4770      	bx	lr
	...

08002788 <u8x8_byte_stm32_hw_i2c>:

extern SPI_HandleTypeDef hspi2;
extern I2C_HandleTypeDef hi2c2;

uint8_t u8x8_byte_stm32_hw_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
 8002788:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800278a:	3914      	subs	r1, #20
 800278c:	290c      	cmp	r1, #12
 800278e:	d82d      	bhi.n	80027ec <u8x8_byte_stm32_hw_i2c+0x64>
 8002790:	e8df f001 	tbb	[pc, r1]
 8002794:	072c2c11 	.word	0x072c2c11
 8002798:	2c2c1f1b 	.word	0x2c2c1f1b
 800279c:	2c2c2c2c 	.word	0x2c2c2c2c
 80027a0:	11          	.byte	0x11
 80027a1:	00          	.byte	0x00
	case U8X8_MSG_BYTE_SEND:
		data = (uint8_t *)arg_ptr;
		while( arg_int > 0 )
		{
			buffer[buf_idx++] = *data;
			data++;
 80027a2:	2400      	movs	r4, #0
 80027a4:	4812      	ldr	r0, [pc, #72]	; (80027f0 <u8x8_byte_stm32_hw_i2c+0x68>)
			buffer[buf_idx++] = *data;
 80027a6:	4d13      	ldr	r5, [pc, #76]	; (80027f4 <u8x8_byte_stm32_hw_i2c+0x6c>)
 80027a8:	7801      	ldrb	r1, [r0, #0]
 80027aa:	440a      	add	r2, r1
 80027ac:	b2d2      	uxtb	r2, r2
		while( arg_int > 0 )
 80027ae:	4291      	cmp	r1, r2
 80027b0:	d104      	bne.n	80027bc <u8x8_byte_stm32_hw_i2c+0x34>
 80027b2:	b104      	cbz	r4, 80027b6 <u8x8_byte_stm32_hw_i2c+0x2e>
 80027b4:	7001      	strb	r1, [r0, #0]
		if(HAL_I2C_Master_Transmit(&hi2c2, (DEVICE_ADDRESS << 1), buffer, buf_idx, TX_TIMEOUT) != HAL_OK) return 0;
		break;
	default:
		return 0;
	}
	return 1;
 80027b6:	2001      	movs	r0, #1
}
 80027b8:	b002      	add	sp, #8
 80027ba:	bd70      	pop	{r4, r5, r6, pc}
			buffer[buf_idx++] = *data;
 80027bc:	f813 6b01 	ldrb.w	r6, [r3], #1
 80027c0:	1c4c      	adds	r4, r1, #1
 80027c2:	546e      	strb	r6, [r5, r1]
 80027c4:	b2e1      	uxtb	r1, r4
			data++;
 80027c6:	2401      	movs	r4, #1
 80027c8:	e7f1      	b.n	80027ae <u8x8_byte_stm32_hw_i2c+0x26>
		buf_idx = 0;
 80027ca:	2200      	movs	r2, #0
 80027cc:	4b08      	ldr	r3, [pc, #32]	; (80027f0 <u8x8_byte_stm32_hw_i2c+0x68>)
 80027ce:	701a      	strb	r2, [r3, #0]
 80027d0:	e7f1      	b.n	80027b6 <u8x8_byte_stm32_hw_i2c+0x2e>
		if(HAL_I2C_Master_Transmit(&hi2c2, (DEVICE_ADDRESS << 1), buffer, buf_idx, TX_TIMEOUT) != HAL_OK) return 0;
 80027d2:	2364      	movs	r3, #100	; 0x64
 80027d4:	9300      	str	r3, [sp, #0]
 80027d6:	4b06      	ldr	r3, [pc, #24]	; (80027f0 <u8x8_byte_stm32_hw_i2c+0x68>)
 80027d8:	2178      	movs	r1, #120	; 0x78
 80027da:	781b      	ldrb	r3, [r3, #0]
 80027dc:	4a05      	ldr	r2, [pc, #20]	; (80027f4 <u8x8_byte_stm32_hw_i2c+0x6c>)
 80027de:	4806      	ldr	r0, [pc, #24]	; (80027f8 <u8x8_byte_stm32_hw_i2c+0x70>)
 80027e0:	f001 fc1c 	bl	800401c <HAL_I2C_Master_Transmit>
 80027e4:	fab0 f080 	clz	r0, r0
 80027e8:	0940      	lsrs	r0, r0, #5
 80027ea:	e7e5      	b.n	80027b8 <u8x8_byte_stm32_hw_i2c+0x30>
		return 0;
 80027ec:	2000      	movs	r0, #0
 80027ee:	e7e3      	b.n	80027b8 <u8x8_byte_stm32_hw_i2c+0x30>
 80027f0:	20000710 	.word	0x20000710
 80027f4:	20000711 	.word	0x20000711
 80027f8:	20001d3c 	.word	0x20001d3c

080027fc <psoc_gpio_and_delay_cb>:

uint8_t psoc_gpio_and_delay_cb(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  switch(msg)
 80027fc:	292d      	cmp	r1, #45	; 0x2d
{
 80027fe:	4603      	mov	r3, r0
 8002800:	b507      	push	{r0, r1, r2, lr}
 8002802:	4610      	mov	r0, r2
  switch(msg)
 8002804:	d808      	bhi.n	8002818 <psoc_gpio_and_delay_cb+0x1c>
 8002806:	2927      	cmp	r1, #39	; 0x27
 8002808:	d91a      	bls.n	8002840 <psoc_gpio_and_delay_cb+0x44>
 800280a:	3929      	subs	r1, #41	; 0x29
 800280c:	2903      	cmp	r1, #3
 800280e:	d805      	bhi.n	800281c <psoc_gpio_and_delay_cb+0x20>
 8002810:	e8df f001 	tbb	[pc, r1]
 8002814:	08040413 	.word	0x08040413
 8002818:	294c      	cmp	r1, #76	; 0x4c
 800281a:	d111      	bne.n	8002840 <psoc_gpio_and_delay_cb+0x44>
    default:
      u8x8_SetGPIOResult(u8x8, 1);
      break;
  }
  return 1;
}
 800281c:	2001      	movs	r0, #1
 800281e:	b003      	add	sp, #12
 8002820:	f85d fb04 	ldr.w	pc, [sp], #4
		for (i = 1; i <= arg_int*10; i++);
 8002824:	220a      	movs	r2, #10
 8002826:	2301      	movs	r3, #1
 8002828:	4350      	muls	r0, r2
 800282a:	9301      	str	r3, [sp, #4]
 800282c:	9b01      	ldr	r3, [sp, #4]
 800282e:	4298      	cmp	r0, r3
 8002830:	d3f4      	bcc.n	800281c <psoc_gpio_and_delay_cb+0x20>
 8002832:	9b01      	ldr	r3, [sp, #4]
 8002834:	3301      	adds	r3, #1
 8002836:	9301      	str	r3, [sp, #4]
 8002838:	e7f8      	b.n	800282c <psoc_gpio_and_delay_cb+0x30>
      HAL_Delay(arg_int);
 800283a:	f001 f813 	bl	8003864 <HAL_Delay>
      break;
 800283e:	e7ed      	b.n	800281c <psoc_gpio_and_delay_cb+0x20>
      u8x8_SetGPIOResult(u8x8, 1);
 8002840:	2201      	movs	r2, #1
 8002842:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
      break;
 8002846:	e7e9      	b.n	800281c <psoc_gpio_and_delay_cb+0x20>

08002848 <u8g2_DrawHXBM>:
}



void u8g2_DrawHXBM(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, const uint8_t *b)
{
 8002848:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint8_t mask;
  uint8_t color = u8g2->draw_color;
  uint8_t ncolor = (color == 0 ? 1 : 0);
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
 800284c:	18cf      	adds	r7, r1, r3
 800284e:	1c53      	adds	r3, r2, #1
 8002850:	b2db      	uxtb	r3, r3
 8002852:	b2ff      	uxtb	r7, r7
  uint8_t color = u8g2->draw_color;
 8002854:	f890 9086 	ldrb.w	r9, [r0, #134]	; 0x86
  if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
 8002858:	9300      	str	r3, [sp, #0]
 800285a:	463b      	mov	r3, r7
{
 800285c:	4605      	mov	r5, r0
 800285e:	460c      	mov	r4, r1
 8002860:	4690      	mov	r8, r2
  if ( u8g2_IsIntersection(u8g2, x, y, x+len, y+1) == 0 ) 
 8002862:	f000 fc72 	bl	800314a <u8g2_IsIntersection>
 8002866:	b150      	cbz	r0, 800287e <u8g2_DrawHXBM+0x36>
  uint8_t ncolor = (color == 0 ? 1 : 0);
 8002868:	fab9 fa89 	clz	sl, r9
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  mask = 1;
 800286c:	2601      	movs	r6, #1
  while(len > 0) {
    if ( *b & mask ) {
      u8g2->draw_color = color;
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
 800286e:	f04f 0b00 	mov.w	fp, #0
  uint8_t ncolor = (color == 0 ? 1 : 0);
 8002872:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
  while(len > 0) {
 8002876:	42a7      	cmp	r7, r4
 8002878:	d104      	bne.n	8002884 <u8g2_DrawHXBM+0x3c>
      mask = 1;
      b++;
    }
    len--;
  }
  u8g2->draw_color = color;
 800287a:	f885 9086 	strb.w	r9, [r5, #134]	; 0x86
}
 800287e:	b003      	add	sp, #12
 8002880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if ( *b & mask ) {
 8002884:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002886:	781b      	ldrb	r3, [r3, #0]
 8002888:	421e      	tst	r6, r3
 800288a:	d017      	beq.n	80028bc <u8g2_DrawHXBM+0x74>
      u8g2->draw_color = color;
 800288c:	f885 9086 	strb.w	r9, [r5, #134]	; 0x86
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
 8002890:	f8cd b000 	str.w	fp, [sp]
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
 8002894:	2301      	movs	r3, #1
 8002896:	4642      	mov	r2, r8
 8002898:	4621      	mov	r1, r4
 800289a:	4628      	mov	r0, r5
 800289c:	f000 fbde 	bl	800305c <u8g2_DrawHVLine>
    mask <<= 1;
 80028a0:	0076      	lsls	r6, r6, #1
    if ( mask == 0 )
 80028a2:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
      b++;
 80028a6:	bf08      	it	eq
 80028a8:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
    x++;
 80028aa:	f104 0401 	add.w	r4, r4, #1
      b++;
 80028ae:	bf04      	itt	eq
 80028b0:	3301      	addeq	r3, #1
      mask = 1;
 80028b2:	2601      	moveq	r6, #1
    x++;
 80028b4:	b2e4      	uxtb	r4, r4
      b++;
 80028b6:	bf08      	it	eq
 80028b8:	930c      	streq	r3, [sp, #48]	; 0x30
    len--;
 80028ba:	e7dc      	b.n	8002876 <u8g2_DrawHXBM+0x2e>
    } else if ( u8g2->bitmap_transparency == 0 ) {
 80028bc:	f895 3085 	ldrb.w	r3, [r5, #133]	; 0x85
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d1ed      	bne.n	80028a0 <u8g2_DrawHXBM+0x58>
      u8g2->draw_color = ncolor;
 80028c4:	f885 a086 	strb.w	sl, [r5, #134]	; 0x86
      u8g2_DrawHVLine(u8g2, x, y, 1, 0);
 80028c8:	9300      	str	r3, [sp, #0]
 80028ca:	e7e3      	b.n	8002894 <u8g2_DrawHXBM+0x4c>

080028cc <u8g2_DrawXBM>:


void u8g2_DrawXBM(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t w, u8g2_uint_t h, const uint8_t *bitmap)
{
 80028cc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
  u8g2_uint_t blen;
  blen = w;
  blen += 7;
  blen >>= 3;
#ifdef U8G2_WITH_INTERSECTION
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
 80028d0:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
{
 80028d4:	461e      	mov	r6, r3
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
 80028d6:	4415      	add	r5, r2
 80028d8:	b2ed      	uxtb	r5, r5
 80028da:	440b      	add	r3, r1
 80028dc:	9500      	str	r5, [sp, #0]
 80028de:	b2db      	uxtb	r3, r3
{
 80028e0:	4681      	mov	r9, r0
 80028e2:	460f      	mov	r7, r1
 80028e4:	4614      	mov	r4, r2
 80028e6:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
  if ( u8g2_IsIntersection(u8g2, x, y, x+w, y+h) == 0 ) 
 80028ea:	f000 fc2e 	bl	800314a <u8g2_IsIntersection>
 80028ee:	b128      	cbz	r0, 80028fc <u8g2_DrawXBM+0x30>
  blen += 7;
 80028f0:	f106 0807 	add.w	r8, r6, #7
  blen >>= 3;
 80028f4:	f3c8 08c4 	ubfx	r8, r8, #3, #5
    return;
#endif /* U8G2_WITH_INTERSECTION */
  
  while( h > 0 )
 80028f8:	42a5      	cmp	r5, r4
 80028fa:	d102      	bne.n	8002902 <u8g2_DrawXBM+0x36>
    u8g2_DrawHXBM(u8g2, x, y, w, bitmap);
    bitmap += blen;
    y++;
    h--;
  }
}
 80028fc:	b002      	add	sp, #8
 80028fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    u8g2_DrawHXBM(u8g2, x, y, w, bitmap);
 8002902:	4622      	mov	r2, r4
 8002904:	f8cd a000 	str.w	sl, [sp]
 8002908:	4633      	mov	r3, r6
 800290a:	4639      	mov	r1, r7
 800290c:	4648      	mov	r0, r9
    y++;
 800290e:	3401      	adds	r4, #1
    u8g2_DrawHXBM(u8g2, x, y, w, bitmap);
 8002910:	f7ff ff9a 	bl	8002848 <u8g2_DrawHXBM>
    bitmap += blen;
 8002914:	44c2      	add	sl, r8
    y++;
 8002916:	b2e4      	uxtb	r4, r4
    h--;
 8002918:	e7ee      	b.n	80028f8 <u8g2_DrawXBM+0x2c>

0800291a <u8g2_DrawXBMP>:
 800291a:	b410      	push	{r4}
 800291c:	f89d 4004 	ldrb.w	r4, [sp, #4]
 8002920:	9401      	str	r4, [sp, #4]
 8002922:	bc10      	pop	{r4}
 8002924:	f7ff bfd2 	b.w	80028cc <u8g2_DrawXBM>

08002928 <u8g2_send_buffer>:
  For most displays, this will make the content visible to the user.
  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()
*/
static void u8g2_send_buffer(u8g2_t *u8g2) U8X8_NOINLINE;
static void u8g2_send_buffer(u8g2_t *u8g2)
{
 8002928:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800292c:	4604      	mov	r4, r0
  uint8_t dest_max;

  src_row = 0;
  src_max = u8g2->tile_buf_height;
  dest_row = u8g2->tile_curr_row;
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
 800292e:	2600      	movs	r6, #0
 8002930:	6803      	ldr	r3, [r0, #0]
  src_max = u8g2->tile_buf_height;
 8002932:	f890 903c 	ldrb.w	r9, [r0, #60]	; 0x3c
  dest_row = u8g2->tile_curr_row;
 8002936:	f890 703d 	ldrb.w	r7, [r0, #61]	; 0x3d
  dest_max = u8g2_GetU8x8(u8g2)->display_info->tile_height;
 800293a:	f893 8011 	ldrb.w	r8, [r3, #17]
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
 800293e:	6823      	ldr	r3, [r4, #0]
  ptr = u8g2->tile_buf_ptr;
 8002940:	6ba0      	ldr	r0, [r4, #56]	; 0x38
  w = u8g2_GetU8x8(u8g2)->display_info->tile_width;
 8002942:	7c1b      	ldrb	r3, [r3, #16]
 8002944:	b2f5      	uxtb	r5, r6
  offset *= 8;
 8002946:	fb06 f103 	mul.w	r1, r6, r3
 800294a:	b289      	uxth	r1, r1
 800294c:	00c9      	lsls	r1, r1, #3
  ptr += offset;
 800294e:	b289      	uxth	r1, r1
 8002950:	4401      	add	r1, r0
  u8x8_DrawTile(u8g2_GetU8x8(u8g2), 0, dest_tile_row, w, ptr);
 8002952:	197a      	adds	r2, r7, r5
  do
  {
    u8g2_send_tile_row(u8g2, src_row, dest_row);
    src_row++;
    dest_row++;
  } while( src_row < src_max && dest_row < dest_max );
 8002954:	3501      	adds	r5, #1
  u8x8_DrawTile(u8g2_GetU8x8(u8g2), 0, dest_tile_row, w, ptr);
 8002956:	9100      	str	r1, [sp, #0]
 8002958:	4620      	mov	r0, r4
 800295a:	2100      	movs	r1, #0
 800295c:	b2d2      	uxtb	r2, r2
  } while( src_row < src_max && dest_row < dest_max );
 800295e:	b2ed      	uxtb	r5, r5
  u8x8_DrawTile(u8g2_GetU8x8(u8g2), 0, dest_tile_row, w, ptr);
 8002960:	f000 fead 	bl	80036be <u8x8_DrawTile>
  } while( src_row < src_max && dest_row < dest_max );
 8002964:	45a9      	cmp	r9, r5
 8002966:	d904      	bls.n	8002972 <u8g2_send_buffer+0x4a>
 8002968:	3601      	adds	r6, #1
 800296a:	19bb      	adds	r3, r7, r6
 800296c:	b2db      	uxtb	r3, r3
 800296e:	4598      	cmp	r8, r3
 8002970:	d8e5      	bhi.n	800293e <u8g2_send_buffer+0x16>
}
 8002972:	b003      	add	sp, #12
 8002974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002978 <u8g2_ClearBuffer>:
  cnt = u8g2_GetU8x8(u8g2)->display_info->tile_width;
 8002978:	6803      	ldr	r3, [r0, #0]
  cnt *= u8g2->tile_buf_height;
 800297a:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
  cnt = u8g2_GetU8x8(u8g2)->display_info->tile_width;
 800297e:	7c1b      	ldrb	r3, [r3, #16]
  memset(u8g2->tile_buf_ptr, 0, cnt);
 8002980:	2100      	movs	r1, #0
 8002982:	435a      	muls	r2, r3
 8002984:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002986:	00d2      	lsls	r2, r2, #3
 8002988:	f007 bd64 	b.w	800a454 <memset>

0800298c <u8g2_SendBuffer>:

/* same as u8g2_send_buffer but also send the DISPLAY_REFRESH message (used by SSD1606) */
void u8g2_SendBuffer(u8g2_t *u8g2)
{
 800298c:	b510      	push	{r4, lr}
 800298e:	4604      	mov	r4, r0
  u8g2_send_buffer(u8g2);
 8002990:	f7ff ffca 	bl	8002928 <u8g2_send_buffer>
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
 8002994:	4620      	mov	r0, r4
}
 8002996:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  
 800299a:	f000 beb8 	b.w	800370e <u8x8_RefreshDisplay>

0800299e <u8g2_SetBufferCurrTileRow>:

/*============================================*/
void u8g2_SetBufferCurrTileRow(u8g2_t *u8g2, uint8_t row)
{
 800299e:	b510      	push	{r4, lr}
 80029a0:	4604      	mov	r4, r0
  u8g2->tile_curr_row = row;
  u8g2->cb->update_dimension(u8g2);
 80029a2:	6b43      	ldr	r3, [r0, #52]	; 0x34
  u8g2->tile_curr_row = row;
 80029a4:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  u8g2->cb->update_dimension(u8g2);
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	4798      	blx	r3
  u8g2->cb->update_page_win(u8g2);
 80029ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80029ae:	4620      	mov	r0, r4
}
 80029b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  u8g2->cb->update_page_win(u8g2);
 80029b4:	685b      	ldr	r3, [r3, #4]
 80029b6:	4718      	bx	r3

080029b8 <u8g2_FirstPage>:

void u8g2_FirstPage(u8g2_t *u8g2)
{
 80029b8:	b510      	push	{r4, lr}
  if ( u8g2->is_auto_page_clear )
 80029ba:	f890 3087 	ldrb.w	r3, [r0, #135]	; 0x87
{
 80029be:	4604      	mov	r4, r0
  if ( u8g2->is_auto_page_clear )
 80029c0:	b10b      	cbz	r3, 80029c6 <u8g2_FirstPage+0xe>
  {
    u8g2_ClearBuffer(u8g2);
 80029c2:	f7ff ffd9 	bl	8002978 <u8g2_ClearBuffer>
  }
  u8g2_SetBufferCurrTileRow(u8g2, 0);
 80029c6:	4620      	mov	r0, r4
}
 80029c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  u8g2_SetBufferCurrTileRow(u8g2, 0);
 80029cc:	2100      	movs	r1, #0
 80029ce:	f7ff bfe6 	b.w	800299e <u8g2_SetBufferCurrTileRow>

080029d2 <u8g2_NextPage>:

uint8_t u8g2_NextPage(u8g2_t *u8g2)
{
 80029d2:	b538      	push	{r3, r4, r5, lr}
 80029d4:	4604      	mov	r4, r0
  uint8_t row;
  u8g2_send_buffer(u8g2);
 80029d6:	f7ff ffa7 	bl	8002928 <u8g2_send_buffer>
  row = u8g2->tile_curr_row;
 80029da:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  row += u8g2->tile_buf_height;
 80029de:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
  if ( row >= u8g2_GetU8x8(u8g2)->display_info->tile_height )
 80029e2:	6823      	ldr	r3, [r4, #0]
  row += u8g2->tile_buf_height;
 80029e4:	440d      	add	r5, r1
  if ( row >= u8g2_GetU8x8(u8g2)->display_info->tile_height )
 80029e6:	7c5b      	ldrb	r3, [r3, #17]
  row += u8g2->tile_buf_height;
 80029e8:	b2ed      	uxtb	r5, r5
  if ( row >= u8g2_GetU8x8(u8g2)->display_info->tile_height )
 80029ea:	42ab      	cmp	r3, r5
 80029ec:	d804      	bhi.n	80029f8 <u8g2_NextPage+0x26>
  {
    u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );
 80029ee:	4620      	mov	r0, r4
 80029f0:	f000 fe8d 	bl	800370e <u8x8_RefreshDisplay>
    return 0;
 80029f4:	2000      	movs	r0, #0
  {
    u8g2_ClearBuffer(u8g2);
  }
  u8g2_SetBufferCurrTileRow(u8g2, row);
  return 1;
}
 80029f6:	bd38      	pop	{r3, r4, r5, pc}
  if ( u8g2->is_auto_page_clear )
 80029f8:	f894 3087 	ldrb.w	r3, [r4, #135]	; 0x87
 80029fc:	b113      	cbz	r3, 8002a04 <u8g2_NextPage+0x32>
    u8g2_ClearBuffer(u8g2);
 80029fe:	4620      	mov	r0, r4
 8002a00:	f7ff ffba 	bl	8002978 <u8g2_ClearBuffer>
  u8g2_SetBufferCurrTileRow(u8g2, row);
 8002a04:	4620      	mov	r0, r4
 8002a06:	4629      	mov	r1, r5
 8002a08:	f7ff ffc9 	bl	800299e <u8g2_SetBufferCurrTileRow>
  return 1;
 8002a0c:	2001      	movs	r0, #1
 8002a0e:	e7f2      	b.n	80029f6 <u8g2_NextPage+0x24>

08002a10 <u8g2_ClearDisplay>:
#include "u8g2.h"

/* Clear screen buffer & display reliable for all u8g2 displays. */
/* This is done with u8g2 picture loop, because we can not use the u8x8 function in all cases */
void u8g2_ClearDisplay(u8g2_t *u8g2)
{
 8002a10:	b510      	push	{r4, lr}
 8002a12:	4604      	mov	r4, r0
  u8g2_FirstPage(u8g2);
 8002a14:	f7ff ffd0 	bl	80029b8 <u8g2_FirstPage>
  do {
  } while ( u8g2_NextPage(u8g2) );
 8002a18:	4620      	mov	r0, r4
 8002a1a:	f7ff ffda 	bl	80029d2 <u8g2_NextPage>
 8002a1e:	4601      	mov	r1, r0
 8002a20:	2800      	cmp	r0, #0
 8002a22:	d1f9      	bne.n	8002a18 <u8g2_ClearDisplay+0x8>
    send commands.
    This will not work because the current tile row is modified by the picture 
    loop above. To fix this, reset the tile row to 0, issue #370
    A workaround would be, that the user sets the current tile row to 0 manually.
  */
  u8g2_SetBufferCurrTileRow(u8g2, 0);  
 8002a24:	4620      	mov	r0, r4
}
 8002a26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  u8g2_SetBufferCurrTileRow(u8g2, 0);  
 8002a2a:	f7ff bfb8 	b.w	800299e <u8g2_SetBufferCurrTileRow>
	...

08002a30 <u8g2_m_16_8_f>:
  return buf;
}
uint8_t *u8g2_m_16_8_f(uint8_t *page_cnt)
{
  static uint8_t buf[1024];
  *page_cnt = 8;
 8002a30:	2308      	movs	r3, #8
 8002a32:	7003      	strb	r3, [r0, #0]
  return buf;
}
 8002a34:	4800      	ldr	r0, [pc, #0]	; (8002a38 <u8g2_m_16_8_f+0x8>)
 8002a36:	4770      	bx	lr
 8002a38:	20000731 	.word	0x20000731

08002a3c <u8g2_Setup_ssd1306_i2c_128x64_noname_f>:
  buf = u8g2_m_16_8_2(&tile_buf_height);
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
}
/* ssd1306 f */
void u8g2_Setup_ssd1306_i2c_128x64_noname_f(u8g2_t *u8g2, const u8g2_cb_t *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
 8002a3c:	b530      	push	{r4, r5, lr}
 8002a3e:	b085      	sub	sp, #20
 8002a40:	460d      	mov	r5, r1
  uint8_t tile_buf_height;
  uint8_t *buf;
  u8g2_SetupDisplay(u8g2, u8x8_d_ssd1306_128x64_noname, u8x8_cad_ssd13xx_fast_i2c, byte_cb, gpio_and_delay_cb);
 8002a42:	9300      	str	r3, [sp, #0]
 8002a44:	4909      	ldr	r1, [pc, #36]	; (8002a6c <u8g2_Setup_ssd1306_i2c_128x64_noname_f+0x30>)
 8002a46:	4613      	mov	r3, r2
 8002a48:	4a09      	ldr	r2, [pc, #36]	; (8002a70 <u8g2_Setup_ssd1306_i2c_128x64_noname_f+0x34>)
{
 8002a4a:	4604      	mov	r4, r0
  u8g2_SetupDisplay(u8g2, u8x8_d_ssd1306_128x64_noname, u8x8_cad_ssd13xx_fast_i2c, byte_cb, gpio_and_delay_cb);
 8002a4c:	f000 fe84 	bl	8003758 <u8x8_Setup>
  buf = u8g2_m_16_8_f(&tile_buf_height);
 8002a50:	f10d 000f 	add.w	r0, sp, #15
 8002a54:	f7ff ffec 	bl	8002a30 <u8g2_m_16_8_f>
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
 8002a58:	4b06      	ldr	r3, [pc, #24]	; (8002a74 <u8g2_Setup_ssd1306_i2c_128x64_noname_f+0x38>)
  buf = u8g2_m_16_8_f(&tile_buf_height);
 8002a5a:	4601      	mov	r1, r0
  u8g2_SetupBuffer(u8g2, buf, tile_buf_height, u8g2_ll_hvline_vertical_top_lsb, rotation);
 8002a5c:	f89d 200f 	ldrb.w	r2, [sp, #15]
 8002a60:	4620      	mov	r0, r4
 8002a62:	9500      	str	r5, [sp, #0]
 8002a64:	f000 fc59 	bl	800331a <u8g2_SetupBuffer>
}
 8002a68:	b005      	add	sp, #20
 8002a6a:	bd30      	pop	{r4, r5, pc}
 8002a6c:	0800361d 	.word	0x0800361d
 8002a70:	08003495 	.word	0x08003495
 8002a74:	0800317b 	.word	0x0800317b

08002a78 <u8g2_font_get_word>:

static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset) U8G2_NOINLINE; 
static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
{
    uint16_t pos;
    font += offset;
 8002a78:	1842      	adds	r2, r0, r1
    pos = u8x8_pgm_read( font );
 8002a7a:	5c43      	ldrb	r3, [r0, r1]
    font++;
    pos <<= 8;
    pos += u8x8_pgm_read( font);
 8002a7c:	7850      	ldrb	r0, [r2, #1]
 8002a7e:	eb00 2003 	add.w	r0, r0, r3, lsl #8
    return pos;
}
 8002a82:	b280      	uxth	r0, r0
 8002a84:	4770      	bx	lr

08002a86 <u8g2_add_vector_y>:

#ifdef U8G2_WITH_FONT_ROTATION
static u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir) U8G2_NOINLINE;
static u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
 8002a86:	2b01      	cmp	r3, #1
 8002a88:	d005      	beq.n	8002a96 <u8g2_add_vector_y+0x10>
 8002a8a:	2b02      	cmp	r3, #2
 8002a8c:	d005      	beq.n	8002a9a <u8g2_add_vector_y+0x14>
 8002a8e:	b933      	cbnz	r3, 8002a9e <u8g2_add_vector_y+0x18>
  {
    case 0:
      dy += y;
 8002a90:	4410      	add	r0, r2
      break;
    case 2:
      dy -= y;
      break;
    default:
      dy -= x;
 8002a92:	b2c0      	uxtb	r0, r0
      break;      
  }
  return dy;
}
 8002a94:	4770      	bx	lr
      dy += x;
 8002a96:	4408      	add	r0, r1
 8002a98:	e7fb      	b.n	8002a92 <u8g2_add_vector_y+0xc>
      dy -= y;
 8002a9a:	1a80      	subs	r0, r0, r2
 8002a9c:	e7f9      	b.n	8002a92 <u8g2_add_vector_y+0xc>
      dy -= x;
 8002a9e:	1a40      	subs	r0, r0, r1
 8002aa0:	e7f7      	b.n	8002a92 <u8g2_add_vector_y+0xc>

08002aa2 <u8g2_add_vector_x>:

static u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir) U8G2_NOINLINE;
static u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)
{
  switch(dir)
 8002aa2:	2b01      	cmp	r3, #1
 8002aa4:	d005      	beq.n	8002ab2 <u8g2_add_vector_x+0x10>
 8002aa6:	2b02      	cmp	r3, #2
 8002aa8:	d005      	beq.n	8002ab6 <u8g2_add_vector_x+0x14>
 8002aaa:	b933      	cbnz	r3, 8002aba <u8g2_add_vector_x+0x18>
  {
    case 0:
      dx += x;
 8002aac:	4408      	add	r0, r1
      break;
    case 2:
      dx -= x;
      break;
    default:
      dx += y;
 8002aae:	b2c0      	uxtb	r0, r0
      break;      
  }
  return dx;
}
 8002ab0:	4770      	bx	lr
      dx -= y;
 8002ab2:	1a80      	subs	r0, r0, r2
 8002ab4:	e7fb      	b.n	8002aae <u8g2_add_vector_x+0xc>
      dx -= x;
 8002ab6:	1a40      	subs	r0, r0, r1
 8002ab8:	e7f9      	b.n	8002aae <u8g2_add_vector_x+0xc>
      dx += y;
 8002aba:	4410      	add	r0, r2
 8002abc:	e7f7      	b.n	8002aae <u8g2_add_vector_x+0xc>

08002abe <u8g2_font_calc_vref_font>:
/* callback procedures to correct the y position */

u8g2_uint_t u8g2_font_calc_vref_font(U8X8_UNUSED u8g2_t *u8g2)
{
  return 0;
}
 8002abe:	2000      	movs	r0, #0
 8002ac0:	4770      	bx	lr

08002ac2 <u8g2_font_calc_vref_top>:

u8g2_uint_t u8g2_font_calc_vref_top(u8g2_t *u8g2)
{
  u8g2_uint_t tmp;
  /* reference pos is one pixel above the upper edge of the reference glyph */
  tmp = (u8g2_uint_t)(u8g2->font_ref_ascent);
 8002ac2:	f890 0082 	ldrb.w	r0, [r0, #130]	; 0x82
  tmp++;
 8002ac6:	3001      	adds	r0, #1
  return tmp;
}
 8002ac8:	b2c0      	uxtb	r0, r0
 8002aca:	4770      	bx	lr

08002acc <u8g2_read_font_info>:
{
 8002acc:	b538      	push	{r3, r4, r5, lr}
  return u8x8_pgm_read( font );  
 8002ace:	780b      	ldrb	r3, [r1, #0]
{
 8002ad0:	460d      	mov	r5, r1
  font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
 8002ad2:	7003      	strb	r3, [r0, #0]
  return u8x8_pgm_read( font );  
 8002ad4:	784b      	ldrb	r3, [r1, #1]
{
 8002ad6:	4604      	mov	r4, r0
  font_info->bbx_mode = u8g2_font_get_byte(font, 1);
 8002ad8:	7043      	strb	r3, [r0, #1]
  return u8x8_pgm_read( font );  
 8002ada:	788b      	ldrb	r3, [r1, #2]
  font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
 8002adc:	7083      	strb	r3, [r0, #2]
  return u8x8_pgm_read( font );  
 8002ade:	78cb      	ldrb	r3, [r1, #3]
  font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
 8002ae0:	70c3      	strb	r3, [r0, #3]
  return u8x8_pgm_read( font );  
 8002ae2:	790b      	ldrb	r3, [r1, #4]
  font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
 8002ae4:	7103      	strb	r3, [r0, #4]
  return u8x8_pgm_read( font );  
 8002ae6:	794b      	ldrb	r3, [r1, #5]
  font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
 8002ae8:	7143      	strb	r3, [r0, #5]
  return u8x8_pgm_read( font );  
 8002aea:	798b      	ldrb	r3, [r1, #6]
  font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
 8002aec:	7183      	strb	r3, [r0, #6]
  return u8x8_pgm_read( font );  
 8002aee:	79cb      	ldrb	r3, [r1, #7]
  font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
 8002af0:	71c3      	strb	r3, [r0, #7]
  return u8x8_pgm_read( font );  
 8002af2:	7a0b      	ldrb	r3, [r1, #8]
  font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
 8002af4:	7203      	strb	r3, [r0, #8]
  font_info->max_char_width = u8g2_font_get_byte(font, 9);
 8002af6:	7a4b      	ldrb	r3, [r1, #9]
 8002af8:	7243      	strb	r3, [r0, #9]
  font_info->max_char_height = u8g2_font_get_byte(font, 10);
 8002afa:	7a8b      	ldrb	r3, [r1, #10]
 8002afc:	7283      	strb	r3, [r0, #10]
  font_info->x_offset = u8g2_font_get_byte(font, 11);
 8002afe:	7acb      	ldrb	r3, [r1, #11]
 8002b00:	72c3      	strb	r3, [r0, #11]
  font_info->y_offset = u8g2_font_get_byte(font, 12);
 8002b02:	7b0b      	ldrb	r3, [r1, #12]
 8002b04:	7303      	strb	r3, [r0, #12]
  font_info->ascent_A = u8g2_font_get_byte(font, 13);
 8002b06:	7b4b      	ldrb	r3, [r1, #13]
 8002b08:	7343      	strb	r3, [r0, #13]
  font_info->descent_g = u8g2_font_get_byte(font, 14);
 8002b0a:	7b8b      	ldrb	r3, [r1, #14]
 8002b0c:	7383      	strb	r3, [r0, #14]
  font_info->ascent_para = u8g2_font_get_byte(font, 15);
 8002b0e:	7bcb      	ldrb	r3, [r1, #15]
 8002b10:	73c3      	strb	r3, [r0, #15]
  font_info->descent_para = u8g2_font_get_byte(font, 16);
 8002b12:	7c0b      	ldrb	r3, [r1, #16]
  font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
 8002b14:	2111      	movs	r1, #17
  font_info->descent_para = u8g2_font_get_byte(font, 16);
 8002b16:	7403      	strb	r3, [r0, #16]
  font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
 8002b18:	4628      	mov	r0, r5
 8002b1a:	f7ff ffad 	bl	8002a78 <u8g2_font_get_word>
  font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
 8002b1e:	2113      	movs	r1, #19
  font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
 8002b20:	8260      	strh	r0, [r4, #18]
  font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
 8002b22:	4628      	mov	r0, r5
 8002b24:	f7ff ffa8 	bl	8002a78 <u8g2_font_get_word>
  font_info->start_pos_unicode = u8g2_font_get_word(font, 21); 
 8002b28:	2115      	movs	r1, #21
  font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
 8002b2a:	82a0      	strh	r0, [r4, #20]
  font_info->start_pos_unicode = u8g2_font_get_word(font, 21); 
 8002b2c:	4628      	mov	r0, r5
 8002b2e:	f7ff ffa3 	bl	8002a78 <u8g2_font_get_word>
 8002b32:	82e0      	strh	r0, [r4, #22]
}
 8002b34:	bd38      	pop	{r3, r4, r5, pc}

08002b36 <u8g2_GetFontBBXHeight>:
}
 8002b36:	f890 0072 	ldrb.w	r0, [r0, #114]	; 0x72
 8002b3a:	4770      	bx	lr

08002b3c <u8g2_font_decode_get_unsigned_bits>:
{
 8002b3c:	b570      	push	{r4, r5, r6, lr}
  uint8_t bit_pos = f->decode_bit_pos;
 8002b3e:	7a84      	ldrb	r4, [r0, #10]
  val = u8x8_pgm_read( f->decode_ptr );  
 8002b40:	6806      	ldr	r6, [r0, #0]
  bit_pos_plus_cnt += cnt;
 8002b42:	1862      	adds	r2, r4, r1
  val >>= bit_pos;
 8002b44:	7833      	ldrb	r3, [r6, #0]
  bit_pos_plus_cnt += cnt;
 8002b46:	b2d2      	uxtb	r2, r2
  if ( bit_pos_plus_cnt >= 8 )
 8002b48:	2a07      	cmp	r2, #7
  val >>= bit_pos;
 8002b4a:	fa43 f504 	asr.w	r5, r3, r4
  if ( bit_pos_plus_cnt >= 8 )
 8002b4e:	d807      	bhi.n	8002b60 <u8g2_font_decode_get_unsigned_bits+0x24>
  val >>= bit_pos;
 8002b50:	b2eb      	uxtb	r3, r5
  f->decode_bit_pos = bit_pos_plus_cnt;
 8002b52:	7282      	strb	r2, [r0, #10]
  val &= (1U<<cnt)-1;
 8002b54:	f04f 30ff 	mov.w	r0, #4294967295
 8002b58:	4088      	lsls	r0, r1
}
 8002b5a:	ea23 0000 	bic.w	r0, r3, r0
 8002b5e:	bd70      	pop	{r4, r5, r6, pc}
    f->decode_ptr++;
 8002b60:	1c73      	adds	r3, r6, #1
 8002b62:	6003      	str	r3, [r0, #0]
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
 8002b64:	7873      	ldrb	r3, [r6, #1]
    s -= bit_pos;
 8002b66:	f1c4 0408 	rsb	r4, r4, #8
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
 8002b6a:	b2e4      	uxtb	r4, r4
 8002b6c:	40a3      	lsls	r3, r4
 8002b6e:	432b      	orrs	r3, r5
    bit_pos_plus_cnt -= 8;
 8002b70:	3a08      	subs	r2, #8
    val |= u8x8_pgm_read( f->decode_ptr ) << (s);
 8002b72:	b2db      	uxtb	r3, r3
    bit_pos_plus_cnt -= 8;
 8002b74:	b2d2      	uxtb	r2, r2
 8002b76:	e7ec      	b.n	8002b52 <u8g2_font_decode_get_unsigned_bits+0x16>

08002b78 <u8g2_font_setup_decode>:
{
 8002b78:	b538      	push	{r3, r4, r5, lr}
  decode->decode_bit_pos = 0;
 8002b7a:	2300      	movs	r3, #0
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
 8002b7c:	f100 0558 	add.w	r5, r0, #88	; 0x58
{
 8002b80:	4604      	mov	r4, r0
  decode->decode_bit_pos = 0;
 8002b82:	f880 3062 	strb.w	r3, [r0, #98]	; 0x62
  decode->decode_ptr = glyph_data;
 8002b86:	6581      	str	r1, [r0, #88]	; 0x58
  decode->glyph_width = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_char_width);
 8002b88:	f890 106c 	ldrb.w	r1, [r0, #108]	; 0x6c
 8002b8c:	4628      	mov	r0, r5
 8002b8e:	f7ff ffd5 	bl	8002b3c <u8g2_font_decode_get_unsigned_bits>
  decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_height);
 8002b92:	f894 106d 	ldrb.w	r1, [r4, #109]	; 0x6d
  decode->glyph_width = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_char_width);
 8002b96:	f884 0060 	strb.w	r0, [r4, #96]	; 0x60
  decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_height);
 8002b9a:	4628      	mov	r0, r5
 8002b9c:	f7ff ffce 	bl	8002b3c <u8g2_font_decode_get_unsigned_bits>
  decode->fg_color = u8g2->draw_color;
 8002ba0:	f894 3086 	ldrb.w	r3, [r4, #134]	; 0x86
  decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_height);
 8002ba4:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  decode->fg_color = u8g2->draw_color;
 8002ba8:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
  decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
 8002bac:	fab3 f383 	clz	r3, r3
 8002bb0:	095b      	lsrs	r3, r3, #5
 8002bb2:	f884 3065 	strb.w	r3, [r4, #101]	; 0x65
}
 8002bb6:	bd38      	pop	{r3, r4, r5, pc}

08002bb8 <u8g2_font_decode_get_signed_bits>:
{
 8002bb8:	b510      	push	{r4, lr}
  v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
 8002bba:	f7ff ffbf 	bl	8002b3c <u8g2_font_decode_get_unsigned_bits>
  d <<= cnt;
 8002bbe:	2301      	movs	r3, #1
  cnt--;
 8002bc0:	1e4c      	subs	r4, r1, #1
  d <<= cnt;
 8002bc2:	b2e4      	uxtb	r4, r4
 8002bc4:	fa03 f404 	lsl.w	r4, r3, r4
  v -= d;
 8002bc8:	1b00      	subs	r0, r0, r4
}
 8002bca:	b240      	sxtb	r0, r0
 8002bcc:	bd10      	pop	{r4, pc}

08002bce <u8g2_font_decode_len>:
{
 8002bce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bd2:	4604      	mov	r4, r0
 8002bd4:	460e      	mov	r6, r1
 8002bd6:	b087      	sub	sp, #28
  lx = decode->x;
 8002bd8:	f890 505e 	ldrb.w	r5, [r0, #94]	; 0x5e
  ly = decode->y;
 8002bdc:	f890 705f 	ldrb.w	r7, [r0, #95]	; 0x5f
{
 8002be0:	9205      	str	r2, [sp, #20]
    rem = decode->glyph_width;
 8002be2:	f894 b060 	ldrb.w	fp, [r4, #96]	; 0x60
    x = u8g2_add_vector_x(x, lx, ly, decode->dir);
 8002be6:	fa4f f987 	sxtb.w	r9, r7
    rem -= lx;
 8002bea:	ebab 0305 	sub.w	r3, fp, r5
 8002bee:	b2db      	uxtb	r3, r3
 8002bf0:	42b3      	cmp	r3, r6
 8002bf2:	9303      	str	r3, [sp, #12]
    if ( cnt < rem )
 8002bf4:	bf28      	it	cs
 8002bf6:	4633      	movcs	r3, r6
 8002bf8:	469a      	mov	sl, r3
    y = decode->target_y;
 8002bfa:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
    x = u8g2_add_vector_x(x, lx, ly, decode->dir);
 8002bfe:	464a      	mov	r2, r9
 8002c00:	b269      	sxtb	r1, r5
    y = decode->target_y;
 8002c02:	9304      	str	r3, [sp, #16]
    x = u8g2_add_vector_x(x, lx, ly, decode->dir);
 8002c04:	f894 005c 	ldrb.w	r0, [r4, #92]	; 0x5c
 8002c08:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8002c0c:	f7ff ff49 	bl	8002aa2 <u8g2_add_vector_x>
 8002c10:	4680      	mov	r8, r0
    y = u8g2_add_vector_y(y, lx, ly, decode->dir);
 8002c12:	9804      	ldr	r0, [sp, #16]
 8002c14:	f7ff ff37 	bl	8002a86 <u8g2_add_vector_y>
    if ( is_foreground )
 8002c18:	9905      	ldr	r1, [sp, #20]
    y = u8g2_add_vector_y(y, lx, ly, decode->dir);
 8002c1a:	4602      	mov	r2, r0
    if ( is_foreground )
 8002c1c:	b1a9      	cbz	r1, 8002c4a <u8g2_font_decode_len+0x7c>
      u8g2->draw_color = decode->fg_color;			/* draw_color will be restored later */
 8002c1e:	f894 1064 	ldrb.w	r1, [r4, #100]	; 0x64
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
 8002c22:	f884 1086 	strb.w	r1, [r4, #134]	; 0x86
      u8g2_DrawHVLine(u8g2, 
 8002c26:	9300      	str	r3, [sp, #0]
 8002c28:	4641      	mov	r1, r8
 8002c2a:	4653      	mov	r3, sl
 8002c2c:	4620      	mov	r0, r4
 8002c2e:	f000 fa15 	bl	800305c <u8g2_DrawHVLine>
    if ( cnt < rem )
 8002c32:	9b03      	ldr	r3, [sp, #12]
 8002c34:	4435      	add	r5, r6
 8002c36:	429e      	cmp	r6, r3
 8002c38:	b2ed      	uxtb	r5, r5
 8002c3a:	d30d      	bcc.n	8002c58 <u8g2_font_decode_len+0x8a>
    cnt -= rem;
 8002c3c:	eba5 060b 	sub.w	r6, r5, fp
    ly++;
 8002c40:	3701      	adds	r7, #1
    lx = 0;
 8002c42:	2500      	movs	r5, #0
    cnt -= rem;
 8002c44:	b2f6      	uxtb	r6, r6
    ly++;
 8002c46:	b2ff      	uxtb	r7, r7
    rem = decode->glyph_width;
 8002c48:	e7cb      	b.n	8002be2 <u8g2_font_decode_len+0x14>
    else if ( decode->is_transparent == 0 )    
 8002c4a:	f894 1063 	ldrb.w	r1, [r4, #99]	; 0x63
 8002c4e:	2900      	cmp	r1, #0
 8002c50:	d1ef      	bne.n	8002c32 <u8g2_font_decode_len+0x64>
      u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
 8002c52:	f894 1065 	ldrb.w	r1, [r4, #101]	; 0x65
 8002c56:	e7e4      	b.n	8002c22 <u8g2_font_decode_len+0x54>
  decode->x = lx;
 8002c58:	f884 505e 	strb.w	r5, [r4, #94]	; 0x5e
  decode->y = ly;
 8002c5c:	f884 905f 	strb.w	r9, [r4, #95]	; 0x5f
}
 8002c60:	b007      	add	sp, #28
 8002c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08002c66 <u8g2_font_decode_glyph>:
{
 8002c66:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c6a:	4604      	mov	r4, r0
  u8g2_font_decode_t *decode = &(u8g2->font_decode);
 8002c6c:	f100 0758 	add.w	r7, r0, #88	; 0x58
  u8g2_font_setup_decode(u8g2, glyph_data);
 8002c70:	f7ff ff82 	bl	8002b78 <u8g2_font_setup_decode>
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
 8002c74:	f894 106e 	ldrb.w	r1, [r4, #110]	; 0x6e
 8002c78:	4638      	mov	r0, r7
  h = u8g2->font_decode.glyph_height;
 8002c7a:	f994 9061 	ldrsb.w	r9, [r4, #97]	; 0x61
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
 8002c7e:	f7ff ff9b 	bl	8002bb8 <u8g2_font_decode_get_signed_bits>
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
 8002c82:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
  x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
 8002c86:	4683      	mov	fp, r0
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
 8002c88:	4638      	mov	r0, r7
 8002c8a:	f7ff ff95 	bl	8002bb8 <u8g2_font_decode_get_signed_bits>
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
 8002c8e:	f894 1070 	ldrb.w	r1, [r4, #112]	; 0x70
  y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
 8002c92:	4606      	mov	r6, r0
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
 8002c94:	4638      	mov	r0, r7
 8002c96:	f7ff ff8f 	bl	8002bb8 <u8g2_font_decode_get_signed_bits>
  if ( decode->glyph_width > 0 )
 8002c9a:	f994 a060 	ldrsb.w	sl, [r4, #96]	; 0x60
  d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
 8002c9e:	4680      	mov	r8, r0
  if ( decode->glyph_width > 0 )
 8002ca0:	f1ba 0f00 	cmp.w	sl, #0
 8002ca4:	dd4d      	ble.n	8002d42 <u8g2_font_decode_glyph+0xdc>
    decode->target_x = u8g2_add_vector_x(decode->target_x, x, -(h+y), decode->dir);
 8002ca6:	fa5f f589 	uxtb.w	r5, r9
 8002caa:	19aa      	adds	r2, r5, r6
 8002cac:	4252      	negs	r2, r2
 8002cae:	b252      	sxtb	r2, r2
 8002cb0:	4659      	mov	r1, fp
 8002cb2:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8002cb6:	f894 005c 	ldrb.w	r0, [r4, #92]	; 0x5c
 8002cba:	f7ff fef2 	bl	8002aa2 <u8g2_add_vector_x>
 8002cbe:	f884 005c 	strb.w	r0, [r4, #92]	; 0x5c
 8002cc2:	4606      	mov	r6, r0
    decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
 8002cc4:	f894 005d 	ldrb.w	r0, [r4, #93]	; 0x5d
 8002cc8:	f7ff fedd 	bl	8002a86 <u8g2_add_vector_y>
 8002ccc:	4602      	mov	r2, r0
 8002cce:	f884 005d 	strb.w	r0, [r4, #93]	; 0x5d
      switch(decode->dir)
 8002cd2:	2b03      	cmp	r3, #3
 8002cd4:	d85c      	bhi.n	8002d90 <u8g2_font_decode_glyph+0x12a>
 8002cd6:	e8df f003 	tbb	[pc, r3]
 8002cda:	3802      	.short	0x3802
 8002cdc:	5144      	.short	0x5144
	    x1 += decode->glyph_width;
 8002cde:	eb06 010a 	add.w	r1, r6, sl
	    y1 += h;
 8002ce2:	4405      	add	r5, r0
	    x1 += decode->glyph_width;
 8002ce4:	b2cb      	uxtb	r3, r1
	    y1 += h;
 8002ce6:	b2e9      	uxtb	r1, r5
      if ( u8g2_IsIntersection(u8g2, x0, y0, x1, y1) == 0 ) 
 8002ce8:	9100      	str	r1, [sp, #0]
 8002cea:	4620      	mov	r0, r4
 8002cec:	4631      	mov	r1, r6
 8002cee:	f000 fa2c 	bl	800314a <u8g2_IsIntersection>
 8002cf2:	b330      	cbz	r0, 8002d42 <u8g2_font_decode_glyph+0xdc>
    decode->x = 0;
 8002cf4:	2300      	movs	r3, #0
 8002cf6:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
      a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
 8002cfa:	f894 106a 	ldrb.w	r1, [r4, #106]	; 0x6a
 8002cfe:	4638      	mov	r0, r7
 8002d00:	f7ff ff1c 	bl	8002b3c <u8g2_font_decode_get_unsigned_bits>
      b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
 8002d04:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
      a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
 8002d08:	4606      	mov	r6, r0
      b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
 8002d0a:	4638      	mov	r0, r7
 8002d0c:	f7ff ff16 	bl	8002b3c <u8g2_font_decode_get_unsigned_bits>
 8002d10:	4605      	mov	r5, r0
	u8g2_font_decode_len(u8g2, a, 0);
 8002d12:	2200      	movs	r2, #0
 8002d14:	4631      	mov	r1, r6
 8002d16:	4620      	mov	r0, r4
 8002d18:	f7ff ff59 	bl	8002bce <u8g2_font_decode_len>
	u8g2_font_decode_len(u8g2, b, 1);
 8002d1c:	4629      	mov	r1, r5
 8002d1e:	4620      	mov	r0, r4
 8002d20:	2201      	movs	r2, #1
 8002d22:	f7ff ff54 	bl	8002bce <u8g2_font_decode_len>
      } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
 8002d26:	2101      	movs	r1, #1
 8002d28:	4638      	mov	r0, r7
 8002d2a:	f7ff ff07 	bl	8002b3c <u8g2_font_decode_get_unsigned_bits>
 8002d2e:	2800      	cmp	r0, #0
 8002d30:	d1ef      	bne.n	8002d12 <u8g2_font_decode_glyph+0xac>
      if ( decode->y >= h )
 8002d32:	f994 305f 	ldrsb.w	r3, [r4, #95]	; 0x5f
 8002d36:	454b      	cmp	r3, r9
 8002d38:	dbdf      	blt.n	8002cfa <u8g2_font_decode_glyph+0x94>
    u8g2->draw_color = decode->fg_color;
 8002d3a:	f894 3064 	ldrb.w	r3, [r4, #100]	; 0x64
 8002d3e:	f884 3086 	strb.w	r3, [r4, #134]	; 0x86
}
 8002d42:	4640      	mov	r0, r8
 8002d44:	b003      	add	sp, #12
 8002d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d4a:	f1c5 0501 	rsb	r5, r5, #1
 8002d4e:	eb06 0c05 	add.w	ip, r6, r5
	    y1 += decode->glyph_width;
 8002d52:	eb00 010a 	add.w	r1, r0, sl
	    x1++;
 8002d56:	3601      	adds	r6, #1
 8002d58:	b2f3      	uxtb	r3, r6
	    y1 += decode->glyph_width;
 8002d5a:	b2c9      	uxtb	r1, r1
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d5c:	fa5f f68c 	uxtb.w	r6, ip
	    break;	  
 8002d60:	e7c2      	b.n	8002ce8 <u8g2_font_decode_glyph+0x82>
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d62:	f1ca 0101 	rsb	r1, sl, #1
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d66:	f1c5 0501 	rsb	r5, r5, #1
	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d6a:	eb06 0c01 	add.w	ip, r6, r1
	    y1++;
 8002d6e:	3201      	adds	r2, #1
	    x1++;
 8002d70:	3601      	adds	r6, #1
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d72:	4405      	add	r5, r0
	    y1++;
 8002d74:	b2d1      	uxtb	r1, r2
	    x1++;
 8002d76:	b2f3      	uxtb	r3, r6
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d78:	b2ea      	uxtb	r2, r5
 8002d7a:	e7ef      	b.n	8002d5c <u8g2_font_decode_glyph+0xf6>
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d7c:	f1ca 0a01 	rsb	sl, sl, #1
	    y1++;
 8002d80:	3201      	adds	r2, #1
	    x1 += h;
 8002d82:	19ab      	adds	r3, r5, r6
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d84:	4482      	add	sl, r0
	    y1++;
 8002d86:	b2d1      	uxtb	r1, r2
	    x1 += h;
 8002d88:	b2db      	uxtb	r3, r3
	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 8002d8a:	fa5f f28a 	uxtb.w	r2, sl
	    break;	  
 8002d8e:	e7ab      	b.n	8002ce8 <u8g2_font_decode_glyph+0x82>
    decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
 8002d90:	4601      	mov	r1, r0
 8002d92:	4633      	mov	r3, r6
 8002d94:	e7a8      	b.n	8002ce8 <u8g2_font_decode_glyph+0x82>

08002d96 <u8g2_font_get_glyph_data>:
  const uint8_t *font = u8g2->font;
 8002d96:	6d03      	ldr	r3, [r0, #80]	; 0x50
  if ( encoding <= 255 )
 8002d98:	29ff      	cmp	r1, #255	; 0xff
{
 8002d9a:	b570      	push	{r4, r5, r6, lr}
  font += U8G2_FONT_DATA_STRUCT_SIZE;
 8002d9c:	f103 0317 	add.w	r3, r3, #23
{
 8002da0:	460d      	mov	r5, r1
  if ( encoding <= 255 )
 8002da2:	d812      	bhi.n	8002dca <u8g2_font_get_glyph_data+0x34>
    if ( encoding >= 'a' )
 8002da4:	2960      	cmp	r1, #96	; 0x60
 8002da6:	d909      	bls.n	8002dbc <u8g2_font_get_glyph_data+0x26>
      font += u8g2->font_info.start_pos_lower_a;
 8002da8:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
      font += u8g2->font_info.start_pos_upper_A;
 8002dac:	4413      	add	r3, r2
      if ( u8x8_pgm_read( font + 1 ) == 0 )
 8002dae:	7858      	ldrb	r0, [r3, #1]
 8002db0:	b118      	cbz	r0, 8002dba <u8g2_font_get_glyph_data+0x24>
      if ( u8x8_pgm_read( font ) == encoding )
 8002db2:	781a      	ldrb	r2, [r3, #0]
 8002db4:	42aa      	cmp	r2, r5
 8002db6:	d106      	bne.n	8002dc6 <u8g2_font_get_glyph_data+0x30>
	return font+2;	/* skip encoding and glyph size */
 8002db8:	1c98      	adds	r0, r3, #2
}
 8002dba:	bd70      	pop	{r4, r5, r6, pc}
    else if ( encoding >= 'A' )
 8002dbc:	2940      	cmp	r1, #64	; 0x40
 8002dbe:	d9f6      	bls.n	8002dae <u8g2_font_get_glyph_data+0x18>
      font += u8g2->font_info.start_pos_upper_A;
 8002dc0:	f8b0 207a 	ldrh.w	r2, [r0, #122]	; 0x7a
 8002dc4:	e7f2      	b.n	8002dac <u8g2_font_get_glyph_data+0x16>
      font += u8x8_pgm_read( font + 1 );
 8002dc6:	4403      	add	r3, r0
      if ( u8x8_pgm_read( font + 1 ) == 0 )
 8002dc8:	e7f1      	b.n	8002dae <u8g2_font_get_glyph_data+0x18>
    font += u8g2->font_info.start_pos_unicode;
 8002dca:	f8b0 407e 	ldrh.w	r4, [r0, #126]	; 0x7e
 8002dce:	441c      	add	r4, r3
    unicode_lookup_table = font; 
 8002dd0:	4626      	mov	r6, r4
      font += u8g2_font_get_word(unicode_lookup_table, 0);
 8002dd2:	2100      	movs	r1, #0
 8002dd4:	4630      	mov	r0, r6
 8002dd6:	f7ff fe4f 	bl	8002a78 <u8g2_font_get_word>
      e = u8g2_font_get_word(unicode_lookup_table, 2);
 8002dda:	2102      	movs	r1, #2
      font += u8g2_font_get_word(unicode_lookup_table, 0);
 8002ddc:	4404      	add	r4, r0
      e = u8g2_font_get_word(unicode_lookup_table, 2);
 8002dde:	4630      	mov	r0, r6
 8002de0:	f7ff fe4a 	bl	8002a78 <u8g2_font_get_word>
    } while( e < encoding );
 8002de4:	4285      	cmp	r5, r0
      unicode_lookup_table+=4;
 8002de6:	f106 0604 	add.w	r6, r6, #4
    } while( e < encoding );
 8002dea:	d8f2      	bhi.n	8002dd2 <u8g2_font_get_glyph_data+0x3c>
      e |= u8x8_pgm_read( font + 1 );
 8002dec:	8820      	ldrh	r0, [r4, #0]
 8002dee:	ba40      	rev16	r0, r0
 8002df0:	b280      	uxth	r0, r0
      if ( e == 0 )
 8002df2:	2800      	cmp	r0, #0
 8002df4:	d0e1      	beq.n	8002dba <u8g2_font_get_glyph_data+0x24>
      if ( e == encoding )
 8002df6:	4285      	cmp	r5, r0
 8002df8:	d101      	bne.n	8002dfe <u8g2_font_get_glyph_data+0x68>
	return font+3;	/* skip encoding and glyph size */
 8002dfa:	1ce0      	adds	r0, r4, #3
 8002dfc:	e7dd      	b.n	8002dba <u8g2_font_get_glyph_data+0x24>
      font += u8x8_pgm_read( font + 2 );
 8002dfe:	78a3      	ldrb	r3, [r4, #2]
 8002e00:	441c      	add	r4, r3
      e = u8x8_pgm_read( font );
 8002e02:	e7f3      	b.n	8002dec <u8g2_font_get_glyph_data+0x56>

08002e04 <u8g2_GetGlyphHorizontalProperties>:
  
  return w;  
}

static void u8g2_GetGlyphHorizontalProperties(u8g2_t *u8g2, uint16_t requested_encoding, uint8_t *w, int8_t *ox, int8_t *dx)
{
 8002e04:	b570      	push	{r4, r5, r6, lr}
 8002e06:	4604      	mov	r4, r0
 8002e08:	4615      	mov	r5, r2
 8002e0a:	461e      	mov	r6, r3
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
 8002e0c:	f7ff ffc3 	bl	8002d96 <u8g2_font_get_glyph_data>
  if ( glyph_data == NULL )
 8002e10:	4601      	mov	r1, r0
 8002e12:	b1c8      	cbz	r0, 8002e48 <u8g2_GetGlyphHorizontalProperties+0x44>
    return; 
  
  u8g2_font_setup_decode(u8g2, glyph_data);
 8002e14:	4620      	mov	r0, r4
 8002e16:	f7ff feaf 	bl	8002b78 <u8g2_font_setup_decode>
  *w = u8g2->font_decode.glyph_width;
 8002e1a:	f894 3060 	ldrb.w	r3, [r4, #96]	; 0x60
 8002e1e:	702b      	strb	r3, [r5, #0]
  *ox =  u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_x);
 8002e20:	f104 0558 	add.w	r5, r4, #88	; 0x58
 8002e24:	f894 106e 	ldrb.w	r1, [r4, #110]	; 0x6e
 8002e28:	4628      	mov	r0, r5
 8002e2a:	f7ff fec5 	bl	8002bb8 <u8g2_font_decode_get_signed_bits>
 8002e2e:	7030      	strb	r0, [r6, #0]
  u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
 8002e30:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8002e34:	4628      	mov	r0, r5
 8002e36:	f7ff febf 	bl	8002bb8 <u8g2_font_decode_get_signed_bits>
  *dx = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_delta_x);
 8002e3a:	4628      	mov	r0, r5
 8002e3c:	f894 1070 	ldrb.w	r1, [r4, #112]	; 0x70
 8002e40:	f7ff feba 	bl	8002bb8 <u8g2_font_decode_get_signed_bits>
 8002e44:	9b04      	ldr	r3, [sp, #16]
 8002e46:	7018      	strb	r0, [r3, #0]
}
 8002e48:	bd70      	pop	{r4, r5, r6, pc}

08002e4a <u8g2_DrawGlyph>:
{
 8002e4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e4c:	461f      	mov	r7, r3
 8002e4e:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 8002e52:	4604      	mov	r4, r0
 8002e54:	460e      	mov	r6, r1
 8002e56:	4615      	mov	r5, r2
 8002e58:	2b03      	cmp	r3, #3
 8002e5a:	d807      	bhi.n	8002e6c <u8g2_DrawGlyph+0x22>
 8002e5c:	e8df f003 	tbb	[pc, r3]
 8002e60:	1e1a1502 	.word	0x1e1a1502
      y += u8g2->font_calc_vref(u8g2);
 8002e64:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8002e66:	4798      	blx	r3
 8002e68:	4405      	add	r5, r0
      y -= u8g2->font_calc_vref(u8g2);
 8002e6a:	b2ed      	uxtb	r5, r5
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
 8002e6c:	4639      	mov	r1, r7
 8002e6e:	4620      	mov	r0, r4
  u8g2->font_decode.target_x = x;
 8002e70:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
  u8g2->font_decode.target_y = y;
 8002e74:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
  const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
 8002e78:	f7ff ff8d 	bl	8002d96 <u8g2_font_get_glyph_data>
  if ( glyph_data != NULL )
 8002e7c:	4601      	mov	r1, r0
 8002e7e:	b118      	cbz	r0, 8002e88 <u8g2_DrawGlyph+0x3e>
    dx = u8g2_font_decode_glyph(u8g2, glyph_data);
 8002e80:	4620      	mov	r0, r4
 8002e82:	f7ff fef0 	bl	8002c66 <u8g2_font_decode_glyph>
 8002e86:	b2c0      	uxtb	r0, r0
}
 8002e88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      x -= u8g2->font_calc_vref(u8g2);
 8002e8a:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8002e8c:	4798      	blx	r3
 8002e8e:	1a36      	subs	r6, r6, r0
      x += u8g2->font_calc_vref(u8g2);
 8002e90:	b2f6      	uxtb	r6, r6
      break;
 8002e92:	e7eb      	b.n	8002e6c <u8g2_DrawGlyph+0x22>
      y -= u8g2->font_calc_vref(u8g2);
 8002e94:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8002e96:	4798      	blx	r3
 8002e98:	1a2d      	subs	r5, r5, r0
 8002e9a:	e7e6      	b.n	8002e6a <u8g2_DrawGlyph+0x20>
      x += u8g2->font_calc_vref(u8g2);
 8002e9c:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8002e9e:	4798      	blx	r3
 8002ea0:	4406      	add	r6, r0
 8002ea2:	e7f5      	b.n	8002e90 <u8g2_DrawGlyph+0x46>

08002ea4 <u8g2_draw_string>:
{
 8002ea4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002ea8:	461e      	mov	r6, r3
 8002eaa:	4607      	mov	r7, r0
 8002eac:	460c      	mov	r4, r1
 8002eae:	4615      	mov	r5, r2
  sum = 0;
 8002eb0:	f04f 0a00 	mov.w	sl, #0
  u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 8002eb4:	f000 fa58 	bl	8003368 <u8x8_utf8_init>
    if ( e == 0x0ffff )
 8002eb8:	f64f 78ff 	movw	r8, #65535	; 0xffff
    if ( e != 0x0fffe )
 8002ebc:	f64f 79fe 	movw	r9, #65534	; 0xfffe
 8002ec0:	3e01      	subs	r6, #1
    e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	4638      	mov	r0, r7
 8002ec6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002eca:	4798      	blx	r3
    if ( e == 0x0ffff )
 8002ecc:	4540      	cmp	r0, r8
    e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 8002ece:	4603      	mov	r3, r0
    if ( e == 0x0ffff )
 8002ed0:	d01b      	beq.n	8002f0a <u8g2_draw_string+0x66>
    if ( e != 0x0fffe )
 8002ed2:	4548      	cmp	r0, r9
 8002ed4:	d0f5      	beq.n	8002ec2 <u8g2_draw_string+0x1e>
      delta = u8g2_DrawGlyph(u8g2, x, y, e);
 8002ed6:	462a      	mov	r2, r5
 8002ed8:	4621      	mov	r1, r4
 8002eda:	4638      	mov	r0, r7
 8002edc:	f7ff ffb5 	bl	8002e4a <u8g2_DrawGlyph>
      switch(u8g2->font_decode.dir)
 8002ee0:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002ee4:	2b03      	cmp	r3, #3
 8002ee6:	d805      	bhi.n	8002ef4 <u8g2_draw_string+0x50>
 8002ee8:	e8df f003 	tbb	[pc, r3]
 8002eec:	0d0b0802 	.word	0x0d0b0802
	  x += delta;
 8002ef0:	4404      	add	r4, r0
	  x -= delta;
 8002ef2:	b2e4      	uxtb	r4, r4
      sum += delta;    
 8002ef4:	4450      	add	r0, sl
 8002ef6:	fa5f fa80 	uxtb.w	sl, r0
 8002efa:	e7e2      	b.n	8002ec2 <u8g2_draw_string+0x1e>
	  y += delta;
 8002efc:	4405      	add	r5, r0
	  y -= delta;
 8002efe:	b2ed      	uxtb	r5, r5
	  break;
 8002f00:	e7f8      	b.n	8002ef4 <u8g2_draw_string+0x50>
	  x -= delta;
 8002f02:	1a24      	subs	r4, r4, r0
 8002f04:	e7f5      	b.n	8002ef2 <u8g2_draw_string+0x4e>
	  y -= delta;
 8002f06:	1a2d      	subs	r5, r5, r0
 8002f08:	e7f9      	b.n	8002efe <u8g2_draw_string+0x5a>
}
 8002f0a:	4650      	mov	r0, sl
 8002f0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08002f10 <u8g2_DrawStr>:
{
 8002f10:	b410      	push	{r4}
  u8g2->u8x8.next_cb = u8x8_ascii_next;
 8002f12:	4c02      	ldr	r4, [pc, #8]	; (8002f1c <u8g2_DrawStr+0xc>)
 8002f14:	6044      	str	r4, [r0, #4]
}
 8002f16:	bc10      	pop	{r4}
  return u8g2_draw_string(u8g2, x, y, str);
 8002f18:	f7ff bfc4 	b.w	8002ea4 <u8g2_draw_string>
 8002f1c:	08003359 	.word	0x08003359

08002f20 <u8g2_UpdateRefHeight>:
  if ( u8g2->font == NULL )
 8002f20:	6d03      	ldr	r3, [r0, #80]	; 0x50
{
 8002f22:	b510      	push	{r4, lr}
  if ( u8g2->font == NULL )
 8002f24:	b1c3      	cbz	r3, 8002f58 <u8g2_UpdateRefHeight+0x38>
  u8g2->font_ref_ascent = u8g2->font_info.ascent_A;
 8002f26:	f990 4075 	ldrsb.w	r4, [r0, #117]	; 0x75
  u8g2->font_ref_descent = u8g2->font_info.descent_g;
 8002f2a:	f990 1076 	ldrsb.w	r1, [r0, #118]	; 0x76
  if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
 8002f2e:	f890 3081 	ldrb.w	r3, [r0, #129]	; 0x81
  u8g2->font_ref_ascent = u8g2->font_info.ascent_A;
 8002f32:	f880 4082 	strb.w	r4, [r0, #130]	; 0x82
  u8g2->font_ref_descent = u8g2->font_info.descent_g;
 8002f36:	f880 1083 	strb.w	r1, [r0, #131]	; 0x83
  if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
 8002f3a:	b16b      	cbz	r3, 8002f58 <u8g2_UpdateRefHeight+0x38>
  else if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_XTEXT )
 8002f3c:	2b01      	cmp	r3, #1
 8002f3e:	d10c      	bne.n	8002f5a <u8g2_UpdateRefHeight+0x3a>
    if ( u8g2->font_ref_ascent < u8g2->font_info.ascent_para )
 8002f40:	f990 3077 	ldrsb.w	r3, [r0, #119]	; 0x77
 8002f44:	429c      	cmp	r4, r3
      u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
 8002f46:	bfb8      	it	lt
 8002f48:	f880 3082 	strblt.w	r3, [r0, #130]	; 0x82
    if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
 8002f4c:	f990 3078 	ldrsb.w	r3, [r0, #120]	; 0x78
 8002f50:	4299      	cmp	r1, r3
 8002f52:	dd01      	ble.n	8002f58 <u8g2_UpdateRefHeight+0x38>
      u8g2->font_ref_descent = u8g2->font_info.descent_para;
 8002f54:	f880 3083 	strb.w	r3, [r0, #131]	; 0x83
}
 8002f58:	bd10      	pop	{r4, pc}
    if ( u8g2->font_ref_ascent < u8g2->font_info.max_char_height+u8g2->font_info.y_offset )
 8002f5a:	f990 2074 	ldrsb.w	r2, [r0, #116]	; 0x74
 8002f5e:	f990 3072 	ldrsb.w	r3, [r0, #114]	; 0x72
 8002f62:	4413      	add	r3, r2
 8002f64:	429c      	cmp	r4, r3
      u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
 8002f66:	bfb8      	it	lt
 8002f68:	f880 3082 	strblt.w	r3, [r0, #130]	; 0x82
    if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
 8002f6c:	4291      	cmp	r1, r2
      u8g2->font_ref_descent = u8g2->font_info.y_offset;
 8002f6e:	bfc8      	it	gt
 8002f70:	f880 2083 	strbgt.w	r2, [r0, #131]	; 0x83
 8002f74:	e7f0      	b.n	8002f58 <u8g2_UpdateRefHeight+0x38>
	...

08002f78 <u8g2_SetFontPosBaseline>:
  u8g2->font_calc_vref = u8g2_font_calc_vref_font;
 8002f78:	4b01      	ldr	r3, [pc, #4]	; (8002f80 <u8g2_SetFontPosBaseline+0x8>)
 8002f7a:	6543      	str	r3, [r0, #84]	; 0x54
}
 8002f7c:	4770      	bx	lr
 8002f7e:	bf00      	nop
 8002f80:	08002abf 	.word	0x08002abf

08002f84 <u8g2_SetFontPosTop>:
  u8g2->font_calc_vref = u8g2_font_calc_vref_top;
 8002f84:	4b01      	ldr	r3, [pc, #4]	; (8002f8c <u8g2_SetFontPosTop+0x8>)
 8002f86:	6543      	str	r3, [r0, #84]	; 0x54
}
 8002f88:	4770      	bx	lr
 8002f8a:	bf00      	nop
 8002f8c:	08002ac3 	.word	0x08002ac3

08002f90 <u8g2_SetFont>:
  if ( u8g2->font != font )
 8002f90:	6d02      	ldr	r2, [r0, #80]	; 0x50
{
 8002f92:	b510      	push	{r4, lr}
  if ( u8g2->font != font )
 8002f94:	428a      	cmp	r2, r1
{
 8002f96:	4604      	mov	r4, r0
  if ( u8g2->font != font )
 8002f98:	d008      	beq.n	8002fac <u8g2_SetFont+0x1c>
    u8g2->font = font;
 8002f9a:	6501      	str	r1, [r0, #80]	; 0x50
    u8g2_read_font_info(&(u8g2->font_info), font);
 8002f9c:	3068      	adds	r0, #104	; 0x68
 8002f9e:	f7ff fd95 	bl	8002acc <u8g2_read_font_info>
    u8g2_UpdateRefHeight(u8g2);
 8002fa2:	4620      	mov	r0, r4
}
 8002fa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    u8g2_UpdateRefHeight(u8g2);
 8002fa8:	f7ff bfba 	b.w	8002f20 <u8g2_UpdateRefHeight>
}
 8002fac:	bd10      	pop	{r4, pc}
	...

08002fb0 <u8g2_GetExactStrWidth>:
  u8g2->u8x8.next_cb = u8x8_ascii_next;
  return u8g2_string_width(u8g2, s);
}

u8g2_uint_t u8g2_GetExactStrWidth(u8g2_t *u8g2, const char *s)
{
 8002fb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002fb4:	4605      	mov	r5, r0
 8002fb6:	460e      	mov	r6, r1
  } while( enc == 0x0fffe );
 8002fb8:	f64f 74fe 	movw	r4, #65534	; 0xfffe
  u8g2->u8x8.next_cb = u8x8_ascii_next;
 8002fbc:	4b20      	ldr	r3, [pc, #128]	; (8003040 <u8g2_GetExactStrWidth+0x90>)
{
 8002fbe:	b085      	sub	sp, #20
  u8g2->u8x8.next_cb = u8x8_ascii_next;
 8002fc0:	6043      	str	r3, [r0, #4]
    enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 8002fc2:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002fc6:	4628      	mov	r0, r5
 8002fc8:	686b      	ldr	r3, [r5, #4]
 8002fca:	4798      	blx	r3
  } while( enc == 0x0fffe );
 8002fcc:	42a0      	cmp	r0, r4
    enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 8002fce:	4601      	mov	r1, r0
  } while( enc == 0x0fffe );
 8002fd0:	d0f7      	beq.n	8002fc2 <u8g2_GetExactStrWidth+0x12>
  if ( enc== 0x0ffff )
 8002fd2:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8002fd6:	4540      	cmp	r0, r8
 8002fd8:	d030      	beq.n	800303c <u8g2_GetExactStrWidth+0x8c>
    } while( enc == 0x0fffe );
 8002fda:	f64f 79fe 	movw	r9, #65534	; 0xfffe
  u8g2_GetGlyphHorizontalProperties(u8g2, enc, &gw, &ox, &dx);  
 8002fde:	f10d 070f 	add.w	r7, sp, #15
 8002fe2:	4628      	mov	r0, r5
 8002fe4:	9700      	str	r7, [sp, #0]
 8002fe6:	f10d 030e 	add.w	r3, sp, #14
 8002fea:	f10d 020d 	add.w	r2, sp, #13
 8002fee:	f7ff ff09 	bl	8002e04 <u8g2_GetGlyphHorizontalProperties>
  w = -ox;  
 8002ff2:	f89d 400e 	ldrb.w	r4, [sp, #14]
 8002ff6:	4264      	negs	r4, r4
 8002ff8:	b2e4      	uxtb	r4, r4
      enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 8002ffa:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002ffe:	4628      	mov	r0, r5
 8003000:	686b      	ldr	r3, [r5, #4]
 8003002:	4798      	blx	r3
    } while( enc == 0x0fffe );
 8003004:	4548      	cmp	r0, r9
      enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 8003006:	4601      	mov	r1, r0
    } while( enc == 0x0fffe );
 8003008:	d0f7      	beq.n	8002ffa <u8g2_GetExactStrWidth+0x4a>
    if ( enc== 0x0ffff )
 800300a:	4540      	cmp	r0, r8
 800300c:	d00c      	beq.n	8003028 <u8g2_GetExactStrWidth+0x78>
    u8g2_GetGlyphHorizontalProperties(u8g2, enc, &gw, &ox, &dx);  
 800300e:	4628      	mov	r0, r5
 8003010:	9700      	str	r7, [sp, #0]
 8003012:	f10d 030e 	add.w	r3, sp, #14
 8003016:	f10d 020d 	add.w	r2, sp, #13
 800301a:	f7ff fef3 	bl	8002e04 <u8g2_GetGlyphHorizontalProperties>
    w += dx;    
 800301e:	f89d 000f 	ldrb.w	r0, [sp, #15]
 8003022:	4404      	add	r4, r0
 8003024:	b2e4      	uxtb	r4, r4
  for(;;)
 8003026:	e7e8      	b.n	8002ffa <u8g2_GetExactStrWidth+0x4a>
    w += ox;
 8003028:	f89d 000d 	ldrb.w	r0, [sp, #13]
 800302c:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8003030:	4418      	add	r0, r3
 8003032:	4420      	add	r0, r4
 8003034:	b2c0      	uxtb	r0, r0
  return u8g2_calculate_exact_string_width(u8g2, s);
}
 8003036:	b005      	add	sp, #20
 8003038:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
     return w;
 800303c:	2000      	movs	r0, #0
 800303e:	e7fa      	b.n	8003036 <u8g2_GetExactStrWidth+0x86>
 8003040:	08003359 	.word	0x08003359

08003044 <u8g2_draw_hv_line_2dir>:
  This function first adjusts the y position to the local buffer. Then it
  will clip the line and call u8g2_draw_low_level_hv_line()

*/
void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
 8003044:	b470      	push	{r4, r5, r6}

  /* clipping happens before the display rotation */

  /* transform to pixel buffer coordinates */
  y -= u8g2->pixel_curr_row;
 8003046:	f890 6040 	ldrb.w	r6, [r0, #64]	; 0x40
{
 800304a:	f89d 500c 	ldrb.w	r5, [sp, #12]
  
  u8g2->ll_hvline(u8g2, x, y, len, dir);
 800304e:	6b04      	ldr	r4, [r0, #48]	; 0x30
  y -= u8g2->pixel_curr_row;
 8003050:	1b92      	subs	r2, r2, r6
  u8g2->ll_hvline(u8g2, x, y, len, dir);
 8003052:	46a4      	mov	ip, r4
 8003054:	9503      	str	r5, [sp, #12]
 8003056:	b2d2      	uxtb	r2, r2
}
 8003058:	bc70      	pop	{r4, r5, r6}
  u8g2->ll_hvline(u8g2, x, y, len, dir);
 800305a:	4760      	bx	ip

0800305c <u8g2_DrawHVLine>:
  This function should be called by the user.
  
  "dir" may have 4 directions: 0 (left to right), 1, 2, 3 (down up)
*/
void u8g2_DrawHVLine(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
 800305c:	b470      	push	{r4, r5, r6}
  /* Make a call to the callback function (e.g. u8g2_draw_l90_r0). */
  /* The callback may rotate the hv line */
  /* after rotation this will call u8g2_draw_hv_line_4dir() */
  
#ifdef U8G2_WITH_CLIP_WINDOW_SUPPORT
  if ( u8g2->is_page_clip_window_intersection != 0 )
 800305e:	f890 4080 	ldrb.w	r4, [r0, #128]	; 0x80
{
 8003062:	f89d 500c 	ldrb.w	r5, [sp, #12]
  if ( u8g2->is_page_clip_window_intersection != 0 )
 8003066:	2c00      	cmp	r4, #0
 8003068:	d03a      	beq.n	80030e0 <u8g2_DrawHVLine+0x84>
#endif /* U8G2_WITH_CLIP_WINDOW_SUPPORT */
    if ( len != 0 )
 800306a:	2b00      	cmp	r3, #0
 800306c:	d038      	beq.n	80030e0 <u8g2_DrawHVLine+0x84>
    {
    
      /* convert to two directions */    
      if ( len > 1 )
 800306e:	2b01      	cmp	r3, #1
 8003070:	d904      	bls.n	800307c <u8g2_DrawHVLine+0x20>
      {
	if ( dir == 2 )
 8003072:	2d02      	cmp	r5, #2
 8003074:	d12b      	bne.n	80030ce <u8g2_DrawHVLine+0x72>
	{
	  x -= len;
	  x++;
 8003076:	3101      	adds	r1, #1
 8003078:	1ac9      	subs	r1, r1, r3
 800307a:	b2c9      	uxtb	r1, r1
	}
      }
      dir &= 1;  
      
      /* clip against the user window */
      if ( dir == 0 )
 800307c:	f015 0501 	ands.w	r5, r5, #1
 8003080:	d130      	bne.n	80030e4 <u8g2_DrawHVLine+0x88>
      {
	if ( y < u8g2->user_y0 )
 8003082:	f890 4047 	ldrb.w	r4, [r0, #71]	; 0x47
 8003086:	4294      	cmp	r4, r2
 8003088:	d82a      	bhi.n	80030e0 <u8g2_DrawHVLine+0x84>
	  return;
	if ( y >= u8g2->user_y1 )
 800308a:	f890 4048 	ldrb.w	r4, [r0, #72]	; 0x48
 800308e:	4294      	cmp	r4, r2
 8003090:	d926      	bls.n	80030e0 <u8g2_DrawHVLine+0x84>
  b += *len;
 8003092:	440b      	add	r3, r1
 8003094:	b2db      	uxtb	r3, r3
  if ( a > b )
 8003096:	428b      	cmp	r3, r1
	  return;
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
 8003098:	f890 6045 	ldrb.w	r6, [r0, #69]	; 0x45
 800309c:	f890 4046 	ldrb.w	r4, [r0, #70]	; 0x46
  if ( a > b )
 80030a0:	d21c      	bcs.n	80030dc <u8g2_DrawHVLine+0x80>
    if ( a < d )
 80030a2:	428c      	cmp	r4, r1
 80030a4:	d919      	bls.n	80030da <u8g2_DrawHVLine+0x7e>
      b--;
 80030a6:	1e63      	subs	r3, r4, #1
 80030a8:	b2db      	uxtb	r3, r3
  if ( b <= c )
 80030aa:	429e      	cmp	r6, r3
 80030ac:	d218      	bcs.n	80030e0 <u8g2_DrawHVLine+0x84>
  if ( a < c )		
 80030ae:	42b1      	cmp	r1, r6
 80030b0:	bf38      	it	cc
 80030b2:	4631      	movcc	r1, r6
  b -= a;
 80030b4:	429c      	cmp	r4, r3
 80030b6:	bf94      	ite	ls
 80030b8:	ebc1 0404 	rsbls	r4, r1, r4
 80030bc:	ebc1 0403 	rsbhi	r4, r1, r3
 80030c0:	b2e3      	uxtb	r3, r4
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
	  return;
      }
      
      
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
 80030c2:	6b44      	ldr	r4, [r0, #52]	; 0x34
 80030c4:	9503      	str	r5, [sp, #12]
 80030c6:	68a4      	ldr	r4, [r4, #8]
 80030c8:	46a4      	mov	ip, r4
    }
}
 80030ca:	bc70      	pop	{r4, r5, r6}
      u8g2->cb->draw_l90(u8g2, x, y, len, dir);
 80030cc:	4760      	bx	ip
	else if ( dir == 3 )
 80030ce:	2d03      	cmp	r5, #3
	  y++;
 80030d0:	bf02      	ittt	eq
 80030d2:	3201      	addeq	r2, #1
 80030d4:	1ad2      	subeq	r2, r2, r3
 80030d6:	b2d2      	uxtbeq	r2, r2
 80030d8:	e7d0      	b.n	800307c <u8g2_DrawHVLine+0x20>
	if ( u8g2_clip_intersection2(&x, &len, u8g2->user_x0, u8g2->user_x1) == 0 )
 80030da:	4631      	mov	r1, r6
  if ( a >= d )
 80030dc:	428c      	cmp	r4, r1
 80030de:	d8e4      	bhi.n	80030aa <u8g2_DrawHVLine+0x4e>
}
 80030e0:	bc70      	pop	{r4, r5, r6}
 80030e2:	4770      	bx	lr
	if ( x < u8g2->user_x0 )
 80030e4:	f890 4045 	ldrb.w	r4, [r0, #69]	; 0x45
 80030e8:	428c      	cmp	r4, r1
 80030ea:	d8f9      	bhi.n	80030e0 <u8g2_DrawHVLine+0x84>
	if ( x >= u8g2->user_x1 )
 80030ec:	f890 4046 	ldrb.w	r4, [r0, #70]	; 0x46
 80030f0:	428c      	cmp	r4, r1
 80030f2:	d9f5      	bls.n	80030e0 <u8g2_DrawHVLine+0x84>
  b += *len;
 80030f4:	4413      	add	r3, r2
 80030f6:	b2db      	uxtb	r3, r3
  if ( a > b )
 80030f8:	4293      	cmp	r3, r2
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
 80030fa:	f890 6047 	ldrb.w	r6, [r0, #71]	; 0x47
 80030fe:	f890 4048 	ldrb.w	r4, [r0, #72]	; 0x48
  if ( a > b )
 8003102:	d210      	bcs.n	8003126 <u8g2_DrawHVLine+0xca>
    if ( a < d )
 8003104:	4294      	cmp	r4, r2
 8003106:	d90d      	bls.n	8003124 <u8g2_DrawHVLine+0xc8>
      b--;
 8003108:	1e63      	subs	r3, r4, #1
 800310a:	b2db      	uxtb	r3, r3
  if ( b <= c )
 800310c:	429e      	cmp	r6, r3
 800310e:	d2e7      	bcs.n	80030e0 <u8g2_DrawHVLine+0x84>
  if ( a < c )		
 8003110:	42b2      	cmp	r2, r6
 8003112:	bf38      	it	cc
 8003114:	4632      	movcc	r2, r6
  b -= a;
 8003116:	429c      	cmp	r4, r3
 8003118:	bf94      	ite	ls
 800311a:	ebc2 0404 	rsbls	r4, r2, r4
 800311e:	ebc2 0403 	rsbhi	r4, r2, r3
 8003122:	e7cd      	b.n	80030c0 <u8g2_DrawHVLine+0x64>
	if ( u8g2_clip_intersection2(&y, &len, u8g2->user_y0, u8g2->user_y1) == 0 )
 8003124:	4632      	mov	r2, r6
  if ( a >= d )
 8003126:	4294      	cmp	r4, r2
 8003128:	d8f0      	bhi.n	800310c <u8g2_DrawHVLine+0xb0>
 800312a:	e7d9      	b.n	80030e0 <u8g2_DrawHVLine+0x84>

0800312c <u8g2_is_intersection_decision_tree>:
  a1 and v1 are excluded
  v0 == v1 is not support end return 1
*/
uint8_t u8g2_is_intersection_decision_tree(u8g2_uint_t a0, u8g2_uint_t a1, u8g2_uint_t v0, u8g2_uint_t v1)
{
  if ( v0 < a1 )		// v0 <= a1
 800312c:	428a      	cmp	r2, r1
 800312e:	d206      	bcs.n	800313e <u8g2_is_intersection_decision_tree+0x12>
  {
    if ( v1 > a0 )	// v1 >= a0
 8003130:	4283      	cmp	r3, r0
 8003132:	d808      	bhi.n	8003146 <u8g2_is_intersection_decision_tree+0x1a>
    {
      return 1;
 8003134:	429a      	cmp	r2, r3
 8003136:	bf94      	ite	ls
 8003138:	2000      	movls	r0, #0
 800313a:	2001      	movhi	r0, #1
 800313c:	4770      	bx	lr
      }
    }
  }
  else
  {
    if ( v1 > a0 )	// v1 >= a0
 800313e:	4283      	cmp	r3, r0
 8003140:	d8f8      	bhi.n	8003134 <u8g2_is_intersection_decision_tree+0x8>
	return 0;
      }
    }
    else
    {
      return 0;
 8003142:	2000      	movs	r0, #0
 8003144:	4770      	bx	lr
      return 1;
 8003146:	2001      	movs	r0, #1
    }
  }
}
 8003148:	4770      	bx	lr

0800314a <u8g2_IsIntersection>:



/* upper limits are not included (asymetric boundaries) */
uint8_t u8g2_IsIntersection(u8g2_t *u8g2, u8g2_uint_t x0, u8g2_uint_t y0, u8g2_uint_t x1, u8g2_uint_t y1)
{
 800314a:	b570      	push	{r4, r5, r6, lr}
 800314c:	4604      	mov	r4, r0
 800314e:	460d      	mov	r5, r1
 8003150:	461e      	mov	r6, r3
  if ( u8g2_is_intersection_decision_tree(u8g2->user_y0, u8g2->user_y1, y0, y1) == 0 )
 8003152:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8003156:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800315a:	f890 0047 	ldrb.w	r0, [r0, #71]	; 0x47
 800315e:	f7ff ffe5 	bl	800312c <u8g2_is_intersection_decision_tree>
 8003162:	b148      	cbz	r0, 8003178 <u8g2_IsIntersection+0x2e>
    return 0; 
  
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
 8003164:	4633      	mov	r3, r6
 8003166:	462a      	mov	r2, r5
 8003168:	f894 1046 	ldrb.w	r1, [r4, #70]	; 0x46
 800316c:	f894 0045 	ldrb.w	r0, [r4, #69]	; 0x45
}
 8003170:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  return u8g2_is_intersection_decision_tree(u8g2->user_x0, u8g2->user_x1, x0, x1);
 8003174:	f7ff bfda 	b.w	800312c <u8g2_is_intersection_decision_tree>
}
 8003178:	bd70      	pop	{r4, r5, r6, pc}

0800317a <u8g2_ll_hvline_vertical_top_lsb>:
		1: vertical line (top to bottom)
  asumption: 
    all clipping done
*/
void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
 800317a:	b5f0      	push	{r4, r5, r6, r7, lr}
  
  /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  bit_pos = y;		/* overflow truncate is ok here... */
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  mask = 1;
  mask <<= bit_pos;
 800317c:	2401      	movs	r4, #1

  or_mask = 0;
  xor_mask = 0;
  if ( u8g2->draw_color <= 1 )
 800317e:	f890 5086 	ldrb.w	r5, [r0, #134]	; 0x86
  bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
 8003182:	f002 0607 	and.w	r6, r2, #7
  mask <<= bit_pos;
 8003186:	40b4      	lsls	r4, r6
  if ( u8g2->draw_color <= 1 )
 8003188:	2d01      	cmp	r5, #1
{
 800318a:	f89d 7014 	ldrb.w	r7, [sp, #20]
  mask <<= bit_pos;
 800318e:	b2e4      	uxtb	r4, r4
  if ( u8g2->draw_color <= 1 )
 8003190:	d815      	bhi.n	80031be <u8g2_ll_hvline_vertical_top_lsb+0x44>
    or_mask  = mask;
 8003192:	4625      	mov	r5, r4
  if ( u8g2->draw_color != 1 )
 8003194:	d015      	beq.n	80031c2 <u8g2_ll_hvline_vertical_top_lsb+0x48>
    xor_mask = mask;


  offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  offset &= ~7;
 8003196:	f002 0cf8 	and.w	ip, r2, #248	; 0xf8
  offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
 800319a:	6802      	ldr	r2, [r0, #0]
 800319c:	f892 e010 	ldrb.w	lr, [r2, #16]
  ptr = u8g2->tile_buf_ptr;
  ptr += offset;
  ptr += x;
 80031a0:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80031a2:	fb0e 110c 	mla	r1, lr, ip, r1
 80031a6:	4411      	add	r1, r2
  
  if ( dir == 0 )
 80031a8:	b96f      	cbnz	r7, 80031c6 <u8g2_ll_hvline_vertical_top_lsb+0x4c>
      do
      {
#ifdef __unix
	assert(ptr < max_ptr);
#endif
	*ptr |= or_mask;
 80031aa:	780a      	ldrb	r2, [r1, #0]
	*ptr ^= xor_mask;
	ptr++;
	len--;
 80031ac:	3b01      	subs	r3, #1
	*ptr |= or_mask;
 80031ae:	432a      	orrs	r2, r5
	*ptr ^= xor_mask;
 80031b0:	4062      	eors	r2, r4
      } while( len != 0 );
 80031b2:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
	*ptr ^= xor_mask;
 80031b6:	f801 2b01 	strb.w	r2, [r1], #1
      } while( len != 0 );
 80031ba:	d1f6      	bne.n	80031aa <u8g2_ll_hvline_vertical_top_lsb+0x30>
	or_mask <<= 1;
	xor_mask <<= 1;
      }
    } while( len != 0 );
  }
}
 80031bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  or_mask = 0;
 80031be:	2500      	movs	r5, #0
 80031c0:	e7e9      	b.n	8003196 <u8g2_ll_hvline_vertical_top_lsb+0x1c>
  xor_mask = 0;
 80031c2:	2400      	movs	r4, #0
 80031c4:	e7e7      	b.n	8003196 <u8g2_ll_hvline_vertical_top_lsb+0x1c>
      *ptr |= or_mask;
 80031c6:	780a      	ldrb	r2, [r1, #0]
      bit_pos++;
 80031c8:	3601      	adds	r6, #1
      *ptr |= or_mask;
 80031ca:	432a      	orrs	r2, r5
      *ptr ^= xor_mask;
 80031cc:	4062      	eors	r2, r4
      len--;
 80031ce:	3b01      	subs	r3, #1
      if ( bit_pos == 0 )
 80031d0:	f016 0607 	ands.w	r6, r6, #7
      *ptr ^= xor_mask;
 80031d4:	700a      	strb	r2, [r1, #0]
      len--;
 80031d6:	b2db      	uxtb	r3, r3
      if ( bit_pos == 0 )
 80031d8:	d10c      	bne.n	80031f4 <u8g2_ll_hvline_vertical_top_lsb+0x7a>
	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 */
 80031da:	f890 203e 	ldrb.w	r2, [r0, #62]	; 0x3e
 80031de:	4411      	add	r1, r2
	if ( u8g2->draw_color <= 1 )
 80031e0:	f890 2086 	ldrb.w	r2, [r0, #134]	; 0x86
 80031e4:	2a01      	cmp	r2, #1
 80031e6:	d80a      	bhi.n	80031fe <u8g2_ll_hvline_vertical_top_lsb+0x84>
	if ( u8g2->draw_color != 1 )
 80031e8:	d00b      	beq.n	8003202 <u8g2_ll_hvline_vertical_top_lsb+0x88>
	  xor_mask = 1;
 80031ea:	2401      	movs	r4, #1
	  or_mask  = 1;
 80031ec:	4625      	mov	r5, r4
    } while( len != 0 );
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d1e9      	bne.n	80031c6 <u8g2_ll_hvline_vertical_top_lsb+0x4c>
 80031f2:	e7e3      	b.n	80031bc <u8g2_ll_hvline_vertical_top_lsb+0x42>
	or_mask <<= 1;
 80031f4:	006d      	lsls	r5, r5, #1
	xor_mask <<= 1;
 80031f6:	0064      	lsls	r4, r4, #1
	or_mask <<= 1;
 80031f8:	b2ed      	uxtb	r5, r5
	xor_mask <<= 1;
 80031fa:	b2e4      	uxtb	r4, r4
 80031fc:	e7f7      	b.n	80031ee <u8g2_ll_hvline_vertical_top_lsb+0x74>
	  xor_mask = 1;
 80031fe:	2401      	movs	r4, #1
 8003200:	e7f5      	b.n	80031ee <u8g2_ll_hvline_vertical_top_lsb+0x74>
	  or_mask  = 1;
 8003202:	4615      	mov	r5, r2
 8003204:	e7f3      	b.n	80031ee <u8g2_ll_hvline_vertical_top_lsb+0x74>

08003206 <u8g2_update_dimension_common>:
    u8g2_uint_t buf_y0;
    u8g2_uint_t buf_y1; 	
*/

static void u8g2_update_dimension_common(u8g2_t *u8g2)
{
 8003206:	b570      	push	{r4, r5, r6, lr}
  const u8x8_display_info_t *display_info = u8g2_GetU8x8(u8g2)->display_info;
  u8g2_uint_t t;
  
  t = u8g2->tile_buf_height;
 8003208:	f890 403c 	ldrb.w	r4, [r0, #60]	; 0x3c
  const u8x8_display_info_t *display_info = u8g2_GetU8x8(u8g2)->display_info;
 800320c:	6801      	ldr	r1, [r0, #0]
  t *= 8;
 800320e:	00e3      	lsls	r3, r4, #3
  u8g2->pixel_buf_height = t;
 8003210:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
  
  t = display_info->tile_width;
 8003214:	7c0a      	ldrb	r2, [r1, #16]
    t = 31;
#endif
  t *= 8;
  u8g2->pixel_buf_width = t;
  
  t = u8g2->tile_curr_row;
 8003216:	f890 503d 	ldrb.w	r5, [r0, #61]	; 0x3d
 800321a:	2a1f      	cmp	r2, #31
 800321c:	bf28      	it	cs
 800321e:	221f      	movcs	r2, #31
  t *= 8;
 8003220:	00eb      	lsls	r3, r5, #3
 8003222:	b2db      	uxtb	r3, r3
  t *= 8;
 8003224:	00d2      	lsls	r2, r2, #3
  u8g2->pixel_curr_row = t;
 8003226:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
  u8g2->pixel_buf_width = t;
 800322a:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
  
  t = u8g2->tile_buf_height;
  /* handle the case, where the buffer is larger than the (remaining) part of the display */
  if ( t + u8g2->tile_curr_row > display_info->tile_height )
 800322e:	7c4a      	ldrb	r2, [r1, #17]
 8003230:	1966      	adds	r6, r4, r5
 8003232:	4296      	cmp	r6, r2
    t = display_info->tile_height - u8g2->tile_curr_row;
 8003234:	bfc8      	it	gt
 8003236:	1b54      	subgt	r4, r2, r5
  
#ifdef U8G2_16BIT
  u8g2->width = display_info->pixel_width;
  u8g2->height = display_info->pixel_height;
#else
  u8g2->width = 240;
 8003238:	f04f 02f0 	mov.w	r2, #240	; 0xf0
    t = display_info->tile_height - u8g2->tile_curr_row;
 800323c:	bfc8      	it	gt
 800323e:	b2e4      	uxtbgt	r4, r4
  u8g2->buf_y0 = u8g2->pixel_curr_row;   
 8003240:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  u8g2->buf_y1 += t;
 8003244:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
  u8g2->width = 240;
 8003248:	f880 2043 	strb.w	r2, [r0, #67]	; 0x43
  u8g2->buf_y1 += t;
 800324c:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
  if ( display_info->pixel_width <= 240 )
 8003250:	8a8b      	ldrh	r3, [r1, #20]
    u8g2->width = display_info->pixel_width;
 8003252:	4293      	cmp	r3, r2
 8003254:	bf88      	it	hi
 8003256:	4613      	movhi	r3, r2
 8003258:	f880 3043 	strb.w	r3, [r0, #67]	; 0x43
  u8g2->height = display_info->pixel_height;
 800325c:	8acb      	ldrh	r3, [r1, #22]
 800325e:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
#endif

}
 8003262:	bd70      	pop	{r4, r5, r6, pc}

08003264 <u8g2_update_dimension_r0>:
/*==========================================================*/


void u8g2_update_dimension_r0(u8g2_t *u8g2)
{
  u8g2_update_dimension_common(u8g2);  
 8003264:	f7ff bfcf 	b.w	8003206 <u8g2_update_dimension_common>

08003268 <u8g2_draw_l90_r0>:
/*============================================*/
extern void u8g2_draw_hv_line_2dir(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir);


void u8g2_draw_l90_r0(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, uint8_t dir)
{
 8003268:	b410      	push	{r4}
 800326a:	f89d 4004 	ldrb.w	r4, [sp, #4]
#ifdef __unix
  assert( dir <= 1 );
#endif
  u8g2_draw_hv_line_2dir(u8g2, x, y, len, dir);
 800326e:	9401      	str	r4, [sp, #4]
}
 8003270:	bc10      	pop	{r4}
  u8g2_draw_hv_line_2dir(u8g2, x, y, len, dir);
 8003272:	f7ff bee7 	b.w	8003044 <u8g2_draw_hv_line_2dir>

08003276 <u8g2_apply_clip_window>:
{
 8003276:	b513      	push	{r0, r1, r4, lr}
  if ( u8g2_IsIntersection(u8g2, u8g2->clip_x0, u8g2->clip_y0, u8g2->clip_x1, u8g2->clip_y1) == 0 ) 
 8003278:	f890 304c 	ldrb.w	r3, [r0, #76]	; 0x4c
{
 800327c:	4604      	mov	r4, r0
  if ( u8g2_IsIntersection(u8g2, u8g2->clip_x0, u8g2->clip_y0, u8g2->clip_x1, u8g2->clip_y1) == 0 ) 
 800327e:	9300      	str	r3, [sp, #0]
 8003280:	f890 304a 	ldrb.w	r3, [r0, #74]	; 0x4a
 8003284:	f890 204b 	ldrb.w	r2, [r0, #75]	; 0x4b
 8003288:	f890 1049 	ldrb.w	r1, [r0, #73]	; 0x49
 800328c:	f7ff ff5d 	bl	800314a <u8g2_IsIntersection>
 8003290:	b918      	cbnz	r0, 800329a <u8g2_apply_clip_window+0x24>
    u8g2->is_page_clip_window_intersection = 0;
 8003292:	f884 0080 	strb.w	r0, [r4, #128]	; 0x80
}
 8003296:	b002      	add	sp, #8
 8003298:	bd10      	pop	{r4, pc}
    u8g2->is_page_clip_window_intersection = 1;
 800329a:	2301      	movs	r3, #1
    if ( u8g2->user_x0 < u8g2->clip_x0 )
 800329c:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
    u8g2->is_page_clip_window_intersection = 1;
 80032a0:	f884 3080 	strb.w	r3, [r4, #128]	; 0x80
    if ( u8g2->user_x0 < u8g2->clip_x0 )
 80032a4:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 80032a8:	429a      	cmp	r2, r3
      u8g2->user_x0 = u8g2->clip_x0;
 80032aa:	bf38      	it	cc
 80032ac:	f884 3045 	strbcc.w	r3, [r4, #69]	; 0x45
    if ( u8g2->user_x1 > u8g2->clip_x1 )
 80032b0:	f894 2046 	ldrb.w	r2, [r4, #70]	; 0x46
 80032b4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80032b8:	429a      	cmp	r2, r3
      u8g2->user_x1 = u8g2->clip_x1;
 80032ba:	bf88      	it	hi
 80032bc:	f884 3046 	strbhi.w	r3, [r4, #70]	; 0x46
    if ( u8g2->user_y0 < u8g2->clip_y0 )
 80032c0:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
 80032c4:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80032c8:	429a      	cmp	r2, r3
      u8g2->user_y0 = u8g2->clip_y0;
 80032ca:	bf38      	it	cc
 80032cc:	f884 3047 	strbcc.w	r3, [r4, #71]	; 0x47
    if ( u8g2->user_y1 > u8g2->clip_y1 )
 80032d0:	f894 2048 	ldrb.w	r2, [r4, #72]	; 0x48
 80032d4:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 80032d8:	429a      	cmp	r2, r3
      u8g2->user_y1 = u8g2->clip_y1;
 80032da:	bf88      	it	hi
 80032dc:	f884 3048 	strbhi.w	r3, [r4, #72]	; 0x48
}
 80032e0:	e7d9      	b.n	8003296 <u8g2_apply_clip_window+0x20>

080032e2 <u8g2_update_page_win_r0>:
  u8g2->user_x0 = 0;
 80032e2:	2200      	movs	r2, #0
 80032e4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
  u8g2->user_x1 = u8g2->width;			/* pixel_buf_width replaced with width */
 80032e8:	f890 2043 	ldrb.w	r2, [r0, #67]	; 0x43
 80032ec:	f880 2046 	strb.w	r2, [r0, #70]	; 0x46
  u8g2->user_y0 = u8g2->buf_y0;
 80032f0:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
 80032f4:	f880 2047 	strb.w	r2, [r0, #71]	; 0x47
  u8g2->user_y1 = u8g2->buf_y1;
 80032f8:	f890 2042 	ldrb.w	r2, [r0, #66]	; 0x42
 80032fc:	f880 2048 	strb.w	r2, [r0, #72]	; 0x48
  u8g2_apply_clip_window(u8g2);
 8003300:	f7ff bfb9 	b.w	8003276 <u8g2_apply_clip_window>

08003304 <u8g2_SetMaxClipWindow>:
  u8g2->clip_x0 = 0;
 8003304:	2200      	movs	r2, #0
 8003306:	f880 2049 	strb.w	r2, [r0, #73]	; 0x49
  u8g2->clip_x1 = (u8g2_uint_t)~(u8g2_uint_t)0;
 800330a:	22ff      	movs	r2, #255	; 0xff
  u8g2->cb->update_page_win(u8g2);
 800330c:	6b43      	ldr	r3, [r0, #52]	; 0x34
  u8g2->clip_x1 = (u8g2_uint_t)~(u8g2_uint_t)0;
 800330e:	f8a0 204a 	strh.w	r2, [r0, #74]	; 0x4a
  u8g2->clip_y1 = (u8g2_uint_t)~(u8g2_uint_t)0;
 8003312:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
  u8g2->cb->update_page_win(u8g2);
 8003316:	685b      	ldr	r3, [r3, #4]
 8003318:	4718      	bx	r3

0800331a <u8g2_SetupBuffer>:
{
 800331a:	b570      	push	{r4, r5, r6, lr}
  u8g2->font = NULL;
 800331c:	2500      	movs	r5, #0
  u8g2->ll_hvline = ll_hvline_cb;
 800331e:	6303      	str	r3, [r0, #48]	; 0x30
  u8g2->draw_color = 1;
 8003320:	f240 1301 	movw	r3, #257	; 0x101
{
 8003324:	4604      	mov	r4, r0
 8003326:	9e04      	ldr	r6, [sp, #16]
  u8g2->tile_buf_height = tile_buf_height;
 8003328:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  u8g2->tile_curr_row = 0;
 800332c:	f880 503d 	strb.w	r5, [r0, #61]	; 0x3d
  u8g2->font_decode.is_transparent = 0; /* issue 443 */
 8003330:	f880 5063 	strb.w	r5, [r0, #99]	; 0x63
  u8g2->bitmap_transparency = 0;
 8003334:	f880 5085 	strb.w	r5, [r0, #133]	; 0x85
  u8g2->draw_color = 1;
 8003338:	f8a0 3086 	strh.w	r3, [r0, #134]	; 0x86
  u8g2->tile_buf_ptr = buf;
 800333c:	6381      	str	r1, [r0, #56]	; 0x38
  u8g2->cb->update_dimension(u8g2);
 800333e:	6833      	ldr	r3, [r6, #0]
  u8g2->font = NULL;
 8003340:	6505      	str	r5, [r0, #80]	; 0x50
  u8g2->cb = u8g2_cb;
 8003342:	6346      	str	r6, [r0, #52]	; 0x34
  u8g2->cb->update_dimension(u8g2);
 8003344:	4798      	blx	r3
  u8g2_SetMaxClipWindow(u8g2);		/* assign a clip window and call the update() procedure */
 8003346:	4620      	mov	r0, r4
 8003348:	f7ff ffdc 	bl	8003304 <u8g2_SetMaxClipWindow>
  u8g2_SetFontPosBaseline(u8g2);  /* issue 195 */
 800334c:	4620      	mov	r0, r4
 800334e:	f7ff fe13 	bl	8002f78 <u8g2_SetFontPosBaseline>
  u8g2->font_decode.dir = 0;
 8003352:	f884 5066 	strb.w	r5, [r4, #102]	; 0x66
}
 8003356:	bd70      	pop	{r4, r5, r6, pc}

08003358 <u8x8_ascii_next>:
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
}

uint16_t u8x8_ascii_next(U8X8_UNUSED u8x8_t *u8x8, uint8_t b)
{
  if ( b == 0 || b == '\n' ) /* '\n' terminates the string to support the string list procedures */
 8003358:	b119      	cbz	r1, 8003362 <u8x8_ascii_next+0xa>
 800335a:	290a      	cmp	r1, #10
 800335c:	d001      	beq.n	8003362 <u8x8_ascii_next+0xa>
    return 0x0ffff;	/* end of string detected*/
  return b;
 800335e:	b288      	uxth	r0, r1
 8003360:	4770      	bx	lr
    return 0x0ffff;	/* end of string detected*/
 8003362:	f64f 70ff 	movw	r0, #65535	; 0xffff
}
 8003366:	4770      	bx	lr

08003368 <u8x8_utf8_init>:
  u8x8->utf8_state = 0;	/* also reset during u8x8_SetupDefaults() */
 8003368:	2300      	movs	r3, #0
 800336a:	f880 3027 	strb.w	r3, [r0, #39]	; 0x27
}
 800336e:	4770      	bx	lr

08003370 <u8x8_byte_SendBytes>:
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SET_DC, dc, NULL);
}

uint8_t u8x8_byte_SendBytes(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
{
 8003370:	b410      	push	{r4}
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
 8003372:	6904      	ldr	r4, [r0, #16]
{
 8003374:	4613      	mov	r3, r2
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
 8003376:	46a4      	mov	ip, r4
 8003378:	460a      	mov	r2, r1
}
 800337a:	bc10      	pop	{r4}
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_SEND, cnt, (void *)data);
 800337c:	2117      	movs	r1, #23
 800337e:	4760      	bx	ip

08003380 <u8x8_byte_SendByte>:

uint8_t u8x8_byte_SendByte(u8x8_t *u8x8, uint8_t byte)
{
 8003380:	b507      	push	{r0, r1, r2, lr}
 8003382:	f88d 1007 	strb.w	r1, [sp, #7]
  return u8x8_byte_SendBytes(u8x8, 1, &byte);
 8003386:	f10d 0207 	add.w	r2, sp, #7
 800338a:	2101      	movs	r1, #1
 800338c:	f7ff fff0 	bl	8003370 <u8x8_byte_SendBytes>
}
 8003390:	b003      	add	sp, #12
 8003392:	f85d fb04 	ldr.w	pc, [sp], #4

08003396 <u8x8_byte_StartTransfer>:

uint8_t u8x8_byte_StartTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_START_TRANSFER, 0, NULL);
 8003396:	2300      	movs	r3, #0
{
 8003398:	b410      	push	{r4}
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_START_TRANSFER, 0, NULL);
 800339a:	6904      	ldr	r4, [r0, #16]
 800339c:	461a      	mov	r2, r3
 800339e:	46a4      	mov	ip, r4
 80033a0:	2118      	movs	r1, #24
}
 80033a2:	bc10      	pop	{r4}
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_START_TRANSFER, 0, NULL);
 80033a4:	4760      	bx	ip

080033a6 <u8x8_byte_EndTransfer>:

uint8_t u8x8_byte_EndTransfer(u8x8_t *u8x8)
{
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_END_TRANSFER, 0, NULL);
 80033a6:	2300      	movs	r3, #0
{
 80033a8:	b410      	push	{r4}
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_END_TRANSFER, 0, NULL);
 80033aa:	6904      	ldr	r4, [r0, #16]
 80033ac:	461a      	mov	r2, r3
 80033ae:	46a4      	mov	ip, r4
 80033b0:	2119      	movs	r1, #25
}
 80033b2:	bc10      	pop	{r4}
  return u8x8->byte_cb(u8x8, U8X8_MSG_BYTE_END_TRANSFER, 0, NULL);
 80033b4:	4760      	bx	ip

080033b6 <u8x8_i2c_data_transfer>:
/* U8X8_MSG_BYTE_START_TRANSFER starts i2c transfer, U8X8_MSG_BYTE_END_TRANSFER stops transfer */
/* After transfer start, a full byte indicates command or data mode */

static void u8x8_i2c_data_transfer(u8x8_t *u8x8, uint8_t arg_int, void *arg_ptr) U8X8_NOINLINE;
static void u8x8_i2c_data_transfer(u8x8_t *u8x8, uint8_t arg_int, void *arg_ptr)
{
 80033b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033b8:	4604      	mov	r4, r0
 80033ba:	4616      	mov	r6, r2
 80033bc:	460d      	mov	r5, r1
    u8x8_byte_StartTransfer(u8x8);    
 80033be:	f7ff ffea 	bl	8003396 <u8x8_byte_StartTransfer>
    u8x8_byte_SendByte(u8x8, 0x040);
 80033c2:	2140      	movs	r1, #64	; 0x40
 80033c4:	4620      	mov	r0, r4
 80033c6:	f7ff ffdb 	bl	8003380 <u8x8_byte_SendByte>
    u8x8->byte_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, arg_int, arg_ptr);
 80033ca:	4633      	mov	r3, r6
 80033cc:	462a      	mov	r2, r5
 80033ce:	4620      	mov	r0, r4
 80033d0:	6927      	ldr	r7, [r4, #16]
 80033d2:	2117      	movs	r1, #23
 80033d4:	47b8      	blx	r7
    u8x8_byte_EndTransfer(u8x8);
 80033d6:	4620      	mov	r0, r4
}
 80033d8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    u8x8_byte_EndTransfer(u8x8);
 80033dc:	f7ff bfe3 	b.w	80033a6 <u8x8_byte_EndTransfer>

080033e0 <u8x8_cad_SendCmd>:
{
 80033e0:	b410      	push	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
 80033e2:	68c4      	ldr	r4, [r0, #12]
{
 80033e4:	460a      	mov	r2, r1
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
 80033e6:	46a4      	mov	ip, r4
 80033e8:	2300      	movs	r3, #0
 80033ea:	2115      	movs	r1, #21
}
 80033ec:	bc10      	pop	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
 80033ee:	4760      	bx	ip

080033f0 <u8x8_cad_SendArg>:
{
 80033f0:	b410      	push	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
 80033f2:	68c4      	ldr	r4, [r0, #12]
{
 80033f4:	460a      	mov	r2, r1
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
 80033f6:	46a4      	mov	ip, r4
 80033f8:	2300      	movs	r3, #0
 80033fa:	2116      	movs	r1, #22
}
 80033fc:	bc10      	pop	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
 80033fe:	4760      	bx	ip

08003400 <u8x8_cad_SendData>:
{
 8003400:	b410      	push	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
 8003402:	68c4      	ldr	r4, [r0, #12]
{
 8003404:	4613      	mov	r3, r2
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
 8003406:	46a4      	mov	ip, r4
 8003408:	460a      	mov	r2, r1
}
 800340a:	bc10      	pop	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
 800340c:	2117      	movs	r1, #23
 800340e:	4760      	bx	ip

08003410 <u8x8_cad_StartTransfer>:
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
 8003410:	2300      	movs	r3, #0
{
 8003412:	b410      	push	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
 8003414:	68c4      	ldr	r4, [r0, #12]
 8003416:	461a      	mov	r2, r3
 8003418:	46a4      	mov	ip, r4
 800341a:	2118      	movs	r1, #24
}
 800341c:	bc10      	pop	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
 800341e:	4760      	bx	ip

08003420 <u8x8_cad_EndTransfer>:
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
 8003420:	2300      	movs	r3, #0
{
 8003422:	b410      	push	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
 8003424:	68c4      	ldr	r4, [r0, #12]
 8003426:	461a      	mov	r2, r3
 8003428:	46a4      	mov	ip, r4
 800342a:	2119      	movs	r1, #25
}
 800342c:	bc10      	pop	{r4}
  return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
 800342e:	4760      	bx	ip

08003430 <u8x8_cad_SendSequence>:
{
 8003430:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003432:	4605      	mov	r5, r0
 8003434:	460c      	mov	r4, r1
    cmd = *data;
 8003436:	7821      	ldrb	r1, [r4, #0]
    switch( cmd )
 8003438:	2919      	cmp	r1, #25
 800343a:	d80d      	bhi.n	8003458 <u8x8_cad_SendSequence+0x28>
 800343c:	2917      	cmp	r1, #23
 800343e:	d819      	bhi.n	8003474 <u8x8_cad_SendSequence+0x44>
 8003440:	d00e      	beq.n	8003460 <u8x8_cad_SendSequence+0x30>
 8003442:	2914      	cmp	r1, #20
 8003444:	d90a      	bls.n	800345c <u8x8_cad_SendSequence+0x2c>
	  v = *data;
 8003446:	7862      	ldrb	r2, [r4, #1]
	  u8x8->cad_cb(u8x8, cmd, v, NULL);
 8003448:	2300      	movs	r3, #0
 800344a:	4628      	mov	r0, r5
 800344c:	68ee      	ldr	r6, [r5, #12]
	  v = *data;
 800344e:	f88d 2007 	strb.w	r2, [sp, #7]
	  u8x8->cad_cb(u8x8, cmd, v, NULL);
 8003452:	47b0      	blx	r6
	  data++;
 8003454:	3402      	adds	r4, #2
	  break;
 8003456:	e7ee      	b.n	8003436 <u8x8_cad_SendSequence+0x6>
    switch( cmd )
 8003458:	29fe      	cmp	r1, #254	; 0xfe
 800345a:	d012      	beq.n	8003482 <u8x8_cad_SendSequence+0x52>
}
 800345c:	b002      	add	sp, #8
 800345e:	bd70      	pop	{r4, r5, r6, pc}
	  v = *data;
 8003460:	7863      	ldrb	r3, [r4, #1]
	  u8x8_cad_SendData(u8x8, 1, &v);
 8003462:	2101      	movs	r1, #1
 8003464:	4628      	mov	r0, r5
 8003466:	f10d 0207 	add.w	r2, sp, #7
	  v = *data;
 800346a:	f88d 3007 	strb.w	r3, [sp, #7]
	  u8x8_cad_SendData(u8x8, 1, &v);
 800346e:	f7ff ffc7 	bl	8003400 <u8x8_cad_SendData>
	  data++;
 8003472:	e7ef      	b.n	8003454 <u8x8_cad_SendSequence+0x24>
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
 8003474:	2300      	movs	r3, #0
 8003476:	4628      	mov	r0, r5
 8003478:	461a      	mov	r2, r3
 800347a:	68ee      	ldr	r6, [r5, #12]
    data++;
 800347c:	3401      	adds	r4, #1
	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
 800347e:	47b0      	blx	r6
	  break;
 8003480:	e7d9      	b.n	8003436 <u8x8_cad_SendSequence+0x6>
	  v = *data;
 8003482:	7862      	ldrb	r2, [r4, #1]
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
 8003484:	2129      	movs	r1, #41	; 0x29
 8003486:	4628      	mov	r0, r5
	  v = *data;
 8003488:	f88d 2007 	strb.w	r2, [sp, #7]
	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
 800348c:	f000 f947 	bl	800371e <u8x8_gpio_call>
 8003490:	e7e0      	b.n	8003454 <u8x8_cad_SendSequence+0x24>
	...

08003494 <u8x8_cad_ssd13xx_fast_i2c>:
/* fast version with reduced data start/stops, issue 735 */
uint8_t u8x8_cad_ssd13xx_fast_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  static uint8_t in_transfer = 0;
  uint8_t *p;
  switch(msg)
 8003494:	3914      	subs	r1, #20
{
 8003496:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800349a:	4604      	mov	r4, r0
 800349c:	4615      	mov	r5, r2
 800349e:	461e      	mov	r6, r3
 80034a0:	2905      	cmp	r1, #5
 80034a2:	d84e      	bhi.n	8003542 <u8x8_cad_ssd13xx_fast_i2c+0xae>
 80034a4:	e8df f001 	tbb	[pc, r1]
 80034a8:	1c170333 	.word	0x1c170333
 80034ac:	4541      	.short	0x4541
  {
    case U8X8_MSG_CAD_SEND_CMD:
      /* improved version, takeover from ld7032 */
      /* assumes, that the args of a command is not longer than 31 bytes */
      /* speed improvement is about 4% compared to the classic version */
      if ( in_transfer != 0 )
 80034ae:	4e26      	ldr	r6, [pc, #152]	; (8003548 <u8x8_cad_ssd13xx_fast_i2c+0xb4>)
 80034b0:	7832      	ldrb	r2, [r6, #0]
 80034b2:	b10a      	cbz	r2, 80034b8 <u8x8_cad_ssd13xx_fast_i2c+0x24>
	 u8x8_byte_EndTransfer(u8x8); 
 80034b4:	f7ff ff77 	bl	80033a6 <u8x8_byte_EndTransfer>
      
      u8x8_byte_StartTransfer(u8x8);
 80034b8:	4620      	mov	r0, r4
 80034ba:	f7ff ff6c 	bl	8003396 <u8x8_byte_StartTransfer>
      u8x8_byte_SendByte(u8x8, 0x000);	/* cmd byte for ssd13xx controller */
 80034be:	2100      	movs	r1, #0
 80034c0:	4620      	mov	r0, r4
 80034c2:	f7ff ff5d 	bl	8003380 <u8x8_byte_SendByte>
      u8x8_byte_SendByte(u8x8, arg_int);
 80034c6:	4629      	mov	r1, r5
 80034c8:	4620      	mov	r0, r4
 80034ca:	f7ff ff59 	bl	8003380 <u8x8_byte_SendByte>
      in_transfer = 1;
 80034ce:	2001      	movs	r0, #1
 80034d0:	7030      	strb	r0, [r6, #0]
      break;
    default:
      return 0;
  }
  return 1;
}
 80034d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      u8x8_byte_SendByte(u8x8, arg_int);
 80034d6:	4611      	mov	r1, r2
 80034d8:	f7ff ff52 	bl	8003380 <u8x8_byte_SendByte>
  return 1;
 80034dc:	2001      	movs	r0, #1
      break;
 80034de:	e7f8      	b.n	80034d2 <u8x8_cad_ssd13xx_fast_i2c+0x3e>
      if ( in_transfer != 0 )
 80034e0:	4f19      	ldr	r7, [pc, #100]	; (8003548 <u8x8_cad_ssd13xx_fast_i2c+0xb4>)
 80034e2:	783a      	ldrb	r2, [r7, #0]
 80034e4:	b10a      	cbz	r2, 80034ea <u8x8_cad_ssd13xx_fast_i2c+0x56>
	u8x8_byte_EndTransfer(u8x8); 
 80034e6:	f7ff ff5e 	bl	80033a6 <u8x8_byte_EndTransfer>
       while( arg_int > 24 )
 80034ea:	2d18      	cmp	r5, #24
	u8x8_i2c_data_transfer(u8x8, 24, p);
 80034ec:	4632      	mov	r2, r6
       while( arg_int > 24 )
 80034ee:	d806      	bhi.n	80034fe <u8x8_cad_ssd13xx_fast_i2c+0x6a>
      u8x8_i2c_data_transfer(u8x8, arg_int, p);
 80034f0:	4629      	mov	r1, r5
 80034f2:	4620      	mov	r0, r4
 80034f4:	f7ff ff5f 	bl	80033b6 <u8x8_i2c_data_transfer>
      in_transfer = 0;
 80034f8:	2300      	movs	r3, #0
 80034fa:	703b      	strb	r3, [r7, #0]
      break;
 80034fc:	e7ee      	b.n	80034dc <u8x8_cad_ssd13xx_fast_i2c+0x48>
	u8x8_i2c_data_transfer(u8x8, 24, p);
 80034fe:	2118      	movs	r1, #24
 8003500:	4620      	mov	r0, r4
	arg_int-=24;
 8003502:	3d18      	subs	r5, #24
	u8x8_i2c_data_transfer(u8x8, 24, p);
 8003504:	f7ff ff57 	bl	80033b6 <u8x8_i2c_data_transfer>
	arg_int-=24;
 8003508:	b2ed      	uxtb	r5, r5
	p+=24;
 800350a:	3618      	adds	r6, #24
 800350c:	e7ed      	b.n	80034ea <u8x8_cad_ssd13xx_fast_i2c+0x56>
      if ( u8x8->i2c_address == 255 )
 800350e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 8003512:	6907      	ldr	r7, [r0, #16]
      if ( u8x8->i2c_address == 255 )
 8003514:	2bff      	cmp	r3, #255	; 0xff
	u8x8->i2c_address = 0x078;
 8003516:	bf04      	itt	eq
 8003518:	2378      	moveq	r3, #120	; 0x78
 800351a:	f880 3024 	strbeq.w	r3, [r0, #36]	; 0x24
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 800351e:	46bc      	mov	ip, r7
 8003520:	4633      	mov	r3, r6
}
 8003522:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
      return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 8003526:	2114      	movs	r1, #20
 8003528:	4760      	bx	ip
      in_transfer = 0;
 800352a:	2200      	movs	r2, #0
 800352c:	4b06      	ldr	r3, [pc, #24]	; (8003548 <u8x8_cad_ssd13xx_fast_i2c+0xb4>)
 800352e:	701a      	strb	r2, [r3, #0]
 8003530:	e7d4      	b.n	80034dc <u8x8_cad_ssd13xx_fast_i2c+0x48>
      if ( in_transfer != 0 )
 8003532:	4d05      	ldr	r5, [pc, #20]	; (8003548 <u8x8_cad_ssd13xx_fast_i2c+0xb4>)
 8003534:	782a      	ldrb	r2, [r5, #0]
 8003536:	b10a      	cbz	r2, 800353c <u8x8_cad_ssd13xx_fast_i2c+0xa8>
	u8x8_byte_EndTransfer(u8x8); 
 8003538:	f7ff ff35 	bl	80033a6 <u8x8_byte_EndTransfer>
      in_transfer = 0;
 800353c:	2300      	movs	r3, #0
 800353e:	702b      	strb	r3, [r5, #0]
      break;
 8003540:	e7cc      	b.n	80034dc <u8x8_cad_ssd13xx_fast_i2c+0x48>
  return 1;
 8003542:	2000      	movs	r0, #0
 8003544:	e7c5      	b.n	80034d2 <u8x8_cad_ssd13xx_fast_i2c+0x3e>
 8003546:	bf00      	nop
 8003548:	20000b31 	.word	0x20000b31

0800354c <u8x8_d_ssd1306_sh1106_generic>:

static uint8_t u8x8_d_ssd1306_sh1106_generic(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
  uint8_t x, c;
  uint8_t *ptr;
  switch(msg)
 800354c:	390b      	subs	r1, #11
{
 800354e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003550:	4604      	mov	r4, r0
 8003552:	4615      	mov	r5, r2
 8003554:	461e      	mov	r6, r3
 8003556:	2904      	cmp	r1, #4
 8003558:	d855      	bhi.n	8003606 <u8x8_d_ssd1306_sh1106_generic+0xba>
 800355a:	e8df f001 	tbb	[pc, r1]
 800355e:	5403      	.short	0x5403
 8003560:	1b0c      	.short	0x1b0c
 8003562:	29          	.byte	0x29
 8003563:	00          	.byte	0x00
      u8x8_d_helper_display_init(u8x8);
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
      break;
    */
    case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
      if ( arg_int == 0 )
 8003564:	b92a      	cbnz	r2, 8003572 <u8x8_d_ssd1306_sh1106_generic+0x26>
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave0_seq);
 8003566:	4929      	ldr	r1, [pc, #164]	; (800360c <u8x8_d_ssd1306_sh1106_generic+0xc0>)
      else
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave1_seq);
 8003568:	4620      	mov	r0, r4
 800356a:	f7ff ff61 	bl	8003430 <u8x8_cad_SendSequence>
      u8x8_cad_EndTransfer(u8x8);
      break;
    default:
      return 0;
  }
  return 1;
 800356e:	2001      	movs	r0, #1
}
 8003570:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_powersave1_seq);
 8003572:	4927      	ldr	r1, [pc, #156]	; (8003610 <u8x8_d_ssd1306_sh1106_generic+0xc4>)
 8003574:	e7f8      	b.n	8003568 <u8x8_d_ssd1306_sh1106_generic+0x1c>
      if ( arg_int == 0 )
 8003576:	b93a      	cbnz	r2, 8003588 <u8x8_d_ssd1306_sh1106_generic+0x3c>
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_flip0_seq);
 8003578:	4926      	ldr	r1, [pc, #152]	; (8003614 <u8x8_d_ssd1306_sh1106_generic+0xc8>)
 800357a:	f7ff ff59 	bl	8003430 <u8x8_cad_SendSequence>
	u8x8->x_offset = u8x8->display_info->default_x_offset;
 800357e:	6823      	ldr	r3, [r4, #0]
 8003580:	7c9b      	ldrb	r3, [r3, #18]
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
 8003582:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8003586:	e7f2      	b.n	800356e <u8x8_d_ssd1306_sh1106_generic+0x22>
	u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_flip1_seq);
 8003588:	4923      	ldr	r1, [pc, #140]	; (8003618 <u8x8_d_ssd1306_sh1106_generic+0xcc>)
 800358a:	f7ff ff51 	bl	8003430 <u8x8_cad_SendSequence>
	u8x8->x_offset = u8x8->display_info->flipmode_x_offset;
 800358e:	6823      	ldr	r3, [r4, #0]
 8003590:	7cdb      	ldrb	r3, [r3, #19]
 8003592:	e7f6      	b.n	8003582 <u8x8_d_ssd1306_sh1106_generic+0x36>
      u8x8_cad_StartTransfer(u8x8);
 8003594:	f7ff ff3c 	bl	8003410 <u8x8_cad_StartTransfer>
      u8x8_cad_SendCmd(u8x8, 0x081 );
 8003598:	2181      	movs	r1, #129	; 0x81
 800359a:	4620      	mov	r0, r4
 800359c:	f7ff ff20 	bl	80033e0 <u8x8_cad_SendCmd>
      u8x8_cad_SendArg(u8x8, arg_int );	/* ssd1306 has range from 0 to 255 */
 80035a0:	4629      	mov	r1, r5
 80035a2:	4620      	mov	r0, r4
 80035a4:	f7ff ff24 	bl	80033f0 <u8x8_cad_SendArg>
      u8x8_cad_EndTransfer(u8x8);
 80035a8:	4620      	mov	r0, r4
 80035aa:	f7ff ff39 	bl	8003420 <u8x8_cad_EndTransfer>
 80035ae:	e7de      	b.n	800356e <u8x8_d_ssd1306_sh1106_generic+0x22>
      u8x8_cad_StartTransfer(u8x8);
 80035b0:	f7ff ff2e 	bl	8003410 <u8x8_cad_StartTransfer>
      x = ((u8x8_tile_t *)arg_ptr)->x_pos;    
 80035b4:	7973      	ldrb	r3, [r6, #5]
      x += u8x8->x_offset;
 80035b6:	f894 7022 	ldrb.w	r7, [r4, #34]	; 0x22
      u8x8_cad_SendCmd(u8x8, 0x040 );	/* set line offset to 0 */
 80035ba:	2140      	movs	r1, #64	; 0x40
      x += u8x8->x_offset;
 80035bc:	eb07 07c3 	add.w	r7, r7, r3, lsl #3
 80035c0:	f007 07ff 	and.w	r7, r7, #255	; 0xff
      u8x8_cad_SendCmd(u8x8, 0x040 );	/* set line offset to 0 */
 80035c4:	4620      	mov	r0, r4
 80035c6:	f7ff ff0b 	bl	80033e0 <u8x8_cad_SendCmd>
      u8x8_cad_SendCmd(u8x8, 0x010 | (x>>4) );
 80035ca:	0939      	lsrs	r1, r7, #4
 80035cc:	f041 0110 	orr.w	r1, r1, #16
 80035d0:	4620      	mov	r0, r4
 80035d2:	f7ff ff05 	bl	80033e0 <u8x8_cad_SendCmd>
      u8x8_cad_SendArg(u8x8, 0x000 | ((x&15)));					/* probably wrong, should be SendCmd */
 80035d6:	f007 010f 	and.w	r1, r7, #15
 80035da:	4620      	mov	r0, r4
 80035dc:	f7ff ff08 	bl	80033f0 <u8x8_cad_SendArg>
      u8x8_cad_SendArg(u8x8, 0x0b0 | (((u8x8_tile_t *)arg_ptr)->y_pos));	/* probably wrong, should be SendCmd */
 80035e0:	79b1      	ldrb	r1, [r6, #6]
 80035e2:	4620      	mov	r0, r4
 80035e4:	f041 01b0 	orr.w	r1, r1, #176	; 0xb0
 80035e8:	f7ff ff02 	bl	80033f0 <u8x8_cad_SendArg>
	u8x8_cad_SendData(u8x8, c*8, ptr); 	/* note: SendData can not handle more than 255 bytes */
 80035ec:	7931      	ldrb	r1, [r6, #4]
 80035ee:	4620      	mov	r0, r4
 80035f0:	00c9      	lsls	r1, r1, #3
 80035f2:	6832      	ldr	r2, [r6, #0]
 80035f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
	arg_int--;
 80035f8:	3d01      	subs	r5, #1
	u8x8_cad_SendData(u8x8, c*8, ptr); 	/* note: SendData can not handle more than 255 bytes */
 80035fa:	f7ff ff01 	bl	8003400 <u8x8_cad_SendData>
      } while( arg_int > 0 );
 80035fe:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
 8003602:	d1f3      	bne.n	80035ec <u8x8_d_ssd1306_sh1106_generic+0xa0>
 8003604:	e7d0      	b.n	80035a8 <u8x8_d_ssd1306_sh1106_generic+0x5c>
  return 1;
 8003606:	2000      	movs	r0, #0
 8003608:	e7b2      	b.n	8003570 <u8x8_d_ssd1306_sh1106_generic+0x24>
 800360a:	bf00      	nop
 800360c:	0800ee43 	.word	0x0800ee43
 8003610:	0800ee48 	.word	0x0800ee48
 8003614:	0800ee00 	.word	0x0800ee00
 8003618:	0800ee07 	.word	0x0800ee07

0800361c <u8x8_d_ssd1306_128x64_noname>:
  /* pixel_width = */ 128,
  /* pixel_height = */ 64
};

uint8_t u8x8_d_ssd1306_128x64_noname(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
{
 800361c:	b538      	push	{r3, r4, r5, lr}
 800361e:	4604      	mov	r4, r0
 8003620:	460d      	mov	r5, r1
    
  if ( u8x8_d_ssd1306_sh1106_generic(u8x8, msg, arg_int, arg_ptr) != 0 )
 8003622:	f7ff ff93 	bl	800354c <u8x8_d_ssd1306_sh1106_generic>
 8003626:	b950      	cbnz	r0, 800363e <u8x8_d_ssd1306_128x64_noname+0x22>
    return 1;
  
  switch(msg)
 8003628:	2d09      	cmp	r5, #9
 800362a:	d00a      	beq.n	8003642 <u8x8_d_ssd1306_128x64_noname+0x26>
 800362c:	2d0a      	cmp	r5, #10
 800362e:	d107      	bne.n	8003640 <u8x8_d_ssd1306_128x64_noname+0x24>
  {
    case U8X8_MSG_DISPLAY_INIT:
      u8x8_d_helper_display_init(u8x8);
 8003630:	4620      	mov	r0, r4
 8003632:	f000 f814 	bl	800365e <u8x8_d_helper_display_init>
      u8x8_cad_SendSequence(u8x8, u8x8_d_ssd1306_128x64_noname_init_seq);    
 8003636:	4620      	mov	r0, r4
 8003638:	4904      	ldr	r1, [pc, #16]	; (800364c <u8x8_d_ssd1306_128x64_noname+0x30>)
 800363a:	f7ff fef9 	bl	8003430 <u8x8_cad_SendSequence>
    return 1;
 800363e:	2001      	movs	r0, #1
      break;
    default:
      return 0;
  }
  return 1;
}
 8003640:	bd38      	pop	{r3, r4, r5, pc}
      u8x8_d_helper_display_setup_memory(u8x8, &u8x8_ssd1306_128x64_noname_display_info);
 8003642:	4620      	mov	r0, r4
 8003644:	4902      	ldr	r1, [pc, #8]	; (8003650 <u8x8_d_ssd1306_128x64_noname+0x34>)
 8003646:	f000 f805 	bl	8003654 <u8x8_d_helper_display_setup_memory>
      break;
 800364a:	e7f8      	b.n	800363e <u8x8_d_ssd1306_128x64_noname+0x22>
 800364c:	0800ee0e 	.word	0x0800ee0e
 8003650:	0800ee50 	.word	0x0800ee50

08003654 <u8x8_d_helper_display_setup_memory>:
  
*/
void u8x8_d_helper_display_setup_memory(u8x8_t *u8x8, const u8x8_display_info_t *display_info)
{
      /* 1) set display info struct */
      u8x8->display_info = display_info;
 8003654:	6001      	str	r1, [r0, #0]
      u8x8->x_offset = u8x8->display_info->default_x_offset;
 8003656:	7c8b      	ldrb	r3, [r1, #18]
 8003658:	f880 3022 	strb.w	r3, [r0, #34]	; 0x22
}
 800365c:	4770      	bx	lr

0800365e <u8x8_d_helper_display_init>:
  this is a helper function for the U8X8_MSG_DISPLAY_INIT function.
  It can be called within the display callback function to carry out the usual standard tasks.
  
*/
void u8x8_d_helper_display_init(u8x8_t *u8x8)
{
 800365e:	b538      	push	{r3, r4, r5, lr}
      /* 2) apply port directions to the GPIO lines and apply default values for the IO lines*/
      u8x8_gpio_Init(u8x8);
 8003660:	2300      	movs	r3, #0
 8003662:	2128      	movs	r1, #40	; 0x28
 8003664:	461a      	mov	r2, r3
 8003666:	6945      	ldr	r5, [r0, #20]
{
 8003668:	4604      	mov	r4, r0
      u8x8_gpio_Init(u8x8);
 800366a:	47a8      	blx	r5
      u8x8_cad_Init(u8x8);
 800366c:	2300      	movs	r3, #0
 800366e:	2114      	movs	r1, #20
 8003670:	461a      	mov	r2, r3
 8003672:	4620      	mov	r0, r4
 8003674:	68e5      	ldr	r5, [r4, #12]
 8003676:	47a8      	blx	r5

      /* 3) do reset */
      u8x8_gpio_SetReset(u8x8, 1);
 8003678:	4620      	mov	r0, r4
 800367a:	2201      	movs	r2, #1
 800367c:	214b      	movs	r1, #75	; 0x4b
 800367e:	f000 f84e 	bl	800371e <u8x8_gpio_call>
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
 8003682:	6823      	ldr	r3, [r4, #0]
 8003684:	4620      	mov	r0, r4
 8003686:	791a      	ldrb	r2, [r3, #4]
 8003688:	2129      	movs	r1, #41	; 0x29
 800368a:	f000 f848 	bl	800371e <u8x8_gpio_call>
      u8x8_gpio_SetReset(u8x8, 0);
 800368e:	4620      	mov	r0, r4
 8003690:	2200      	movs	r2, #0
 8003692:	214b      	movs	r1, #75	; 0x4b
 8003694:	f000 f843 	bl	800371e <u8x8_gpio_call>
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->reset_pulse_width_ms);
 8003698:	6823      	ldr	r3, [r4, #0]
 800369a:	4620      	mov	r0, r4
 800369c:	791a      	ldrb	r2, [r3, #4]
 800369e:	2129      	movs	r1, #41	; 0x29
 80036a0:	f000 f83d 	bl	800371e <u8x8_gpio_call>
      u8x8_gpio_SetReset(u8x8, 1);
 80036a4:	4620      	mov	r0, r4
 80036a6:	2201      	movs	r2, #1
 80036a8:	214b      	movs	r1, #75	; 0x4b
 80036aa:	f000 f838 	bl	800371e <u8x8_gpio_call>
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->post_reset_wait_ms);
 80036ae:	6823      	ldr	r3, [r4, #0]
 80036b0:	4620      	mov	r0, r4
 80036b2:	795a      	ldrb	r2, [r3, #5]
 80036b4:	2129      	movs	r1, #41	; 0x29
}    
 80036b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, u8x8->display_info->post_reset_wait_ms);
 80036ba:	f000 b830 	b.w	800371e <u8x8_gpio_call>

080036be <u8x8_DrawTile>:

/*==========================================*/
/* official functions */

uint8_t u8x8_DrawTile(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t cnt, uint8_t *tile_ptr)
{
 80036be:	b513      	push	{r0, r1, r4, lr}
  u8x8_tile_t tile;
  tile.x_pos = x;
  tile.y_pos = y;
  tile.cnt = cnt;
 80036c0:	f88d 3004 	strb.w	r3, [sp, #4]
  tile.tile_ptr = tile_ptr;
 80036c4:	9b04      	ldr	r3, [sp, #16]
  tile.x_pos = x;
 80036c6:	f88d 1005 	strb.w	r1, [sp, #5]
  tile.y_pos = y;
 80036ca:	f88d 2006 	strb.w	r2, [sp, #6]
  tile.tile_ptr = tile_ptr;
 80036ce:	9300      	str	r3, [sp, #0]
  return u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_DRAW_TILE, 1, (void *)&tile);
 80036d0:	2201      	movs	r2, #1
 80036d2:	466b      	mov	r3, sp
 80036d4:	210f      	movs	r1, #15
 80036d6:	6884      	ldr	r4, [r0, #8]
 80036d8:	47a0      	blx	r4
}
 80036da:	b002      	add	sp, #8
 80036dc:	bd10      	pop	{r4, pc}

080036de <u8x8_SetupMemory>:

/* should be implemented as macro */
void u8x8_SetupMemory(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SETUP_MEMORY, 0, NULL);  
 80036de:	2300      	movs	r3, #0
{
 80036e0:	b410      	push	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SETUP_MEMORY, 0, NULL);  
 80036e2:	6884      	ldr	r4, [r0, #8]
 80036e4:	461a      	mov	r2, r3
 80036e6:	46a4      	mov	ip, r4
 80036e8:	2109      	movs	r1, #9
}
 80036ea:	bc10      	pop	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SETUP_MEMORY, 0, NULL);  
 80036ec:	4760      	bx	ip

080036ee <u8x8_InitDisplay>:

void u8x8_InitDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_INIT, 0, NULL);  
 80036ee:	2300      	movs	r3, #0
{
 80036f0:	b410      	push	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_INIT, 0, NULL);  
 80036f2:	6884      	ldr	r4, [r0, #8]
 80036f4:	461a      	mov	r2, r3
 80036f6:	46a4      	mov	ip, r4
 80036f8:	210a      	movs	r1, #10
}
 80036fa:	bc10      	pop	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_INIT, 0, NULL);  
 80036fc:	4760      	bx	ip

080036fe <u8x8_SetPowerSave>:

void u8x8_SetPowerSave(u8x8_t *u8x8, uint8_t is_enable)
{
 80036fe:	b410      	push	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_POWER_SAVE, is_enable, NULL);  
 8003700:	6884      	ldr	r4, [r0, #8]
{
 8003702:	460a      	mov	r2, r1
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_POWER_SAVE, is_enable, NULL);  
 8003704:	46a4      	mov	ip, r4
 8003706:	2300      	movs	r3, #0
 8003708:	210b      	movs	r1, #11
}
 800370a:	bc10      	pop	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_POWER_SAVE, is_enable, NULL);  
 800370c:	4760      	bx	ip

0800370e <u8x8_RefreshDisplay>:
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_SET_CONTRAST, value, NULL);  
}

void u8x8_RefreshDisplay(u8x8_t *u8x8)
{
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
 800370e:	2300      	movs	r3, #0
{
 8003710:	b410      	push	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
 8003712:	6884      	ldr	r4, [r0, #8]
 8003714:	461a      	mov	r2, r3
 8003716:	46a4      	mov	ip, r4
 8003718:	2110      	movs	r1, #16
}
 800371a:	bc10      	pop	{r4}
  u8x8->display_cb(u8x8, U8X8_MSG_DISPLAY_REFRESH, 0, NULL);  
 800371c:	4760      	bx	ip

0800371e <u8x8_gpio_call>:

#include "u8x8.h"


void u8x8_gpio_call(u8x8_t *u8x8, uint8_t msg, uint8_t arg)
{
 800371e:	b410      	push	{r4}
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
 8003720:	6944      	ldr	r4, [r0, #20]
 8003722:	2300      	movs	r3, #0
 8003724:	46a4      	mov	ip, r4
}
 8003726:	bc10      	pop	{r4}
  u8x8->gpio_and_delay_cb(u8x8, msg, arg, NULL);
 8003728:	4760      	bx	ip

0800372a <u8x8_dummy_cb>:
/* universal dummy callback, which will be default for all callbacks */
uint8_t u8x8_dummy_cb(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
{
  /* the dummy callback will not handle any message and will fail for all messages */
  return 0;
}
 800372a:	2000      	movs	r0, #0
 800372c:	4770      	bx	lr
	...

08003730 <u8x8_SetupDefaults>:
  Args:
    u8x8	An empty u8x8 structure
*/
void u8x8_SetupDefaults(u8x8_t *u8x8)
{
    u8x8->display_info = NULL;
 8003730:	2300      	movs	r3, #0
 8003732:	6003      	str	r3, [r0, #0]
    u8x8->display_cb = u8x8_dummy_cb;
    u8x8->cad_cb = u8x8_dummy_cb;
    u8x8->byte_cb = u8x8_dummy_cb;
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
    u8x8->is_font_inverse_mode = 0;
 8003734:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
    u8x8->device_address = 0;
 8003738:	84c3      	strh	r3, [r0, #38]	; 0x26
    u8x8->utf8_state = 0;		/* also reset by u8x8_utf8_init */
    u8x8->bus_clock = 0;		/* issue 769 */
 800373a:	6183      	str	r3, [r0, #24]
    u8x8->i2c_address = 255;
 800373c:	23ff      	movs	r3, #255	; 0xff
    u8x8->display_cb = u8x8_dummy_cb;
 800373e:	4a05      	ldr	r2, [pc, #20]	; (8003754 <u8x8_SetupDefaults+0x24>)
    u8x8->i2c_address = 255;
 8003740:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
    u8x8->cad_cb = u8x8_dummy_cb;
 8003744:	e9c0 2202 	strd	r2, r2, [r0, #8]
    u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
 8003748:	e9c0 2204 	strd	r2, r2, [r0, #16]
    u8x8->debounce_default_pin_state = 255;	/* assume all low active buttons */
 800374c:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    uint8_t i;
    for( i = 0; i < U8X8_PIN_CNT; i++ )
      u8x8->pins[i] = U8X8_PIN_NONE;
  }
#endif
}
 8003750:	4770      	bx	lr
 8003752:	bf00      	nop
 8003754:	0800372b 	.word	0x0800372b

08003758 <u8x8_Setup>:
    byte_cb			Display controller/communication specific callback funtion
    gpio_and_delay_cb	Environment specific callback function

*/
void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)
{
 8003758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800375a:	9f06      	ldr	r7, [sp, #24]
 800375c:	4616      	mov	r6, r2
 800375e:	461d      	mov	r5, r3
  /* setup defaults and reset pins to U8X8_PIN_NONE */
  u8x8_SetupDefaults(u8x8);
 8003760:	f7ff ffe6 	bl	8003730 <u8x8_SetupDefaults>

  /* setup specific callbacks */
  u8x8->display_cb = display_cb;
  u8x8->cad_cb = cad_cb;
 8003764:	e9c0 1602 	strd	r1, r6, [r0, #8]
  u8x8->byte_cb = byte_cb;
  u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
 8003768:	e9c0 5704 	strd	r5, r7, [r0, #16]

  /* setup display info */
  u8x8_SetupMemory(u8x8);
}
 800376c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  u8x8_SetupMemory(u8x8);
 8003770:	f7ff bfb5 	b.w	80036de <u8x8_SetupMemory>

08003774 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8003774:	2100      	movs	r1, #0
  b LoopCopyDataInit
 8003776:	e003      	b.n	8003780 <LoopCopyDataInit>

08003778 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 8003778:	4b0b      	ldr	r3, [pc, #44]	; (80037a8 <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 800377a:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 800377c:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 800377e:	3104      	adds	r1, #4

08003780 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8003780:	480a      	ldr	r0, [pc, #40]	; (80037ac <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 8003782:	4b0b      	ldr	r3, [pc, #44]	; (80037b0 <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 8003784:	1842      	adds	r2, r0, r1
  cmp r2, r3
 8003786:	429a      	cmp	r2, r3
  bcc CopyDataInit
 8003788:	d3f6      	bcc.n	8003778 <CopyDataInit>
  ldr r2, =_sbss
 800378a:	4a0a      	ldr	r2, [pc, #40]	; (80037b4 <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 800378c:	e002      	b.n	8003794 <LoopFillZerobss>

0800378e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 800378e:	2300      	movs	r3, #0
  str r3, [r2], #4
 8003790:	f842 3b04 	str.w	r3, [r2], #4

08003794 <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 8003794:	4b08      	ldr	r3, [pc, #32]	; (80037b8 <LoopFillZerobss+0x24>)
  cmp r2, r3
 8003796:	429a      	cmp	r2, r3
  bcc FillZerobss
 8003798:	d3f9      	bcc.n	800378e <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800379a:	f7fe fff3 	bl	8002784 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800379e:	f006 fe27 	bl	800a3f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80037a2:	f7fd ff4d 	bl	8001640 <main>
  bx lr
 80037a6:	4770      	bx	lr
  ldr r3, =_sidata
 80037a8:	0800f2b8 	.word	0x0800f2b8
  ldr r0, =_sdata
 80037ac:	20000000 	.word	0x20000000
  ldr r3, =_edata
 80037b0:	20000350 	.word	0x20000350
  ldr r2, =_sbss
 80037b4:	20000350 	.word	0x20000350
  ldr r3, = _ebss
 80037b8:	20003400 	.word	0x20003400

080037bc <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80037bc:	e7fe      	b.n	80037bc <ADC1_2_IRQHandler>
	...

080037c0 <Max6675_Read_TempValue>:
 80037c0:	b570      	push	{r4, r5, r6, lr}
 80037c2:	4e11      	ldr	r6, [pc, #68]	; (8003808 <Max6675_Read_TempValue+0x48>)
 80037c4:	4d11      	ldr	r5, [pc, #68]	; (800380c <Max6675_Read_TempValue+0x4c>)
 80037c6:	4604      	mov	r4, r0
 80037c8:	2200      	movs	r2, #0
 80037ca:	4630      	mov	r0, r6
 80037cc:	2110      	movs	r1, #16
 80037ce:	f000 fa99 	bl	8003d04 <HAL_GPIO_WritePin>
 80037d2:	2332      	movs	r3, #50	; 0x32
 80037d4:	4629      	mov	r1, r5
 80037d6:	2201      	movs	r2, #1
 80037d8:	480d      	ldr	r0, [pc, #52]	; (8003810 <Max6675_Read_TempValue+0x50>)
 80037da:	f002 fe3b 	bl	8006454 <HAL_SPI_Receive>
 80037de:	2201      	movs	r2, #1
 80037e0:	2110      	movs	r1, #16
 80037e2:	4630      	mov	r0, r6
 80037e4:	f000 fa8e 	bl	8003d04 <HAL_GPIO_WritePin>
 80037e8:	8828      	ldrh	r0, [r5, #0]
 80037ea:	4b0a      	ldr	r3, [pc, #40]	; (8003814 <Max6675_Read_TempValue+0x54>)
 80037ec:	f3c0 0580 	ubfx	r5, r0, #2, #1
 80037f0:	701d      	strb	r5, [r3, #0]
 80037f2:	08c0      	lsrs	r0, r0, #3
 80037f4:	f7fd fa22 	bl	8000c3c <__aeabi_i2f>
 80037f8:	f04f 517a 	mov.w	r1, #1048576000	; 0x3e800000
 80037fc:	f7fd fa72 	bl	8000ce4 <__aeabi_fmul>
 8003800:	4b05      	ldr	r3, [pc, #20]	; (8003818 <Max6675_Read_TempValue+0x58>)
 8003802:	6020      	str	r0, [r4, #0]
 8003804:	701d      	strb	r5, [r3, #0]
 8003806:	bd70      	pop	{r4, r5, r6, pc}
 8003808:	40010800 	.word	0x40010800
 800380c:	20002424 	.word	0x20002424
 8003810:	20001c9c 	.word	0x20001c9c
 8003814:	20000b32 	.word	0x20000b32
 8003818:	20000704 	.word	0x20000704

0800381c <HAL_Init>:
 800381c:	4a07      	ldr	r2, [pc, #28]	; (800383c <HAL_Init+0x20>)
 800381e:	b508      	push	{r3, lr}
 8003820:	6813      	ldr	r3, [r2, #0]
 8003822:	2003      	movs	r0, #3
 8003824:	f043 0310 	orr.w	r3, r3, #16
 8003828:	6013      	str	r3, [r2, #0]
 800382a:	f000 f82d 	bl	8003888 <HAL_NVIC_SetPriorityGrouping>
 800382e:	2000      	movs	r0, #0
 8003830:	f7fe fed2 	bl	80025d8 <HAL_InitTick>
 8003834:	f7fe fcd0 	bl	80021d8 <HAL_MspInit>
 8003838:	2000      	movs	r0, #0
 800383a:	bd08      	pop	{r3, pc}
 800383c:	40022000 	.word	0x40022000

08003840 <HAL_IncTick>:
 8003840:	4a03      	ldr	r2, [pc, #12]	; (8003850 <HAL_IncTick+0x10>)
 8003842:	4b04      	ldr	r3, [pc, #16]	; (8003854 <HAL_IncTick+0x14>)
 8003844:	6811      	ldr	r1, [r2, #0]
 8003846:	781b      	ldrb	r3, [r3, #0]
 8003848:	440b      	add	r3, r1
 800384a:	6013      	str	r3, [r2, #0]
 800384c:	4770      	bx	lr
 800384e:	bf00      	nop
 8003850:	2000242c 	.word	0x2000242c
 8003854:	20000004 	.word	0x20000004

08003858 <HAL_GetTick>:
 8003858:	4b01      	ldr	r3, [pc, #4]	; (8003860 <HAL_GetTick+0x8>)
 800385a:	6818      	ldr	r0, [r3, #0]
 800385c:	4770      	bx	lr
 800385e:	bf00      	nop
 8003860:	2000242c 	.word	0x2000242c

08003864 <HAL_Delay>:
 8003864:	b538      	push	{r3, r4, r5, lr}
 8003866:	4604      	mov	r4, r0
 8003868:	f7ff fff6 	bl	8003858 <HAL_GetTick>
 800386c:	4605      	mov	r5, r0
 800386e:	1c63      	adds	r3, r4, #1
 8003870:	bf1e      	ittt	ne
 8003872:	4b04      	ldrne	r3, [pc, #16]	; (8003884 <HAL_Delay+0x20>)
 8003874:	781b      	ldrbne	r3, [r3, #0]
 8003876:	18e4      	addne	r4, r4, r3
 8003878:	f7ff ffee 	bl	8003858 <HAL_GetTick>
 800387c:	1b43      	subs	r3, r0, r5
 800387e:	42a3      	cmp	r3, r4
 8003880:	d3fa      	bcc.n	8003878 <HAL_Delay+0x14>
 8003882:	bd38      	pop	{r3, r4, r5, pc}
 8003884:	20000004 	.word	0x20000004

08003888 <HAL_NVIC_SetPriorityGrouping>:
 8003888:	4907      	ldr	r1, [pc, #28]	; (80038a8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800388a:	0203      	lsls	r3, r0, #8
 800388c:	68ca      	ldr	r2, [r1, #12]
 800388e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003892:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8003896:	0412      	lsls	r2, r2, #16
 8003898:	0c12      	lsrs	r2, r2, #16
 800389a:	4313      	orrs	r3, r2
 800389c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80038a0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80038a4:	60cb      	str	r3, [r1, #12]
 80038a6:	4770      	bx	lr
 80038a8:	e000ed00 	.word	0xe000ed00

080038ac <HAL_NVIC_SetPriority>:
 80038ac:	4b16      	ldr	r3, [pc, #88]	; (8003908 <HAL_NVIC_SetPriority+0x5c>)
 80038ae:	b530      	push	{r4, r5, lr}
 80038b0:	68dc      	ldr	r4, [r3, #12]
 80038b2:	f3c4 2402 	ubfx	r4, r4, #8, #3
 80038b6:	f1c4 0307 	rsb	r3, r4, #7
 80038ba:	1d25      	adds	r5, r4, #4
 80038bc:	2b04      	cmp	r3, #4
 80038be:	bf28      	it	cs
 80038c0:	2304      	movcs	r3, #4
 80038c2:	2d06      	cmp	r5, #6
 80038c4:	f04f 35ff 	mov.w	r5, #4294967295
 80038c8:	bf98      	it	ls
 80038ca:	2400      	movls	r4, #0
 80038cc:	fa05 f303 	lsl.w	r3, r5, r3
 80038d0:	bf88      	it	hi
 80038d2:	3c03      	subhi	r4, #3
 80038d4:	ea21 0303 	bic.w	r3, r1, r3
 80038d8:	40a3      	lsls	r3, r4
 80038da:	fa05 f404 	lsl.w	r4, r5, r4
 80038de:	ea22 0204 	bic.w	r2, r2, r4
 80038e2:	2800      	cmp	r0, #0
 80038e4:	ea43 0302 	orr.w	r3, r3, r2
 80038e8:	bfac      	ite	ge
 80038ea:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 80038ee:	4a07      	ldrlt	r2, [pc, #28]	; (800390c <HAL_NVIC_SetPriority+0x60>)
 80038f0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80038f4:	b2db      	uxtb	r3, r3
 80038f6:	bfab      	itete	ge
 80038f8:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
 80038fc:	f000 000f 	andlt.w	r0, r0, #15
 8003900:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
 8003904:	5413      	strblt	r3, [r2, r0]
 8003906:	bd30      	pop	{r4, r5, pc}
 8003908:	e000ed00 	.word	0xe000ed00
 800390c:	e000ed14 	.word	0xe000ed14

08003910 <HAL_NVIC_EnableIRQ>:
 8003910:	2800      	cmp	r0, #0
 8003912:	db08      	blt.n	8003926 <HAL_NVIC_EnableIRQ+0x16>
 8003914:	2301      	movs	r3, #1
 8003916:	0942      	lsrs	r2, r0, #5
 8003918:	f000 001f 	and.w	r0, r0, #31
 800391c:	fa03 f000 	lsl.w	r0, r3, r0
 8003920:	4b01      	ldr	r3, [pc, #4]	; (8003928 <HAL_NVIC_EnableIRQ+0x18>)
 8003922:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8003926:	4770      	bx	lr
 8003928:	e000e100 	.word	0xe000e100

0800392c <HAL_DMA_Init>:
 800392c:	b510      	push	{r4, lr}
 800392e:	b320      	cbz	r0, 800397a <HAL_DMA_Init+0x4e>
 8003930:	2214      	movs	r2, #20
 8003932:	6801      	ldr	r1, [r0, #0]
 8003934:	4b12      	ldr	r3, [pc, #72]	; (8003980 <HAL_DMA_Init+0x54>)
 8003936:	440b      	add	r3, r1
 8003938:	fbb3 f3f2 	udiv	r3, r3, r2
 800393c:	009b      	lsls	r3, r3, #2
 800393e:	6403      	str	r3, [r0, #64]	; 0x40
 8003940:	4b10      	ldr	r3, [pc, #64]	; (8003984 <HAL_DMA_Init+0x58>)
 8003942:	680a      	ldr	r2, [r1, #0]
 8003944:	63c3      	str	r3, [r0, #60]	; 0x3c
 8003946:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800394a:	4323      	orrs	r3, r4
 800394c:	68c4      	ldr	r4, [r0, #12]
 800394e:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8003952:	4323      	orrs	r3, r4
 8003954:	6904      	ldr	r4, [r0, #16]
 8003956:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 800395a:	4323      	orrs	r3, r4
 800395c:	6944      	ldr	r4, [r0, #20]
 800395e:	4323      	orrs	r3, r4
 8003960:	6984      	ldr	r4, [r0, #24]
 8003962:	4323      	orrs	r3, r4
 8003964:	69c4      	ldr	r4, [r0, #28]
 8003966:	4323      	orrs	r3, r4
 8003968:	4313      	orrs	r3, r2
 800396a:	600b      	str	r3, [r1, #0]
 800396c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003970:	2300      	movs	r3, #0
 8003972:	8402      	strh	r2, [r0, #32]
 8003974:	6383      	str	r3, [r0, #56]	; 0x38
 8003976:	4618      	mov	r0, r3
 8003978:	bd10      	pop	{r4, pc}
 800397a:	2001      	movs	r0, #1
 800397c:	e7fc      	b.n	8003978 <HAL_DMA_Init+0x4c>
 800397e:	bf00      	nop
 8003980:	bffdfff8 	.word	0xbffdfff8
 8003984:	40020000 	.word	0x40020000

08003988 <HAL_DMA_Abort_IT>:
 8003988:	b508      	push	{r3, lr}
 800398a:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 800398e:	2b02      	cmp	r3, #2
 8003990:	d003      	beq.n	800399a <HAL_DMA_Abort_IT+0x12>
 8003992:	2304      	movs	r3, #4
 8003994:	6383      	str	r3, [r0, #56]	; 0x38
 8003996:	2001      	movs	r0, #1
 8003998:	bd08      	pop	{r3, pc}
 800399a:	6803      	ldr	r3, [r0, #0]
 800399c:	681a      	ldr	r2, [r3, #0]
 800399e:	f022 020e 	bic.w	r2, r2, #14
 80039a2:	601a      	str	r2, [r3, #0]
 80039a4:	681a      	ldr	r2, [r3, #0]
 80039a6:	f022 0201 	bic.w	r2, r2, #1
 80039aa:	601a      	str	r2, [r3, #0]
 80039ac:	4a17      	ldr	r2, [pc, #92]	; (8003a0c <HAL_DMA_Abort_IT+0x84>)
 80039ae:	4293      	cmp	r3, r2
 80039b0:	d01c      	beq.n	80039ec <HAL_DMA_Abort_IT+0x64>
 80039b2:	3214      	adds	r2, #20
 80039b4:	4293      	cmp	r3, r2
 80039b6:	d01b      	beq.n	80039f0 <HAL_DMA_Abort_IT+0x68>
 80039b8:	3214      	adds	r2, #20
 80039ba:	4293      	cmp	r3, r2
 80039bc:	d01a      	beq.n	80039f4 <HAL_DMA_Abort_IT+0x6c>
 80039be:	3214      	adds	r2, #20
 80039c0:	4293      	cmp	r3, r2
 80039c2:	d01a      	beq.n	80039fa <HAL_DMA_Abort_IT+0x72>
 80039c4:	3214      	adds	r2, #20
 80039c6:	4293      	cmp	r3, r2
 80039c8:	d01a      	beq.n	8003a00 <HAL_DMA_Abort_IT+0x78>
 80039ca:	3214      	adds	r2, #20
 80039cc:	4293      	cmp	r3, r2
 80039ce:	bf0c      	ite	eq
 80039d0:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 80039d4:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
 80039d8:	4a0d      	ldr	r2, [pc, #52]	; (8003a10 <HAL_DMA_Abort_IT+0x88>)
 80039da:	6053      	str	r3, [r2, #4]
 80039dc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80039e0:	8403      	strh	r3, [r0, #32]
 80039e2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80039e4:	b17b      	cbz	r3, 8003a06 <HAL_DMA_Abort_IT+0x7e>
 80039e6:	4798      	blx	r3
 80039e8:	2000      	movs	r0, #0
 80039ea:	e7d5      	b.n	8003998 <HAL_DMA_Abort_IT+0x10>
 80039ec:	2301      	movs	r3, #1
 80039ee:	e7f3      	b.n	80039d8 <HAL_DMA_Abort_IT+0x50>
 80039f0:	2310      	movs	r3, #16
 80039f2:	e7f1      	b.n	80039d8 <HAL_DMA_Abort_IT+0x50>
 80039f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80039f8:	e7ee      	b.n	80039d8 <HAL_DMA_Abort_IT+0x50>
 80039fa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80039fe:	e7eb      	b.n	80039d8 <HAL_DMA_Abort_IT+0x50>
 8003a00:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003a04:	e7e8      	b.n	80039d8 <HAL_DMA_Abort_IT+0x50>
 8003a06:	4618      	mov	r0, r3
 8003a08:	e7c6      	b.n	8003998 <HAL_DMA_Abort_IT+0x10>
 8003a0a:	bf00      	nop
 8003a0c:	40020008 	.word	0x40020008
 8003a10:	40020000 	.word	0x40020000

08003a14 <HAL_DMA_IRQHandler>:
 8003a14:	b470      	push	{r4, r5, r6}
 8003a16:	2504      	movs	r5, #4
 8003a18:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8003a1a:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8003a1c:	6834      	ldr	r4, [r6, #0]
 8003a1e:	6803      	ldr	r3, [r0, #0]
 8003a20:	4095      	lsls	r5, r2
 8003a22:	4225      	tst	r5, r4
 8003a24:	6819      	ldr	r1, [r3, #0]
 8003a26:	d032      	beq.n	8003a8e <HAL_DMA_IRQHandler+0x7a>
 8003a28:	074d      	lsls	r5, r1, #29
 8003a2a:	d530      	bpl.n	8003a8e <HAL_DMA_IRQHandler+0x7a>
 8003a2c:	681a      	ldr	r2, [r3, #0]
 8003a2e:	0696      	lsls	r6, r2, #26
 8003a30:	bf5e      	ittt	pl
 8003a32:	681a      	ldrpl	r2, [r3, #0]
 8003a34:	f022 0204 	bicpl.w	r2, r2, #4
 8003a38:	601a      	strpl	r2, [r3, #0]
 8003a3a:	4a3d      	ldr	r2, [pc, #244]	; (8003b30 <HAL_DMA_IRQHandler+0x11c>)
 8003a3c:	4293      	cmp	r3, r2
 8003a3e:	d019      	beq.n	8003a74 <HAL_DMA_IRQHandler+0x60>
 8003a40:	3214      	adds	r2, #20
 8003a42:	4293      	cmp	r3, r2
 8003a44:	d018      	beq.n	8003a78 <HAL_DMA_IRQHandler+0x64>
 8003a46:	3214      	adds	r2, #20
 8003a48:	4293      	cmp	r3, r2
 8003a4a:	d017      	beq.n	8003a7c <HAL_DMA_IRQHandler+0x68>
 8003a4c:	3214      	adds	r2, #20
 8003a4e:	4293      	cmp	r3, r2
 8003a50:	d017      	beq.n	8003a82 <HAL_DMA_IRQHandler+0x6e>
 8003a52:	3214      	adds	r2, #20
 8003a54:	4293      	cmp	r3, r2
 8003a56:	d017      	beq.n	8003a88 <HAL_DMA_IRQHandler+0x74>
 8003a58:	3214      	adds	r2, #20
 8003a5a:	4293      	cmp	r3, r2
 8003a5c:	bf0c      	ite	eq
 8003a5e:	f44f 0380 	moveq.w	r3, #4194304	; 0x400000
 8003a62:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8003a66:	4a33      	ldr	r2, [pc, #204]	; (8003b34 <HAL_DMA_IRQHandler+0x120>)
 8003a68:	6053      	str	r3, [r2, #4]
 8003a6a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	d05c      	beq.n	8003b2a <HAL_DMA_IRQHandler+0x116>
 8003a70:	bc70      	pop	{r4, r5, r6}
 8003a72:	4718      	bx	r3
 8003a74:	2304      	movs	r3, #4
 8003a76:	e7f6      	b.n	8003a66 <HAL_DMA_IRQHandler+0x52>
 8003a78:	2340      	movs	r3, #64	; 0x40
 8003a7a:	e7f4      	b.n	8003a66 <HAL_DMA_IRQHandler+0x52>
 8003a7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003a80:	e7f1      	b.n	8003a66 <HAL_DMA_IRQHandler+0x52>
 8003a82:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003a86:	e7ee      	b.n	8003a66 <HAL_DMA_IRQHandler+0x52>
 8003a88:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8003a8c:	e7eb      	b.n	8003a66 <HAL_DMA_IRQHandler+0x52>
 8003a8e:	2502      	movs	r5, #2
 8003a90:	4095      	lsls	r5, r2
 8003a92:	4225      	tst	r5, r4
 8003a94:	d035      	beq.n	8003b02 <HAL_DMA_IRQHandler+0xee>
 8003a96:	078d      	lsls	r5, r1, #30
 8003a98:	d533      	bpl.n	8003b02 <HAL_DMA_IRQHandler+0xee>
 8003a9a:	681a      	ldr	r2, [r3, #0]
 8003a9c:	0694      	lsls	r4, r2, #26
 8003a9e:	d406      	bmi.n	8003aae <HAL_DMA_IRQHandler+0x9a>
 8003aa0:	681a      	ldr	r2, [r3, #0]
 8003aa2:	f022 020a 	bic.w	r2, r2, #10
 8003aa6:	601a      	str	r2, [r3, #0]
 8003aa8:	2201      	movs	r2, #1
 8003aaa:	f880 2021 	strb.w	r2, [r0, #33]	; 0x21
 8003aae:	4a20      	ldr	r2, [pc, #128]	; (8003b30 <HAL_DMA_IRQHandler+0x11c>)
 8003ab0:	4293      	cmp	r3, r2
 8003ab2:	d019      	beq.n	8003ae8 <HAL_DMA_IRQHandler+0xd4>
 8003ab4:	3214      	adds	r2, #20
 8003ab6:	4293      	cmp	r3, r2
 8003ab8:	d018      	beq.n	8003aec <HAL_DMA_IRQHandler+0xd8>
 8003aba:	3214      	adds	r2, #20
 8003abc:	4293      	cmp	r3, r2
 8003abe:	d017      	beq.n	8003af0 <HAL_DMA_IRQHandler+0xdc>
 8003ac0:	3214      	adds	r2, #20
 8003ac2:	4293      	cmp	r3, r2
 8003ac4:	d017      	beq.n	8003af6 <HAL_DMA_IRQHandler+0xe2>
 8003ac6:	3214      	adds	r2, #20
 8003ac8:	4293      	cmp	r3, r2
 8003aca:	d017      	beq.n	8003afc <HAL_DMA_IRQHandler+0xe8>
 8003acc:	3214      	adds	r2, #20
 8003ace:	4293      	cmp	r3, r2
 8003ad0:	bf0c      	ite	eq
 8003ad2:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 8003ad6:	f04f 7300 	movne.w	r3, #33554432	; 0x2000000
 8003ada:	4a16      	ldr	r2, [pc, #88]	; (8003b34 <HAL_DMA_IRQHandler+0x120>)
 8003adc:	6053      	str	r3, [r2, #4]
 8003ade:	2300      	movs	r3, #0
 8003ae0:	f880 3020 	strb.w	r3, [r0, #32]
 8003ae4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8003ae6:	e7c1      	b.n	8003a6c <HAL_DMA_IRQHandler+0x58>
 8003ae8:	2302      	movs	r3, #2
 8003aea:	e7f6      	b.n	8003ada <HAL_DMA_IRQHandler+0xc6>
 8003aec:	2320      	movs	r3, #32
 8003aee:	e7f4      	b.n	8003ada <HAL_DMA_IRQHandler+0xc6>
 8003af0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003af4:	e7f1      	b.n	8003ada <HAL_DMA_IRQHandler+0xc6>
 8003af6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003afa:	e7ee      	b.n	8003ada <HAL_DMA_IRQHandler+0xc6>
 8003afc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003b00:	e7eb      	b.n	8003ada <HAL_DMA_IRQHandler+0xc6>
 8003b02:	2508      	movs	r5, #8
 8003b04:	4095      	lsls	r5, r2
 8003b06:	4225      	tst	r5, r4
 8003b08:	d00f      	beq.n	8003b2a <HAL_DMA_IRQHandler+0x116>
 8003b0a:	0709      	lsls	r1, r1, #28
 8003b0c:	d50d      	bpl.n	8003b2a <HAL_DMA_IRQHandler+0x116>
 8003b0e:	6819      	ldr	r1, [r3, #0]
 8003b10:	f021 010e 	bic.w	r1, r1, #14
 8003b14:	6019      	str	r1, [r3, #0]
 8003b16:	2301      	movs	r3, #1
 8003b18:	fa03 f202 	lsl.w	r2, r3, r2
 8003b1c:	6072      	str	r2, [r6, #4]
 8003b1e:	6383      	str	r3, [r0, #56]	; 0x38
 8003b20:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003b24:	8403      	strh	r3, [r0, #32]
 8003b26:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8003b28:	e7a0      	b.n	8003a6c <HAL_DMA_IRQHandler+0x58>
 8003b2a:	bc70      	pop	{r4, r5, r6}
 8003b2c:	4770      	bx	lr
 8003b2e:	bf00      	nop
 8003b30:	40020008 	.word	0x40020008
 8003b34:	40020000 	.word	0x40020000

08003b38 <HAL_DMA_GetState>:
 8003b38:	f890 0021 	ldrb.w	r0, [r0, #33]	; 0x21
 8003b3c:	4770      	bx	lr
	...

08003b40 <HAL_GPIO_Init>:
 8003b40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b44:	2200      	movs	r2, #0
 8003b46:	4616      	mov	r6, r2
 8003b48:	4b64      	ldr	r3, [pc, #400]	; (8003cdc <HAL_GPIO_Init+0x19c>)
 8003b4a:	f8df c1a0 	ldr.w	ip, [pc, #416]	; 8003cec <HAL_GPIO_Init+0x1ac>
 8003b4e:	f8df e1a0 	ldr.w	lr, [pc, #416]	; 8003cf0 <HAL_GPIO_Init+0x1b0>
 8003b52:	680d      	ldr	r5, [r1, #0]
 8003b54:	fa35 f406 	lsrs.w	r4, r5, r6
 8003b58:	d102      	bne.n	8003b60 <HAL_GPIO_Init+0x20>
 8003b5a:	b003      	add	sp, #12
 8003b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b60:	f04f 0801 	mov.w	r8, #1
 8003b64:	fa08 f806 	lsl.w	r8, r8, r6
 8003b68:	ea05 0408 	and.w	r4, r5, r8
 8003b6c:	ea38 0505 	bics.w	r5, r8, r5
 8003b70:	d17c      	bne.n	8003c6c <HAL_GPIO_Init+0x12c>
 8003b72:	684d      	ldr	r5, [r1, #4]
 8003b74:	2d03      	cmp	r5, #3
 8003b76:	d807      	bhi.n	8003b88 <HAL_GPIO_Init+0x48>
 8003b78:	3d01      	subs	r5, #1
 8003b7a:	2d02      	cmp	r5, #2
 8003b7c:	f200 8088 	bhi.w	8003c90 <HAL_GPIO_Init+0x150>
 8003b80:	e8df f005 	tbb	[pc, r5]
 8003b84:	9b96      	.short	0x9b96
 8003b86:	a1          	.byte	0xa1
 8003b87:	00          	.byte	0x00
 8003b88:	2d12      	cmp	r5, #18
 8003b8a:	f000 8099 	beq.w	8003cc0 <HAL_GPIO_Init+0x180>
 8003b8e:	d86f      	bhi.n	8003c70 <HAL_GPIO_Init+0x130>
 8003b90:	2d11      	cmp	r5, #17
 8003b92:	f000 808f 	beq.w	8003cb4 <HAL_GPIO_Init+0x174>
 8003b96:	2cff      	cmp	r4, #255	; 0xff
 8003b98:	bf98      	it	ls
 8003b9a:	4682      	movls	sl, r0
 8003b9c:	f04f 090f 	mov.w	r9, #15
 8003ba0:	bf88      	it	hi
 8003ba2:	f100 0a04 	addhi.w	sl, r0, #4
 8003ba6:	ea4f 0586 	mov.w	r5, r6, lsl #2
 8003baa:	f8da 8000 	ldr.w	r8, [sl]
 8003bae:	bf88      	it	hi
 8003bb0:	3d20      	subhi	r5, #32
 8003bb2:	fa09 fb05 	lsl.w	fp, r9, r5
 8003bb6:	ea28 080b 	bic.w	r8, r8, fp
 8003bba:	fa02 f505 	lsl.w	r5, r2, r5
 8003bbe:	ea48 0505 	orr.w	r5, r8, r5
 8003bc2:	f8ca 5000 	str.w	r5, [sl]
 8003bc6:	f8d1 a004 	ldr.w	sl, [r1, #4]
 8003bca:	f01a 5f80 	tst.w	sl, #268435456	; 0x10000000
 8003bce:	d04d      	beq.n	8003c6c <HAL_GPIO_Init+0x12c>
 8003bd0:	4f43      	ldr	r7, [pc, #268]	; (8003ce0 <HAL_GPIO_Init+0x1a0>)
 8003bd2:	f026 0803 	bic.w	r8, r6, #3
 8003bd6:	69bd      	ldr	r5, [r7, #24]
 8003bd8:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
 8003bdc:	f045 0501 	orr.w	r5, r5, #1
 8003be0:	61bd      	str	r5, [r7, #24]
 8003be2:	69bd      	ldr	r5, [r7, #24]
 8003be4:	f508 3880 	add.w	r8, r8, #65536	; 0x10000
 8003be8:	f005 0501 	and.w	r5, r5, #1
 8003bec:	9501      	str	r5, [sp, #4]
 8003bee:	f006 0b03 	and.w	fp, r6, #3
 8003bf2:	9d01      	ldr	r5, [sp, #4]
 8003bf4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8003bf8:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8003bfc:	fa09 f90b 	lsl.w	r9, r9, fp
 8003c00:	ea25 0909 	bic.w	r9, r5, r9
 8003c04:	4d37      	ldr	r5, [pc, #220]	; (8003ce4 <HAL_GPIO_Init+0x1a4>)
 8003c06:	42a8      	cmp	r0, r5
 8003c08:	d061      	beq.n	8003cce <HAL_GPIO_Init+0x18e>
 8003c0a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8003c0e:	42a8      	cmp	r0, r5
 8003c10:	d05f      	beq.n	8003cd2 <HAL_GPIO_Init+0x192>
 8003c12:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8003c16:	42a8      	cmp	r0, r5
 8003c18:	d05d      	beq.n	8003cd6 <HAL_GPIO_Init+0x196>
 8003c1a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8003c1e:	42a8      	cmp	r0, r5
 8003c20:	bf0c      	ite	eq
 8003c22:	2503      	moveq	r5, #3
 8003c24:	2504      	movne	r5, #4
 8003c26:	fa05 f50b 	lsl.w	r5, r5, fp
 8003c2a:	ea45 0509 	orr.w	r5, r5, r9
 8003c2e:	f8c8 5008 	str.w	r5, [r8, #8]
 8003c32:	681d      	ldr	r5, [r3, #0]
 8003c34:	f41a 3f80 	tst.w	sl, #65536	; 0x10000
 8003c38:	bf14      	ite	ne
 8003c3a:	4325      	orrne	r5, r4
 8003c3c:	43a5      	biceq	r5, r4
 8003c3e:	601d      	str	r5, [r3, #0]
 8003c40:	685d      	ldr	r5, [r3, #4]
 8003c42:	f41a 3f00 	tst.w	sl, #131072	; 0x20000
 8003c46:	bf14      	ite	ne
 8003c48:	4325      	orrne	r5, r4
 8003c4a:	43a5      	biceq	r5, r4
 8003c4c:	605d      	str	r5, [r3, #4]
 8003c4e:	689d      	ldr	r5, [r3, #8]
 8003c50:	f41a 1f80 	tst.w	sl, #1048576	; 0x100000
 8003c54:	bf14      	ite	ne
 8003c56:	4325      	orrne	r5, r4
 8003c58:	43a5      	biceq	r5, r4
 8003c5a:	609d      	str	r5, [r3, #8]
 8003c5c:	68dd      	ldr	r5, [r3, #12]
 8003c5e:	f41a 1f00 	tst.w	sl, #2097152	; 0x200000
 8003c62:	bf14      	ite	ne
 8003c64:	432c      	orrne	r4, r5
 8003c66:	ea25 0404 	biceq.w	r4, r5, r4
 8003c6a:	60dc      	str	r4, [r3, #12]
 8003c6c:	3601      	adds	r6, #1
 8003c6e:	e770      	b.n	8003b52 <HAL_GPIO_Init+0x12>
 8003c70:	4f1d      	ldr	r7, [pc, #116]	; (8003ce8 <HAL_GPIO_Init+0x1a8>)
 8003c72:	42bd      	cmp	r5, r7
 8003c74:	d00c      	beq.n	8003c90 <HAL_GPIO_Init+0x150>
 8003c76:	d817      	bhi.n	8003ca8 <HAL_GPIO_Init+0x168>
 8003c78:	f8df 9078 	ldr.w	r9, [pc, #120]	; 8003cf4 <HAL_GPIO_Init+0x1b4>
 8003c7c:	454d      	cmp	r5, r9
 8003c7e:	d007      	beq.n	8003c90 <HAL_GPIO_Init+0x150>
 8003c80:	f509 2970 	add.w	r9, r9, #983040	; 0xf0000
 8003c84:	454d      	cmp	r5, r9
 8003c86:	d003      	beq.n	8003c90 <HAL_GPIO_Init+0x150>
 8003c88:	f5a9 1980 	sub.w	r9, r9, #1048576	; 0x100000
 8003c8c:	454d      	cmp	r5, r9
 8003c8e:	d182      	bne.n	8003b96 <HAL_GPIO_Init+0x56>
 8003c90:	688a      	ldr	r2, [r1, #8]
 8003c92:	b1d2      	cbz	r2, 8003cca <HAL_GPIO_Init+0x18a>
 8003c94:	2a01      	cmp	r2, #1
 8003c96:	bf08      	it	eq
 8003c98:	f8c0 8010 	streq.w	r8, [r0, #16]
 8003c9c:	f04f 0208 	mov.w	r2, #8
 8003ca0:	bf18      	it	ne
 8003ca2:	f8c0 8014 	strne.w	r8, [r0, #20]
 8003ca6:	e776      	b.n	8003b96 <HAL_GPIO_Init+0x56>
 8003ca8:	4565      	cmp	r5, ip
 8003caa:	d0f1      	beq.n	8003c90 <HAL_GPIO_Init+0x150>
 8003cac:	4575      	cmp	r5, lr
 8003cae:	e7ee      	b.n	8003c8e <HAL_GPIO_Init+0x14e>
 8003cb0:	68ca      	ldr	r2, [r1, #12]
 8003cb2:	e770      	b.n	8003b96 <HAL_GPIO_Init+0x56>
 8003cb4:	68ca      	ldr	r2, [r1, #12]
 8003cb6:	3204      	adds	r2, #4
 8003cb8:	e76d      	b.n	8003b96 <HAL_GPIO_Init+0x56>
 8003cba:	68ca      	ldr	r2, [r1, #12]
 8003cbc:	3208      	adds	r2, #8
 8003cbe:	e76a      	b.n	8003b96 <HAL_GPIO_Init+0x56>
 8003cc0:	68ca      	ldr	r2, [r1, #12]
 8003cc2:	320c      	adds	r2, #12
 8003cc4:	e767      	b.n	8003b96 <HAL_GPIO_Init+0x56>
 8003cc6:	2200      	movs	r2, #0
 8003cc8:	e765      	b.n	8003b96 <HAL_GPIO_Init+0x56>
 8003cca:	2204      	movs	r2, #4
 8003ccc:	e763      	b.n	8003b96 <HAL_GPIO_Init+0x56>
 8003cce:	2500      	movs	r5, #0
 8003cd0:	e7a9      	b.n	8003c26 <HAL_GPIO_Init+0xe6>
 8003cd2:	2501      	movs	r5, #1
 8003cd4:	e7a7      	b.n	8003c26 <HAL_GPIO_Init+0xe6>
 8003cd6:	2502      	movs	r5, #2
 8003cd8:	e7a5      	b.n	8003c26 <HAL_GPIO_Init+0xe6>
 8003cda:	bf00      	nop
 8003cdc:	40010400 	.word	0x40010400
 8003ce0:	40021000 	.word	0x40021000
 8003ce4:	40010800 	.word	0x40010800
 8003ce8:	10220000 	.word	0x10220000
 8003cec:	10310000 	.word	0x10310000
 8003cf0:	10320000 	.word	0x10320000
 8003cf4:	10120000 	.word	0x10120000

08003cf8 <HAL_GPIO_ReadPin>:
 8003cf8:	6883      	ldr	r3, [r0, #8]
 8003cfa:	4219      	tst	r1, r3
 8003cfc:	bf14      	ite	ne
 8003cfe:	2001      	movne	r0, #1
 8003d00:	2000      	moveq	r0, #0
 8003d02:	4770      	bx	lr

08003d04 <HAL_GPIO_WritePin>:
 8003d04:	b10a      	cbz	r2, 8003d0a <HAL_GPIO_WritePin+0x6>
 8003d06:	6101      	str	r1, [r0, #16]
 8003d08:	4770      	bx	lr
 8003d0a:	0409      	lsls	r1, r1, #16
 8003d0c:	e7fb      	b.n	8003d06 <HAL_GPIO_WritePin+0x2>
	...

08003d10 <HAL_GPIO_EXTI_IRQHandler>:
 8003d10:	4a04      	ldr	r2, [pc, #16]	; (8003d24 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8003d12:	b508      	push	{r3, lr}
 8003d14:	6951      	ldr	r1, [r2, #20]
 8003d16:	4201      	tst	r1, r0
 8003d18:	d002      	beq.n	8003d20 <HAL_GPIO_EXTI_IRQHandler+0x10>
 8003d1a:	6150      	str	r0, [r2, #20]
 8003d1c:	f7fd ff22 	bl	8001b64 <HAL_GPIO_EXTI_Callback>
 8003d20:	bd08      	pop	{r3, pc}
 8003d22:	bf00      	nop
 8003d24:	40010400 	.word	0x40010400

08003d28 <I2C_IsAcknowledgeFailed>:
 8003d28:	6801      	ldr	r1, [r0, #0]
 8003d2a:	2200      	movs	r2, #0
 8003d2c:	694b      	ldr	r3, [r1, #20]
 8003d2e:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8003d32:	d010      	beq.n	8003d56 <I2C_IsAcknowledgeFailed+0x2e>
 8003d34:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003d38:	614b      	str	r3, [r1, #20]
 8003d3a:	2320      	movs	r3, #32
 8003d3c:	6302      	str	r2, [r0, #48]	; 0x30
 8003d3e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 8003d42:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
 8003d46:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8003d48:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8003d4c:	f043 0304 	orr.w	r3, r3, #4
 8003d50:	6403      	str	r3, [r0, #64]	; 0x40
 8003d52:	2001      	movs	r0, #1
 8003d54:	4770      	bx	lr
 8003d56:	4618      	mov	r0, r3
 8003d58:	4770      	bx	lr

08003d5a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003d5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d5e:	4604      	mov	r4, r0
 8003d60:	460f      	mov	r7, r1
 8003d62:	4616      	mov	r6, r2
 8003d64:	4698      	mov	r8, r3
 8003d66:	6825      	ldr	r5, [r4, #0]
 8003d68:	6968      	ldr	r0, [r5, #20]
 8003d6a:	ea27 0000 	bic.w	r0, r7, r0
 8003d6e:	b280      	uxth	r0, r0
 8003d70:	b1b8      	cbz	r0, 8003da2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
 8003d72:	696b      	ldr	r3, [r5, #20]
 8003d74:	055a      	lsls	r2, r3, #21
 8003d76:	d516      	bpl.n	8003da6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
 8003d78:	682b      	ldr	r3, [r5, #0]
 8003d7a:	2220      	movs	r2, #32
 8003d7c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003d80:	602b      	str	r3, [r5, #0]
 8003d82:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003d86:	616b      	str	r3, [r5, #20]
 8003d88:	2300      	movs	r3, #0
 8003d8a:	6323      	str	r3, [r4, #48]	; 0x30
 8003d8c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8003d90:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8003d94:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003d96:	f042 0204 	orr.w	r2, r2, #4
 8003d9a:	2001      	movs	r0, #1
 8003d9c:	6422      	str	r2, [r4, #64]	; 0x40
 8003d9e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003da6:	1c73      	adds	r3, r6, #1
 8003da8:	d0de      	beq.n	8003d68 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
 8003daa:	f7ff fd55 	bl	8003858 <HAL_GetTick>
 8003dae:	eba0 0008 	sub.w	r0, r0, r8
 8003db2:	42b0      	cmp	r0, r6
 8003db4:	d801      	bhi.n	8003dba <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8003db6:	2e00      	cmp	r6, #0
 8003db8:	d1d5      	bne.n	8003d66 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
 8003dba:	2300      	movs	r3, #0
 8003dbc:	2220      	movs	r2, #32
 8003dbe:	6323      	str	r3, [r4, #48]	; 0x30
 8003dc0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8003dc4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8003dc8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003dca:	f042 0220 	orr.w	r2, r2, #32
 8003dce:	e7e4      	b.n	8003d9a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08003dd0 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003dd0:	b570      	push	{r4, r5, r6, lr}
 8003dd2:	4604      	mov	r4, r0
 8003dd4:	460d      	mov	r5, r1
 8003dd6:	4616      	mov	r6, r2
 8003dd8:	6823      	ldr	r3, [r4, #0]
 8003dda:	695b      	ldr	r3, [r3, #20]
 8003ddc:	075b      	lsls	r3, r3, #29
 8003dde:	d501      	bpl.n	8003de4 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
 8003de0:	2000      	movs	r0, #0
 8003de2:	bd70      	pop	{r4, r5, r6, pc}
 8003de4:	4620      	mov	r0, r4
 8003de6:	f7ff ff9f 	bl	8003d28 <I2C_IsAcknowledgeFailed>
 8003dea:	b9a8      	cbnz	r0, 8003e18 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
 8003dec:	1c6a      	adds	r2, r5, #1
 8003dee:	d0f3      	beq.n	8003dd8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
 8003df0:	f7ff fd32 	bl	8003858 <HAL_GetTick>
 8003df4:	1b80      	subs	r0, r0, r6
 8003df6:	42a8      	cmp	r0, r5
 8003df8:	d801      	bhi.n	8003dfe <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8003dfa:	2d00      	cmp	r5, #0
 8003dfc:	d1ec      	bne.n	8003dd8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
 8003dfe:	2300      	movs	r3, #0
 8003e00:	2220      	movs	r2, #32
 8003e02:	6323      	str	r3, [r4, #48]	; 0x30
 8003e04:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8003e08:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8003e0c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003e0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003e12:	f042 0220 	orr.w	r2, r2, #32
 8003e16:	6422      	str	r2, [r4, #64]	; 0x40
 8003e18:	2001      	movs	r0, #1
 8003e1a:	e7e2      	b.n	8003de2 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08003e1c <I2C_WaitOnFlagUntilTimeout>:
 8003e1c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8003e20:	4606      	mov	r6, r0
 8003e22:	460f      	mov	r7, r1
 8003e24:	4691      	mov	r9, r2
 8003e26:	461d      	mov	r5, r3
 8003e28:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003e2c:	6833      	ldr	r3, [r6, #0]
 8003e2e:	f1ba 0f01 	cmp.w	sl, #1
 8003e32:	bf0c      	ite	eq
 8003e34:	695c      	ldreq	r4, [r3, #20]
 8003e36:	699c      	ldrne	r4, [r3, #24]
 8003e38:	ea27 0404 	bic.w	r4, r7, r4
 8003e3c:	b2a4      	uxth	r4, r4
 8003e3e:	fab4 f484 	clz	r4, r4
 8003e42:	0964      	lsrs	r4, r4, #5
 8003e44:	45a1      	cmp	r9, r4
 8003e46:	d001      	beq.n	8003e4c <I2C_WaitOnFlagUntilTimeout+0x30>
 8003e48:	2000      	movs	r0, #0
 8003e4a:	e017      	b.n	8003e7c <I2C_WaitOnFlagUntilTimeout+0x60>
 8003e4c:	1c6a      	adds	r2, r5, #1
 8003e4e:	d0ee      	beq.n	8003e2e <I2C_WaitOnFlagUntilTimeout+0x12>
 8003e50:	f7ff fd02 	bl	8003858 <HAL_GetTick>
 8003e54:	9b08      	ldr	r3, [sp, #32]
 8003e56:	1ac0      	subs	r0, r0, r3
 8003e58:	42a8      	cmp	r0, r5
 8003e5a:	d801      	bhi.n	8003e60 <I2C_WaitOnFlagUntilTimeout+0x44>
 8003e5c:	2d00      	cmp	r5, #0
 8003e5e:	d1e5      	bne.n	8003e2c <I2C_WaitOnFlagUntilTimeout+0x10>
 8003e60:	2300      	movs	r3, #0
 8003e62:	2220      	movs	r2, #32
 8003e64:	2001      	movs	r0, #1
 8003e66:	6333      	str	r3, [r6, #48]	; 0x30
 8003e68:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
 8003e6c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
 8003e70:	6c32      	ldr	r2, [r6, #64]	; 0x40
 8003e72:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
 8003e76:	f042 0220 	orr.w	r2, r2, #32
 8003e7a:	6432      	str	r2, [r6, #64]	; 0x40
 8003e7c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08003e80 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003e80:	b570      	push	{r4, r5, r6, lr}
 8003e82:	4604      	mov	r4, r0
 8003e84:	460d      	mov	r5, r1
 8003e86:	4616      	mov	r6, r2
 8003e88:	6823      	ldr	r3, [r4, #0]
 8003e8a:	695b      	ldr	r3, [r3, #20]
 8003e8c:	061b      	lsls	r3, r3, #24
 8003e8e:	d501      	bpl.n	8003e94 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
 8003e90:	2000      	movs	r0, #0
 8003e92:	bd70      	pop	{r4, r5, r6, pc}
 8003e94:	4620      	mov	r0, r4
 8003e96:	f7ff ff47 	bl	8003d28 <I2C_IsAcknowledgeFailed>
 8003e9a:	b9a8      	cbnz	r0, 8003ec8 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
 8003e9c:	1c6a      	adds	r2, r5, #1
 8003e9e:	d0f3      	beq.n	8003e88 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
 8003ea0:	f7ff fcda 	bl	8003858 <HAL_GetTick>
 8003ea4:	1b80      	subs	r0, r0, r6
 8003ea6:	42a8      	cmp	r0, r5
 8003ea8:	d801      	bhi.n	8003eae <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8003eaa:	2d00      	cmp	r5, #0
 8003eac:	d1ec      	bne.n	8003e88 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
 8003eae:	2300      	movs	r3, #0
 8003eb0:	2220      	movs	r2, #32
 8003eb2:	6323      	str	r3, [r4, #48]	; 0x30
 8003eb4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8003eb8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8003ebc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003ebe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003ec2:	f042 0220 	orr.w	r2, r2, #32
 8003ec6:	6422      	str	r2, [r4, #64]	; 0x40
 8003ec8:	2001      	movs	r0, #1
 8003eca:	e7e2      	b.n	8003e92 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08003ecc <HAL_I2C_Init>:
 8003ecc:	b570      	push	{r4, r5, r6, lr}
 8003ece:	4604      	mov	r4, r0
 8003ed0:	b908      	cbnz	r0, 8003ed6 <HAL_I2C_Init+0xa>
 8003ed2:	2001      	movs	r0, #1
 8003ed4:	bd70      	pop	{r4, r5, r6, pc}
 8003ed6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8003eda:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003ede:	b91b      	cbnz	r3, 8003ee8 <HAL_I2C_Init+0x1c>
 8003ee0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8003ee4:	f7fe f9a0 	bl	8002228 <HAL_I2C_MspInit>
 8003ee8:	2324      	movs	r3, #36	; 0x24
 8003eea:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8003eee:	6823      	ldr	r3, [r4, #0]
 8003ef0:	681a      	ldr	r2, [r3, #0]
 8003ef2:	f022 0201 	bic.w	r2, r2, #1
 8003ef6:	601a      	str	r2, [r3, #0]
 8003ef8:	681a      	ldr	r2, [r3, #0]
 8003efa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003efe:	601a      	str	r2, [r3, #0]
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003f06:	601a      	str	r2, [r3, #0]
 8003f08:	f002 f81c 	bl	8005f44 <HAL_RCC_GetPCLK1Freq>
 8003f0c:	4a3f      	ldr	r2, [pc, #252]	; (800400c <HAL_I2C_Init+0x140>)
 8003f0e:	6863      	ldr	r3, [r4, #4]
 8003f10:	4293      	cmp	r3, r2
 8003f12:	bf94      	ite	ls
 8003f14:	4a3e      	ldrls	r2, [pc, #248]	; (8004010 <HAL_I2C_Init+0x144>)
 8003f16:	4a3f      	ldrhi	r2, [pc, #252]	; (8004014 <HAL_I2C_Init+0x148>)
 8003f18:	4290      	cmp	r0, r2
 8003f1a:	bf8c      	ite	hi
 8003f1c:	2200      	movhi	r2, #0
 8003f1e:	2201      	movls	r2, #1
 8003f20:	2a00      	cmp	r2, #0
 8003f22:	d1d6      	bne.n	8003ed2 <HAL_I2C_Init+0x6>
 8003f24:	4e3c      	ldr	r6, [pc, #240]	; (8004018 <HAL_I2C_Init+0x14c>)
 8003f26:	6822      	ldr	r2, [r4, #0]
 8003f28:	fbb0 f6f6 	udiv	r6, r0, r6
 8003f2c:	6851      	ldr	r1, [r2, #4]
 8003f2e:	3801      	subs	r0, #1
 8003f30:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8003f34:	4331      	orrs	r1, r6
 8003f36:	6051      	str	r1, [r2, #4]
 8003f38:	4934      	ldr	r1, [pc, #208]	; (800400c <HAL_I2C_Init+0x140>)
 8003f3a:	6a15      	ldr	r5, [r2, #32]
 8003f3c:	428b      	cmp	r3, r1
 8003f3e:	bf81      	itttt	hi
 8003f40:	f44f 7196 	movhi.w	r1, #300	; 0x12c
 8003f44:	4371      	mulhi	r1, r6
 8003f46:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8003f4a:	fbb1 f1f6 	udivhi	r1, r1, r6
 8003f4e:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8003f52:	bf94      	ite	ls
 8003f54:	1c71      	addls	r1, r6, #1
 8003f56:	3101      	addhi	r1, #1
 8003f58:	4329      	orrs	r1, r5
 8003f5a:	6211      	str	r1, [r2, #32]
 8003f5c:	69d1      	ldr	r1, [r2, #28]
 8003f5e:	4d2b      	ldr	r5, [pc, #172]	; (800400c <HAL_I2C_Init+0x140>)
 8003f60:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8003f64:	42ab      	cmp	r3, r5
 8003f66:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003f6a:	d832      	bhi.n	8003fd2 <HAL_I2C_Init+0x106>
 8003f6c:	005b      	lsls	r3, r3, #1
 8003f6e:	fbb0 f0f3 	udiv	r0, r0, r3
 8003f72:	1c43      	adds	r3, r0, #1
 8003f74:	f640 70fc 	movw	r0, #4092	; 0xffc
 8003f78:	4203      	tst	r3, r0
 8003f7a:	d042      	beq.n	8004002 <HAL_I2C_Init+0x136>
 8003f7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003f80:	430b      	orrs	r3, r1
 8003f82:	61d3      	str	r3, [r2, #28]
 8003f84:	6811      	ldr	r1, [r2, #0]
 8003f86:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8003f8a:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8003f8e:	4303      	orrs	r3, r0
 8003f90:	430b      	orrs	r3, r1
 8003f92:	6013      	str	r3, [r2, #0]
 8003f94:	6891      	ldr	r1, [r2, #8]
 8003f96:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8003f9a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8003f9e:	4303      	orrs	r3, r0
 8003fa0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003fa4:	430b      	orrs	r3, r1
 8003fa6:	6093      	str	r3, [r2, #8]
 8003fa8:	68d1      	ldr	r1, [r2, #12]
 8003faa:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8003fae:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003fb2:	4303      	orrs	r3, r0
 8003fb4:	430b      	orrs	r3, r1
 8003fb6:	60d3      	str	r3, [r2, #12]
 8003fb8:	6813      	ldr	r3, [r2, #0]
 8003fba:	2000      	movs	r0, #0
 8003fbc:	f043 0301 	orr.w	r3, r3, #1
 8003fc0:	6013      	str	r3, [r2, #0]
 8003fc2:	2320      	movs	r3, #32
 8003fc4:	6420      	str	r0, [r4, #64]	; 0x40
 8003fc6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8003fca:	6320      	str	r0, [r4, #48]	; 0x30
 8003fcc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
 8003fd0:	e780      	b.n	8003ed4 <HAL_I2C_Init+0x8>
 8003fd2:	68a5      	ldr	r5, [r4, #8]
 8003fd4:	b955      	cbnz	r5, 8003fec <HAL_I2C_Init+0x120>
 8003fd6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8003fda:	fbb0 f3f3 	udiv	r3, r0, r3
 8003fde:	3301      	adds	r3, #1
 8003fe0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003fe4:	b17b      	cbz	r3, 8004006 <HAL_I2C_Init+0x13a>
 8003fe6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003fea:	e7c9      	b.n	8003f80 <HAL_I2C_Init+0xb4>
 8003fec:	2519      	movs	r5, #25
 8003fee:	436b      	muls	r3, r5
 8003ff0:	fbb0 f3f3 	udiv	r3, r0, r3
 8003ff4:	3301      	adds	r3, #1
 8003ff6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003ffa:	b123      	cbz	r3, 8004006 <HAL_I2C_Init+0x13a>
 8003ffc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004000:	e7be      	b.n	8003f80 <HAL_I2C_Init+0xb4>
 8004002:	2304      	movs	r3, #4
 8004004:	e7bc      	b.n	8003f80 <HAL_I2C_Init+0xb4>
 8004006:	2301      	movs	r3, #1
 8004008:	e7ba      	b.n	8003f80 <HAL_I2C_Init+0xb4>
 800400a:	bf00      	nop
 800400c:	000186a0 	.word	0x000186a0
 8004010:	001e847f 	.word	0x001e847f
 8004014:	003d08ff 	.word	0x003d08ff
 8004018:	000f4240 	.word	0x000f4240

0800401c <HAL_I2C_Master_Transmit>:
 800401c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004020:	4604      	mov	r4, r0
 8004022:	b085      	sub	sp, #20
 8004024:	4698      	mov	r8, r3
 8004026:	460d      	mov	r5, r1
 8004028:	4691      	mov	r9, r2
 800402a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800402c:	f7ff fc14 	bl	8003858 <HAL_GetTick>
 8004030:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004034:	4606      	mov	r6, r0
 8004036:	2b20      	cmp	r3, #32
 8004038:	d004      	beq.n	8004044 <HAL_I2C_Master_Transmit+0x28>
 800403a:	2502      	movs	r5, #2
 800403c:	4628      	mov	r0, r5
 800403e:	b005      	add	sp, #20
 8004040:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004044:	9000      	str	r0, [sp, #0]
 8004046:	2319      	movs	r3, #25
 8004048:	2201      	movs	r2, #1
 800404a:	4620      	mov	r0, r4
 800404c:	495b      	ldr	r1, [pc, #364]	; (80041bc <HAL_I2C_Master_Transmit+0x1a0>)
 800404e:	f7ff fee5 	bl	8003e1c <I2C_WaitOnFlagUntilTimeout>
 8004052:	2800      	cmp	r0, #0
 8004054:	d1f1      	bne.n	800403a <HAL_I2C_Master_Transmit+0x1e>
 8004056:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800405a:	2b01      	cmp	r3, #1
 800405c:	d0ed      	beq.n	800403a <HAL_I2C_Master_Transmit+0x1e>
 800405e:	2301      	movs	r3, #1
 8004060:	6821      	ldr	r1, [r4, #0]
 8004062:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004066:	680b      	ldr	r3, [r1, #0]
 8004068:	07da      	lsls	r2, r3, #31
 800406a:	bf5e      	ittt	pl
 800406c:	680b      	ldrpl	r3, [r1, #0]
 800406e:	f043 0301 	orrpl.w	r3, r3, #1
 8004072:	600b      	strpl	r3, [r1, #0]
 8004074:	680b      	ldr	r3, [r1, #0]
 8004076:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800407a:	600b      	str	r3, [r1, #0]
 800407c:	2321      	movs	r3, #33	; 0x21
 800407e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004082:	2310      	movs	r3, #16
 8004084:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004088:	2300      	movs	r3, #0
 800408a:	6423      	str	r3, [r4, #64]	; 0x40
 800408c:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
 8004090:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004092:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
 8004096:	8523      	strh	r3, [r4, #40]	; 0x28
 8004098:	4b49      	ldr	r3, [pc, #292]	; (80041c0 <HAL_I2C_Master_Transmit+0x1a4>)
 800409a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800409c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800409e:	2b08      	cmp	r3, #8
 80040a0:	d004      	beq.n	80040ac <HAL_I2C_Master_Transmit+0x90>
 80040a2:	2b01      	cmp	r3, #1
 80040a4:	d002      	beq.n	80040ac <HAL_I2C_Master_Transmit+0x90>
 80040a6:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80040aa:	d104      	bne.n	80040b6 <HAL_I2C_Master_Transmit+0x9a>
 80040ac:	680b      	ldr	r3, [r1, #0]
 80040ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80040b2:	600b      	str	r3, [r1, #0]
 80040b4:	e002      	b.n	80040bc <HAL_I2C_Master_Transmit+0xa0>
 80040b6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80040b8:	2b12      	cmp	r3, #18
 80040ba:	d0f7      	beq.n	80040ac <HAL_I2C_Master_Transmit+0x90>
 80040bc:	2200      	movs	r2, #0
 80040be:	463b      	mov	r3, r7
 80040c0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80040c4:	4620      	mov	r0, r4
 80040c6:	9600      	str	r6, [sp, #0]
 80040c8:	f7ff fea8 	bl	8003e1c <I2C_WaitOnFlagUntilTimeout>
 80040cc:	6822      	ldr	r2, [r4, #0]
 80040ce:	b138      	cbz	r0, 80040e0 <HAL_I2C_Master_Transmit+0xc4>
 80040d0:	6813      	ldr	r3, [r2, #0]
 80040d2:	05db      	lsls	r3, r3, #23
 80040d4:	bf44      	itt	mi
 80040d6:	f44f 7300 	movmi.w	r3, #512	; 0x200
 80040da:	6423      	strmi	r3, [r4, #64]	; 0x40
 80040dc:	2501      	movs	r5, #1
 80040de:	e7ad      	b.n	800403c <HAL_I2C_Master_Transmit+0x20>
 80040e0:	6923      	ldr	r3, [r4, #16]
 80040e2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80040e6:	d121      	bne.n	800412c <HAL_I2C_Master_Transmit+0x110>
 80040e8:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
 80040ec:	6115      	str	r5, [r2, #16]
 80040ee:	4633      	mov	r3, r6
 80040f0:	463a      	mov	r2, r7
 80040f2:	4620      	mov	r0, r4
 80040f4:	4933      	ldr	r1, [pc, #204]	; (80041c4 <HAL_I2C_Master_Transmit+0x1a8>)
 80040f6:	f7ff fe30 	bl	8003d5a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80040fa:	4605      	mov	r5, r0
 80040fc:	2800      	cmp	r0, #0
 80040fe:	d1ed      	bne.n	80040dc <HAL_I2C_Master_Transmit+0xc0>
 8004100:	6823      	ldr	r3, [r4, #0]
 8004102:	9003      	str	r0, [sp, #12]
 8004104:	695a      	ldr	r2, [r3, #20]
 8004106:	9203      	str	r2, [sp, #12]
 8004108:	699b      	ldr	r3, [r3, #24]
 800410a:	9303      	str	r3, [sp, #12]
 800410c:	9b03      	ldr	r3, [sp, #12]
 800410e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004110:	b9f3      	cbnz	r3, 8004150 <HAL_I2C_Master_Transmit+0x134>
 8004112:	6821      	ldr	r1, [r4, #0]
 8004114:	680a      	ldr	r2, [r1, #0]
 8004116:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800411a:	600a      	str	r2, [r1, #0]
 800411c:	2220      	movs	r2, #32
 800411e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004122:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8004126:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800412a:	e787      	b.n	800403c <HAL_I2C_Master_Transmit+0x20>
 800412c:	11eb      	asrs	r3, r5, #7
 800412e:	f003 0306 	and.w	r3, r3, #6
 8004132:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8004136:	6113      	str	r3, [r2, #16]
 8004138:	4620      	mov	r0, r4
 800413a:	4633      	mov	r3, r6
 800413c:	463a      	mov	r2, r7
 800413e:	4922      	ldr	r1, [pc, #136]	; (80041c8 <HAL_I2C_Master_Transmit+0x1ac>)
 8004140:	f7ff fe0b 	bl	8003d5a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004144:	2800      	cmp	r0, #0
 8004146:	d1c9      	bne.n	80040dc <HAL_I2C_Master_Transmit+0xc0>
 8004148:	6823      	ldr	r3, [r4, #0]
 800414a:	b2ed      	uxtb	r5, r5
 800414c:	611d      	str	r5, [r3, #16]
 800414e:	e7ce      	b.n	80040ee <HAL_I2C_Master_Transmit+0xd2>
 8004150:	4632      	mov	r2, r6
 8004152:	4639      	mov	r1, r7
 8004154:	4620      	mov	r0, r4
 8004156:	f7ff fe93 	bl	8003e80 <I2C_WaitOnTXEFlagUntilTimeout>
 800415a:	b140      	cbz	r0, 800416e <HAL_I2C_Master_Transmit+0x152>
 800415c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800415e:	2b04      	cmp	r3, #4
 8004160:	d1bc      	bne.n	80040dc <HAL_I2C_Master_Transmit+0xc0>
 8004162:	6822      	ldr	r2, [r4, #0]
 8004164:	6813      	ldr	r3, [r2, #0]
 8004166:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800416a:	6013      	str	r3, [r2, #0]
 800416c:	e7b6      	b.n	80040dc <HAL_I2C_Master_Transmit+0xc0>
 800416e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004170:	6820      	ldr	r0, [r4, #0]
 8004172:	461a      	mov	r2, r3
 8004174:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004178:	6101      	str	r1, [r0, #16]
 800417a:	6262      	str	r2, [r4, #36]	; 0x24
 800417c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800417e:	3a01      	subs	r2, #1
 8004180:	b292      	uxth	r2, r2
 8004182:	8562      	strh	r2, [r4, #42]	; 0x2a
 8004184:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8004186:	f8d0 c014 	ldr.w	ip, [r0, #20]
 800418a:	1e51      	subs	r1, r2, #1
 800418c:	b289      	uxth	r1, r1
 800418e:	f01c 0f04 	tst.w	ip, #4
 8004192:	8521      	strh	r1, [r4, #40]	; 0x28
 8004194:	d00a      	beq.n	80041ac <HAL_I2C_Master_Transmit+0x190>
 8004196:	b149      	cbz	r1, 80041ac <HAL_I2C_Master_Transmit+0x190>
 8004198:	7859      	ldrb	r1, [r3, #1]
 800419a:	3302      	adds	r3, #2
 800419c:	6101      	str	r1, [r0, #16]
 800419e:	6263      	str	r3, [r4, #36]	; 0x24
 80041a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80041a2:	3a02      	subs	r2, #2
 80041a4:	3b01      	subs	r3, #1
 80041a6:	b29b      	uxth	r3, r3
 80041a8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80041aa:	8522      	strh	r2, [r4, #40]	; 0x28
 80041ac:	4632      	mov	r2, r6
 80041ae:	4639      	mov	r1, r7
 80041b0:	4620      	mov	r0, r4
 80041b2:	f7ff fe0d 	bl	8003dd0 <I2C_WaitOnBTFFlagUntilTimeout>
 80041b6:	2800      	cmp	r0, #0
 80041b8:	d0a9      	beq.n	800410e <HAL_I2C_Master_Transmit+0xf2>
 80041ba:	e7cf      	b.n	800415c <HAL_I2C_Master_Transmit+0x140>
 80041bc:	00100002 	.word	0x00100002
 80041c0:	ffff0000 	.word	0xffff0000
 80041c4:	00010002 	.word	0x00010002
 80041c8:	00010008 	.word	0x00010008

080041cc <HAL_I2C_MasterTxCpltCallback>:
 80041cc:	4770      	bx	lr

080041ce <HAL_I2C_MasterRxCpltCallback>:
 80041ce:	4770      	bx	lr

080041d0 <HAL_I2C_SlaveTxCpltCallback>:
 80041d0:	4770      	bx	lr

080041d2 <HAL_I2C_SlaveRxCpltCallback>:
 80041d2:	4770      	bx	lr

080041d4 <HAL_I2C_AddrCallback>:
 80041d4:	4770      	bx	lr

080041d6 <HAL_I2C_ListenCpltCallback>:
 80041d6:	4770      	bx	lr

080041d8 <HAL_I2C_MemTxCpltCallback>:
 80041d8:	4770      	bx	lr

080041da <I2C_MemoryTransmit_TXE_BTF>:
 80041da:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 80041de:	b508      	push	{r3, lr}
 80041e0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80041e2:	b2d2      	uxtb	r2, r2
 80041e4:	b983      	cbnz	r3, 8004208 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 80041e6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80041e8:	6802      	ldr	r2, [r0, #0]
 80041ea:	2b01      	cmp	r3, #1
 80041ec:	6c83      	ldr	r3, [r0, #72]	; 0x48
 80041ee:	d105      	bne.n	80041fc <I2C_MemoryTransmit_TXE_BTF+0x22>
 80041f0:	b2db      	uxtb	r3, r3
 80041f2:	6113      	str	r3, [r2, #16]
 80041f4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80041f6:	3302      	adds	r3, #2
 80041f8:	6503      	str	r3, [r0, #80]	; 0x50
 80041fa:	bd08      	pop	{r3, pc}
 80041fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8004200:	6113      	str	r3, [r2, #16]
 8004202:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8004204:	3301      	adds	r3, #1
 8004206:	e7f7      	b.n	80041f8 <I2C_MemoryTransmit_TXE_BTF+0x1e>
 8004208:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800420a:	2b01      	cmp	r3, #1
 800420c:	d103      	bne.n	8004216 <I2C_MemoryTransmit_TXE_BTF+0x3c>
 800420e:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8004210:	6802      	ldr	r2, [r0, #0]
 8004212:	b2db      	uxtb	r3, r3
 8004214:	e7f4      	b.n	8004200 <I2C_MemoryTransmit_TXE_BTF+0x26>
 8004216:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8004218:	2b02      	cmp	r3, #2
 800421a:	d1ee      	bne.n	80041fa <I2C_MemoryTransmit_TXE_BTF+0x20>
 800421c:	2a22      	cmp	r2, #34	; 0x22
 800421e:	d105      	bne.n	800422c <I2C_MemoryTransmit_TXE_BTF+0x52>
 8004220:	6802      	ldr	r2, [r0, #0]
 8004222:	6813      	ldr	r3, [r2, #0]
 8004224:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004228:	6013      	str	r3, [r2, #0]
 800422a:	e7e6      	b.n	80041fa <I2C_MemoryTransmit_TXE_BTF+0x20>
 800422c:	8d43      	ldrh	r3, [r0, #42]	; 0x2a
 800422e:	b29b      	uxth	r3, r3
 8004230:	b163      	cbz	r3, 800424c <I2C_MemoryTransmit_TXE_BTF+0x72>
 8004232:	2a21      	cmp	r2, #33	; 0x21
 8004234:	d10a      	bne.n	800424c <I2C_MemoryTransmit_TXE_BTF+0x72>
 8004236:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004238:	6802      	ldr	r2, [r0, #0]
 800423a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800423e:	6111      	str	r1, [r2, #16]
 8004240:	6243      	str	r3, [r0, #36]	; 0x24
 8004242:	8d43      	ldrh	r3, [r0, #42]	; 0x2a
 8004244:	3b01      	subs	r3, #1
 8004246:	b29b      	uxth	r3, r3
 8004248:	8543      	strh	r3, [r0, #42]	; 0x2a
 800424a:	e7d6      	b.n	80041fa <I2C_MemoryTransmit_TXE_BTF+0x20>
 800424c:	8d43      	ldrh	r3, [r0, #42]	; 0x2a
 800424e:	b29b      	uxth	r3, r3
 8004250:	2b00      	cmp	r3, #0
 8004252:	d1d2      	bne.n	80041fa <I2C_MemoryTransmit_TXE_BTF+0x20>
 8004254:	2a21      	cmp	r2, #33	; 0x21
 8004256:	d1d0      	bne.n	80041fa <I2C_MemoryTransmit_TXE_BTF+0x20>
 8004258:	6802      	ldr	r2, [r0, #0]
 800425a:	6851      	ldr	r1, [r2, #4]
 800425c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8004260:	6051      	str	r1, [r2, #4]
 8004262:	6811      	ldr	r1, [r2, #0]
 8004264:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8004268:	6011      	str	r1, [r2, #0]
 800426a:	2220      	movs	r2, #32
 800426c:	6303      	str	r3, [r0, #48]	; 0x30
 800426e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
 8004272:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 8004276:	f7ff ffaf 	bl	80041d8 <HAL_I2C_MemTxCpltCallback>
 800427a:	e7be      	b.n	80041fa <I2C_MemoryTransmit_TXE_BTF+0x20>

0800427c <HAL_I2C_MemRxCpltCallback>:
 800427c:	4770      	bx	lr

0800427e <HAL_I2C_ErrorCallback>:
 800427e:	4770      	bx	lr

08004280 <HAL_I2C_AbortCpltCallback>:
 8004280:	4770      	bx	lr
	...

08004284 <I2C_DMAAbort>:
 8004284:	2300      	movs	r3, #0
 8004286:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004288:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800428a:	9301      	str	r3, [sp, #4]
 800428c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8004290:	4b2b      	ldr	r3, [pc, #172]	; (8004340 <I2C_DMAAbort+0xbc>)
 8004292:	b2d1      	uxtb	r1, r2
 8004294:	f246 12a8 	movw	r2, #25000	; 0x61a8
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	fbb3 f2f2 	udiv	r2, r3, r2
 800429e:	2323      	movs	r3, #35	; 0x23
 80042a0:	4353      	muls	r3, r2
 80042a2:	9301      	str	r3, [sp, #4]
 80042a4:	6803      	ldr	r3, [r0, #0]
 80042a6:	9a01      	ldr	r2, [sp, #4]
 80042a8:	bb42      	cbnz	r2, 80042fc <I2C_DMAAbort+0x78>
 80042aa:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80042ac:	f042 0220 	orr.w	r2, r2, #32
 80042b0:	6402      	str	r2, [r0, #64]	; 0x40
 80042b2:	6b45      	ldr	r5, [r0, #52]	; 0x34
 80042b4:	b10d      	cbz	r5, 80042ba <I2C_DMAAbort+0x36>
 80042b6:	2200      	movs	r2, #0
 80042b8:	62aa      	str	r2, [r5, #40]	; 0x28
 80042ba:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80042bc:	b10c      	cbz	r4, 80042c2 <I2C_DMAAbort+0x3e>
 80042be:	2200      	movs	r2, #0
 80042c0:	62a2      	str	r2, [r4, #40]	; 0x28
 80042c2:	681a      	ldr	r2, [r3, #0]
 80042c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80042c8:	601a      	str	r2, [r3, #0]
 80042ca:	2200      	movs	r2, #0
 80042cc:	8542      	strh	r2, [r0, #42]	; 0x2a
 80042ce:	b105      	cbz	r5, 80042d2 <I2C_DMAAbort+0x4e>
 80042d0:	636a      	str	r2, [r5, #52]	; 0x34
 80042d2:	b104      	cbz	r4, 80042d6 <I2C_DMAAbort+0x52>
 80042d4:	6362      	str	r2, [r4, #52]	; 0x34
 80042d6:	681a      	ldr	r2, [r3, #0]
 80042d8:	f022 0201 	bic.w	r2, r2, #1
 80042dc:	601a      	str	r2, [r3, #0]
 80042de:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 80042e2:	2a60      	cmp	r2, #96	; 0x60
 80042e4:	d111      	bne.n	800430a <I2C_DMAAbort+0x86>
 80042e6:	2320      	movs	r3, #32
 80042e8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 80042ec:	2300      	movs	r3, #0
 80042ee:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 80042f2:	6403      	str	r3, [r0, #64]	; 0x40
 80042f4:	f7ff ffc4 	bl	8004280 <HAL_I2C_AbortCpltCallback>
 80042f8:	b003      	add	sp, #12
 80042fa:	bd30      	pop	{r4, r5, pc}
 80042fc:	9a01      	ldr	r2, [sp, #4]
 80042fe:	3a01      	subs	r2, #1
 8004300:	9201      	str	r2, [sp, #4]
 8004302:	681a      	ldr	r2, [r3, #0]
 8004304:	0592      	lsls	r2, r2, #22
 8004306:	d4ce      	bmi.n	80042a6 <I2C_DMAAbort+0x22>
 8004308:	e7d3      	b.n	80042b2 <I2C_DMAAbort+0x2e>
 800430a:	f001 0228 	and.w	r2, r1, #40	; 0x28
 800430e:	2a28      	cmp	r2, #40	; 0x28
 8004310:	d10e      	bne.n	8004330 <I2C_DMAAbort+0xac>
 8004312:	6819      	ldr	r1, [r3, #0]
 8004314:	f041 0101 	orr.w	r1, r1, #1
 8004318:	6019      	str	r1, [r3, #0]
 800431a:	6819      	ldr	r1, [r3, #0]
 800431c:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8004320:	6019      	str	r1, [r3, #0]
 8004322:	2300      	movs	r3, #0
 8004324:	6303      	str	r3, [r0, #48]	; 0x30
 8004326:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
 800432a:	f7ff ffa8 	bl	800427e <HAL_I2C_ErrorCallback>
 800432e:	e7e3      	b.n	80042f8 <I2C_DMAAbort+0x74>
 8004330:	2320      	movs	r3, #32
 8004332:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 8004336:	2300      	movs	r3, #0
 8004338:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800433c:	e7f5      	b.n	800432a <I2C_DMAAbort+0xa6>
 800433e:	bf00      	nop
 8004340:	20000000 	.word	0x20000000

08004344 <I2C_ITError>:
 8004344:	b510      	push	{r4, lr}
 8004346:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800434a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800434e:	4604      	mov	r4, r0
 8004350:	2b10      	cmp	r3, #16
 8004352:	b2d9      	uxtb	r1, r3
 8004354:	b2d2      	uxtb	r2, r2
 8004356:	6803      	ldr	r3, [r0, #0]
 8004358:	d001      	beq.n	800435e <I2C_ITError+0x1a>
 800435a:	2940      	cmp	r1, #64	; 0x40
 800435c:	d113      	bne.n	8004386 <I2C_ITError+0x42>
 800435e:	2a22      	cmp	r2, #34	; 0x22
 8004360:	d111      	bne.n	8004386 <I2C_ITError+0x42>
 8004362:	6819      	ldr	r1, [r3, #0]
 8004364:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 8004368:	6019      	str	r1, [r3, #0]
 800436a:	6859      	ldr	r1, [r3, #4]
 800436c:	f411 6100 	ands.w	r1, r1, #2048	; 0x800
 8004370:	d106      	bne.n	8004380 <I2C_ITError+0x3c>
 8004372:	2a60      	cmp	r2, #96	; 0x60
 8004374:	bf1e      	ittt	ne
 8004376:	2220      	movne	r2, #32
 8004378:	f884 203d 	strbne.w	r2, [r4, #61]	; 0x3d
 800437c:	f884 103e 	strbne.w	r1, [r4, #62]	; 0x3e
 8004380:	2200      	movs	r2, #0
 8004382:	6322      	str	r2, [r4, #48]	; 0x30
 8004384:	e007      	b.n	8004396 <I2C_ITError+0x52>
 8004386:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800438a:	2928      	cmp	r1, #40	; 0x28
 800438c:	d1ed      	bne.n	800436a <I2C_ITError+0x26>
 800438e:	2200      	movs	r2, #0
 8004390:	6322      	str	r2, [r4, #48]	; 0x30
 8004392:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 8004396:	685a      	ldr	r2, [r3, #4]
 8004398:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800439c:	d04f      	beq.n	800443e <I2C_ITError+0xfa>
 800439e:	685a      	ldr	r2, [r3, #4]
 80043a0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80043a2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80043a6:	605a      	str	r2, [r3, #4]
 80043a8:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 80043ac:	2b01      	cmp	r3, #1
 80043ae:	4b37      	ldr	r3, [pc, #220]	; (800448c <I2C_ITError+0x148>)
 80043b0:	d02b      	beq.n	800440a <I2C_ITError+0xc6>
 80043b2:	6343      	str	r3, [r0, #52]	; 0x34
 80043b4:	f7ff fae8 	bl	8003988 <HAL_DMA_Abort_IT>
 80043b8:	b150      	cbz	r0, 80043d0 <I2C_ITError+0x8c>
 80043ba:	6822      	ldr	r2, [r4, #0]
 80043bc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80043be:	6813      	ldr	r3, [r2, #0]
 80043c0:	f023 0301 	bic.w	r3, r3, #1
 80043c4:	6013      	str	r3, [r2, #0]
 80043c6:	2320      	movs	r3, #32
 80043c8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80043cc:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80043ce:	4798      	blx	r3
 80043d0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80043d2:	0719      	lsls	r1, r3, #28
 80043d4:	bf1f      	itttt	ne
 80043d6:	6822      	ldrne	r2, [r4, #0]
 80043d8:	6853      	ldrne	r3, [r2, #4]
 80043da:	f423 63e0 	bicne.w	r3, r3, #1792	; 0x700
 80043de:	6053      	strne	r3, [r2, #4]
 80043e0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80043e4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80043e6:	b2db      	uxtb	r3, r3
 80043e8:	0752      	lsls	r2, r2, #29
 80043ea:	d50d      	bpl.n	8004408 <I2C_ITError+0xc4>
 80043ec:	2b28      	cmp	r3, #40	; 0x28
 80043ee:	d10b      	bne.n	8004408 <I2C_ITError+0xc4>
 80043f0:	4b27      	ldr	r3, [pc, #156]	; (8004490 <I2C_ITError+0x14c>)
 80043f2:	2220      	movs	r2, #32
 80043f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80043f6:	2300      	movs	r3, #0
 80043f8:	4620      	mov	r0, r4
 80043fa:	6323      	str	r3, [r4, #48]	; 0x30
 80043fc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8004400:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004404:	f7ff fee7 	bl	80041d6 <HAL_I2C_ListenCpltCallback>
 8004408:	bd10      	pop	{r4, pc}
 800440a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800440c:	6343      	str	r3, [r0, #52]	; 0x34
 800440e:	f7ff fabb 	bl	8003988 <HAL_DMA_Abort_IT>
 8004412:	2800      	cmp	r0, #0
 8004414:	d0dc      	beq.n	80043d0 <I2C_ITError+0x8c>
 8004416:	6823      	ldr	r3, [r4, #0]
 8004418:	695a      	ldr	r2, [r3, #20]
 800441a:	0651      	lsls	r1, r2, #25
 800441c:	d505      	bpl.n	800442a <I2C_ITError+0xe6>
 800441e:	691a      	ldr	r2, [r3, #16]
 8004420:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004422:	701a      	strb	r2, [r3, #0]
 8004424:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004426:	3301      	adds	r3, #1
 8004428:	6263      	str	r3, [r4, #36]	; 0x24
 800442a:	6822      	ldr	r2, [r4, #0]
 800442c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800442e:	6813      	ldr	r3, [r2, #0]
 8004430:	f023 0301 	bic.w	r3, r3, #1
 8004434:	6013      	str	r3, [r2, #0]
 8004436:	2320      	movs	r3, #32
 8004438:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800443c:	e7c6      	b.n	80043cc <I2C_ITError+0x88>
 800443e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8004442:	2960      	cmp	r1, #96	; 0x60
 8004444:	d115      	bne.n	8004472 <I2C_ITError+0x12e>
 8004446:	2120      	movs	r1, #32
 8004448:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
 800444c:	6422      	str	r2, [r4, #64]	; 0x40
 800444e:	695a      	ldr	r2, [r3, #20]
 8004450:	0652      	lsls	r2, r2, #25
 8004452:	d505      	bpl.n	8004460 <I2C_ITError+0x11c>
 8004454:	691a      	ldr	r2, [r3, #16]
 8004456:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004458:	701a      	strb	r2, [r3, #0]
 800445a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800445c:	3301      	adds	r3, #1
 800445e:	6263      	str	r3, [r4, #36]	; 0x24
 8004460:	6822      	ldr	r2, [r4, #0]
 8004462:	4620      	mov	r0, r4
 8004464:	6813      	ldr	r3, [r2, #0]
 8004466:	f023 0301 	bic.w	r3, r3, #1
 800446a:	6013      	str	r3, [r2, #0]
 800446c:	f7ff ff08 	bl	8004280 <HAL_I2C_AbortCpltCallback>
 8004470:	e7ae      	b.n	80043d0 <I2C_ITError+0x8c>
 8004472:	695a      	ldr	r2, [r3, #20]
 8004474:	0650      	lsls	r0, r2, #25
 8004476:	d505      	bpl.n	8004484 <I2C_ITError+0x140>
 8004478:	691a      	ldr	r2, [r3, #16]
 800447a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800447c:	701a      	strb	r2, [r3, #0]
 800447e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004480:	3301      	adds	r3, #1
 8004482:	6263      	str	r3, [r4, #36]	; 0x24
 8004484:	4620      	mov	r0, r4
 8004486:	f7ff fefa 	bl	800427e <HAL_I2C_ErrorCallback>
 800448a:	e7a1      	b.n	80043d0 <I2C_ITError+0x8c>
 800448c:	08004285 	.word	0x08004285
 8004490:	ffff0000 	.word	0xffff0000

08004494 <HAL_I2C_EV_IRQHandler>:
 8004494:	b570      	push	{r4, r5, r6, lr}
 8004496:	6803      	ldr	r3, [r0, #0]
 8004498:	4604      	mov	r4, r0
 800449a:	685a      	ldr	r2, [r3, #4]
 800449c:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
 800449e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80044a2:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
 80044a6:	2910      	cmp	r1, #16
 80044a8:	b08e      	sub	sp, #56	; 0x38
 80044aa:	b2cd      	uxtb	r5, r1
 80044ac:	b2c0      	uxtb	r0, r0
 80044ae:	d002      	beq.n	80044b6 <HAL_I2C_EV_IRQHandler+0x22>
 80044b0:	2d40      	cmp	r5, #64	; 0x40
 80044b2:	f040 82e0 	bne.w	8004a76 <HAL_I2C_EV_IRQHandler+0x5e2>
 80044b6:	6998      	ldr	r0, [r3, #24]
 80044b8:	6959      	ldr	r1, [r3, #20]
 80044ba:	f011 0f01 	tst.w	r1, #1
 80044be:	d107      	bne.n	80044d0 <HAL_I2C_EV_IRQHandler+0x3c>
 80044c0:	f5b6 0f2a 	cmp.w	r6, #11141120	; 0xaa0000
 80044c4:	d002      	beq.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80044c6:	f1b6 4f2a 	cmp.w	r6, #2852126720	; 0xaa000000
 80044ca:	d150      	bne.n	800456e <HAL_I2C_EV_IRQHandler+0xda>
 80044cc:	b00e      	add	sp, #56	; 0x38
 80044ce:	bd70      	pop	{r4, r5, r6, pc}
 80044d0:	0596      	lsls	r6, r2, #22
 80044d2:	d54c      	bpl.n	800456e <HAL_I2C_EV_IRQHandler+0xda>
 80044d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80044d6:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 80044da:	d10c      	bne.n	80044f6 <HAL_I2C_EV_IRQHandler+0x62>
 80044dc:	2201      	movs	r2, #1
 80044de:	62e2      	str	r2, [r4, #44]	; 0x2c
 80044e0:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 80044e4:	2a40      	cmp	r2, #64	; 0x40
 80044e6:	d111      	bne.n	800450c <HAL_I2C_EV_IRQHandler+0x78>
 80044e8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80044ea:	b952      	cbnz	r2, 8004502 <HAL_I2C_EV_IRQHandler+0x6e>
 80044ec:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80044ee:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80044f2:	611a      	str	r2, [r3, #16]
 80044f4:	e7ea      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80044f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80044f8:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
 80044fc:	d1f0      	bne.n	80044e0 <HAL_I2C_EV_IRQHandler+0x4c>
 80044fe:	2208      	movs	r2, #8
 8004500:	e7ed      	b.n	80044de <HAL_I2C_EV_IRQHandler+0x4a>
 8004502:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8004504:	f042 0201 	orr.w	r2, r2, #1
 8004508:	b2d2      	uxtb	r2, r2
 800450a:	e7f2      	b.n	80044f2 <HAL_I2C_EV_IRQHandler+0x5e>
 800450c:	6922      	ldr	r2, [r4, #16]
 800450e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 8004512:	d119      	bne.n	8004548 <HAL_I2C_EV_IRQHandler+0xb4>
 8004514:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8004518:	2a21      	cmp	r2, #33	; 0x21
 800451a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800451c:	bf16      	itet	ne
 800451e:	f042 0201 	orrne.w	r2, r2, #1
 8004522:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
 8004526:	b2d2      	uxtbne	r2, r2
 8004528:	611a      	str	r2, [r3, #16]
 800452a:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800452c:	b10a      	cbz	r2, 8004532 <HAL_I2C_EV_IRQHandler+0x9e>
 800452e:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8004530:	b92a      	cbnz	r2, 800453e <HAL_I2C_EV_IRQHandler+0xaa>
 8004532:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8004534:	2a00      	cmp	r2, #0
 8004536:	d0c9      	beq.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004538:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800453a:	2a00      	cmp	r2, #0
 800453c:	d0c6      	beq.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 800453e:	685a      	ldr	r2, [r3, #4]
 8004540:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004544:	605a      	str	r2, [r3, #4]
 8004546:	e7c1      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004548:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800454a:	b932      	cbnz	r2, 800455a <HAL_I2C_EV_IRQHandler+0xc6>
 800454c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800454e:	11d2      	asrs	r2, r2, #7
 8004550:	f002 0206 	and.w	r2, r2, #6
 8004554:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 8004558:	e7cb      	b.n	80044f2 <HAL_I2C_EV_IRQHandler+0x5e>
 800455a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800455c:	2a01      	cmp	r2, #1
 800455e:	d1b5      	bne.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004560:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8004562:	11d2      	asrs	r2, r2, #7
 8004564:	f002 0206 	and.w	r2, r2, #6
 8004568:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800456c:	e7c1      	b.n	80044f2 <HAL_I2C_EV_IRQHandler+0x5e>
 800456e:	070e      	lsls	r6, r1, #28
 8004570:	d50e      	bpl.n	8004590 <HAL_I2C_EV_IRQHandler+0xfc>
 8004572:	0596      	lsls	r6, r2, #22
 8004574:	d50c      	bpl.n	8004590 <HAL_I2C_EV_IRQHandler+0xfc>
 8004576:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8004578:	b2d2      	uxtb	r2, r2
 800457a:	611a      	str	r2, [r3, #16]
 800457c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800457e:	b912      	cbnz	r2, 8004586 <HAL_I2C_EV_IRQHandler+0xf2>
 8004580:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8004582:	2900      	cmp	r1, #0
 8004584:	d0a2      	beq.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004586:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8004588:	2a00      	cmp	r2, #0
 800458a:	d1d8      	bne.n	800453e <HAL_I2C_EV_IRQHandler+0xaa>
 800458c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800458e:	e7d3      	b.n	8004538 <HAL_I2C_EV_IRQHandler+0xa4>
 8004590:	078e      	lsls	r6, r1, #30
 8004592:	f140 80e6 	bpl.w	8004762 <HAL_I2C_EV_IRQHandler+0x2ce>
 8004596:	0596      	lsls	r6, r2, #22
 8004598:	f140 80e3 	bpl.w	8004762 <HAL_I2C_EV_IRQHandler+0x2ce>
 800459c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80045a0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80045a2:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80045a4:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
 80045a8:	b2c9      	uxtb	r1, r1
 80045aa:	2822      	cmp	r0, #34	; 0x22
 80045ac:	f040 80d1 	bne.w	8004752 <HAL_I2C_EV_IRQHandler+0x2be>
 80045b0:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80045b2:	b940      	cbnz	r0, 80045c6 <HAL_I2C_EV_IRQHandler+0x132>
 80045b4:	2940      	cmp	r1, #64	; 0x40
 80045b6:	d106      	bne.n	80045c6 <HAL_I2C_EV_IRQHandler+0x132>
 80045b8:	9001      	str	r0, [sp, #4]
 80045ba:	695a      	ldr	r2, [r3, #20]
 80045bc:	9201      	str	r2, [sp, #4]
 80045be:	699b      	ldr	r3, [r3, #24]
 80045c0:	9301      	str	r3, [sp, #4]
 80045c2:	9b01      	ldr	r3, [sp, #4]
 80045c4:	e782      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80045c6:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80045c8:	b989      	cbnz	r1, 80045ee <HAL_I2C_EV_IRQHandler+0x15a>
 80045ca:	6920      	ldr	r0, [r4, #16]
 80045cc:	f5b0 4f40 	cmp.w	r0, #49152	; 0xc000
 80045d0:	d10d      	bne.n	80045ee <HAL_I2C_EV_IRQHandler+0x15a>
 80045d2:	9102      	str	r1, [sp, #8]
 80045d4:	695a      	ldr	r2, [r3, #20]
 80045d6:	9202      	str	r2, [sp, #8]
 80045d8:	699a      	ldr	r2, [r3, #24]
 80045da:	9202      	str	r2, [sp, #8]
 80045dc:	9a02      	ldr	r2, [sp, #8]
 80045de:	681a      	ldr	r2, [r3, #0]
 80045e0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80045e4:	601a      	str	r2, [r3, #0]
 80045e6:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80045e8:	3301      	adds	r3, #1
 80045ea:	6523      	str	r3, [r4, #80]	; 0x50
 80045ec:	e76e      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80045ee:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80045f0:	b289      	uxth	r1, r1
 80045f2:	b951      	cbnz	r1, 800460a <HAL_I2C_EV_IRQHandler+0x176>
 80045f4:	9103      	str	r1, [sp, #12]
 80045f6:	695a      	ldr	r2, [r3, #20]
 80045f8:	9203      	str	r2, [sp, #12]
 80045fa:	699a      	ldr	r2, [r3, #24]
 80045fc:	9203      	str	r2, [sp, #12]
 80045fe:	9a03      	ldr	r2, [sp, #12]
 8004600:	681a      	ldr	r2, [r3, #0]
 8004602:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	e019      	b.n	800463e <HAL_I2C_EV_IRQHandler+0x1aa>
 800460a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800460c:	b289      	uxth	r1, r1
 800460e:	2901      	cmp	r1, #1
 8004610:	d149      	bne.n	80046a6 <HAL_I2C_EV_IRQHandler+0x212>
 8004612:	f512 3f80 	cmn.w	r2, #65536	; 0x10000
 8004616:	d11b      	bne.n	8004650 <HAL_I2C_EV_IRQHandler+0x1bc>
 8004618:	681a      	ldr	r2, [r3, #0]
 800461a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800461e:	601a      	str	r2, [r3, #0]
 8004620:	685a      	ldr	r2, [r3, #4]
 8004622:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8004626:	d00c      	beq.n	8004642 <HAL_I2C_EV_IRQHandler+0x1ae>
 8004628:	681a      	ldr	r2, [r3, #0]
 800462a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800462e:	601a      	str	r2, [r3, #0]
 8004630:	2200      	movs	r2, #0
 8004632:	9204      	str	r2, [sp, #16]
 8004634:	695a      	ldr	r2, [r3, #20]
 8004636:	9204      	str	r2, [sp, #16]
 8004638:	699b      	ldr	r3, [r3, #24]
 800463a:	9304      	str	r3, [sp, #16]
 800463c:	9b04      	ldr	r3, [sp, #16]
 800463e:	2300      	movs	r3, #0
 8004640:	e7d3      	b.n	80045ea <HAL_I2C_EV_IRQHandler+0x156>
 8004642:	9205      	str	r2, [sp, #20]
 8004644:	695a      	ldr	r2, [r3, #20]
 8004646:	9205      	str	r2, [sp, #20]
 8004648:	699a      	ldr	r2, [r3, #24]
 800464a:	9205      	str	r2, [sp, #20]
 800464c:	9a05      	ldr	r2, [sp, #20]
 800464e:	e7d7      	b.n	8004600 <HAL_I2C_EV_IRQHandler+0x16c>
 8004650:	2a08      	cmp	r2, #8
 8004652:	d01c      	beq.n	800468e <HAL_I2C_EV_IRQHandler+0x1fa>
 8004654:	2a20      	cmp	r2, #32
 8004656:	d01a      	beq.n	800468e <HAL_I2C_EV_IRQHandler+0x1fa>
 8004658:	2d12      	cmp	r5, #18
 800465a:	d10d      	bne.n	8004678 <HAL_I2C_EV_IRQHandler+0x1e4>
 800465c:	2a01      	cmp	r2, #1
 800465e:	d116      	bne.n	800468e <HAL_I2C_EV_IRQHandler+0x1fa>
 8004660:	681a      	ldr	r2, [r3, #0]
 8004662:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004666:	601a      	str	r2, [r3, #0]
 8004668:	2200      	movs	r2, #0
 800466a:	9206      	str	r2, [sp, #24]
 800466c:	695a      	ldr	r2, [r3, #20]
 800466e:	9206      	str	r2, [sp, #24]
 8004670:	699b      	ldr	r3, [r3, #24]
 8004672:	9306      	str	r3, [sp, #24]
 8004674:	9b06      	ldr	r3, [sp, #24]
 8004676:	e7e2      	b.n	800463e <HAL_I2C_EV_IRQHandler+0x1aa>
 8004678:	2a10      	cmp	r2, #16
 800467a:	d8f1      	bhi.n	8004660 <HAL_I2C_EV_IRQHandler+0x1cc>
 800467c:	499c      	ldr	r1, [pc, #624]	; (80048f0 <HAL_I2C_EV_IRQHandler+0x45c>)
 800467e:	fa21 f202 	lsr.w	r2, r1, r2
 8004682:	07d0      	lsls	r0, r2, #31
 8004684:	d5ec      	bpl.n	8004660 <HAL_I2C_EV_IRQHandler+0x1cc>
 8004686:	681a      	ldr	r2, [r3, #0]
 8004688:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800468c:	e7eb      	b.n	8004666 <HAL_I2C_EV_IRQHandler+0x1d2>
 800468e:	681a      	ldr	r2, [r3, #0]
 8004690:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004694:	601a      	str	r2, [r3, #0]
 8004696:	2200      	movs	r2, #0
 8004698:	9207      	str	r2, [sp, #28]
 800469a:	695a      	ldr	r2, [r3, #20]
 800469c:	9207      	str	r2, [sp, #28]
 800469e:	699a      	ldr	r2, [r3, #24]
 80046a0:	9207      	str	r2, [sp, #28]
 80046a2:	9a07      	ldr	r2, [sp, #28]
 80046a4:	e7ac      	b.n	8004600 <HAL_I2C_EV_IRQHandler+0x16c>
 80046a6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 80046a8:	b289      	uxth	r1, r1
 80046aa:	2902      	cmp	r1, #2
 80046ac:	d133      	bne.n	8004716 <HAL_I2C_EV_IRQHandler+0x282>
 80046ae:	2a10      	cmp	r2, #16
 80046b0:	d805      	bhi.n	80046be <HAL_I2C_EV_IRQHandler+0x22a>
 80046b2:	498f      	ldr	r1, [pc, #572]	; (80048f0 <HAL_I2C_EV_IRQHandler+0x45c>)
 80046b4:	40d1      	lsrs	r1, r2
 80046b6:	43c9      	mvns	r1, r1
 80046b8:	f011 0101 	ands.w	r1, r1, #1
 80046bc:	d020      	beq.n	8004700 <HAL_I2C_EV_IRQHandler+0x26c>
 80046be:	6819      	ldr	r1, [r3, #0]
 80046c0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80046c4:	6019      	str	r1, [r3, #0]
 80046c6:	2100      	movs	r1, #0
 80046c8:	9108      	str	r1, [sp, #32]
 80046ca:	6959      	ldr	r1, [r3, #20]
 80046cc:	9108      	str	r1, [sp, #32]
 80046ce:	6999      	ldr	r1, [r3, #24]
 80046d0:	9108      	str	r1, [sp, #32]
 80046d2:	9908      	ldr	r1, [sp, #32]
 80046d4:	6819      	ldr	r1, [r3, #0]
 80046d6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80046da:	6019      	str	r1, [r3, #0]
 80046dc:	6859      	ldr	r1, [r3, #4]
 80046de:	0509      	lsls	r1, r1, #20
 80046e0:	d5ad      	bpl.n	800463e <HAL_I2C_EV_IRQHandler+0x1aa>
 80046e2:	f512 3f80 	cmn.w	r2, #65536	; 0x10000
 80046e6:	d006      	beq.n	80046f6 <HAL_I2C_EV_IRQHandler+0x262>
 80046e8:	1e51      	subs	r1, r2, #1
 80046ea:	291f      	cmp	r1, #31
 80046ec:	d8a7      	bhi.n	800463e <HAL_I2C_EV_IRQHandler+0x1aa>
 80046ee:	4a81      	ldr	r2, [pc, #516]	; (80048f4 <HAL_I2C_EV_IRQHandler+0x460>)
 80046f0:	40ca      	lsrs	r2, r1
 80046f2:	07d2      	lsls	r2, r2, #31
 80046f4:	d5a3      	bpl.n	800463e <HAL_I2C_EV_IRQHandler+0x1aa>
 80046f6:	685a      	ldr	r2, [r3, #4]
 80046f8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80046fc:	605a      	str	r2, [r3, #4]
 80046fe:	e79e      	b.n	800463e <HAL_I2C_EV_IRQHandler+0x1aa>
 8004700:	6818      	ldr	r0, [r3, #0]
 8004702:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8004706:	6018      	str	r0, [r3, #0]
 8004708:	9109      	str	r1, [sp, #36]	; 0x24
 800470a:	6959      	ldr	r1, [r3, #20]
 800470c:	9109      	str	r1, [sp, #36]	; 0x24
 800470e:	6999      	ldr	r1, [r3, #24]
 8004710:	9109      	str	r1, [sp, #36]	; 0x24
 8004712:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004714:	e7e2      	b.n	80046dc <HAL_I2C_EV_IRQHandler+0x248>
 8004716:	6819      	ldr	r1, [r3, #0]
 8004718:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 800471c:	6019      	str	r1, [r3, #0]
 800471e:	6859      	ldr	r1, [r3, #4]
 8004720:	050e      	lsls	r6, r1, #20
 8004722:	d50e      	bpl.n	8004742 <HAL_I2C_EV_IRQHandler+0x2ae>
 8004724:	f512 3f80 	cmn.w	r2, #65536	; 0x10000
 8004728:	d007      	beq.n	800473a <HAL_I2C_EV_IRQHandler+0x2a6>
 800472a:	3a01      	subs	r2, #1
 800472c:	2a1f      	cmp	r2, #31
 800472e:	d808      	bhi.n	8004742 <HAL_I2C_EV_IRQHandler+0x2ae>
 8004730:	4970      	ldr	r1, [pc, #448]	; (80048f4 <HAL_I2C_EV_IRQHandler+0x460>)
 8004732:	fa21 f202 	lsr.w	r2, r1, r2
 8004736:	07d5      	lsls	r5, r2, #31
 8004738:	d503      	bpl.n	8004742 <HAL_I2C_EV_IRQHandler+0x2ae>
 800473a:	685a      	ldr	r2, [r3, #4]
 800473c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8004740:	605a      	str	r2, [r3, #4]
 8004742:	2200      	movs	r2, #0
 8004744:	920a      	str	r2, [sp, #40]	; 0x28
 8004746:	695a      	ldr	r2, [r3, #20]
 8004748:	920a      	str	r2, [sp, #40]	; 0x28
 800474a:	699b      	ldr	r3, [r3, #24]
 800474c:	930a      	str	r3, [sp, #40]	; 0x28
 800474e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004750:	e775      	b.n	800463e <HAL_I2C_EV_IRQHandler+0x1aa>
 8004752:	2200      	movs	r2, #0
 8004754:	920b      	str	r2, [sp, #44]	; 0x2c
 8004756:	695a      	ldr	r2, [r3, #20]
 8004758:	920b      	str	r2, [sp, #44]	; 0x2c
 800475a:	699b      	ldr	r3, [r3, #24]
 800475c:	930b      	str	r3, [sp, #44]	; 0x2c
 800475e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004760:	e6b4      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004762:	f010 0f04 	tst.w	r0, #4
 8004766:	6858      	ldr	r0, [r3, #4]
 8004768:	f000 8098 	beq.w	800489c <HAL_I2C_EV_IRQHandler+0x408>
 800476c:	0500      	lsls	r0, r0, #20
 800476e:	f53f aead 	bmi.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004772:	060e      	lsls	r6, r1, #24
 8004774:	f3c1 0080 	ubfx	r0, r1, #2, #1
 8004778:	d555      	bpl.n	8004826 <HAL_I2C_EV_IRQHandler+0x392>
 800477a:	0551      	lsls	r1, r2, #21
 800477c:	d553      	bpl.n	8004826 <HAL_I2C_EV_IRQHandler+0x392>
 800477e:	2800      	cmp	r0, #0
 8004780:	d154      	bne.n	800482c <HAL_I2C_EV_IRQHandler+0x398>
 8004782:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8004786:	8d25      	ldrh	r5, [r4, #40]	; 0x28
 8004788:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800478c:	b2d2      	uxtb	r2, r2
 800478e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8004790:	b2c9      	uxtb	r1, r1
 8004792:	bb7d      	cbnz	r5, 80047f4 <HAL_I2C_EV_IRQHandler+0x360>
 8004794:	2a21      	cmp	r2, #33	; 0x21
 8004796:	d12f      	bne.n	80047f8 <HAL_I2C_EV_IRQHandler+0x364>
 8004798:	2808      	cmp	r0, #8
 800479a:	d014      	beq.n	80047c6 <HAL_I2C_EV_IRQHandler+0x332>
 800479c:	2820      	cmp	r0, #32
 800479e:	d012      	beq.n	80047c6 <HAL_I2C_EV_IRQHandler+0x332>
 80047a0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 80047a4:	d00f      	beq.n	80047c6 <HAL_I2C_EV_IRQHandler+0x332>
 80047a6:	685a      	ldr	r2, [r3, #4]
 80047a8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80047ac:	605a      	str	r2, [r3, #4]
 80047ae:	2311      	movs	r3, #17
 80047b0:	6323      	str	r3, [r4, #48]	; 0x30
 80047b2:	2300      	movs	r3, #0
 80047b4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80047b8:	2320      	movs	r3, #32
 80047ba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 80047be:	4620      	mov	r0, r4
 80047c0:	f7ff fd04 	bl	80041cc <HAL_I2C_MasterTxCpltCallback>
 80047c4:	e682      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80047c6:	685a      	ldr	r2, [r3, #4]
 80047c8:	4620      	mov	r0, r4
 80047ca:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80047ce:	605a      	str	r2, [r3, #4]
 80047d0:	681a      	ldr	r2, [r3, #0]
 80047d2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80047d6:	601a      	str	r2, [r3, #0]
 80047d8:	2300      	movs	r3, #0
 80047da:	2220      	movs	r2, #32
 80047dc:	6323      	str	r3, [r4, #48]	; 0x30
 80047de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 80047e2:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 80047e6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80047ea:	2a40      	cmp	r2, #64	; 0x40
 80047ec:	d1e8      	bne.n	80047c0 <HAL_I2C_EV_IRQHandler+0x32c>
 80047ee:	f7ff fcf3 	bl	80041d8 <HAL_I2C_MemTxCpltCallback>
 80047f2:	e66b      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80047f4:	2a21      	cmp	r2, #33	; 0x21
 80047f6:	d005      	beq.n	8004804 <HAL_I2C_EV_IRQHandler+0x370>
 80047f8:	2940      	cmp	r1, #64	; 0x40
 80047fa:	f47f ae67 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80047fe:	2a22      	cmp	r2, #34	; 0x22
 8004800:	f47f ae64 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004804:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004806:	b292      	uxth	r2, r2
 8004808:	b91a      	cbnz	r2, 8004812 <HAL_I2C_EV_IRQHandler+0x37e>
 800480a:	685a      	ldr	r2, [r3, #4]
 800480c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004810:	e698      	b.n	8004544 <HAL_I2C_EV_IRQHandler+0xb0>
 8004812:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 8004816:	2a40      	cmp	r2, #64	; 0x40
 8004818:	d116      	bne.n	8004848 <HAL_I2C_EV_IRQHandler+0x3b4>
 800481a:	4620      	mov	r0, r4
 800481c:	b00e      	add	sp, #56	; 0x38
 800481e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004822:	f7ff bcda 	b.w	80041da <I2C_MemoryTransmit_TXE_BTF>
 8004826:	2800      	cmp	r0, #0
 8004828:	f43f ae50 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 800482c:	0592      	lsls	r2, r2, #22
 800482e:	f57f ae4d 	bpl.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004832:	2d10      	cmp	r5, #16
 8004834:	d1f1      	bne.n	800481a <HAL_I2C_EV_IRQHandler+0x386>
 8004836:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8004838:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800483c:	2a21      	cmp	r2, #33	; 0x21
 800483e:	f47f ae45 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004842:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004844:	b292      	uxth	r2, r2
 8004846:	b14a      	cbz	r2, 800485c <HAL_I2C_EV_IRQHandler+0x3c8>
 8004848:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800484a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800484e:	6119      	str	r1, [r3, #16]
 8004850:	6262      	str	r2, [r4, #36]	; 0x24
 8004852:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004854:	3b01      	subs	r3, #1
 8004856:	b29b      	uxth	r3, r3
 8004858:	8563      	strh	r3, [r4, #42]	; 0x2a
 800485a:	e637      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 800485c:	2908      	cmp	r1, #8
 800485e:	d00d      	beq.n	800487c <HAL_I2C_EV_IRQHandler+0x3e8>
 8004860:	2920      	cmp	r1, #32
 8004862:	d00b      	beq.n	800487c <HAL_I2C_EV_IRQHandler+0x3e8>
 8004864:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 8004868:	d008      	beq.n	800487c <HAL_I2C_EV_IRQHandler+0x3e8>
 800486a:	6859      	ldr	r1, [r3, #4]
 800486c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8004870:	6059      	str	r1, [r3, #4]
 8004872:	2311      	movs	r3, #17
 8004874:	6323      	str	r3, [r4, #48]	; 0x30
 8004876:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 800487a:	e79d      	b.n	80047b8 <HAL_I2C_EV_IRQHandler+0x324>
 800487c:	685a      	ldr	r2, [r3, #4]
 800487e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004882:	605a      	str	r2, [r3, #4]
 8004884:	681a      	ldr	r2, [r3, #0]
 8004886:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800488a:	601a      	str	r2, [r3, #0]
 800488c:	2300      	movs	r3, #0
 800488e:	2220      	movs	r2, #32
 8004890:	6323      	str	r3, [r4, #48]	; 0x30
 8004892:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8004896:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800489a:	e790      	b.n	80047be <HAL_I2C_EV_IRQHandler+0x32a>
 800489c:	0506      	lsls	r6, r0, #20
 800489e:	f53f ae15 	bmi.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80048a2:	064d      	lsls	r5, r1, #25
 80048a4:	f3c1 0080 	ubfx	r0, r1, #2, #1
 80048a8:	d57b      	bpl.n	80049a2 <HAL_I2C_EV_IRQHandler+0x50e>
 80048aa:	0551      	lsls	r1, r2, #21
 80048ac:	d579      	bpl.n	80049a2 <HAL_I2C_EV_IRQHandler+0x50e>
 80048ae:	2800      	cmp	r0, #0
 80048b0:	d17a      	bne.n	80049a8 <HAL_I2C_EV_IRQHandler+0x514>
 80048b2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 80048b6:	2a22      	cmp	r2, #34	; 0x22
 80048b8:	f47f ae08 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80048bc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80048be:	b292      	uxth	r2, r2
 80048c0:	2a03      	cmp	r2, #3
 80048c2:	d919      	bls.n	80048f8 <HAL_I2C_EV_IRQHandler+0x464>
 80048c4:	691a      	ldr	r2, [r3, #16]
 80048c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80048c8:	701a      	strb	r2, [r3, #0]
 80048ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80048cc:	3301      	adds	r3, #1
 80048ce:	6263      	str	r3, [r4, #36]	; 0x24
 80048d0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80048d2:	3b01      	subs	r3, #1
 80048d4:	b29b      	uxth	r3, r3
 80048d6:	8563      	strh	r3, [r4, #42]	; 0x2a
 80048d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80048da:	b29b      	uxth	r3, r3
 80048dc:	2b03      	cmp	r3, #3
 80048de:	f47f adf5 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80048e2:	6822      	ldr	r2, [r4, #0]
 80048e4:	6853      	ldr	r3, [r2, #4]
 80048e6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80048ea:	6053      	str	r3, [r2, #4]
 80048ec:	e5ee      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80048ee:	bf00      	nop
 80048f0:	00010014 	.word	0x00010014
 80048f4:	80008081 	.word	0x80008081
 80048f8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80048fa:	2902      	cmp	r1, #2
 80048fc:	f43f ade6 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004900:	2a01      	cmp	r2, #1
 8004902:	f63f ade3 	bhi.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004906:	f246 11a8 	movw	r1, #25000	; 0x61a8
 800490a:	4a72      	ldr	r2, [pc, #456]	; (8004ad4 <HAL_I2C_EV_IRQHandler+0x640>)
 800490c:	900c      	str	r0, [sp, #48]	; 0x30
 800490e:	6812      	ldr	r2, [r2, #0]
 8004910:	fbb2 f2f1 	udiv	r2, r2, r1
 8004914:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8004918:	920c      	str	r2, [sp, #48]	; 0x30
 800491a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800491c:	3a01      	subs	r2, #1
 800491e:	920c      	str	r2, [sp, #48]	; 0x30
 8004920:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004922:	b9d1      	cbnz	r1, 800495a <HAL_I2C_EV_IRQHandler+0x4c6>
 8004924:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004926:	4620      	mov	r0, r4
 8004928:	f042 0220 	orr.w	r2, r2, #32
 800492c:	6422      	str	r2, [r4, #64]	; 0x40
 800492e:	685a      	ldr	r2, [r3, #4]
 8004930:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004934:	605a      	str	r2, [r3, #4]
 8004936:	691a      	ldr	r2, [r3, #16]
 8004938:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800493a:	701a      	strb	r2, [r3, #0]
 800493c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800493e:	3301      	adds	r3, #1
 8004940:	6263      	str	r3, [r4, #36]	; 0x24
 8004942:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004944:	3b01      	subs	r3, #1
 8004946:	b29b      	uxth	r3, r3
 8004948:	8563      	strh	r3, [r4, #42]	; 0x2a
 800494a:	2320      	movs	r3, #32
 800494c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004950:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
 8004954:	f7ff fc93 	bl	800427e <HAL_I2C_ErrorCallback>
 8004958:	e5b8      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 800495a:	681a      	ldr	r2, [r3, #0]
 800495c:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 8004960:	d1db      	bne.n	800491a <HAL_I2C_EV_IRQHandler+0x486>
 8004962:	6819      	ldr	r1, [r3, #0]
 8004964:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8004968:	6019      	str	r1, [r3, #0]
 800496a:	6859      	ldr	r1, [r3, #4]
 800496c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 8004970:	6059      	str	r1, [r3, #4]
 8004972:	6919      	ldr	r1, [r3, #16]
 8004974:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004976:	7019      	strb	r1, [r3, #0]
 8004978:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800497a:	3301      	adds	r3, #1
 800497c:	6263      	str	r3, [r4, #36]	; 0x24
 800497e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004980:	3b01      	subs	r3, #1
 8004982:	b29b      	uxth	r3, r3
 8004984:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004986:	2320      	movs	r3, #32
 8004988:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 800498c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 8004990:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8004994:	2b40      	cmp	r3, #64	; 0x40
 8004996:	d168      	bne.n	8004a6a <HAL_I2C_EV_IRQHandler+0x5d6>
 8004998:	6322      	str	r2, [r4, #48]	; 0x30
 800499a:	4620      	mov	r0, r4
 800499c:	f7ff fc6e 	bl	800427c <HAL_I2C_MemRxCpltCallback>
 80049a0:	e594      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80049a2:	2800      	cmp	r0, #0
 80049a4:	f43f ad92 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80049a8:	0592      	lsls	r2, r2, #22
 80049aa:	f57f ad8f 	bpl.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 80049ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80049b0:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 80049b2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80049b4:	b280      	uxth	r0, r0
 80049b6:	2804      	cmp	r0, #4
 80049b8:	d109      	bne.n	80049ce <HAL_I2C_EV_IRQHandler+0x53a>
 80049ba:	685a      	ldr	r2, [r3, #4]
 80049bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80049c0:	605a      	str	r2, [r3, #4]
 80049c2:	691b      	ldr	r3, [r3, #16]
 80049c4:	700b      	strb	r3, [r1, #0]
 80049c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80049c8:	3301      	adds	r3, #1
 80049ca:	6263      	str	r3, [r4, #36]	; 0x24
 80049cc:	e741      	b.n	8004852 <HAL_I2C_EV_IRQHandler+0x3be>
 80049ce:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 80049d0:	b280      	uxth	r0, r0
 80049d2:	2803      	cmp	r0, #3
 80049d4:	d10c      	bne.n	80049f0 <HAL_I2C_EV_IRQHandler+0x55c>
 80049d6:	6858      	ldr	r0, [r3, #4]
 80049d8:	2a04      	cmp	r2, #4
 80049da:	f420 6080 	bic.w	r0, r0, #1024	; 0x400
 80049de:	6058      	str	r0, [r3, #4]
 80049e0:	d0ef      	beq.n	80049c2 <HAL_I2C_EV_IRQHandler+0x52e>
 80049e2:	2a02      	cmp	r2, #2
 80049e4:	d0ed      	beq.n	80049c2 <HAL_I2C_EV_IRQHandler+0x52e>
 80049e6:	681a      	ldr	r2, [r3, #0]
 80049e8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80049ec:	601a      	str	r2, [r3, #0]
 80049ee:	e7e8      	b.n	80049c2 <HAL_I2C_EV_IRQHandler+0x52e>
 80049f0:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 80049f2:	b280      	uxth	r0, r0
 80049f4:	2802      	cmp	r0, #2
 80049f6:	d1e4      	bne.n	80049c2 <HAL_I2C_EV_IRQHandler+0x52e>
 80049f8:	2a01      	cmp	r2, #1
 80049fa:	d001      	beq.n	8004a00 <HAL_I2C_EV_IRQHandler+0x56c>
 80049fc:	2a10      	cmp	r2, #16
 80049fe:	d128      	bne.n	8004a52 <HAL_I2C_EV_IRQHandler+0x5be>
 8004a00:	681a      	ldr	r2, [r3, #0]
 8004a02:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004a06:	601a      	str	r2, [r3, #0]
 8004a08:	691b      	ldr	r3, [r3, #16]
 8004a0a:	700b      	strb	r3, [r1, #0]
 8004a0c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004a0e:	1c53      	adds	r3, r2, #1
 8004a10:	6263      	str	r3, [r4, #36]	; 0x24
 8004a12:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004a14:	3b01      	subs	r3, #1
 8004a16:	b29b      	uxth	r3, r3
 8004a18:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004a1a:	6823      	ldr	r3, [r4, #0]
 8004a1c:	691b      	ldr	r3, [r3, #16]
 8004a1e:	7053      	strb	r3, [r2, #1]
 8004a20:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004a22:	6822      	ldr	r2, [r4, #0]
 8004a24:	3301      	adds	r3, #1
 8004a26:	6263      	str	r3, [r4, #36]	; 0x24
 8004a28:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004a2a:	3b01      	subs	r3, #1
 8004a2c:	b29b      	uxth	r3, r3
 8004a2e:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004a30:	6853      	ldr	r3, [r2, #4]
 8004a32:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004a36:	6053      	str	r3, [r2, #4]
 8004a38:	2320      	movs	r3, #32
 8004a3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004a3e:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 8004a42:	2b40      	cmp	r3, #64	; 0x40
 8004a44:	f04f 0300 	mov.w	r3, #0
 8004a48:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004a4c:	d10d      	bne.n	8004a6a <HAL_I2C_EV_IRQHandler+0x5d6>
 8004a4e:	6323      	str	r3, [r4, #48]	; 0x30
 8004a50:	e7a3      	b.n	800499a <HAL_I2C_EV_IRQHandler+0x506>
 8004a52:	2a04      	cmp	r2, #4
 8004a54:	d001      	beq.n	8004a5a <HAL_I2C_EV_IRQHandler+0x5c6>
 8004a56:	2a02      	cmp	r2, #2
 8004a58:	d103      	bne.n	8004a62 <HAL_I2C_EV_IRQHandler+0x5ce>
 8004a5a:	681a      	ldr	r2, [r3, #0]
 8004a5c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004a60:	e7d1      	b.n	8004a06 <HAL_I2C_EV_IRQHandler+0x572>
 8004a62:	681a      	ldr	r2, [r3, #0]
 8004a64:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004a68:	e7cd      	b.n	8004a06 <HAL_I2C_EV_IRQHandler+0x572>
 8004a6a:	2312      	movs	r3, #18
 8004a6c:	4620      	mov	r0, r4
 8004a6e:	6323      	str	r3, [r4, #48]	; 0x30
 8004a70:	f7ff fbad 	bl	80041ce <HAL_I2C_MasterRxCpltCallback>
 8004a74:	e52a      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004a76:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8004a78:	b311      	cbz	r1, 8004ac0 <HAL_I2C_EV_IRQHandler+0x62c>
 8004a7a:	2500      	movs	r5, #0
 8004a7c:	6959      	ldr	r1, [r3, #20]
 8004a7e:	078e      	lsls	r6, r1, #30
 8004a80:	d52a      	bpl.n	8004ad8 <HAL_I2C_EV_IRQHandler+0x644>
 8004a82:	0596      	lsls	r6, r2, #22
 8004a84:	d528      	bpl.n	8004ad8 <HAL_I2C_EV_IRQHandler+0x644>
 8004a86:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004a88:	b102      	cbz	r2, 8004a8c <HAL_I2C_EV_IRQHandler+0x5f8>
 8004a8a:	699d      	ldr	r5, [r3, #24]
 8004a8c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8004a90:	f002 0228 	and.w	r2, r2, #40	; 0x28
 8004a94:	2a28      	cmp	r2, #40	; 0x28
 8004a96:	d116      	bne.n	8004ac6 <HAL_I2C_EV_IRQHandler+0x632>
 8004a98:	685a      	ldr	r2, [r3, #4]
 8004a9a:	ea6f 0195 	mvn.w	r1, r5, lsr #2
 8004a9e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004aa2:	605a      	str	r2, [r3, #4]
 8004aa4:	062b      	lsls	r3, r5, #24
 8004aa6:	f04f 0300 	mov.w	r3, #0
 8004aaa:	4620      	mov	r0, r4
 8004aac:	bf54      	ite	pl
 8004aae:	89a2      	ldrhpl	r2, [r4, #12]
 8004ab0:	8b22      	ldrhmi	r2, [r4, #24]
 8004ab2:	f001 0101 	and.w	r1, r1, #1
 8004ab6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004aba:	f7ff fb8b 	bl	80041d4 <HAL_I2C_AddrCallback>
 8004abe:	e505      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004ac0:	699d      	ldr	r5, [r3, #24]
 8004ac2:	6959      	ldr	r1, [r3, #20]
 8004ac4:	e7db      	b.n	8004a7e <HAL_I2C_EV_IRQHandler+0x5ea>
 8004ac6:	f06f 0202 	mvn.w	r2, #2
 8004aca:	615a      	str	r2, [r3, #20]
 8004acc:	2300      	movs	r3, #0
 8004ace:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004ad2:	e4fb      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004ad4:	20000000 	.word	0x20000000
 8004ad8:	06ce      	lsls	r6, r1, #27
 8004ada:	f140 80b1 	bpl.w	8004c40 <HAL_I2C_EV_IRQHandler+0x7ac>
 8004ade:	0595      	lsls	r5, r2, #22
 8004ae0:	f140 80ae 	bpl.w	8004c40 <HAL_I2C_EV_IRQHandler+0x7ac>
 8004ae4:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
 8004ae8:	685a      	ldr	r2, [r3, #4]
 8004aea:	b2ed      	uxtb	r5, r5
 8004aec:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004af0:	605a      	str	r2, [r3, #4]
 8004af2:	2200      	movs	r2, #0
 8004af4:	920d      	str	r2, [sp, #52]	; 0x34
 8004af6:	695a      	ldr	r2, [r3, #20]
 8004af8:	920d      	str	r2, [sp, #52]	; 0x34
 8004afa:	681a      	ldr	r2, [r3, #0]
 8004afc:	f042 0201 	orr.w	r2, r2, #1
 8004b00:	601a      	str	r2, [r3, #0]
 8004b02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004b04:	681a      	ldr	r2, [r3, #0]
 8004b06:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004b0a:	601a      	str	r2, [r3, #0]
 8004b0c:	685a      	ldr	r2, [r3, #4]
 8004b0e:	0512      	lsls	r2, r2, #20
 8004b10:	d520      	bpl.n	8004b54 <HAL_I2C_EV_IRQHandler+0x6c0>
 8004b12:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 8004b16:	2a22      	cmp	r2, #34	; 0x22
 8004b18:	d14a      	bne.n	8004bb0 <HAL_I2C_EV_IRQHandler+0x71c>
 8004b1a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8004b1c:	6802      	ldr	r2, [r0, #0]
 8004b1e:	6852      	ldr	r2, [r2, #4]
 8004b20:	b292      	uxth	r2, r2
 8004b22:	8562      	strh	r2, [r4, #42]	; 0x2a
 8004b24:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004b26:	b292      	uxth	r2, r2
 8004b28:	b11a      	cbz	r2, 8004b32 <HAL_I2C_EV_IRQHandler+0x69e>
 8004b2a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004b2c:	f042 0204 	orr.w	r2, r2, #4
 8004b30:	6422      	str	r2, [r4, #64]	; 0x40
 8004b32:	685a      	ldr	r2, [r3, #4]
 8004b34:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004b38:	605a      	str	r2, [r3, #4]
 8004b3a:	f7fe fffd 	bl	8003b38 <HAL_DMA_GetState>
 8004b3e:	2801      	cmp	r0, #1
 8004b40:	d008      	beq.n	8004b54 <HAL_I2C_EV_IRQHandler+0x6c0>
 8004b42:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8004b44:	4b79      	ldr	r3, [pc, #484]	; (8004d2c <HAL_I2C_EV_IRQHandler+0x898>)
 8004b46:	6343      	str	r3, [r0, #52]	; 0x34
 8004b48:	f7fe ff1e 	bl	8003988 <HAL_DMA_Abort_IT>
 8004b4c:	b110      	cbz	r0, 8004b54 <HAL_I2C_EV_IRQHandler+0x6c0>
 8004b4e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8004b50:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8004b52:	4798      	blx	r3
 8004b54:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004b56:	b29b      	uxth	r3, r3
 8004b58:	b313      	cbz	r3, 8004ba0 <HAL_I2C_EV_IRQHandler+0x70c>
 8004b5a:	6823      	ldr	r3, [r4, #0]
 8004b5c:	695a      	ldr	r2, [r3, #20]
 8004b5e:	0756      	lsls	r6, r2, #29
 8004b60:	d509      	bpl.n	8004b76 <HAL_I2C_EV_IRQHandler+0x6e2>
 8004b62:	691a      	ldr	r2, [r3, #16]
 8004b64:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b66:	701a      	strb	r2, [r3, #0]
 8004b68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b6a:	3301      	adds	r3, #1
 8004b6c:	6263      	str	r3, [r4, #36]	; 0x24
 8004b6e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004b70:	3b01      	subs	r3, #1
 8004b72:	b29b      	uxth	r3, r3
 8004b74:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004b76:	6823      	ldr	r3, [r4, #0]
 8004b78:	695a      	ldr	r2, [r3, #20]
 8004b7a:	0650      	lsls	r0, r2, #25
 8004b7c:	d509      	bpl.n	8004b92 <HAL_I2C_EV_IRQHandler+0x6fe>
 8004b7e:	691a      	ldr	r2, [r3, #16]
 8004b80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b82:	701a      	strb	r2, [r3, #0]
 8004b84:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b86:	3301      	adds	r3, #1
 8004b88:	6263      	str	r3, [r4, #36]	; 0x24
 8004b8a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004b8c:	3b01      	subs	r3, #1
 8004b8e:	b29b      	uxth	r3, r3
 8004b90:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004b92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004b94:	b29b      	uxth	r3, r3
 8004b96:	b11b      	cbz	r3, 8004ba0 <HAL_I2C_EV_IRQHandler+0x70c>
 8004b98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b9a:	f043 0304 	orr.w	r3, r3, #4
 8004b9e:	6423      	str	r3, [r4, #64]	; 0x40
 8004ba0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004ba2:	b313      	cbz	r3, 8004bea <HAL_I2C_EV_IRQHandler+0x756>
 8004ba4:	4620      	mov	r0, r4
 8004ba6:	b00e      	add	sp, #56	; 0x38
 8004ba8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004bac:	f7ff bbca 	b.w	8004344 <I2C_ITError>
 8004bb0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8004bb2:	6802      	ldr	r2, [r0, #0]
 8004bb4:	6852      	ldr	r2, [r2, #4]
 8004bb6:	b292      	uxth	r2, r2
 8004bb8:	8562      	strh	r2, [r4, #42]	; 0x2a
 8004bba:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004bbc:	b292      	uxth	r2, r2
 8004bbe:	b11a      	cbz	r2, 8004bc8 <HAL_I2C_EV_IRQHandler+0x734>
 8004bc0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004bc2:	f042 0204 	orr.w	r2, r2, #4
 8004bc6:	6422      	str	r2, [r4, #64]	; 0x40
 8004bc8:	685a      	ldr	r2, [r3, #4]
 8004bca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004bce:	605a      	str	r2, [r3, #4]
 8004bd0:	f7fe ffb2 	bl	8003b38 <HAL_DMA_GetState>
 8004bd4:	2801      	cmp	r0, #1
 8004bd6:	d0bd      	beq.n	8004b54 <HAL_I2C_EV_IRQHandler+0x6c0>
 8004bd8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8004bda:	4b54      	ldr	r3, [pc, #336]	; (8004d2c <HAL_I2C_EV_IRQHandler+0x898>)
 8004bdc:	6343      	str	r3, [r0, #52]	; 0x34
 8004bde:	f7fe fed3 	bl	8003988 <HAL_DMA_Abort_IT>
 8004be2:	2800      	cmp	r0, #0
 8004be4:	d0b6      	beq.n	8004b54 <HAL_I2C_EV_IRQHandler+0x6c0>
 8004be6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8004be8:	e7b2      	b.n	8004b50 <HAL_I2C_EV_IRQHandler+0x6bc>
 8004bea:	2d2a      	cmp	r5, #42	; 0x2a
 8004bec:	d106      	bne.n	8004bfc <HAL_I2C_EV_IRQHandler+0x768>
 8004bee:	6323      	str	r3, [r4, #48]	; 0x30
 8004bf0:	2328      	movs	r3, #40	; 0x28
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004bf8:	f7ff faeb 	bl	80041d2 <HAL_I2C_SlaveRxCpltCallback>
 8004bfc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004c00:	2b28      	cmp	r3, #40	; 0x28
 8004c02:	d10c      	bne.n	8004c1e <HAL_I2C_EV_IRQHandler+0x78a>
 8004c04:	4b4a      	ldr	r3, [pc, #296]	; (8004d30 <HAL_I2C_EV_IRQHandler+0x89c>)
 8004c06:	2220      	movs	r2, #32
 8004c08:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004c0a:	2300      	movs	r3, #0
 8004c0c:	4620      	mov	r0, r4
 8004c0e:	6323      	str	r3, [r4, #48]	; 0x30
 8004c10:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8004c14:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004c18:	f7ff fadd 	bl	80041d6 <HAL_I2C_ListenCpltCallback>
 8004c1c:	e456      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004c1e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004c20:	2b22      	cmp	r3, #34	; 0x22
 8004c22:	d002      	beq.n	8004c2a <HAL_I2C_EV_IRQHandler+0x796>
 8004c24:	2d22      	cmp	r5, #34	; 0x22
 8004c26:	f47f ac51 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004c2a:	2300      	movs	r3, #0
 8004c2c:	2220      	movs	r2, #32
 8004c2e:	6323      	str	r3, [r4, #48]	; 0x30
 8004c30:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8004c34:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004c38:	4620      	mov	r0, r4
 8004c3a:	f7ff faca 	bl	80041d2 <HAL_I2C_SlaveRxCpltCallback>
 8004c3e:	e445      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004c40:	f000 00f7 	and.w	r0, r0, #247	; 0xf7
 8004c44:	2821      	cmp	r0, #33	; 0x21
 8004c46:	f3c1 0580 	ubfx	r5, r1, #2, #1
 8004c4a:	d135      	bne.n	8004cb8 <HAL_I2C_EV_IRQHandler+0x824>
 8004c4c:	0609      	lsls	r1, r1, #24
 8004c4e:	d527      	bpl.n	8004ca0 <HAL_I2C_EV_IRQHandler+0x80c>
 8004c50:	0556      	lsls	r6, r2, #21
 8004c52:	d525      	bpl.n	8004ca0 <HAL_I2C_EV_IRQHandler+0x80c>
 8004c54:	bb3d      	cbnz	r5, 8004ca6 <HAL_I2C_EV_IRQHandler+0x812>
 8004c56:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8004c5a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004c5c:	b2c9      	uxtb	r1, r1
 8004c5e:	b292      	uxth	r2, r2
 8004c60:	2a00      	cmp	r2, #0
 8004c62:	f43f ac33 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004c66:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004c68:	f812 5b01 	ldrb.w	r5, [r2], #1
 8004c6c:	611d      	str	r5, [r3, #16]
 8004c6e:	6262      	str	r2, [r4, #36]	; 0x24
 8004c70:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004c72:	3a01      	subs	r2, #1
 8004c74:	b292      	uxth	r2, r2
 8004c76:	8562      	strh	r2, [r4, #42]	; 0x2a
 8004c78:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004c7a:	b292      	uxth	r2, r2
 8004c7c:	2a00      	cmp	r2, #0
 8004c7e:	f47f ac25 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004c82:	2929      	cmp	r1, #41	; 0x29
 8004c84:	f47f ac22 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004c88:	685a      	ldr	r2, [r3, #4]
 8004c8a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c8e:	605a      	str	r2, [r3, #4]
 8004c90:	2328      	movs	r3, #40	; 0x28
 8004c92:	6320      	str	r0, [r4, #48]	; 0x30
 8004c94:	4620      	mov	r0, r4
 8004c96:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004c9a:	f7ff fa99 	bl	80041d0 <HAL_I2C_SlaveTxCpltCallback>
 8004c9e:	e415      	b.n	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004ca0:	2d00      	cmp	r5, #0
 8004ca2:	f43f ac13 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004ca6:	0595      	lsls	r5, r2, #22
 8004ca8:	f57f ac10 	bpl.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004cac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004cae:	b292      	uxth	r2, r2
 8004cb0:	2a00      	cmp	r2, #0
 8004cb2:	f43f ac0b 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004cb6:	e5c7      	b.n	8004848 <HAL_I2C_EV_IRQHandler+0x3b4>
 8004cb8:	0648      	lsls	r0, r1, #25
 8004cba:	d527      	bpl.n	8004d0c <HAL_I2C_EV_IRQHandler+0x878>
 8004cbc:	0551      	lsls	r1, r2, #21
 8004cbe:	d525      	bpl.n	8004d0c <HAL_I2C_EV_IRQHandler+0x878>
 8004cc0:	bb3d      	cbnz	r5, 8004d12 <HAL_I2C_EV_IRQHandler+0x87e>
 8004cc2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8004cc6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 8004cc8:	b2d2      	uxtb	r2, r2
 8004cca:	b289      	uxth	r1, r1
 8004ccc:	2900      	cmp	r1, #0
 8004cce:	f43f abfd 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004cd2:	6919      	ldr	r1, [r3, #16]
 8004cd4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cd6:	7019      	strb	r1, [r3, #0]
 8004cd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cda:	3301      	adds	r3, #1
 8004cdc:	6263      	str	r3, [r4, #36]	; 0x24
 8004cde:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004ce0:	3b01      	subs	r3, #1
 8004ce2:	b29b      	uxth	r3, r3
 8004ce4:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004ce6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004ce8:	b29b      	uxth	r3, r3
 8004cea:	2b00      	cmp	r3, #0
 8004cec:	f47f abee 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004cf0:	2a2a      	cmp	r2, #42	; 0x2a
 8004cf2:	f47f abeb 	bne.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004cf6:	6822      	ldr	r2, [r4, #0]
 8004cf8:	6853      	ldr	r3, [r2, #4]
 8004cfa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004cfe:	6053      	str	r3, [r2, #4]
 8004d00:	2322      	movs	r3, #34	; 0x22
 8004d02:	6323      	str	r3, [r4, #48]	; 0x30
 8004d04:	2328      	movs	r3, #40	; 0x28
 8004d06:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004d0a:	e795      	b.n	8004c38 <HAL_I2C_EV_IRQHandler+0x7a4>
 8004d0c:	2d00      	cmp	r5, #0
 8004d0e:	f43f abdd 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004d12:	0592      	lsls	r2, r2, #22
 8004d14:	f57f abda 	bpl.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004d18:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8004d1a:	b292      	uxth	r2, r2
 8004d1c:	2a00      	cmp	r2, #0
 8004d1e:	f43f abd5 	beq.w	80044cc <HAL_I2C_EV_IRQHandler+0x38>
 8004d22:	691a      	ldr	r2, [r3, #16]
 8004d24:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004d26:	701a      	strb	r2, [r3, #0]
 8004d28:	e64d      	b.n	80049c6 <HAL_I2C_EV_IRQHandler+0x532>
 8004d2a:	bf00      	nop
 8004d2c:	08004285 	.word	0x08004285
 8004d30:	ffff0000 	.word	0xffff0000

08004d34 <HAL_I2C_ER_IRQHandler>:
 8004d34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d36:	6803      	ldr	r3, [r0, #0]
 8004d38:	4604      	mov	r4, r0
 8004d3a:	695f      	ldr	r7, [r3, #20]
 8004d3c:	685e      	ldr	r6, [r3, #4]
 8004d3e:	f890 203e 	ldrb.w	r2, [r0, #62]	; 0x3e
 8004d42:	05f8      	lsls	r0, r7, #23
 8004d44:	b2d2      	uxtb	r2, r2
 8004d46:	f3c7 2500 	ubfx	r5, r7, #8, #1
 8004d4a:	d50b      	bpl.n	8004d64 <HAL_I2C_ER_IRQHandler+0x30>
 8004d4c:	05f1      	lsls	r1, r6, #23
 8004d4e:	f3c6 2500 	ubfx	r5, r6, #8, #1
 8004d52:	d507      	bpl.n	8004d64 <HAL_I2C_ER_IRQHandler+0x30>
 8004d54:	f46f 7180 	mvn.w	r1, #256	; 0x100
 8004d58:	2501      	movs	r5, #1
 8004d5a:	6159      	str	r1, [r3, #20]
 8004d5c:	6819      	ldr	r1, [r3, #0]
 8004d5e:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8004d62:	6019      	str	r1, [r3, #0]
 8004d64:	05b8      	lsls	r0, r7, #22
 8004d66:	d506      	bpl.n	8004d76 <HAL_I2C_ER_IRQHandler+0x42>
 8004d68:	05f1      	lsls	r1, r6, #23
 8004d6a:	bf42      	ittt	mi
 8004d6c:	f46f 7100 	mvnmi.w	r1, #512	; 0x200
 8004d70:	f045 0502 	orrmi.w	r5, r5, #2
 8004d74:	6159      	strmi	r1, [r3, #20]
 8004d76:	0578      	lsls	r0, r7, #21
 8004d78:	d536      	bpl.n	8004de8 <HAL_I2C_ER_IRQHandler+0xb4>
 8004d7a:	05f1      	lsls	r1, r6, #23
 8004d7c:	d534      	bpl.n	8004de8 <HAL_I2C_ER_IRQHandler+0xb4>
 8004d7e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8004d80:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8004d84:	2a20      	cmp	r2, #32
 8004d86:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 8004d8a:	b280      	uxth	r0, r0
 8004d8c:	b2c9      	uxtb	r1, r1
 8004d8e:	d15b      	bne.n	8004e48 <HAL_I2C_ER_IRQHandler+0x114>
 8004d90:	2800      	cmp	r0, #0
 8004d92:	d159      	bne.n	8004e48 <HAL_I2C_ER_IRQHandler+0x114>
 8004d94:	f001 00f7 	and.w	r0, r1, #247	; 0xf7
 8004d98:	2821      	cmp	r0, #33	; 0x21
 8004d9a:	d004      	beq.n	8004da6 <HAL_I2C_ER_IRQHandler+0x72>
 8004d9c:	2928      	cmp	r1, #40	; 0x28
 8004d9e:	d153      	bne.n	8004e48 <HAL_I2C_ER_IRQHandler+0x114>
 8004da0:	f1bc 0f21 	cmp.w	ip, #33	; 0x21
 8004da4:	d150      	bne.n	8004e48 <HAL_I2C_ER_IRQHandler+0x114>
 8004da6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8004daa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8004dac:	b2d2      	uxtb	r2, r2
 8004dae:	2908      	cmp	r1, #8
 8004db0:	d001      	beq.n	8004db6 <HAL_I2C_ER_IRQHandler+0x82>
 8004db2:	2920      	cmp	r1, #32
 8004db4:	d12a      	bne.n	8004e0c <HAL_I2C_ER_IRQHandler+0xd8>
 8004db6:	2a28      	cmp	r2, #40	; 0x28
 8004db8:	d128      	bne.n	8004e0c <HAL_I2C_ER_IRQHandler+0xd8>
 8004dba:	4a2c      	ldr	r2, [pc, #176]	; (8004e6c <HAL_I2C_ER_IRQHandler+0x138>)
 8004dbc:	4620      	mov	r0, r4
 8004dbe:	62e2      	str	r2, [r4, #44]	; 0x2c
 8004dc0:	685a      	ldr	r2, [r3, #4]
 8004dc2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004dc6:	605a      	str	r2, [r3, #4]
 8004dc8:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004dcc:	615a      	str	r2, [r3, #20]
 8004dce:	681a      	ldr	r2, [r3, #0]
 8004dd0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004dd4:	601a      	str	r2, [r3, #0]
 8004dd6:	2300      	movs	r3, #0
 8004dd8:	2220      	movs	r2, #32
 8004dda:	6323      	str	r3, [r4, #48]	; 0x30
 8004ddc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8004de0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8004de4:	f7ff f9f7 	bl	80041d6 <HAL_I2C_ListenCpltCallback>
 8004de8:	053a      	lsls	r2, r7, #20
 8004dea:	d53b      	bpl.n	8004e64 <HAL_I2C_ER_IRQHandler+0x130>
 8004dec:	05f3      	lsls	r3, r6, #23
 8004dee:	d539      	bpl.n	8004e64 <HAL_I2C_ER_IRQHandler+0x130>
 8004df0:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 8004df4:	6823      	ldr	r3, [r4, #0]
 8004df6:	f045 0508 	orr.w	r5, r5, #8
 8004dfa:	615a      	str	r2, [r3, #20]
 8004dfc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004dfe:	4620      	mov	r0, r4
 8004e00:	431d      	orrs	r5, r3
 8004e02:	6425      	str	r5, [r4, #64]	; 0x40
 8004e04:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004e08:	f7ff ba9c 	b.w	8004344 <I2C_ITError>
 8004e0c:	2a21      	cmp	r2, #33	; 0x21
 8004e0e:	d117      	bne.n	8004e40 <HAL_I2C_ER_IRQHandler+0x10c>
 8004e10:	4916      	ldr	r1, [pc, #88]	; (8004e6c <HAL_I2C_ER_IRQHandler+0x138>)
 8004e12:	4620      	mov	r0, r4
 8004e14:	62e1      	str	r1, [r4, #44]	; 0x2c
 8004e16:	6322      	str	r2, [r4, #48]	; 0x30
 8004e18:	2220      	movs	r2, #32
 8004e1a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8004e1e:	2200      	movs	r2, #0
 8004e20:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
 8004e24:	685a      	ldr	r2, [r3, #4]
 8004e26:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004e2a:	605a      	str	r2, [r3, #4]
 8004e2c:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004e30:	615a      	str	r2, [r3, #20]
 8004e32:	681a      	ldr	r2, [r3, #0]
 8004e34:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004e38:	601a      	str	r2, [r3, #0]
 8004e3a:	f7ff f9c9 	bl	80041d0 <HAL_I2C_SlaveTxCpltCallback>
 8004e3e:	e7d3      	b.n	8004de8 <HAL_I2C_ER_IRQHandler+0xb4>
 8004e40:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004e44:	615a      	str	r2, [r3, #20]
 8004e46:	e7cf      	b.n	8004de8 <HAL_I2C_ER_IRQHandler+0xb4>
 8004e48:	f46f 6180 	mvn.w	r1, #1024	; 0x400
 8004e4c:	2a10      	cmp	r2, #16
 8004e4e:	6159      	str	r1, [r3, #20]
 8004e50:	f045 0504 	orr.w	r5, r5, #4
 8004e54:	d001      	beq.n	8004e5a <HAL_I2C_ER_IRQHandler+0x126>
 8004e56:	2a40      	cmp	r2, #64	; 0x40
 8004e58:	d1c6      	bne.n	8004de8 <HAL_I2C_ER_IRQHandler+0xb4>
 8004e5a:	681a      	ldr	r2, [r3, #0]
 8004e5c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e60:	601a      	str	r2, [r3, #0]
 8004e62:	e7c1      	b.n	8004de8 <HAL_I2C_ER_IRQHandler+0xb4>
 8004e64:	2d00      	cmp	r5, #0
 8004e66:	d1c9      	bne.n	8004dfc <HAL_I2C_ER_IRQHandler+0xc8>
 8004e68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004e6a:	bf00      	nop
 8004e6c:	ffff0000 	.word	0xffff0000

08004e70 <HAL_PCD_Init>:
 8004e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e72:	4604      	mov	r4, r0
 8004e74:	b087      	sub	sp, #28
 8004e76:	b310      	cbz	r0, 8004ebe <HAL_PCD_Init+0x4e>
 8004e78:	f890 32a9 	ldrb.w	r3, [r0, #681]	; 0x2a9
 8004e7c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004e80:	b91b      	cbnz	r3, 8004e8a <HAL_PCD_Init+0x1a>
 8004e82:	f880 22a8 	strb.w	r2, [r0, #680]	; 0x2a8
 8004e86:	f005 f977 	bl	800a178 <HAL_PCD_MspInit>
 8004e8a:	2303      	movs	r3, #3
 8004e8c:	4625      	mov	r5, r4
 8004e8e:	466e      	mov	r6, sp
 8004e90:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 8004e94:	f855 0b10 	ldr.w	r0, [r5], #16
 8004e98:	f002 f8ce 	bl	8007038 <USB_DisableGlobalInt>
 8004e9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004e9e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8004ea0:	682b      	ldr	r3, [r5, #0]
 8004ea2:	1d27      	adds	r7, r4, #4
 8004ea4:	6033      	str	r3, [r6, #0]
 8004ea6:	4626      	mov	r6, r4
 8004ea8:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
 8004eac:	f856 0b10 	ldr.w	r0, [r6], #16
 8004eb0:	f002 f8b2 	bl	8007018 <USB_CoreInit>
 8004eb4:	4605      	mov	r5, r0
 8004eb6:	b120      	cbz	r0, 8004ec2 <HAL_PCD_Init+0x52>
 8004eb8:	2302      	movs	r3, #2
 8004eba:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 8004ebe:	2501      	movs	r5, #1
 8004ec0:	e04c      	b.n	8004f5c <HAL_PCD_Init+0xec>
 8004ec2:	4601      	mov	r1, r0
 8004ec4:	6820      	ldr	r0, [r4, #0]
 8004ec6:	f002 f8c1 	bl	800704c <USB_SetCurrentMode>
 8004eca:	4629      	mov	r1, r5
 8004ecc:	f04f 0e01 	mov.w	lr, #1
 8004ed0:	2528      	movs	r5, #40	; 0x28
 8004ed2:	4608      	mov	r0, r1
 8004ed4:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8004ed8:	b2ca      	uxtb	r2, r1
 8004eda:	4594      	cmp	ip, r2
 8004edc:	f101 0101 	add.w	r1, r1, #1
 8004ee0:	d81b      	bhi.n	8004f1a <HAL_PCD_Init+0xaa>
 8004ee2:	2300      	movs	r3, #0
 8004ee4:	2528      	movs	r5, #40	; 0x28
 8004ee6:	4619      	mov	r1, r3
 8004ee8:	b2d8      	uxtb	r0, r3
 8004eea:	4584      	cmp	ip, r0
 8004eec:	f103 0301 	add.w	r3, r3, #1
 8004ef0:	d820      	bhi.n	8004f34 <HAL_PCD_Init+0xc4>
 8004ef2:	46ec      	mov	ip, sp
 8004ef4:	4635      	mov	r5, r6
 8004ef6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004ef8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8004efc:	682b      	ldr	r3, [r5, #0]
 8004efe:	f8cc 3000 	str.w	r3, [ip]
 8004f02:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
 8004f06:	6820      	ldr	r0, [r4, #0]
 8004f08:	f002 f8a2 	bl	8007050 <USB_DevInit>
 8004f0c:	2301      	movs	r3, #1
 8004f0e:	4605      	mov	r5, r0
 8004f10:	b1e8      	cbz	r0, 8004f4e <HAL_PCD_Init+0xde>
 8004f12:	2202      	movs	r2, #2
 8004f14:	f884 22a9 	strb.w	r2, [r4, #681]	; 0x2a9
 8004f18:	e7d1      	b.n	8004ebe <HAL_PCD_Init+0x4e>
 8004f1a:	fb05 4302 	mla	r3, r5, r2, r4
 8004f1e:	e9c3 000e 	strd	r0, r0, [r3, #56]	; 0x38
 8004f22:	f883 e029 	strb.w	lr, [r3, #41]	; 0x29
 8004f26:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8004f2a:	86da      	strh	r2, [r3, #54]	; 0x36
 8004f2c:	f883 002b 	strb.w	r0, [r3, #43]	; 0x2b
 8004f30:	6418      	str	r0, [r3, #64]	; 0x40
 8004f32:	e7d1      	b.n	8004ed8 <HAL_PCD_Init+0x68>
 8004f34:	fb05 4200 	mla	r2, r5, r0, r4
 8004f38:	e9c2 115e 	strd	r1, r1, [r2, #376]	; 0x178
 8004f3c:	f882 1169 	strb.w	r1, [r2, #361]	; 0x169
 8004f40:	f882 0168 	strb.w	r0, [r2, #360]	; 0x168
 8004f44:	f882 116b 	strb.w	r1, [r2, #363]	; 0x16b
 8004f48:	f8c2 1180 	str.w	r1, [r2, #384]	; 0x180
 8004f4c:	e7cc      	b.n	8004ee8 <HAL_PCD_Init+0x78>
 8004f4e:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 8004f52:	6820      	ldr	r0, [r4, #0]
 8004f54:	f884 32a9 	strb.w	r3, [r4, #681]	; 0x2a9
 8004f58:	f002 fb38 	bl	80075cc <USB_DevDisconnect>
 8004f5c:	4628      	mov	r0, r5
 8004f5e:	b007      	add	sp, #28
 8004f60:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004f62 <HAL_PCD_Start>:
 8004f62:	b538      	push	{r3, r4, r5, lr}
 8004f64:	f890 32a8 	ldrb.w	r3, [r0, #680]	; 0x2a8
 8004f68:	4604      	mov	r4, r0
 8004f6a:	2b01      	cmp	r3, #1
 8004f6c:	d010      	beq.n	8004f90 <HAL_PCD_Start+0x2e>
 8004f6e:	2501      	movs	r5, #1
 8004f70:	f880 52a8 	strb.w	r5, [r0, #680]	; 0x2a8
 8004f74:	6800      	ldr	r0, [r0, #0]
 8004f76:	f002 f856 	bl	8007026 <USB_EnableGlobalInt>
 8004f7a:	4629      	mov	r1, r5
 8004f7c:	4620      	mov	r0, r4
 8004f7e:	f005 fa2c 	bl	800a3da <HAL_PCDEx_SetConnectionState>
 8004f82:	6820      	ldr	r0, [r4, #0]
 8004f84:	f002 fb20 	bl	80075c8 <USB_DevConnect>
 8004f88:	2000      	movs	r0, #0
 8004f8a:	f884 02a8 	strb.w	r0, [r4, #680]	; 0x2a8
 8004f8e:	bd38      	pop	{r3, r4, r5, pc}
 8004f90:	2002      	movs	r0, #2
 8004f92:	e7fc      	b.n	8004f8e <HAL_PCD_Start+0x2c>

08004f94 <HAL_PCD_SetAddress>:
 8004f94:	b510      	push	{r4, lr}
 8004f96:	f890 22a8 	ldrb.w	r2, [r0, #680]	; 0x2a8
 8004f9a:	4604      	mov	r4, r0
 8004f9c:	2a01      	cmp	r2, #1
 8004f9e:	d00b      	beq.n	8004fb8 <HAL_PCD_SetAddress+0x24>
 8004fa0:	2201      	movs	r2, #1
 8004fa2:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8004fa6:	f880 22a8 	strb.w	r2, [r0, #680]	; 0x2a8
 8004faa:	6800      	ldr	r0, [r0, #0]
 8004fac:	f002 fb06 	bl	80075bc <USB_SetDevAddress>
 8004fb0:	2000      	movs	r0, #0
 8004fb2:	f884 02a8 	strb.w	r0, [r4, #680]	; 0x2a8
 8004fb6:	bd10      	pop	{r4, pc}
 8004fb8:	2002      	movs	r0, #2
 8004fba:	e7fc      	b.n	8004fb6 <HAL_PCD_SetAddress+0x22>

08004fbc <HAL_PCD_IRQHandler>:
 8004fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fc0:	4604      	mov	r4, r0
 8004fc2:	b085      	sub	sp, #20
 8004fc4:	6800      	ldr	r0, [r0, #0]
 8004fc6:	f002 fb03 	bl	80075d0 <USB_ReadInterrupts>
 8004fca:	0402      	lsls	r2, r0, #16
 8004fcc:	d509      	bpl.n	8004fe2 <HAL_PCD_IRQHandler+0x26>
 8004fce:	f8df 9860 	ldr.w	r9, [pc, #2144]	; 8005830 <HAL_PCD_IRQHandler+0x874>
 8004fd2:	f8df 8860 	ldr.w	r8, [pc, #2144]	; 8005834 <HAL_PCD_IRQHandler+0x878>
 8004fd6:	6820      	ldr	r0, [r4, #0]
 8004fd8:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
 8004fdc:	041d      	lsls	r5, r3, #16
 8004fde:	f100 80c1 	bmi.w	8005164 <HAL_PCD_IRQHandler+0x1a8>
 8004fe2:	6820      	ldr	r0, [r4, #0]
 8004fe4:	f002 faf4 	bl	80075d0 <USB_ReadInterrupts>
 8004fe8:	0543      	lsls	r3, r0, #21
 8004fea:	d50f      	bpl.n	800500c <HAL_PCD_IRQHandler+0x50>
 8004fec:	6822      	ldr	r2, [r4, #0]
 8004fee:	4620      	mov	r0, r4
 8004ff0:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8004ff4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004ff8:	041b      	lsls	r3, r3, #16
 8004ffa:	0c1b      	lsrs	r3, r3, #16
 8004ffc:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8005000:	f005 f8f5 	bl	800a1ee <HAL_PCD_ResetCallback>
 8005004:	2100      	movs	r1, #0
 8005006:	4620      	mov	r0, r4
 8005008:	f7ff ffc4 	bl	8004f94 <HAL_PCD_SetAddress>
 800500c:	6820      	ldr	r0, [r4, #0]
 800500e:	f002 fadf 	bl	80075d0 <USB_ReadInterrupts>
 8005012:	0441      	lsls	r1, r0, #17
 8005014:	d508      	bpl.n	8005028 <HAL_PCD_IRQHandler+0x6c>
 8005016:	6822      	ldr	r2, [r4, #0]
 8005018:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 800501c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005020:	041b      	lsls	r3, r3, #16
 8005022:	0c1b      	lsrs	r3, r3, #16
 8005024:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8005028:	6820      	ldr	r0, [r4, #0]
 800502a:	f002 fad1 	bl	80075d0 <USB_ReadInterrupts>
 800502e:	0482      	lsls	r2, r0, #18
 8005030:	d508      	bpl.n	8005044 <HAL_PCD_IRQHandler+0x88>
 8005032:	6822      	ldr	r2, [r4, #0]
 8005034:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8005038:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800503c:	041b      	lsls	r3, r3, #16
 800503e:	0c1b      	lsrs	r3, r3, #16
 8005040:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8005044:	6820      	ldr	r0, [r4, #0]
 8005046:	f002 fac3 	bl	80075d0 <USB_ReadInterrupts>
 800504a:	04c3      	lsls	r3, r0, #19
 800504c:	d51c      	bpl.n	8005088 <HAL_PCD_IRQHandler+0xcc>
 800504e:	6822      	ldr	r2, [r4, #0]
 8005050:	4620      	mov	r0, r4
 8005052:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8005056:	f023 0304 	bic.w	r3, r3, #4
 800505a:	041b      	lsls	r3, r3, #16
 800505c:	0c1b      	lsrs	r3, r3, #16
 800505e:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8005062:	f8b2 3040 	ldrh.w	r3, [r2, #64]	; 0x40
 8005066:	f023 0308 	bic.w	r3, r3, #8
 800506a:	041b      	lsls	r3, r3, #16
 800506c:	0c1b      	lsrs	r3, r3, #16
 800506e:	f8a2 3040 	strh.w	r3, [r2, #64]	; 0x40
 8005072:	f005 f8df 	bl	800a234 <HAL_PCD_ResumeCallback>
 8005076:	6822      	ldr	r2, [r4, #0]
 8005078:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 800507c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005080:	041b      	lsls	r3, r3, #16
 8005082:	0c1b      	lsrs	r3, r3, #16
 8005084:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 8005088:	6820      	ldr	r0, [r4, #0]
 800508a:	f002 faa1 	bl	80075d0 <USB_ReadInterrupts>
 800508e:	0507      	lsls	r7, r0, #20
 8005090:	d546      	bpl.n	8005120 <HAL_PCD_IRQHandler+0x164>
 8005092:	4668      	mov	r0, sp
 8005094:	6823      	ldr	r3, [r4, #0]
 8005096:	4606      	mov	r6, r0
 8005098:	4619      	mov	r1, r3
 800509a:	461a      	mov	r2, r3
 800509c:	f103 0520 	add.w	r5, r3, #32
 80050a0:	f832 7b04 	ldrh.w	r7, [r2], #4
 80050a4:	4295      	cmp	r5, r2
 80050a6:	f826 7b02 	strh.w	r7, [r6], #2
 80050aa:	d1f9      	bne.n	80050a0 <HAL_PCD_IRQHandler+0xe4>
 80050ac:	f8b3 2040 	ldrh.w	r2, [r3, #64]	; 0x40
 80050b0:	b292      	uxth	r2, r2
 80050b2:	f042 0201 	orr.w	r2, r2, #1
 80050b6:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 80050ba:	f8b3 2040 	ldrh.w	r2, [r3, #64]	; 0x40
 80050be:	f022 0201 	bic.w	r2, r2, #1
 80050c2:	0412      	lsls	r2, r2, #16
 80050c4:	0c12      	lsrs	r2, r2, #16
 80050c6:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 80050ca:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 80050ce:	0556      	lsls	r6, r2, #21
 80050d0:	d5fb      	bpl.n	80050ca <HAL_PCD_IRQHandler+0x10e>
 80050d2:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 80050d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050da:	0412      	lsls	r2, r2, #16
 80050dc:	0c12      	lsrs	r2, r2, #16
 80050de:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 80050e2:	f830 2b02 	ldrh.w	r2, [r0], #2
 80050e6:	f821 2b04 	strh.w	r2, [r1], #4
 80050ea:	428d      	cmp	r5, r1
 80050ec:	d1f9      	bne.n	80050e2 <HAL_PCD_IRQHandler+0x126>
 80050ee:	f8b3 2040 	ldrh.w	r2, [r3, #64]	; 0x40
 80050f2:	4620      	mov	r0, r4
 80050f4:	b292      	uxth	r2, r2
 80050f6:	f042 0208 	orr.w	r2, r2, #8
 80050fa:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 80050fe:	f8b3 2044 	ldrh.w	r2, [r3, #68]	; 0x44
 8005102:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005106:	0412      	lsls	r2, r2, #16
 8005108:	0c12      	lsrs	r2, r2, #16
 800510a:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800510e:	f8b3 2040 	ldrh.w	r2, [r3, #64]	; 0x40
 8005112:	b292      	uxth	r2, r2
 8005114:	f042 0204 	orr.w	r2, r2, #4
 8005118:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800511c:	f005 f87a 	bl	800a214 <HAL_PCD_SuspendCallback>
 8005120:	6820      	ldr	r0, [r4, #0]
 8005122:	f002 fa55 	bl	80075d0 <USB_ReadInterrupts>
 8005126:	0582      	lsls	r2, r0, #22
 8005128:	d50b      	bpl.n	8005142 <HAL_PCD_IRQHandler+0x186>
 800512a:	6822      	ldr	r2, [r4, #0]
 800512c:	4620      	mov	r0, r4
 800512e:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8005132:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005136:	041b      	lsls	r3, r3, #16
 8005138:	0c1b      	lsrs	r3, r3, #16
 800513a:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 800513e:	f005 f852 	bl	800a1e6 <HAL_PCD_SOFCallback>
 8005142:	6820      	ldr	r0, [r4, #0]
 8005144:	f002 fa44 	bl	80075d0 <USB_ReadInterrupts>
 8005148:	05c3      	lsls	r3, r0, #23
 800514a:	d508      	bpl.n	800515e <HAL_PCD_IRQHandler+0x1a2>
 800514c:	6822      	ldr	r2, [r4, #0]
 800514e:	f8b2 3044 	ldrh.w	r3, [r2, #68]	; 0x44
 8005152:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005156:	041b      	lsls	r3, r3, #16
 8005158:	0c1b      	lsrs	r3, r3, #16
 800515a:	f8a2 3044 	strh.w	r3, [r2, #68]	; 0x44
 800515e:	b005      	add	sp, #20
 8005160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005164:	f8b0 6044 	ldrh.w	r6, [r0, #68]	; 0x44
 8005168:	b2b1      	uxth	r1, r6
 800516a:	f016 060f 	ands.w	r6, r6, #15
 800516e:	f040 80b9 	bne.w	80052e4 <HAL_PCD_IRQHandler+0x328>
 8005172:	f011 0110 	ands.w	r1, r1, #16
 8005176:	d12d      	bne.n	80051d4 <HAL_PCD_IRQHandler+0x218>
 8005178:	8803      	ldrh	r3, [r0, #0]
 800517a:	b29b      	uxth	r3, r3
 800517c:	ea03 0309 	and.w	r3, r3, r9
 8005180:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005184:	8003      	strh	r3, [r0, #0]
 8005186:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800518a:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 800518e:	b29b      	uxth	r3, r3
 8005190:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005194:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8005198:	f8b0 3404 	ldrh.w	r3, [r0, #1028]	; 0x404
 800519c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800519e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80051a2:	6463      	str	r3, [r4, #68]	; 0x44
 80051a4:	4413      	add	r3, r2
 80051a6:	63e3      	str	r3, [r4, #60]	; 0x3c
 80051a8:	4620      	mov	r0, r4
 80051aa:	f005 f814 	bl	800a1d6 <HAL_PCD_DataInStageCallback>
 80051ae:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 80051b2:	2b00      	cmp	r3, #0
 80051b4:	f43f af0f 	beq.w	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 80051b8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80051ba:	2a00      	cmp	r2, #0
 80051bc:	f47f af0b 	bne.w	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 80051c0:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 80051c4:	6821      	ldr	r1, [r4, #0]
 80051c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80051ca:	f8a1 304c 	strh.w	r3, [r1, #76]	; 0x4c
 80051ce:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80051d2:	e700      	b.n	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 80051d4:	8805      	ldrh	r5, [r0, #0]
 80051d6:	b2ab      	uxth	r3, r5
 80051d8:	f415 6500 	ands.w	r5, r5, #2048	; 0x800
 80051dc:	d021      	beq.n	8005222 <HAL_PCD_IRQHandler+0x266>
 80051de:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80051e2:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 80051e6:	b29b      	uxth	r3, r3
 80051e8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80051ec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80051f0:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 80051f4:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 80051f8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80051fc:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 8005200:	f504 712c 	add.w	r1, r4, #688	; 0x2b0
 8005204:	f002 fcd8 	bl	8007bb8 <USB_ReadPMA>
 8005208:	6822      	ldr	r2, [r4, #0]
 800520a:	4620      	mov	r0, r4
 800520c:	8813      	ldrh	r3, [r2, #0]
 800520e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005212:	051b      	lsls	r3, r3, #20
 8005214:	0d1b      	lsrs	r3, r3, #20
 8005216:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800521a:	8013      	strh	r3, [r2, #0]
 800521c:	f004 ffcc 	bl	800a1b8 <HAL_PCD_SetupStageCallback>
 8005220:	e6d9      	b.n	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 8005222:	041f      	lsls	r7, r3, #16
 8005224:	f57f aed7 	bpl.w	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 8005228:	8803      	ldrh	r3, [r0, #0]
 800522a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800522e:	051b      	lsls	r3, r3, #20
 8005230:	0d1b      	lsrs	r3, r3, #20
 8005232:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005236:	8003      	strh	r3, [r0, #0]
 8005238:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 800523c:	f894 2168 	ldrb.w	r2, [r4, #360]	; 0x168
 8005240:	b29b      	uxth	r3, r3
 8005242:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005246:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800524a:	f8b3 340c 	ldrh.w	r3, [r3, #1036]	; 0x40c
 800524e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005252:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
 8005256:	b18b      	cbz	r3, 800527c <HAL_PCD_IRQHandler+0x2c0>
 8005258:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
 800525c:	b171      	cbz	r1, 800527c <HAL_PCD_IRQHandler+0x2c0>
 800525e:	f8b4 216e 	ldrh.w	r2, [r4, #366]	; 0x16e
 8005262:	f002 fca9 	bl	8007bb8 <USB_ReadPMA>
 8005266:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800526a:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
 800526e:	4629      	mov	r1, r5
 8005270:	4413      	add	r3, r2
 8005272:	4620      	mov	r0, r4
 8005274:	f8c4 317c 	str.w	r3, [r4, #380]	; 0x17c
 8005278:	f004 ffa4 	bl	800a1c4 <HAL_PCD_DataOutStageCallback>
 800527c:	6821      	ldr	r1, [r4, #0]
 800527e:	f8d4 5178 	ldr.w	r5, [r4, #376]	; 0x178
 8005282:	f8b1 3050 	ldrh.w	r3, [r1, #80]	; 0x50
 8005286:	f201 400c 	addw	r0, r1, #1036	; 0x40c
 800528a:	b29b      	uxth	r3, r3
 800528c:	b9cd      	cbnz	r5, 80052c2 <HAL_PCD_IRQHandler+0x306>
 800528e:	5ac2      	ldrh	r2, [r0, r3]
 8005290:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8005294:	0412      	lsls	r2, r2, #16
 8005296:	0c12      	lsrs	r2, r2, #16
 8005298:	52c2      	strh	r2, [r0, r3]
 800529a:	5ac2      	ldrh	r2, [r0, r3]
 800529c:	b292      	uxth	r2, r2
 800529e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80052a2:	52c2      	strh	r2, [r0, r3]
 80052a4:	880b      	ldrh	r3, [r1, #0]
 80052a6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80052aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80052ae:	041b      	lsls	r3, r3, #16
 80052b0:	0c1b      	lsrs	r3, r3, #16
 80052b2:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 80052b6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80052ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80052be:	800b      	strh	r3, [r1, #0]
 80052c0:	e689      	b.n	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 80052c2:	2d3e      	cmp	r5, #62	; 0x3e
 80052c4:	d806      	bhi.n	80052d4 <HAL_PCD_IRQHandler+0x318>
 80052c6:	086a      	lsrs	r2, r5, #1
 80052c8:	07ee      	lsls	r6, r5, #31
 80052ca:	bf48      	it	mi
 80052cc:	3201      	addmi	r2, #1
 80052ce:	0292      	lsls	r2, r2, #10
 80052d0:	b292      	uxth	r2, r2
 80052d2:	e7e6      	b.n	80052a2 <HAL_PCD_IRQHandler+0x2e6>
 80052d4:	096a      	lsrs	r2, r5, #5
 80052d6:	06ed      	lsls	r5, r5, #27
 80052d8:	bf08      	it	eq
 80052da:	f102 32ff 	addeq.w	r2, r2, #4294967295
 80052de:	ea48 2282 	orr.w	r2, r8, r2, lsl #10
 80052e2:	e7f5      	b.n	80052d0 <HAL_PCD_IRQHandler+0x314>
 80052e4:	f830 3026 	ldrh.w	r3, [r0, r6, lsl #2]
 80052e8:	0419      	lsls	r1, r3, #16
 80052ea:	b29f      	uxth	r7, r3
 80052ec:	f140 80f8 	bpl.w	80054e0 <HAL_PCD_IRQHandler+0x524>
 80052f0:	2128      	movs	r1, #40	; 0x28
 80052f2:	f830 3026 	ldrh.w	r3, [r0, r6, lsl #2]
 80052f6:	fb01 4106 	mla	r1, r1, r6, r4
 80052fa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80052fe:	051b      	lsls	r3, r3, #20
 8005300:	0d1b      	lsrs	r3, r3, #20
 8005302:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005306:	f820 3026 	strh.w	r3, [r0, r6, lsl #2]
 800530a:	f891 3174 	ldrb.w	r3, [r1, #372]	; 0x174
 800530e:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 8005312:	b9b3      	cbnz	r3, 8005342 <HAL_PCD_IRQHandler+0x386>
 8005314:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8005318:	f891 2168 	ldrb.w	r2, [r1, #360]	; 0x168
 800531c:	b29b      	uxth	r3, r3
 800531e:	3306      	adds	r3, #6
 8005320:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005324:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
 8005328:	f3c5 0509 	ubfx	r5, r5, #0, #10
 800532c:	2d00      	cmp	r5, #0
 800532e:	f000 80bb 	beq.w	80054a8 <HAL_PCD_IRQHandler+0x4ec>
 8005332:	462b      	mov	r3, r5
 8005334:	f8b1 216e 	ldrh.w	r2, [r1, #366]	; 0x16e
 8005338:	f8d1 117c 	ldr.w	r1, [r1, #380]	; 0x17c
 800533c:	f002 fc3c 	bl	8007bb8 <USB_ReadPMA>
 8005340:	e0b2      	b.n	80054a8 <HAL_PCD_IRQHandler+0x4ec>
 8005342:	f891 316b 	ldrb.w	r3, [r1, #363]	; 0x16b
 8005346:	f891 c168 	ldrb.w	ip, [r1, #360]	; 0x168
 800534a:	2b02      	cmp	r3, #2
 800534c:	f040 808b 	bne.w	8005466 <HAL_PCD_IRQHandler+0x4aa>
 8005350:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8005354:	f417 4a80 	ands.w	sl, r7, #16384	; 0x4000
 8005358:	f8d1 2180 	ldr.w	r2, [r1, #384]	; 0x180
 800535c:	ea4f 0bcc 	mov.w	fp, ip, lsl #3
 8005360:	b29b      	uxth	r3, r3
 8005362:	f007 0e40 	and.w	lr, r7, #64	; 0x40
 8005366:	d040      	beq.n	80053ea <HAL_PCD_IRQHandler+0x42e>
 8005368:	449b      	add	fp, r3
 800536a:	f10b 0b02 	add.w	fp, fp, #2
 800536e:	f835 501b 	ldrh.w	r5, [r5, fp, lsl #1]
 8005372:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8005376:	4295      	cmp	r5, r2
 8005378:	d913      	bls.n	80053a2 <HAL_PCD_IRQHandler+0x3e6>
 800537a:	2300      	movs	r3, #0
 800537c:	f8c1 3180 	str.w	r3, [r1, #384]	; 0x180
 8005380:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8005384:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005388:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800538c:	041b      	lsls	r3, r3, #16
 800538e:	0c1b      	lsrs	r3, r3, #16
 8005390:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8005394:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005398:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800539c:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 80053a0:	e004      	b.n	80053ac <HAL_PCD_IRQHandler+0x3f0>
 80053a2:	1b52      	subs	r2, r2, r5
 80053a4:	f8c1 2180 	str.w	r2, [r1, #384]	; 0x180
 80053a8:	2a00      	cmp	r2, #0
 80053aa:	d0e9      	beq.n	8005380 <HAL_PCD_IRQHandler+0x3c4>
 80053ac:	f1be 0f00 	cmp.w	lr, #0
 80053b0:	d012      	beq.n	80053d8 <HAL_PCD_IRQHandler+0x41c>
 80053b2:	2328      	movs	r3, #40	; 0x28
 80053b4:	fb03 4306 	mla	r3, r3, r6, r4
 80053b8:	f893 2168 	ldrb.w	r2, [r3, #360]	; 0x168
 80053bc:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80053c0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80053c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80053c8:	041b      	lsls	r3, r3, #16
 80053ca:	0c1b      	lsrs	r3, r3, #16
 80053cc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80053d0:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80053d4:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80053d8:	2d00      	cmp	r5, #0
 80053da:	d065      	beq.n	80054a8 <HAL_PCD_IRQHandler+0x4ec>
 80053dc:	2128      	movs	r1, #40	; 0x28
 80053de:	fb01 4106 	mla	r1, r1, r6, r4
 80053e2:	462b      	mov	r3, r5
 80053e4:	f8b1 2170 	ldrh.w	r2, [r1, #368]	; 0x170
 80053e8:	e7a6      	b.n	8005338 <HAL_PCD_IRQHandler+0x37c>
 80053ea:	445b      	add	r3, fp
 80053ec:	3306      	adds	r3, #6
 80053ee:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
 80053f2:	f3c5 0509 	ubfx	r5, r5, #0, #10
 80053f6:	4295      	cmp	r5, r2
 80053f8:	d912      	bls.n	8005420 <HAL_PCD_IRQHandler+0x464>
 80053fa:	f8c1 a180 	str.w	sl, [r1, #384]	; 0x180
 80053fe:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 8005402:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005406:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800540a:	041b      	lsls	r3, r3, #16
 800540c:	0c1b      	lsrs	r3, r3, #16
 800540e:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8005412:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005416:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800541a:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 800541e:	e004      	b.n	800542a <HAL_PCD_IRQHandler+0x46e>
 8005420:	1b52      	subs	r2, r2, r5
 8005422:	f8c1 2180 	str.w	r2, [r1, #384]	; 0x180
 8005426:	2a00      	cmp	r2, #0
 8005428:	d0e9      	beq.n	80053fe <HAL_PCD_IRQHandler+0x442>
 800542a:	f1be 0f00 	cmp.w	lr, #0
 800542e:	d112      	bne.n	8005456 <HAL_PCD_IRQHandler+0x49a>
 8005430:	2328      	movs	r3, #40	; 0x28
 8005432:	fb03 4306 	mla	r3, r3, r6, r4
 8005436:	f893 2168 	ldrb.w	r2, [r3, #360]	; 0x168
 800543a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800543e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005442:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005446:	041b      	lsls	r3, r3, #16
 8005448:	0c1b      	lsrs	r3, r3, #16
 800544a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800544e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8005452:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8005456:	b33d      	cbz	r5, 80054a8 <HAL_PCD_IRQHandler+0x4ec>
 8005458:	2128      	movs	r1, #40	; 0x28
 800545a:	fb01 4106 	mla	r1, r1, r6, r4
 800545e:	462b      	mov	r3, r5
 8005460:	f8b1 2172 	ldrh.w	r2, [r1, #370]	; 0x172
 8005464:	e768      	b.n	8005338 <HAL_PCD_IRQHandler+0x37c>
 8005466:	f830 302c 	ldrh.w	r3, [r0, ip, lsl #2]
 800546a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800546e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005472:	041b      	lsls	r3, r3, #16
 8005474:	0c1b      	lsrs	r3, r3, #16
 8005476:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800547a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800547e:	f820 302c 	strh.w	r3, [r0, ip, lsl #2]
 8005482:	f891 3168 	ldrb.w	r3, [r1, #360]	; 0x168
 8005486:	f830 2023 	ldrh.w	r2, [r0, r3, lsl #2]
 800548a:	00db      	lsls	r3, r3, #3
 800548c:	f412 4f80 	tst.w	r2, #16384	; 0x4000
 8005490:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 8005494:	b292      	uxth	r2, r2
 8005496:	d056      	beq.n	8005546 <HAL_PCD_IRQHandler+0x58a>
 8005498:	3202      	adds	r2, #2
 800549a:	4413      	add	r3, r2
 800549c:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
 80054a0:	f3c5 0509 	ubfx	r5, r5, #0, #10
 80054a4:	2d00      	cmp	r5, #0
 80054a6:	d19c      	bne.n	80053e2 <HAL_PCD_IRQHandler+0x426>
 80054a8:	2128      	movs	r1, #40	; 0x28
 80054aa:	4371      	muls	r1, r6
 80054ac:	1863      	adds	r3, r4, r1
 80054ae:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 80054b2:	442a      	add	r2, r5
 80054b4:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 80054b8:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 80054bc:	442a      	add	r2, r5
 80054be:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
 80054c2:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 80054c6:	b11a      	cbz	r2, 80054d0 <HAL_PCD_IRQHandler+0x514>
 80054c8:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 80054cc:	429d      	cmp	r5, r3
 80054ce:	d243      	bcs.n	8005558 <HAL_PCD_IRQHandler+0x59c>
 80054d0:	2328      	movs	r3, #40	; 0x28
 80054d2:	fb03 4306 	mla	r3, r3, r6, r4
 80054d6:	4620      	mov	r0, r4
 80054d8:	f893 1168 	ldrb.w	r1, [r3, #360]	; 0x168
 80054dc:	f004 fe72 	bl	800a1c4 <HAL_PCD_DataOutStageCallback>
 80054e0:	063a      	lsls	r2, r7, #24
 80054e2:	f57f ad78 	bpl.w	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 80054e6:	2528      	movs	r5, #40	; 0x28
 80054e8:	6820      	ldr	r0, [r4, #0]
 80054ea:	fb05 4506 	mla	r5, r5, r6, r4
 80054ee:	f830 3026 	ldrh.w	r3, [r0, r6, lsl #2]
 80054f2:	f500 6e80 	add.w	lr, r0, #1024	; 0x400
 80054f6:	b29b      	uxth	r3, r3
 80054f8:	ea03 0309 	and.w	r3, r3, r9
 80054fc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005500:	f820 3026 	strh.w	r3, [r0, r6, lsl #2]
 8005504:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
 8005508:	f895 1028 	ldrb.w	r1, [r5, #40]	; 0x28
 800550c:	2b02      	cmp	r3, #2
 800550e:	d101      	bne.n	8005514 <HAL_PCD_IRQHandler+0x558>
 8005510:	05fb      	lsls	r3, r7, #23
 8005512:	d439      	bmi.n	8005588 <HAL_PCD_IRQHandler+0x5cc>
 8005514:	2728      	movs	r7, #40	; 0x28
 8005516:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 800551a:	fb07 4306 	mla	r3, r7, r6, r4
 800551e:	b292      	uxth	r2, r2
 8005520:	3202      	adds	r2, #2
 8005522:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8005526:	f83e e011 	ldrh.w	lr, [lr, r1, lsl #1]
 800552a:	f8d3 c040 	ldr.w	ip, [r3, #64]	; 0x40
 800552e:	f3ce 0e09 	ubfx	lr, lr, #0, #10
 8005532:	45f4      	cmp	ip, lr
 8005534:	d817      	bhi.n	8005566 <HAL_PCD_IRQHandler+0x5aa>
 8005536:	2200      	movs	r2, #0
 8005538:	641a      	str	r2, [r3, #64]	; 0x40
 800553a:	4620      	mov	r0, r4
 800553c:	f895 1028 	ldrb.w	r1, [r5, #40]	; 0x28
 8005540:	f004 fe49 	bl	800a1d6 <HAL_PCD_DataInStageCallback>
 8005544:	e547      	b.n	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 8005546:	3206      	adds	r2, #6
 8005548:	4413      	add	r3, r2
 800554a:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
 800554e:	f3c5 0509 	ubfx	r5, r5, #0, #10
 8005552:	2d00      	cmp	r5, #0
 8005554:	d0a8      	beq.n	80054a8 <HAL_PCD_IRQHandler+0x4ec>
 8005556:	e782      	b.n	800545e <HAL_PCD_IRQHandler+0x4a2>
 8005558:	f501 71b4 	add.w	r1, r1, #360	; 0x168
 800555c:	6820      	ldr	r0, [r4, #0]
 800555e:	4421      	add	r1, r4
 8005560:	f002 f84c 	bl	80075fc <USB_EPStartXfer>
 8005564:	e7bc      	b.n	80054e0 <HAL_PCD_IRQHandler+0x524>
 8005566:	ebac 020e 	sub.w	r2, ip, lr
 800556a:	641a      	str	r2, [r3, #64]	; 0x40
 800556c:	2a00      	cmp	r2, #0
 800556e:	d0e4      	beq.n	800553a <HAL_PCD_IRQHandler+0x57e>
 8005570:	fb06 7707 	mla	r7, r6, r7, r7
 8005574:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8005576:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005578:	4471      	add	r1, lr
 800557a:	4472      	add	r2, lr
 800557c:	63d9      	str	r1, [r3, #60]	; 0x3c
 800557e:	645a      	str	r2, [r3, #68]	; 0x44
 8005580:	19e1      	adds	r1, r4, r7
 8005582:	f002 f83b 	bl	80075fc <USB_EPStartXfer>
 8005586:	e526      	b.n	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 8005588:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 800558c:	ea4f 0ac1 	mov.w	sl, r1, lsl #3
 8005590:	b292      	uxth	r2, r2
 8005592:	f017 0c40 	ands.w	ip, r7, #64	; 0x40
 8005596:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8005598:	4452      	add	r2, sl
 800559a:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800559e:	f000 80a2 	beq.w	80056e6 <HAL_PCD_IRQHandler+0x72a>
 80055a2:	3202      	adds	r2, #2
 80055a4:	f83e c012 	ldrh.w	ip, [lr, r2, lsl #1]
 80055a8:	2228      	movs	r2, #40	; 0x28
 80055aa:	f3cc 0c09 	ubfx	ip, ip, #0, #10
 80055ae:	459c      	cmp	ip, r3
 80055b0:	bf28      	it	cs
 80055b2:	2300      	movcs	r3, #0
 80055b4:	fb02 4206 	mla	r2, r2, r6, r4
 80055b8:	bf38      	it	cc
 80055ba:	eba3 030c 	subcc.w	r3, r3, ip
 80055be:	6413      	str	r3, [r2, #64]	; 0x40
 80055c0:	b2bf      	uxth	r7, r7
 80055c2:	b9bb      	cbnz	r3, 80055f4 <HAL_PCD_IRQHandler+0x638>
 80055c4:	4620      	mov	r0, r4
 80055c6:	f004 fe06 	bl	800a1d6 <HAL_PCD_DataInStageCallback>
 80055ca:	2f00      	cmp	r7, #0
 80055cc:	f000 80a3 	beq.w	8005716 <HAL_PCD_IRQHandler+0x75a>
 80055d0:	f895 1028 	ldrb.w	r1, [r5, #40]	; 0x28
 80055d4:	6822      	ldr	r2, [r4, #0]
 80055d6:	f832 3021 	ldrh.w	r3, [r2, r1, lsl #2]
 80055da:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80055de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80055e2:	041b      	lsls	r3, r3, #16
 80055e4:	0c1b      	lsrs	r3, r3, #16
 80055e6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80055ea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80055ee:	f822 3021 	strh.w	r3, [r2, r1, lsl #2]
 80055f2:	e090      	b.n	8005716 <HAL_PCD_IRQHandler+0x75a>
 80055f4:	b16f      	cbz	r7, 8005612 <HAL_PCD_IRQHandler+0x656>
 80055f6:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 80055fa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80055fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005602:	041b      	lsls	r3, r3, #16
 8005604:	0c1b      	lsrs	r3, r3, #16
 8005606:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800560a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800560e:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8005612:	2328      	movs	r3, #40	; 0x28
 8005614:	fb03 4306 	mla	r3, r3, r6, r4
 8005618:	f893 204c 	ldrb.w	r2, [r3, #76]	; 0x4c
 800561c:	2a01      	cmp	r2, #1
 800561e:	d17a      	bne.n	8005716 <HAL_PCD_IRQHandler+0x75a>
 8005620:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005622:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8005624:	4462      	add	r2, ip
 8005626:	6c9f      	ldr	r7, [r3, #72]	; 0x48
 8005628:	645a      	str	r2, [r3, #68]	; 0x44
 800562a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800562c:	4461      	add	r1, ip
 800562e:	4297      	cmp	r7, r2
 8005630:	63d9      	str	r1, [r3, #60]	; 0x3c
 8005632:	d327      	bcc.n	8005684 <HAL_PCD_IRQHandler+0x6c8>
 8005634:	1abf      	subs	r7, r7, r2
 8005636:	649f      	str	r7, [r3, #72]	; 0x48
 8005638:	f895 7029 	ldrb.w	r7, [r5, #41]	; 0x29
 800563c:	b293      	uxth	r3, r2
 800563e:	2f00      	cmp	r7, #0
 8005640:	d143      	bne.n	80056ca <HAL_PCD_IRQHandler+0x70e>
 8005642:	f8b0 7050 	ldrh.w	r7, [r0, #80]	; 0x50
 8005646:	f895 c028 	ldrb.w	ip, [r5, #40]	; 0x28
 800564a:	b2bf      	uxth	r7, r7
 800564c:	f200 4e04 	addw	lr, r0, #1028	; 0x404
 8005650:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8005654:	4477      	add	r7, lr
 8005656:	bb02      	cbnz	r2, 800569a <HAL_PCD_IRQHandler+0x6de>
 8005658:	f83c 2007 	ldrh.w	r2, [ip, r7]
 800565c:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8005660:	0412      	lsls	r2, r2, #16
 8005662:	0c12      	lsrs	r2, r2, #16
 8005664:	f82c 2007 	strh.w	r2, [ip, r7]
 8005668:	f83c 2007 	ldrh.w	r2, [ip, r7]
 800566c:	b292      	uxth	r2, r2
 800566e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005672:	f82c 2007 	strh.w	r2, [ip, r7]
 8005676:	2228      	movs	r2, #40	; 0x28
 8005678:	fb02 4606 	mla	r6, r2, r6, r4
 800567c:	8e32      	ldrh	r2, [r6, #48]	; 0x30
 800567e:	f001 ffad 	bl	80075dc <USB_WritePMA>
 8005682:	e048      	b.n	8005716 <HAL_PCD_IRQHandler+0x75a>
 8005684:	b91f      	cbnz	r7, 800568e <HAL_PCD_IRQHandler+0x6d2>
 8005686:	4662      	mov	r2, ip
 8005688:	f883 704c 	strb.w	r7, [r3, #76]	; 0x4c
 800568c:	e7d4      	b.n	8005638 <HAL_PCD_IRQHandler+0x67c>
 800568e:	2200      	movs	r2, #0
 8005690:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8005694:	649a      	str	r2, [r3, #72]	; 0x48
 8005696:	463a      	mov	r2, r7
 8005698:	e7ce      	b.n	8005638 <HAL_PCD_IRQHandler+0x67c>
 800569a:	2a3e      	cmp	r2, #62	; 0x3e
 800569c:	d80c      	bhi.n	80056b8 <HAL_PCD_IRQHandler+0x6fc>
 800569e:	ea4f 0e52 	mov.w	lr, r2, lsr #1
 80056a2:	07d2      	lsls	r2, r2, #31
 80056a4:	bf48      	it	mi
 80056a6:	f10e 0e01 	addmi.w	lr, lr, #1
 80056aa:	ea4f 2e8e 	mov.w	lr, lr, lsl #10
 80056ae:	fa1f fe8e 	uxth.w	lr, lr
 80056b2:	f82c e007 	strh.w	lr, [ip, r7]
 80056b6:	e7de      	b.n	8005676 <HAL_PCD_IRQHandler+0x6ba>
 80056b8:	ea4f 1e52 	mov.w	lr, r2, lsr #5
 80056bc:	06d2      	lsls	r2, r2, #27
 80056be:	bf08      	it	eq
 80056c0:	f10e 3eff 	addeq.w	lr, lr, #4294967295
 80056c4:	ea48 2e8e 	orr.w	lr, r8, lr, lsl #10
 80056c8:	e7f1      	b.n	80056ae <HAL_PCD_IRQHandler+0x6f2>
 80056ca:	2f01      	cmp	r7, #1
 80056cc:	d1d3      	bne.n	8005676 <HAL_PCD_IRQHandler+0x6ba>
 80056ce:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80056d2:	f895 7028 	ldrb.w	r7, [r5, #40]	; 0x28
 80056d6:	fa1f fc82 	uxth.w	ip, r2
 80056da:	f200 4204 	addw	r2, r0, #1028	; 0x404
 80056de:	013f      	lsls	r7, r7, #4
 80056e0:	4462      	add	r2, ip
 80056e2:	52bb      	strh	r3, [r7, r2]
 80056e4:	e7c7      	b.n	8005676 <HAL_PCD_IRQHandler+0x6ba>
 80056e6:	3206      	adds	r2, #6
 80056e8:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
 80056ec:	b2bf      	uxth	r7, r7
 80056ee:	f3c2 0209 	ubfx	r2, r2, #0, #10
 80056f2:	429a      	cmp	r2, r3
 80056f4:	bf88      	it	hi
 80056f6:	4663      	movhi	r3, ip
 80056f8:	f04f 0c28 	mov.w	ip, #40	; 0x28
 80056fc:	fb0c 4c06 	mla	ip, ip, r6, r4
 8005700:	bf98      	it	ls
 8005702:	1a9b      	subls	r3, r3, r2
 8005704:	f8cc 3040 	str.w	r3, [ip, #64]	; 0x40
 8005708:	b9c3      	cbnz	r3, 800573c <HAL_PCD_IRQHandler+0x780>
 800570a:	4620      	mov	r0, r4
 800570c:	f004 fd63 	bl	800a1d6 <HAL_PCD_DataInStageCallback>
 8005710:	2f00      	cmp	r7, #0
 8005712:	f43f af5d 	beq.w	80055d0 <HAL_PCD_IRQHandler+0x614>
 8005716:	f895 1028 	ldrb.w	r1, [r5, #40]	; 0x28
 800571a:	6822      	ldr	r2, [r4, #0]
 800571c:	f832 3021 	ldrh.w	r3, [r2, r1, lsl #2]
 8005720:	b29b      	uxth	r3, r3
 8005722:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005726:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800572a:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 800572e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005732:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005736:	f822 3021 	strh.w	r3, [r2, r1, lsl #2]
 800573a:	e44c      	b.n	8004fd6 <HAL_PCD_IRQHandler+0x1a>
 800573c:	b96f      	cbnz	r7, 800575a <HAL_PCD_IRQHandler+0x79e>
 800573e:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 8005742:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005746:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800574a:	041b      	lsls	r3, r3, #16
 800574c:	0c1b      	lsrs	r3, r3, #16
 800574e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005752:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005756:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 800575a:	2328      	movs	r3, #40	; 0x28
 800575c:	fb03 4306 	mla	r3, r3, r6, r4
 8005760:	f893 104c 	ldrb.w	r1, [r3, #76]	; 0x4c
 8005764:	2901      	cmp	r1, #1
 8005766:	d1d6      	bne.n	8005716 <HAL_PCD_IRQHandler+0x75a>
 8005768:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800576a:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800576c:	4417      	add	r7, r2
 800576e:	f8d3 c048 	ldr.w	ip, [r3, #72]	; 0x48
 8005772:	645f      	str	r7, [r3, #68]	; 0x44
 8005774:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 8005776:	4411      	add	r1, r2
 8005778:	45bc      	cmp	ip, r7
 800577a:	63d9      	str	r1, [r3, #60]	; 0x3c
 800577c:	d326      	bcc.n	80057cc <HAL_PCD_IRQHandler+0x810>
 800577e:	ebac 0207 	sub.w	r2, ip, r7
 8005782:	649a      	str	r2, [r3, #72]	; 0x48
 8005784:	f895 2029 	ldrb.w	r2, [r5, #41]	; 0x29
 8005788:	b2bb      	uxth	r3, r7
 800578a:	2a00      	cmp	r2, #0
 800578c:	d143      	bne.n	8005816 <HAL_PCD_IRQHandler+0x85a>
 800578e:	f8b0 c050 	ldrh.w	ip, [r0, #80]	; 0x50
 8005792:	fa1f f28c 	uxth.w	r2, ip
 8005796:	f200 4c0c 	addw	ip, r0, #1036	; 0x40c
 800579a:	4494      	add	ip, r2
 800579c:	f895 2028 	ldrb.w	r2, [r5, #40]	; 0x28
 80057a0:	0112      	lsls	r2, r2, #4
 80057a2:	bb07      	cbnz	r7, 80057e6 <HAL_PCD_IRQHandler+0x82a>
 80057a4:	f83c 7002 	ldrh.w	r7, [ip, r2]
 80057a8:	f427 47f8 	bic.w	r7, r7, #31744	; 0x7c00
 80057ac:	043f      	lsls	r7, r7, #16
 80057ae:	0c3f      	lsrs	r7, r7, #16
 80057b0:	f82c 7002 	strh.w	r7, [ip, r2]
 80057b4:	f83c 7002 	ldrh.w	r7, [ip, r2]
 80057b8:	b2bf      	uxth	r7, r7
 80057ba:	f447 4700 	orr.w	r7, r7, #32768	; 0x8000
 80057be:	f82c 7002 	strh.w	r7, [ip, r2]
 80057c2:	2228      	movs	r2, #40	; 0x28
 80057c4:	fb02 4606 	mla	r6, r2, r6, r4
 80057c8:	8e72      	ldrh	r2, [r6, #50]	; 0x32
 80057ca:	e758      	b.n	800567e <HAL_PCD_IRQHandler+0x6c2>
 80057cc:	f1bc 0f00 	cmp.w	ip, #0
 80057d0:	d103      	bne.n	80057da <HAL_PCD_IRQHandler+0x81e>
 80057d2:	4617      	mov	r7, r2
 80057d4:	f883 c04c 	strb.w	ip, [r3, #76]	; 0x4c
 80057d8:	e7d4      	b.n	8005784 <HAL_PCD_IRQHandler+0x7c8>
 80057da:	2200      	movs	r2, #0
 80057dc:	4667      	mov	r7, ip
 80057de:	649a      	str	r2, [r3, #72]	; 0x48
 80057e0:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 80057e4:	e7ce      	b.n	8005784 <HAL_PCD_IRQHandler+0x7c8>
 80057e6:	2f3e      	cmp	r7, #62	; 0x3e
 80057e8:	d80c      	bhi.n	8005804 <HAL_PCD_IRQHandler+0x848>
 80057ea:	ea4f 0e57 	mov.w	lr, r7, lsr #1
 80057ee:	07ff      	lsls	r7, r7, #31
 80057f0:	bf48      	it	mi
 80057f2:	f10e 0e01 	addmi.w	lr, lr, #1
 80057f6:	ea4f 2e8e 	mov.w	lr, lr, lsl #10
 80057fa:	fa1f fe8e 	uxth.w	lr, lr
 80057fe:	f82c e002 	strh.w	lr, [ip, r2]
 8005802:	e7de      	b.n	80057c2 <HAL_PCD_IRQHandler+0x806>
 8005804:	ea4f 1e57 	mov.w	lr, r7, lsr #5
 8005808:	06ff      	lsls	r7, r7, #27
 800580a:	bf08      	it	eq
 800580c:	f10e 3eff 	addeq.w	lr, lr, #4294967295
 8005810:	ea48 2e8e 	orr.w	lr, r8, lr, lsl #10
 8005814:	e7f1      	b.n	80057fa <HAL_PCD_IRQHandler+0x83e>
 8005816:	2a01      	cmp	r2, #1
 8005818:	d1d3      	bne.n	80057c2 <HAL_PCD_IRQHandler+0x806>
 800581a:	f8b0 7050 	ldrh.w	r7, [r0, #80]	; 0x50
 800581e:	b2ba      	uxth	r2, r7
 8005820:	f200 470c 	addw	r7, r0, #1036	; 0x40c
 8005824:	4417      	add	r7, r2
 8005826:	f895 2028 	ldrb.w	r2, [r5, #40]	; 0x28
 800582a:	0112      	lsls	r2, r2, #4
 800582c:	52bb      	strh	r3, [r7, r2]
 800582e:	e7c8      	b.n	80057c2 <HAL_PCD_IRQHandler+0x806>
 8005830:	ffff8f0f 	.word	0xffff8f0f
 8005834:	ffff8000 	.word	0xffff8000

08005838 <HAL_PCD_EP_Open>:
 8005838:	f011 0f80 	tst.w	r1, #128	; 0x80
 800583c:	b570      	push	{r4, r5, r6, lr}
 800583e:	4605      	mov	r5, r0
 8005840:	f001 0007 	and.w	r0, r1, #7
 8005844:	f04f 0128 	mov.w	r1, #40	; 0x28
 8005848:	d01c      	beq.n	8005884 <HAL_PCD_EP_Open+0x4c>
 800584a:	2401      	movs	r4, #1
 800584c:	fb00 1101 	mla	r1, r0, r1, r1
 8005850:	4429      	add	r1, r5
 8005852:	704c      	strb	r4, [r1, #1]
 8005854:	610a      	str	r2, [r1, #16]
 8005856:	784a      	ldrb	r2, [r1, #1]
 8005858:	7008      	strb	r0, [r1, #0]
 800585a:	70cb      	strb	r3, [r1, #3]
 800585c:	b102      	cbz	r2, 8005860 <HAL_PCD_EP_Open+0x28>
 800585e:	81c8      	strh	r0, [r1, #14]
 8005860:	2b02      	cmp	r3, #2
 8005862:	bf04      	itt	eq
 8005864:	2300      	moveq	r3, #0
 8005866:	710b      	strbeq	r3, [r1, #4]
 8005868:	f895 32a8 	ldrb.w	r3, [r5, #680]	; 0x2a8
 800586c:	2b01      	cmp	r3, #1
 800586e:	d013      	beq.n	8005898 <HAL_PCD_EP_Open+0x60>
 8005870:	2301      	movs	r3, #1
 8005872:	6828      	ldr	r0, [r5, #0]
 8005874:	f885 32a8 	strb.w	r3, [r5, #680]	; 0x2a8
 8005878:	f001 fbfe 	bl	8007078 <USB_ActivateEndpoint>
 800587c:	2000      	movs	r0, #0
 800587e:	f885 02a8 	strb.w	r0, [r5, #680]	; 0x2a8
 8005882:	bd70      	pop	{r4, r5, r6, pc}
 8005884:	2600      	movs	r6, #0
 8005886:	fb01 f400 	mul.w	r4, r1, r0
 800588a:	f504 71b4 	add.w	r1, r4, #360	; 0x168
 800588e:	442c      	add	r4, r5
 8005890:	4429      	add	r1, r5
 8005892:	f884 6169 	strb.w	r6, [r4, #361]	; 0x169
 8005896:	e7dd      	b.n	8005854 <HAL_PCD_EP_Open+0x1c>
 8005898:	2002      	movs	r0, #2
 800589a:	e7f2      	b.n	8005882 <HAL_PCD_EP_Open+0x4a>

0800589c <HAL_PCD_EP_Close>:
 800589c:	f011 0f80 	tst.w	r1, #128	; 0x80
 80058a0:	b510      	push	{r4, lr}
 80058a2:	f001 0207 	and.w	r2, r1, #7
 80058a6:	4604      	mov	r4, r0
 80058a8:	f04f 0128 	mov.w	r1, #40	; 0x28
 80058ac:	d013      	beq.n	80058d6 <HAL_PCD_EP_Close+0x3a>
 80058ae:	2301      	movs	r3, #1
 80058b0:	fb02 1101 	mla	r1, r2, r1, r1
 80058b4:	4401      	add	r1, r0
 80058b6:	704b      	strb	r3, [r1, #1]
 80058b8:	700a      	strb	r2, [r1, #0]
 80058ba:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80058be:	2b01      	cmp	r3, #1
 80058c0:	d013      	beq.n	80058ea <HAL_PCD_EP_Close+0x4e>
 80058c2:	2301      	movs	r3, #1
 80058c4:	6820      	ldr	r0, [r4, #0]
 80058c6:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 80058ca:	f001 fd2d 	bl	8007328 <USB_DeactivateEndpoint>
 80058ce:	2000      	movs	r0, #0
 80058d0:	f884 02a8 	strb.w	r0, [r4, #680]	; 0x2a8
 80058d4:	bd10      	pop	{r4, pc}
 80058d6:	fb01 f302 	mul.w	r3, r1, r2
 80058da:	f503 71b4 	add.w	r1, r3, #360	; 0x168
 80058de:	4401      	add	r1, r0
 80058e0:	4403      	add	r3, r0
 80058e2:	2000      	movs	r0, #0
 80058e4:	f883 0169 	strb.w	r0, [r3, #361]	; 0x169
 80058e8:	e7e6      	b.n	80058b8 <HAL_PCD_EP_Close+0x1c>
 80058ea:	2002      	movs	r0, #2
 80058ec:	e7f2      	b.n	80058d4 <HAL_PCD_EP_Close+0x38>

080058ee <HAL_PCD_EP_Receive>:
 80058ee:	b570      	push	{r4, r5, r6, lr}
 80058f0:	2428      	movs	r4, #40	; 0x28
 80058f2:	2600      	movs	r6, #0
 80058f4:	f001 0107 	and.w	r1, r1, #7
 80058f8:	434c      	muls	r4, r1
 80058fa:	1905      	adds	r5, r0, r4
 80058fc:	f885 1168 	strb.w	r1, [r5, #360]	; 0x168
 8005900:	f504 71b4 	add.w	r1, r4, #360	; 0x168
 8005904:	4401      	add	r1, r0
 8005906:	e9c5 235f 	strd	r2, r3, [r5, #380]	; 0x17c
 800590a:	f8c5 6184 	str.w	r6, [r5, #388]	; 0x184
 800590e:	f885 6169 	strb.w	r6, [r5, #361]	; 0x169
 8005912:	6800      	ldr	r0, [r0, #0]
 8005914:	f001 fe72 	bl	80075fc <USB_EPStartXfer>
 8005918:	4630      	mov	r0, r6
 800591a:	bd70      	pop	{r4, r5, r6, pc}

0800591c <HAL_PCD_EP_GetRxCount>:
 800591c:	2328      	movs	r3, #40	; 0x28
 800591e:	f001 0107 	and.w	r1, r1, #7
 8005922:	fb03 0101 	mla	r1, r3, r1, r0
 8005926:	f8d1 0184 	ldr.w	r0, [r1, #388]	; 0x184
 800592a:	4770      	bx	lr

0800592c <HAL_PCD_EP_Transmit>:
 800592c:	b570      	push	{r4, r5, r6, lr}
 800592e:	f001 0507 	and.w	r5, r1, #7
 8005932:	2128      	movs	r1, #40	; 0x28
 8005934:	fb01 0405 	mla	r4, r1, r5, r0
 8005938:	2600      	movs	r6, #0
 800593a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 800593e:	2201      	movs	r2, #1
 8005940:	fb05 1101 	mla	r1, r5, r1, r1
 8005944:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 8005948:	4401      	add	r1, r0
 800594a:	64a3      	str	r3, [r4, #72]	; 0x48
 800594c:	6466      	str	r6, [r4, #68]	; 0x44
 800594e:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
 8005952:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 8005956:	6800      	ldr	r0, [r0, #0]
 8005958:	f001 fe50 	bl	80075fc <USB_EPStartXfer>
 800595c:	4630      	mov	r0, r6
 800595e:	bd70      	pop	{r4, r5, r6, pc}

08005960 <HAL_PCD_EP_SetStall>:
 8005960:	b538      	push	{r3, r4, r5, lr}
 8005962:	6843      	ldr	r3, [r0, #4]
 8005964:	f001 0507 	and.w	r5, r1, #7
 8005968:	429d      	cmp	r5, r3
 800596a:	4604      	mov	r4, r0
 800596c:	d828      	bhi.n	80059c0 <HAL_PCD_EP_SetStall+0x60>
 800596e:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005972:	f04f 0328 	mov.w	r3, #40	; 0x28
 8005976:	d01a      	beq.n	80059ae <HAL_PCD_EP_SetStall+0x4e>
 8005978:	fb05 3303 	mla	r3, r5, r3, r3
 800597c:	18c1      	adds	r1, r0, r3
 800597e:	2301      	movs	r3, #1
 8005980:	704b      	strb	r3, [r1, #1]
 8005982:	2301      	movs	r3, #1
 8005984:	700d      	strb	r5, [r1, #0]
 8005986:	708b      	strb	r3, [r1, #2]
 8005988:	f894 22a8 	ldrb.w	r2, [r4, #680]	; 0x2a8
 800598c:	429a      	cmp	r2, r3
 800598e:	d019      	beq.n	80059c4 <HAL_PCD_EP_SetStall+0x64>
 8005990:	6820      	ldr	r0, [r4, #0]
 8005992:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8005996:	f001 fda6 	bl	80074e6 <USB_EPSetStall>
 800599a:	b925      	cbnz	r5, 80059a6 <HAL_PCD_EP_SetStall+0x46>
 800599c:	6820      	ldr	r0, [r4, #0]
 800599e:	f504 712c 	add.w	r1, r4, #688	; 0x2b0
 80059a2:	f001 fe19 	bl	80075d8 <USB_EP0_OutStart>
 80059a6:	2000      	movs	r0, #0
 80059a8:	f884 02a8 	strb.w	r0, [r4, #680]	; 0x2a8
 80059ac:	bd38      	pop	{r3, r4, r5, pc}
 80059ae:	2200      	movs	r2, #0
 80059b0:	434b      	muls	r3, r1
 80059b2:	f503 71b4 	add.w	r1, r3, #360	; 0x168
 80059b6:	4403      	add	r3, r0
 80059b8:	4401      	add	r1, r0
 80059ba:	f883 2169 	strb.w	r2, [r3, #361]	; 0x169
 80059be:	e7e0      	b.n	8005982 <HAL_PCD_EP_SetStall+0x22>
 80059c0:	2001      	movs	r0, #1
 80059c2:	e7f3      	b.n	80059ac <HAL_PCD_EP_SetStall+0x4c>
 80059c4:	2002      	movs	r0, #2
 80059c6:	e7f1      	b.n	80059ac <HAL_PCD_EP_SetStall+0x4c>

080059c8 <HAL_PCD_EP_ClrStall>:
 80059c8:	b538      	push	{r3, r4, r5, lr}
 80059ca:	6843      	ldr	r3, [r0, #4]
 80059cc:	f001 020f 	and.w	r2, r1, #15
 80059d0:	429a      	cmp	r2, r3
 80059d2:	4604      	mov	r4, r0
 80059d4:	d826      	bhi.n	8005a24 <HAL_PCD_EP_ClrStall+0x5c>
 80059d6:	f011 0f80 	tst.w	r1, #128	; 0x80
 80059da:	f001 0207 	and.w	r2, r1, #7
 80059de:	f04f 0128 	mov.w	r1, #40	; 0x28
 80059e2:	d015      	beq.n	8005a10 <HAL_PCD_EP_ClrStall+0x48>
 80059e4:	2301      	movs	r3, #1
 80059e6:	fb02 1101 	mla	r1, r2, r1, r1
 80059ea:	4401      	add	r1, r0
 80059ec:	704b      	strb	r3, [r1, #1]
 80059ee:	2500      	movs	r5, #0
 80059f0:	700a      	strb	r2, [r1, #0]
 80059f2:	708d      	strb	r5, [r1, #2]
 80059f4:	f894 32a8 	ldrb.w	r3, [r4, #680]	; 0x2a8
 80059f8:	2b01      	cmp	r3, #1
 80059fa:	d015      	beq.n	8005a28 <HAL_PCD_EP_ClrStall+0x60>
 80059fc:	2301      	movs	r3, #1
 80059fe:	6820      	ldr	r0, [r4, #0]
 8005a00:	f884 32a8 	strb.w	r3, [r4, #680]	; 0x2a8
 8005a04:	f001 fd8f 	bl	8007526 <USB_EPClearStall>
 8005a08:	4628      	mov	r0, r5
 8005a0a:	f884 52a8 	strb.w	r5, [r4, #680]	; 0x2a8
 8005a0e:	bd38      	pop	{r3, r4, r5, pc}
 8005a10:	fb01 f302 	mul.w	r3, r1, r2
 8005a14:	f503 71b4 	add.w	r1, r3, #360	; 0x168
 8005a18:	4401      	add	r1, r0
 8005a1a:	4403      	add	r3, r0
 8005a1c:	2000      	movs	r0, #0
 8005a1e:	f883 0169 	strb.w	r0, [r3, #361]	; 0x169
 8005a22:	e7e4      	b.n	80059ee <HAL_PCD_EP_ClrStall+0x26>
 8005a24:	2001      	movs	r0, #1
 8005a26:	e7f2      	b.n	8005a0e <HAL_PCD_EP_ClrStall+0x46>
 8005a28:	2002      	movs	r0, #2
 8005a2a:	e7f0      	b.n	8005a0e <HAL_PCD_EP_ClrStall+0x46>

08005a2c <HAL_PCDEx_PMAConfig>:
 8005a2c:	b510      	push	{r4, lr}
 8005a2e:	2428      	movs	r4, #40	; 0x28
 8005a30:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005a34:	bf1b      	ittet	ne
 8005a36:	f001 0107 	andne.w	r1, r1, #7
 8005a3a:	fb01 4104 	mlane	r1, r1, r4, r4
 8005a3e:	fb04 0001 	mlaeq	r0, r4, r1, r0
 8005a42:	1840      	addne	r0, r0, r1
 8005a44:	bf08      	it	eq
 8005a46:	f500 70b4 	addeq.w	r0, r0, #360	; 0x168
 8005a4a:	b299      	uxth	r1, r3
 8005a4c:	b91a      	cbnz	r2, 8005a56 <HAL_PCDEx_PMAConfig+0x2a>
 8005a4e:	7302      	strb	r2, [r0, #12]
 8005a50:	80c1      	strh	r1, [r0, #6]
 8005a52:	2000      	movs	r0, #0
 8005a54:	bd10      	pop	{r4, pc}
 8005a56:	2201      	movs	r2, #1
 8005a58:	6083      	str	r3, [r0, #8]
 8005a5a:	7302      	strb	r2, [r0, #12]
 8005a5c:	e7f9      	b.n	8005a52 <HAL_PCDEx_PMAConfig+0x26>
	...

08005a60 <HAL_RCC_OscConfig>:
 8005a60:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005a64:	4605      	mov	r5, r0
 8005a66:	b338      	cbz	r0, 8005ab8 <HAL_RCC_OscConfig+0x58>
 8005a68:	6803      	ldr	r3, [r0, #0]
 8005a6a:	07db      	lsls	r3, r3, #31
 8005a6c:	d410      	bmi.n	8005a90 <HAL_RCC_OscConfig+0x30>
 8005a6e:	682b      	ldr	r3, [r5, #0]
 8005a70:	079f      	lsls	r7, r3, #30
 8005a72:	d45e      	bmi.n	8005b32 <HAL_RCC_OscConfig+0xd2>
 8005a74:	682b      	ldr	r3, [r5, #0]
 8005a76:	0719      	lsls	r1, r3, #28
 8005a78:	f100 8095 	bmi.w	8005ba6 <HAL_RCC_OscConfig+0x146>
 8005a7c:	682b      	ldr	r3, [r5, #0]
 8005a7e:	075a      	lsls	r2, r3, #29
 8005a80:	f100 80bf 	bmi.w	8005c02 <HAL_RCC_OscConfig+0x1a2>
 8005a84:	69e8      	ldr	r0, [r5, #28]
 8005a86:	2800      	cmp	r0, #0
 8005a88:	f040 812c 	bne.w	8005ce4 <HAL_RCC_OscConfig+0x284>
 8005a8c:	2000      	movs	r0, #0
 8005a8e:	e029      	b.n	8005ae4 <HAL_RCC_OscConfig+0x84>
 8005a90:	4c8f      	ldr	r4, [pc, #572]	; (8005cd0 <HAL_RCC_OscConfig+0x270>)
 8005a92:	6863      	ldr	r3, [r4, #4]
 8005a94:	f003 030c 	and.w	r3, r3, #12
 8005a98:	2b04      	cmp	r3, #4
 8005a9a:	d007      	beq.n	8005aac <HAL_RCC_OscConfig+0x4c>
 8005a9c:	6863      	ldr	r3, [r4, #4]
 8005a9e:	f003 030c 	and.w	r3, r3, #12
 8005aa2:	2b08      	cmp	r3, #8
 8005aa4:	d10a      	bne.n	8005abc <HAL_RCC_OscConfig+0x5c>
 8005aa6:	6863      	ldr	r3, [r4, #4]
 8005aa8:	03de      	lsls	r6, r3, #15
 8005aaa:	d507      	bpl.n	8005abc <HAL_RCC_OscConfig+0x5c>
 8005aac:	6823      	ldr	r3, [r4, #0]
 8005aae:	039c      	lsls	r4, r3, #14
 8005ab0:	d5dd      	bpl.n	8005a6e <HAL_RCC_OscConfig+0xe>
 8005ab2:	686b      	ldr	r3, [r5, #4]
 8005ab4:	2b00      	cmp	r3, #0
 8005ab6:	d1da      	bne.n	8005a6e <HAL_RCC_OscConfig+0xe>
 8005ab8:	2001      	movs	r0, #1
 8005aba:	e013      	b.n	8005ae4 <HAL_RCC_OscConfig+0x84>
 8005abc:	686b      	ldr	r3, [r5, #4]
 8005abe:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005ac2:	d112      	bne.n	8005aea <HAL_RCC_OscConfig+0x8a>
 8005ac4:	6823      	ldr	r3, [r4, #0]
 8005ac6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005aca:	6023      	str	r3, [r4, #0]
 8005acc:	f7fd fec4 	bl	8003858 <HAL_GetTick>
 8005ad0:	4606      	mov	r6, r0
 8005ad2:	6823      	ldr	r3, [r4, #0]
 8005ad4:	0398      	lsls	r0, r3, #14
 8005ad6:	d4ca      	bmi.n	8005a6e <HAL_RCC_OscConfig+0xe>
 8005ad8:	f7fd febe 	bl	8003858 <HAL_GetTick>
 8005adc:	1b80      	subs	r0, r0, r6
 8005ade:	2864      	cmp	r0, #100	; 0x64
 8005ae0:	d9f7      	bls.n	8005ad2 <HAL_RCC_OscConfig+0x72>
 8005ae2:	2003      	movs	r0, #3
 8005ae4:	b002      	add	sp, #8
 8005ae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005aea:	b99b      	cbnz	r3, 8005b14 <HAL_RCC_OscConfig+0xb4>
 8005aec:	6823      	ldr	r3, [r4, #0]
 8005aee:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005af2:	6023      	str	r3, [r4, #0]
 8005af4:	6823      	ldr	r3, [r4, #0]
 8005af6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005afa:	6023      	str	r3, [r4, #0]
 8005afc:	f7fd feac 	bl	8003858 <HAL_GetTick>
 8005b00:	4606      	mov	r6, r0
 8005b02:	6823      	ldr	r3, [r4, #0]
 8005b04:	0399      	lsls	r1, r3, #14
 8005b06:	d5b2      	bpl.n	8005a6e <HAL_RCC_OscConfig+0xe>
 8005b08:	f7fd fea6 	bl	8003858 <HAL_GetTick>
 8005b0c:	1b80      	subs	r0, r0, r6
 8005b0e:	2864      	cmp	r0, #100	; 0x64
 8005b10:	d9f7      	bls.n	8005b02 <HAL_RCC_OscConfig+0xa2>
 8005b12:	e7e6      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005b14:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005b18:	6823      	ldr	r3, [r4, #0]
 8005b1a:	d103      	bne.n	8005b24 <HAL_RCC_OscConfig+0xc4>
 8005b1c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005b20:	6023      	str	r3, [r4, #0]
 8005b22:	e7cf      	b.n	8005ac4 <HAL_RCC_OscConfig+0x64>
 8005b24:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005b28:	6023      	str	r3, [r4, #0]
 8005b2a:	6823      	ldr	r3, [r4, #0]
 8005b2c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005b30:	e7cb      	b.n	8005aca <HAL_RCC_OscConfig+0x6a>
 8005b32:	4c67      	ldr	r4, [pc, #412]	; (8005cd0 <HAL_RCC_OscConfig+0x270>)
 8005b34:	6863      	ldr	r3, [r4, #4]
 8005b36:	f013 0f0c 	tst.w	r3, #12
 8005b3a:	d007      	beq.n	8005b4c <HAL_RCC_OscConfig+0xec>
 8005b3c:	6863      	ldr	r3, [r4, #4]
 8005b3e:	f003 030c 	and.w	r3, r3, #12
 8005b42:	2b08      	cmp	r3, #8
 8005b44:	d110      	bne.n	8005b68 <HAL_RCC_OscConfig+0x108>
 8005b46:	6863      	ldr	r3, [r4, #4]
 8005b48:	03da      	lsls	r2, r3, #15
 8005b4a:	d40d      	bmi.n	8005b68 <HAL_RCC_OscConfig+0x108>
 8005b4c:	6823      	ldr	r3, [r4, #0]
 8005b4e:	079b      	lsls	r3, r3, #30
 8005b50:	d502      	bpl.n	8005b58 <HAL_RCC_OscConfig+0xf8>
 8005b52:	692b      	ldr	r3, [r5, #16]
 8005b54:	2b01      	cmp	r3, #1
 8005b56:	d1af      	bne.n	8005ab8 <HAL_RCC_OscConfig+0x58>
 8005b58:	6823      	ldr	r3, [r4, #0]
 8005b5a:	696a      	ldr	r2, [r5, #20]
 8005b5c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8005b60:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005b64:	6023      	str	r3, [r4, #0]
 8005b66:	e785      	b.n	8005a74 <HAL_RCC_OscConfig+0x14>
 8005b68:	692a      	ldr	r2, [r5, #16]
 8005b6a:	4b5a      	ldr	r3, [pc, #360]	; (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b6c:	b16a      	cbz	r2, 8005b8a <HAL_RCC_OscConfig+0x12a>
 8005b6e:	2201      	movs	r2, #1
 8005b70:	601a      	str	r2, [r3, #0]
 8005b72:	f7fd fe71 	bl	8003858 <HAL_GetTick>
 8005b76:	4606      	mov	r6, r0
 8005b78:	6823      	ldr	r3, [r4, #0]
 8005b7a:	079f      	lsls	r7, r3, #30
 8005b7c:	d4ec      	bmi.n	8005b58 <HAL_RCC_OscConfig+0xf8>
 8005b7e:	f7fd fe6b 	bl	8003858 <HAL_GetTick>
 8005b82:	1b80      	subs	r0, r0, r6
 8005b84:	2802      	cmp	r0, #2
 8005b86:	d9f7      	bls.n	8005b78 <HAL_RCC_OscConfig+0x118>
 8005b88:	e7ab      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005b8a:	601a      	str	r2, [r3, #0]
 8005b8c:	f7fd fe64 	bl	8003858 <HAL_GetTick>
 8005b90:	4606      	mov	r6, r0
 8005b92:	6823      	ldr	r3, [r4, #0]
 8005b94:	0798      	lsls	r0, r3, #30
 8005b96:	f57f af6d 	bpl.w	8005a74 <HAL_RCC_OscConfig+0x14>
 8005b9a:	f7fd fe5d 	bl	8003858 <HAL_GetTick>
 8005b9e:	1b80      	subs	r0, r0, r6
 8005ba0:	2802      	cmp	r0, #2
 8005ba2:	d9f6      	bls.n	8005b92 <HAL_RCC_OscConfig+0x132>
 8005ba4:	e79d      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005ba6:	69aa      	ldr	r2, [r5, #24]
 8005ba8:	4e49      	ldr	r6, [pc, #292]	; (8005cd0 <HAL_RCC_OscConfig+0x270>)
 8005baa:	4b4b      	ldr	r3, [pc, #300]	; (8005cd8 <HAL_RCC_OscConfig+0x278>)
 8005bac:	b1da      	cbz	r2, 8005be6 <HAL_RCC_OscConfig+0x186>
 8005bae:	2201      	movs	r2, #1
 8005bb0:	601a      	str	r2, [r3, #0]
 8005bb2:	f7fd fe51 	bl	8003858 <HAL_GetTick>
 8005bb6:	4604      	mov	r4, r0
 8005bb8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005bba:	079b      	lsls	r3, r3, #30
 8005bbc:	d50d      	bpl.n	8005bda <HAL_RCC_OscConfig+0x17a>
 8005bbe:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
 8005bc2:	4b46      	ldr	r3, [pc, #280]	; (8005cdc <HAL_RCC_OscConfig+0x27c>)
 8005bc4:	681b      	ldr	r3, [r3, #0]
 8005bc6:	fbb3 f3f2 	udiv	r3, r3, r2
 8005bca:	9301      	str	r3, [sp, #4]
 8005bcc:	bf00      	nop
 8005bce:	9b01      	ldr	r3, [sp, #4]
 8005bd0:	1e5a      	subs	r2, r3, #1
 8005bd2:	9201      	str	r2, [sp, #4]
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d1f9      	bne.n	8005bcc <HAL_RCC_OscConfig+0x16c>
 8005bd8:	e750      	b.n	8005a7c <HAL_RCC_OscConfig+0x1c>
 8005bda:	f7fd fe3d 	bl	8003858 <HAL_GetTick>
 8005bde:	1b00      	subs	r0, r0, r4
 8005be0:	2802      	cmp	r0, #2
 8005be2:	d9e9      	bls.n	8005bb8 <HAL_RCC_OscConfig+0x158>
 8005be4:	e77d      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005be6:	601a      	str	r2, [r3, #0]
 8005be8:	f7fd fe36 	bl	8003858 <HAL_GetTick>
 8005bec:	4604      	mov	r4, r0
 8005bee:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005bf0:	079f      	lsls	r7, r3, #30
 8005bf2:	f57f af43 	bpl.w	8005a7c <HAL_RCC_OscConfig+0x1c>
 8005bf6:	f7fd fe2f 	bl	8003858 <HAL_GetTick>
 8005bfa:	1b00      	subs	r0, r0, r4
 8005bfc:	2802      	cmp	r0, #2
 8005bfe:	d9f6      	bls.n	8005bee <HAL_RCC_OscConfig+0x18e>
 8005c00:	e76f      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005c02:	4c33      	ldr	r4, [pc, #204]	; (8005cd0 <HAL_RCC_OscConfig+0x270>)
 8005c04:	69e3      	ldr	r3, [r4, #28]
 8005c06:	00d8      	lsls	r0, r3, #3
 8005c08:	d424      	bmi.n	8005c54 <HAL_RCC_OscConfig+0x1f4>
 8005c0a:	2701      	movs	r7, #1
 8005c0c:	69e3      	ldr	r3, [r4, #28]
 8005c0e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005c12:	61e3      	str	r3, [r4, #28]
 8005c14:	69e3      	ldr	r3, [r4, #28]
 8005c16:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005c1a:	9300      	str	r3, [sp, #0]
 8005c1c:	9b00      	ldr	r3, [sp, #0]
 8005c1e:	4e30      	ldr	r6, [pc, #192]	; (8005ce0 <HAL_RCC_OscConfig+0x280>)
 8005c20:	6833      	ldr	r3, [r6, #0]
 8005c22:	05d9      	lsls	r1, r3, #23
 8005c24:	d518      	bpl.n	8005c58 <HAL_RCC_OscConfig+0x1f8>
 8005c26:	68eb      	ldr	r3, [r5, #12]
 8005c28:	2b01      	cmp	r3, #1
 8005c2a:	d126      	bne.n	8005c7a <HAL_RCC_OscConfig+0x21a>
 8005c2c:	6a23      	ldr	r3, [r4, #32]
 8005c2e:	f043 0301 	orr.w	r3, r3, #1
 8005c32:	6223      	str	r3, [r4, #32]
 8005c34:	f7fd fe10 	bl	8003858 <HAL_GetTick>
 8005c38:	f241 3888 	movw	r8, #5000	; 0x1388
 8005c3c:	4606      	mov	r6, r0
 8005c3e:	6a23      	ldr	r3, [r4, #32]
 8005c40:	079b      	lsls	r3, r3, #30
 8005c42:	d53f      	bpl.n	8005cc4 <HAL_RCC_OscConfig+0x264>
 8005c44:	2f00      	cmp	r7, #0
 8005c46:	f43f af1d 	beq.w	8005a84 <HAL_RCC_OscConfig+0x24>
 8005c4a:	69e3      	ldr	r3, [r4, #28]
 8005c4c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005c50:	61e3      	str	r3, [r4, #28]
 8005c52:	e717      	b.n	8005a84 <HAL_RCC_OscConfig+0x24>
 8005c54:	2700      	movs	r7, #0
 8005c56:	e7e2      	b.n	8005c1e <HAL_RCC_OscConfig+0x1be>
 8005c58:	6833      	ldr	r3, [r6, #0]
 8005c5a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005c5e:	6033      	str	r3, [r6, #0]
 8005c60:	f7fd fdfa 	bl	8003858 <HAL_GetTick>
 8005c64:	4680      	mov	r8, r0
 8005c66:	6833      	ldr	r3, [r6, #0]
 8005c68:	05da      	lsls	r2, r3, #23
 8005c6a:	d4dc      	bmi.n	8005c26 <HAL_RCC_OscConfig+0x1c6>
 8005c6c:	f7fd fdf4 	bl	8003858 <HAL_GetTick>
 8005c70:	eba0 0008 	sub.w	r0, r0, r8
 8005c74:	2864      	cmp	r0, #100	; 0x64
 8005c76:	d9f6      	bls.n	8005c66 <HAL_RCC_OscConfig+0x206>
 8005c78:	e733      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005c7a:	b9ab      	cbnz	r3, 8005ca8 <HAL_RCC_OscConfig+0x248>
 8005c7c:	6a23      	ldr	r3, [r4, #32]
 8005c7e:	f241 3888 	movw	r8, #5000	; 0x1388
 8005c82:	f023 0301 	bic.w	r3, r3, #1
 8005c86:	6223      	str	r3, [r4, #32]
 8005c88:	6a23      	ldr	r3, [r4, #32]
 8005c8a:	f023 0304 	bic.w	r3, r3, #4
 8005c8e:	6223      	str	r3, [r4, #32]
 8005c90:	f7fd fde2 	bl	8003858 <HAL_GetTick>
 8005c94:	4606      	mov	r6, r0
 8005c96:	6a23      	ldr	r3, [r4, #32]
 8005c98:	0798      	lsls	r0, r3, #30
 8005c9a:	d5d3      	bpl.n	8005c44 <HAL_RCC_OscConfig+0x1e4>
 8005c9c:	f7fd fddc 	bl	8003858 <HAL_GetTick>
 8005ca0:	1b80      	subs	r0, r0, r6
 8005ca2:	4540      	cmp	r0, r8
 8005ca4:	d9f7      	bls.n	8005c96 <HAL_RCC_OscConfig+0x236>
 8005ca6:	e71c      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005ca8:	2b05      	cmp	r3, #5
 8005caa:	6a23      	ldr	r3, [r4, #32]
 8005cac:	d103      	bne.n	8005cb6 <HAL_RCC_OscConfig+0x256>
 8005cae:	f043 0304 	orr.w	r3, r3, #4
 8005cb2:	6223      	str	r3, [r4, #32]
 8005cb4:	e7ba      	b.n	8005c2c <HAL_RCC_OscConfig+0x1cc>
 8005cb6:	f023 0301 	bic.w	r3, r3, #1
 8005cba:	6223      	str	r3, [r4, #32]
 8005cbc:	6a23      	ldr	r3, [r4, #32]
 8005cbe:	f023 0304 	bic.w	r3, r3, #4
 8005cc2:	e7b6      	b.n	8005c32 <HAL_RCC_OscConfig+0x1d2>
 8005cc4:	f7fd fdc8 	bl	8003858 <HAL_GetTick>
 8005cc8:	1b80      	subs	r0, r0, r6
 8005cca:	4540      	cmp	r0, r8
 8005ccc:	d9b7      	bls.n	8005c3e <HAL_RCC_OscConfig+0x1de>
 8005cce:	e708      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005cd0:	40021000 	.word	0x40021000
 8005cd4:	42420000 	.word	0x42420000
 8005cd8:	42420480 	.word	0x42420480
 8005cdc:	20000000 	.word	0x20000000
 8005ce0:	40007000 	.word	0x40007000
 8005ce4:	4b2a      	ldr	r3, [pc, #168]	; (8005d90 <HAL_RCC_OscConfig+0x330>)
 8005ce6:	685a      	ldr	r2, [r3, #4]
 8005ce8:	461c      	mov	r4, r3
 8005cea:	f002 020c 	and.w	r2, r2, #12
 8005cee:	2a08      	cmp	r2, #8
 8005cf0:	d03d      	beq.n	8005d6e <HAL_RCC_OscConfig+0x30e>
 8005cf2:	2300      	movs	r3, #0
 8005cf4:	4e27      	ldr	r6, [pc, #156]	; (8005d94 <HAL_RCC_OscConfig+0x334>)
 8005cf6:	2802      	cmp	r0, #2
 8005cf8:	6033      	str	r3, [r6, #0]
 8005cfa:	d12b      	bne.n	8005d54 <HAL_RCC_OscConfig+0x2f4>
 8005cfc:	f7fd fdac 	bl	8003858 <HAL_GetTick>
 8005d00:	4607      	mov	r7, r0
 8005d02:	6823      	ldr	r3, [r4, #0]
 8005d04:	0199      	lsls	r1, r3, #6
 8005d06:	d41f      	bmi.n	8005d48 <HAL_RCC_OscConfig+0x2e8>
 8005d08:	6a2b      	ldr	r3, [r5, #32]
 8005d0a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005d0e:	d105      	bne.n	8005d1c <HAL_RCC_OscConfig+0x2bc>
 8005d10:	6862      	ldr	r2, [r4, #4]
 8005d12:	68a9      	ldr	r1, [r5, #8]
 8005d14:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8005d18:	430a      	orrs	r2, r1
 8005d1a:	6062      	str	r2, [r4, #4]
 8005d1c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8005d1e:	6862      	ldr	r2, [r4, #4]
 8005d20:	430b      	orrs	r3, r1
 8005d22:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 8005d26:	4313      	orrs	r3, r2
 8005d28:	6063      	str	r3, [r4, #4]
 8005d2a:	2301      	movs	r3, #1
 8005d2c:	6033      	str	r3, [r6, #0]
 8005d2e:	f7fd fd93 	bl	8003858 <HAL_GetTick>
 8005d32:	4605      	mov	r5, r0
 8005d34:	6823      	ldr	r3, [r4, #0]
 8005d36:	019a      	lsls	r2, r3, #6
 8005d38:	f53f aea8 	bmi.w	8005a8c <HAL_RCC_OscConfig+0x2c>
 8005d3c:	f7fd fd8c 	bl	8003858 <HAL_GetTick>
 8005d40:	1b40      	subs	r0, r0, r5
 8005d42:	2802      	cmp	r0, #2
 8005d44:	d9f6      	bls.n	8005d34 <HAL_RCC_OscConfig+0x2d4>
 8005d46:	e6cc      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005d48:	f7fd fd86 	bl	8003858 <HAL_GetTick>
 8005d4c:	1bc0      	subs	r0, r0, r7
 8005d4e:	2802      	cmp	r0, #2
 8005d50:	d9d7      	bls.n	8005d02 <HAL_RCC_OscConfig+0x2a2>
 8005d52:	e6c6      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005d54:	f7fd fd80 	bl	8003858 <HAL_GetTick>
 8005d58:	4605      	mov	r5, r0
 8005d5a:	6823      	ldr	r3, [r4, #0]
 8005d5c:	019b      	lsls	r3, r3, #6
 8005d5e:	f57f ae95 	bpl.w	8005a8c <HAL_RCC_OscConfig+0x2c>
 8005d62:	f7fd fd79 	bl	8003858 <HAL_GetTick>
 8005d66:	1b40      	subs	r0, r0, r5
 8005d68:	2802      	cmp	r0, #2
 8005d6a:	d9f6      	bls.n	8005d5a <HAL_RCC_OscConfig+0x2fa>
 8005d6c:	e6b9      	b.n	8005ae2 <HAL_RCC_OscConfig+0x82>
 8005d6e:	2801      	cmp	r0, #1
 8005d70:	f43f aeb8 	beq.w	8005ae4 <HAL_RCC_OscConfig+0x84>
 8005d74:	685b      	ldr	r3, [r3, #4]
 8005d76:	6a2a      	ldr	r2, [r5, #32]
 8005d78:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
 8005d7c:	4291      	cmp	r1, r2
 8005d7e:	f47f ae9b 	bne.w	8005ab8 <HAL_RCC_OscConfig+0x58>
 8005d82:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8005d84:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8005d88:	4293      	cmp	r3, r2
 8005d8a:	f43f ae7f 	beq.w	8005a8c <HAL_RCC_OscConfig+0x2c>
 8005d8e:	e693      	b.n	8005ab8 <HAL_RCC_OscConfig+0x58>
 8005d90:	40021000 	.word	0x40021000
 8005d94:	42420060 	.word	0x42420060

08005d98 <HAL_RCC_GetSysClockFreq>:
 8005d98:	b530      	push	{r4, r5, lr}
 8005d9a:	4b18      	ldr	r3, [pc, #96]	; (8005dfc <HAL_RCC_GetSysClockFreq+0x64>)
 8005d9c:	b087      	sub	sp, #28
 8005d9e:	ac02      	add	r4, sp, #8
 8005da0:	f103 0510 	add.w	r5, r3, #16
 8005da4:	4622      	mov	r2, r4
 8005da6:	6818      	ldr	r0, [r3, #0]
 8005da8:	6859      	ldr	r1, [r3, #4]
 8005daa:	3308      	adds	r3, #8
 8005dac:	c203      	stmia	r2!, {r0, r1}
 8005dae:	42ab      	cmp	r3, r5
 8005db0:	4614      	mov	r4, r2
 8005db2:	d1f7      	bne.n	8005da4 <HAL_RCC_GetSysClockFreq+0xc>
 8005db4:	f240 2301 	movw	r3, #513	; 0x201
 8005db8:	4911      	ldr	r1, [pc, #68]	; (8005e00 <HAL_RCC_GetSysClockFreq+0x68>)
 8005dba:	f8ad 3004 	strh.w	r3, [sp, #4]
 8005dbe:	684b      	ldr	r3, [r1, #4]
 8005dc0:	f003 020c 	and.w	r2, r3, #12
 8005dc4:	2a08      	cmp	r2, #8
 8005dc6:	d117      	bne.n	8005df8 <HAL_RCC_GetSysClockFreq+0x60>
 8005dc8:	f3c3 4283 	ubfx	r2, r3, #18, #4
 8005dcc:	a806      	add	r0, sp, #24
 8005dce:	4402      	add	r2, r0
 8005dd0:	03db      	lsls	r3, r3, #15
 8005dd2:	f812 2c10 	ldrb.w	r2, [r2, #-16]
 8005dd6:	d50c      	bpl.n	8005df2 <HAL_RCC_GetSysClockFreq+0x5a>
 8005dd8:	684b      	ldr	r3, [r1, #4]
 8005dda:	480a      	ldr	r0, [pc, #40]	; (8005e04 <HAL_RCC_GetSysClockFreq+0x6c>)
 8005ddc:	f3c3 4340 	ubfx	r3, r3, #17, #1
 8005de0:	4350      	muls	r0, r2
 8005de2:	aa06      	add	r2, sp, #24
 8005de4:	4413      	add	r3, r2
 8005de6:	f813 3c14 	ldrb.w	r3, [r3, #-20]
 8005dea:	fbb0 f0f3 	udiv	r0, r0, r3
 8005dee:	b007      	add	sp, #28
 8005df0:	bd30      	pop	{r4, r5, pc}
 8005df2:	4805      	ldr	r0, [pc, #20]	; (8005e08 <HAL_RCC_GetSysClockFreq+0x70>)
 8005df4:	4350      	muls	r0, r2
 8005df6:	e7fa      	b.n	8005dee <HAL_RCC_GetSysClockFreq+0x56>
 8005df8:	4802      	ldr	r0, [pc, #8]	; (8005e04 <HAL_RCC_GetSysClockFreq+0x6c>)
 8005dfa:	e7f8      	b.n	8005dee <HAL_RCC_GetSysClockFreq+0x56>
 8005dfc:	0800ee68 	.word	0x0800ee68
 8005e00:	40021000 	.word	0x40021000
 8005e04:	007a1200 	.word	0x007a1200
 8005e08:	003d0900 	.word	0x003d0900

08005e0c <HAL_RCC_ClockConfig>:
 8005e0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e10:	460d      	mov	r5, r1
 8005e12:	4604      	mov	r4, r0
 8005e14:	b910      	cbnz	r0, 8005e1c <HAL_RCC_ClockConfig+0x10>
 8005e16:	2001      	movs	r0, #1
 8005e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e1c:	4a44      	ldr	r2, [pc, #272]	; (8005f30 <HAL_RCC_ClockConfig+0x124>)
 8005e1e:	6813      	ldr	r3, [r2, #0]
 8005e20:	f003 0307 	and.w	r3, r3, #7
 8005e24:	428b      	cmp	r3, r1
 8005e26:	d328      	bcc.n	8005e7a <HAL_RCC_ClockConfig+0x6e>
 8005e28:	6821      	ldr	r1, [r4, #0]
 8005e2a:	078e      	lsls	r6, r1, #30
 8005e2c:	d430      	bmi.n	8005e90 <HAL_RCC_ClockConfig+0x84>
 8005e2e:	07ca      	lsls	r2, r1, #31
 8005e30:	d443      	bmi.n	8005eba <HAL_RCC_ClockConfig+0xae>
 8005e32:	4a3f      	ldr	r2, [pc, #252]	; (8005f30 <HAL_RCC_ClockConfig+0x124>)
 8005e34:	6813      	ldr	r3, [r2, #0]
 8005e36:	f003 0307 	and.w	r3, r3, #7
 8005e3a:	42ab      	cmp	r3, r5
 8005e3c:	d865      	bhi.n	8005f0a <HAL_RCC_ClockConfig+0xfe>
 8005e3e:	6822      	ldr	r2, [r4, #0]
 8005e40:	4d3c      	ldr	r5, [pc, #240]	; (8005f34 <HAL_RCC_ClockConfig+0x128>)
 8005e42:	f012 0f04 	tst.w	r2, #4
 8005e46:	d16c      	bne.n	8005f22 <HAL_RCC_ClockConfig+0x116>
 8005e48:	0713      	lsls	r3, r2, #28
 8005e4a:	d506      	bpl.n	8005e5a <HAL_RCC_ClockConfig+0x4e>
 8005e4c:	686b      	ldr	r3, [r5, #4]
 8005e4e:	6922      	ldr	r2, [r4, #16]
 8005e50:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8005e54:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005e58:	606b      	str	r3, [r5, #4]
 8005e5a:	f7ff ff9d 	bl	8005d98 <HAL_RCC_GetSysClockFreq>
 8005e5e:	686b      	ldr	r3, [r5, #4]
 8005e60:	4a35      	ldr	r2, [pc, #212]	; (8005f38 <HAL_RCC_ClockConfig+0x12c>)
 8005e62:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005e66:	5cd3      	ldrb	r3, [r2, r3]
 8005e68:	40d8      	lsrs	r0, r3
 8005e6a:	4b34      	ldr	r3, [pc, #208]	; (8005f3c <HAL_RCC_ClockConfig+0x130>)
 8005e6c:	6018      	str	r0, [r3, #0]
 8005e6e:	4b34      	ldr	r3, [pc, #208]	; (8005f40 <HAL_RCC_ClockConfig+0x134>)
 8005e70:	6818      	ldr	r0, [r3, #0]
 8005e72:	f7fc fbb1 	bl	80025d8 <HAL_InitTick>
 8005e76:	2000      	movs	r0, #0
 8005e78:	e7ce      	b.n	8005e18 <HAL_RCC_ClockConfig+0xc>
 8005e7a:	6813      	ldr	r3, [r2, #0]
 8005e7c:	f023 0307 	bic.w	r3, r3, #7
 8005e80:	430b      	orrs	r3, r1
 8005e82:	6013      	str	r3, [r2, #0]
 8005e84:	6813      	ldr	r3, [r2, #0]
 8005e86:	f003 0307 	and.w	r3, r3, #7
 8005e8a:	428b      	cmp	r3, r1
 8005e8c:	d1c3      	bne.n	8005e16 <HAL_RCC_ClockConfig+0xa>
 8005e8e:	e7cb      	b.n	8005e28 <HAL_RCC_ClockConfig+0x1c>
 8005e90:	4b28      	ldr	r3, [pc, #160]	; (8005f34 <HAL_RCC_ClockConfig+0x128>)
 8005e92:	f011 0f04 	tst.w	r1, #4
 8005e96:	bf1e      	ittt	ne
 8005e98:	685a      	ldrne	r2, [r3, #4]
 8005e9a:	f442 62e0 	orrne.w	r2, r2, #1792	; 0x700
 8005e9e:	605a      	strne	r2, [r3, #4]
 8005ea0:	0708      	lsls	r0, r1, #28
 8005ea2:	bf42      	ittt	mi
 8005ea4:	685a      	ldrmi	r2, [r3, #4]
 8005ea6:	f442 5260 	orrmi.w	r2, r2, #14336	; 0x3800
 8005eaa:	605a      	strmi	r2, [r3, #4]
 8005eac:	685a      	ldr	r2, [r3, #4]
 8005eae:	68a0      	ldr	r0, [r4, #8]
 8005eb0:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005eb4:	4302      	orrs	r2, r0
 8005eb6:	605a      	str	r2, [r3, #4]
 8005eb8:	e7b9      	b.n	8005e2e <HAL_RCC_ClockConfig+0x22>
 8005eba:	6862      	ldr	r2, [r4, #4]
 8005ebc:	4e1d      	ldr	r6, [pc, #116]	; (8005f34 <HAL_RCC_ClockConfig+0x128>)
 8005ebe:	2a01      	cmp	r2, #1
 8005ec0:	6833      	ldr	r3, [r6, #0]
 8005ec2:	d11a      	bne.n	8005efa <HAL_RCC_ClockConfig+0xee>
 8005ec4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8005ec8:	d0a5      	beq.n	8005e16 <HAL_RCC_ClockConfig+0xa>
 8005eca:	6873      	ldr	r3, [r6, #4]
 8005ecc:	f241 3888 	movw	r8, #5000	; 0x1388
 8005ed0:	f023 0303 	bic.w	r3, r3, #3
 8005ed4:	4313      	orrs	r3, r2
 8005ed6:	6073      	str	r3, [r6, #4]
 8005ed8:	f7fd fcbe 	bl	8003858 <HAL_GetTick>
 8005edc:	4607      	mov	r7, r0
 8005ede:	6873      	ldr	r3, [r6, #4]
 8005ee0:	6862      	ldr	r2, [r4, #4]
 8005ee2:	f003 030c 	and.w	r3, r3, #12
 8005ee6:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005eea:	d0a2      	beq.n	8005e32 <HAL_RCC_ClockConfig+0x26>
 8005eec:	f7fd fcb4 	bl	8003858 <HAL_GetTick>
 8005ef0:	1bc0      	subs	r0, r0, r7
 8005ef2:	4540      	cmp	r0, r8
 8005ef4:	d9f3      	bls.n	8005ede <HAL_RCC_ClockConfig+0xd2>
 8005ef6:	2003      	movs	r0, #3
 8005ef8:	e78e      	b.n	8005e18 <HAL_RCC_ClockConfig+0xc>
 8005efa:	2a02      	cmp	r2, #2
 8005efc:	d102      	bne.n	8005f04 <HAL_RCC_ClockConfig+0xf8>
 8005efe:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005f02:	e7e1      	b.n	8005ec8 <HAL_RCC_ClockConfig+0xbc>
 8005f04:	f013 0f02 	tst.w	r3, #2
 8005f08:	e7de      	b.n	8005ec8 <HAL_RCC_ClockConfig+0xbc>
 8005f0a:	6813      	ldr	r3, [r2, #0]
 8005f0c:	f023 0307 	bic.w	r3, r3, #7
 8005f10:	432b      	orrs	r3, r5
 8005f12:	6013      	str	r3, [r2, #0]
 8005f14:	6813      	ldr	r3, [r2, #0]
 8005f16:	f003 0307 	and.w	r3, r3, #7
 8005f1a:	42ab      	cmp	r3, r5
 8005f1c:	f47f af7b 	bne.w	8005e16 <HAL_RCC_ClockConfig+0xa>
 8005f20:	e78d      	b.n	8005e3e <HAL_RCC_ClockConfig+0x32>
 8005f22:	686b      	ldr	r3, [r5, #4]
 8005f24:	68e1      	ldr	r1, [r4, #12]
 8005f26:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005f2a:	430b      	orrs	r3, r1
 8005f2c:	606b      	str	r3, [r5, #4]
 8005f2e:	e78b      	b.n	8005e48 <HAL_RCC_ClockConfig+0x3c>
 8005f30:	40022000 	.word	0x40022000
 8005f34:	40021000 	.word	0x40021000
 8005f38:	0800d3e8 	.word	0x0800d3e8
 8005f3c:	20000000 	.word	0x20000000
 8005f40:	20000008 	.word	0x20000008

08005f44 <HAL_RCC_GetPCLK1Freq>:
 8005f44:	4b04      	ldr	r3, [pc, #16]	; (8005f58 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005f46:	4a05      	ldr	r2, [pc, #20]	; (8005f5c <HAL_RCC_GetPCLK1Freq+0x18>)
 8005f48:	685b      	ldr	r3, [r3, #4]
 8005f4a:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8005f4e:	5cd3      	ldrb	r3, [r2, r3]
 8005f50:	4a03      	ldr	r2, [pc, #12]	; (8005f60 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005f52:	6810      	ldr	r0, [r2, #0]
 8005f54:	40d8      	lsrs	r0, r3
 8005f56:	4770      	bx	lr
 8005f58:	40021000 	.word	0x40021000
 8005f5c:	0800d3f8 	.word	0x0800d3f8
 8005f60:	20000000 	.word	0x20000000

08005f64 <HAL_RCC_GetPCLK2Freq>:
 8005f64:	4b04      	ldr	r3, [pc, #16]	; (8005f78 <HAL_RCC_GetPCLK2Freq+0x14>)
 8005f66:	4a05      	ldr	r2, [pc, #20]	; (8005f7c <HAL_RCC_GetPCLK2Freq+0x18>)
 8005f68:	685b      	ldr	r3, [r3, #4]
 8005f6a:	f3c3 23c2 	ubfx	r3, r3, #11, #3
 8005f6e:	5cd3      	ldrb	r3, [r2, r3]
 8005f70:	4a03      	ldr	r2, [pc, #12]	; (8005f80 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8005f72:	6810      	ldr	r0, [r2, #0]
 8005f74:	40d8      	lsrs	r0, r3
 8005f76:	4770      	bx	lr
 8005f78:	40021000 	.word	0x40021000
 8005f7c:	0800d3f8 	.word	0x0800d3f8
 8005f80:	20000000 	.word	0x20000000

08005f84 <HAL_RCC_GetClockConfig>:
 8005f84:	230f      	movs	r3, #15
 8005f86:	6003      	str	r3, [r0, #0]
 8005f88:	4b0b      	ldr	r3, [pc, #44]	; (8005fb8 <HAL_RCC_GetClockConfig+0x34>)
 8005f8a:	685a      	ldr	r2, [r3, #4]
 8005f8c:	f002 0203 	and.w	r2, r2, #3
 8005f90:	6042      	str	r2, [r0, #4]
 8005f92:	685a      	ldr	r2, [r3, #4]
 8005f94:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005f98:	6082      	str	r2, [r0, #8]
 8005f9a:	685a      	ldr	r2, [r3, #4]
 8005f9c:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8005fa0:	60c2      	str	r2, [r0, #12]
 8005fa2:	685b      	ldr	r3, [r3, #4]
 8005fa4:	08db      	lsrs	r3, r3, #3
 8005fa6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8005faa:	6103      	str	r3, [r0, #16]
 8005fac:	4b03      	ldr	r3, [pc, #12]	; (8005fbc <HAL_RCC_GetClockConfig+0x38>)
 8005fae:	681b      	ldr	r3, [r3, #0]
 8005fb0:	f003 0307 	and.w	r3, r3, #7
 8005fb4:	600b      	str	r3, [r1, #0]
 8005fb6:	4770      	bx	lr
 8005fb8:	40021000 	.word	0x40021000
 8005fbc:	40022000 	.word	0x40022000

08005fc0 <HAL_RCCEx_PeriphCLKConfig>:
 8005fc0:	6803      	ldr	r3, [r0, #0]
 8005fc2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005fc6:	07d9      	lsls	r1, r3, #31
 8005fc8:	4605      	mov	r5, r0
 8005fca:	d520      	bpl.n	800600e <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8005fcc:	4c35      	ldr	r4, [pc, #212]	; (80060a4 <HAL_RCCEx_PeriphCLKConfig+0xe4>)
 8005fce:	69e3      	ldr	r3, [r4, #28]
 8005fd0:	00da      	lsls	r2, r3, #3
 8005fd2:	d432      	bmi.n	800603a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8005fd4:	2701      	movs	r7, #1
 8005fd6:	69e3      	ldr	r3, [r4, #28]
 8005fd8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005fdc:	61e3      	str	r3, [r4, #28]
 8005fde:	69e3      	ldr	r3, [r4, #28]
 8005fe0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005fe4:	9301      	str	r3, [sp, #4]
 8005fe6:	9b01      	ldr	r3, [sp, #4]
 8005fe8:	4e2f      	ldr	r6, [pc, #188]	; (80060a8 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8005fea:	6833      	ldr	r3, [r6, #0]
 8005fec:	05db      	lsls	r3, r3, #23
 8005fee:	d526      	bpl.n	800603e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8005ff0:	6a23      	ldr	r3, [r4, #32]
 8005ff2:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8005ff6:	d136      	bne.n	8006066 <HAL_RCCEx_PeriphCLKConfig+0xa6>
 8005ff8:	6a23      	ldr	r3, [r4, #32]
 8005ffa:	686a      	ldr	r2, [r5, #4]
 8005ffc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006000:	4313      	orrs	r3, r2
 8006002:	6223      	str	r3, [r4, #32]
 8006004:	b11f      	cbz	r7, 800600e <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8006006:	69e3      	ldr	r3, [r4, #28]
 8006008:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800600c:	61e3      	str	r3, [r4, #28]
 800600e:	6828      	ldr	r0, [r5, #0]
 8006010:	0783      	lsls	r3, r0, #30
 8006012:	d506      	bpl.n	8006022 <HAL_RCCEx_PeriphCLKConfig+0x62>
 8006014:	4923      	ldr	r1, [pc, #140]	; (80060a4 <HAL_RCCEx_PeriphCLKConfig+0xe4>)
 8006016:	68ab      	ldr	r3, [r5, #8]
 8006018:	684a      	ldr	r2, [r1, #4]
 800601a:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800601e:	431a      	orrs	r2, r3
 8006020:	604a      	str	r2, [r1, #4]
 8006022:	f010 0010 	ands.w	r0, r0, #16
 8006026:	d01b      	beq.n	8006060 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8006028:	4a1e      	ldr	r2, [pc, #120]	; (80060a4 <HAL_RCCEx_PeriphCLKConfig+0xe4>)
 800602a:	68e9      	ldr	r1, [r5, #12]
 800602c:	6853      	ldr	r3, [r2, #4]
 800602e:	2000      	movs	r0, #0
 8006030:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8006034:	430b      	orrs	r3, r1
 8006036:	6053      	str	r3, [r2, #4]
 8006038:	e012      	b.n	8006060 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 800603a:	2700      	movs	r7, #0
 800603c:	e7d4      	b.n	8005fe8 <HAL_RCCEx_PeriphCLKConfig+0x28>
 800603e:	6833      	ldr	r3, [r6, #0]
 8006040:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006044:	6033      	str	r3, [r6, #0]
 8006046:	f7fd fc07 	bl	8003858 <HAL_GetTick>
 800604a:	4680      	mov	r8, r0
 800604c:	6833      	ldr	r3, [r6, #0]
 800604e:	05d8      	lsls	r0, r3, #23
 8006050:	d4ce      	bmi.n	8005ff0 <HAL_RCCEx_PeriphCLKConfig+0x30>
 8006052:	f7fd fc01 	bl	8003858 <HAL_GetTick>
 8006056:	eba0 0008 	sub.w	r0, r0, r8
 800605a:	2864      	cmp	r0, #100	; 0x64
 800605c:	d9f6      	bls.n	800604c <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800605e:	2003      	movs	r0, #3
 8006060:	b002      	add	sp, #8
 8006062:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006066:	686a      	ldr	r2, [r5, #4]
 8006068:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800606c:	429a      	cmp	r2, r3
 800606e:	d0c3      	beq.n	8005ff8 <HAL_RCCEx_PeriphCLKConfig+0x38>
 8006070:	2001      	movs	r0, #1
 8006072:	4a0e      	ldr	r2, [pc, #56]	; (80060ac <HAL_RCCEx_PeriphCLKConfig+0xec>)
 8006074:	6a23      	ldr	r3, [r4, #32]
 8006076:	6010      	str	r0, [r2, #0]
 8006078:	2000      	movs	r0, #0
 800607a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800607e:	6010      	str	r0, [r2, #0]
 8006080:	6221      	str	r1, [r4, #32]
 8006082:	07d9      	lsls	r1, r3, #31
 8006084:	d5b8      	bpl.n	8005ff8 <HAL_RCCEx_PeriphCLKConfig+0x38>
 8006086:	f7fd fbe7 	bl	8003858 <HAL_GetTick>
 800608a:	f241 3888 	movw	r8, #5000	; 0x1388
 800608e:	4606      	mov	r6, r0
 8006090:	6a23      	ldr	r3, [r4, #32]
 8006092:	079a      	lsls	r2, r3, #30
 8006094:	d4b0      	bmi.n	8005ff8 <HAL_RCCEx_PeriphCLKConfig+0x38>
 8006096:	f7fd fbdf 	bl	8003858 <HAL_GetTick>
 800609a:	1b80      	subs	r0, r0, r6
 800609c:	4540      	cmp	r0, r8
 800609e:	d9f7      	bls.n	8006090 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 80060a0:	e7dd      	b.n	800605e <HAL_RCCEx_PeriphCLKConfig+0x9e>
 80060a2:	bf00      	nop
 80060a4:	40021000 	.word	0x40021000
 80060a8:	40007000 	.word	0x40007000
 80060ac:	42420440 	.word	0x42420440

080060b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
 80060b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80060b4:	461c      	mov	r4, r3
 80060b6:	4616      	mov	r6, r2
 80060b8:	460f      	mov	r7, r1
 80060ba:	4605      	mov	r5, r0
 80060bc:	f7fd fbcc 	bl	8003858 <HAL_GetTick>
 80060c0:	4434      	add	r4, r6
 80060c2:	1a24      	subs	r4, r4, r0
 80060c4:	f7fd fbc8 	bl	8003858 <HAL_GetTick>
 80060c8:	4680      	mov	r8, r0
 80060ca:	4b23      	ldr	r3, [pc, #140]	; (8006158 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa8>)
 80060cc:	681b      	ldr	r3, [r3, #0]
 80060ce:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 80060d2:	4363      	muls	r3, r4
 80060d4:	682a      	ldr	r2, [r5, #0]
 80060d6:	9301      	str	r3, [sp, #4]
 80060d8:	6893      	ldr	r3, [r2, #8]
 80060da:	ea37 0303 	bics.w	r3, r7, r3
 80060de:	d001      	beq.n	80060e4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
 80060e0:	2000      	movs	r0, #0
 80060e2:	e02e      	b.n	8006142 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x92>
 80060e4:	1c73      	adds	r3, r6, #1
 80060e6:	d0f7      	beq.n	80060d8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
 80060e8:	f7fd fbb6 	bl	8003858 <HAL_GetTick>
 80060ec:	eba0 0008 	sub.w	r0, r0, r8
 80060f0:	42a0      	cmp	r0, r4
 80060f2:	d329      	bcc.n	8006148 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x98>
 80060f4:	682b      	ldr	r3, [r5, #0]
 80060f6:	685a      	ldr	r2, [r3, #4]
 80060f8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80060fc:	605a      	str	r2, [r3, #4]
 80060fe:	686a      	ldr	r2, [r5, #4]
 8006100:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006104:	d10a      	bne.n	800611c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
 8006106:	68aa      	ldr	r2, [r5, #8]
 8006108:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800610c:	d002      	beq.n	8006114 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
 800610e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006112:	d103      	bne.n	800611c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
 8006114:	681a      	ldr	r2, [r3, #0]
 8006116:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800611a:	601a      	str	r2, [r3, #0]
 800611c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800611e:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8006122:	d107      	bne.n	8006134 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x84>
 8006124:	681a      	ldr	r2, [r3, #0]
 8006126:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800612a:	601a      	str	r2, [r3, #0]
 800612c:	681a      	ldr	r2, [r3, #0]
 800612e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006132:	601a      	str	r2, [r3, #0]
 8006134:	2301      	movs	r3, #1
 8006136:	f885 3051 	strb.w	r3, [r5, #81]	; 0x51
 800613a:	2300      	movs	r3, #0
 800613c:	2003      	movs	r0, #3
 800613e:	f885 3050 	strb.w	r3, [r5, #80]	; 0x50
 8006142:	b002      	add	sp, #8
 8006144:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006148:	9b01      	ldr	r3, [sp, #4]
 800614a:	2b00      	cmp	r3, #0
 800614c:	9b01      	ldr	r3, [sp, #4]
 800614e:	bf08      	it	eq
 8006150:	2400      	moveq	r4, #0
 8006152:	3b01      	subs	r3, #1
 8006154:	e7be      	b.n	80060d4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 8006156:	bf00      	nop
 8006158:	20000000 	.word	0x20000000

0800615c <SPI_EndRxTransaction>:
 800615c:	b538      	push	{r3, r4, r5, lr}
 800615e:	4613      	mov	r3, r2
 8006160:	6842      	ldr	r2, [r0, #4]
 8006162:	4604      	mov	r4, r0
 8006164:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006168:	d116      	bne.n	8006198 <SPI_EndRxTransaction+0x3c>
 800616a:	6882      	ldr	r2, [r0, #8]
 800616c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006170:	d002      	beq.n	8006178 <SPI_EndRxTransaction+0x1c>
 8006172:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006176:	d10f      	bne.n	8006198 <SPI_EndRxTransaction+0x3c>
 8006178:	6825      	ldr	r5, [r4, #0]
 800617a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800617e:	6828      	ldr	r0, [r5, #0]
 8006180:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8006184:	6028      	str	r0, [r5, #0]
 8006186:	d107      	bne.n	8006198 <SPI_EndRxTransaction+0x3c>
 8006188:	460a      	mov	r2, r1
 800618a:	2101      	movs	r1, #1
 800618c:	4620      	mov	r0, r4
 800618e:	f7ff ff8f 	bl	80060b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006192:	b920      	cbnz	r0, 800619e <SPI_EndRxTransaction+0x42>
 8006194:	2000      	movs	r0, #0
 8006196:	bd38      	pop	{r3, r4, r5, pc}
 8006198:	460a      	mov	r2, r1
 800619a:	2180      	movs	r1, #128	; 0x80
 800619c:	e7f6      	b.n	800618c <SPI_EndRxTransaction+0x30>
 800619e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80061a0:	2003      	movs	r0, #3
 80061a2:	f043 0320 	orr.w	r3, r3, #32
 80061a6:	6563      	str	r3, [r4, #84]	; 0x54
 80061a8:	e7f5      	b.n	8006196 <SPI_EndRxTransaction+0x3a>

080061aa <SPI_EndRxTxTransaction>:
 80061aa:	b510      	push	{r4, lr}
 80061ac:	4613      	mov	r3, r2
 80061ae:	460a      	mov	r2, r1
 80061b0:	2180      	movs	r1, #128	; 0x80
 80061b2:	4604      	mov	r4, r0
 80061b4:	f7ff ff7c 	bl	80060b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80061b8:	b120      	cbz	r0, 80061c4 <SPI_EndRxTxTransaction+0x1a>
 80061ba:	2003      	movs	r0, #3
 80061bc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80061be:	f043 0320 	orr.w	r3, r3, #32
 80061c2:	6563      	str	r3, [r4, #84]	; 0x54
 80061c4:	bd10      	pop	{r4, pc}

080061c6 <HAL_SPI_Init>:
 80061c6:	b510      	push	{r4, lr}
 80061c8:	4604      	mov	r4, r0
 80061ca:	2800      	cmp	r0, #0
 80061cc:	d051      	beq.n	8006272 <HAL_SPI_Init+0xac>
 80061ce:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80061d0:	2b00      	cmp	r3, #0
 80061d2:	d14a      	bne.n	800626a <HAL_SPI_Init+0xa4>
 80061d4:	6842      	ldr	r2, [r0, #4]
 80061d6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80061da:	d000      	beq.n	80061de <HAL_SPI_Init+0x18>
 80061dc:	61c3      	str	r3, [r0, #28]
 80061de:	2300      	movs	r3, #0
 80061e0:	62a3      	str	r3, [r4, #40]	; 0x28
 80061e2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80061e6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80061ea:	b923      	cbnz	r3, 80061f6 <HAL_SPI_Init+0x30>
 80061ec:	4620      	mov	r0, r4
 80061ee:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
 80061f2:	f7fc f8a9 	bl	8002348 <HAL_SPI_MspInit>
 80061f6:	2302      	movs	r3, #2
 80061f8:	6822      	ldr	r2, [r4, #0]
 80061fa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80061fe:	6813      	ldr	r3, [r2, #0]
 8006200:	68a0      	ldr	r0, [r4, #8]
 8006202:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006206:	6013      	str	r3, [r2, #0]
 8006208:	6863      	ldr	r3, [r4, #4]
 800620a:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 800620e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8006212:	4303      	orrs	r3, r0
 8006214:	68e0      	ldr	r0, [r4, #12]
 8006216:	69a1      	ldr	r1, [r4, #24]
 8006218:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800621c:	4303      	orrs	r3, r0
 800621e:	6920      	ldr	r0, [r4, #16]
 8006220:	f000 0002 	and.w	r0, r0, #2
 8006224:	4303      	orrs	r3, r0
 8006226:	6960      	ldr	r0, [r4, #20]
 8006228:	f000 0001 	and.w	r0, r0, #1
 800622c:	4303      	orrs	r3, r0
 800622e:	f401 7000 	and.w	r0, r1, #512	; 0x200
 8006232:	4303      	orrs	r3, r0
 8006234:	69e0      	ldr	r0, [r4, #28]
 8006236:	0c09      	lsrs	r1, r1, #16
 8006238:	f000 0038 	and.w	r0, r0, #56	; 0x38
 800623c:	4303      	orrs	r3, r0
 800623e:	6a20      	ldr	r0, [r4, #32]
 8006240:	f001 0104 	and.w	r1, r1, #4
 8006244:	f000 0080 	and.w	r0, r0, #128	; 0x80
 8006248:	4303      	orrs	r3, r0
 800624a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800624c:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 8006250:	4303      	orrs	r3, r0
 8006252:	6013      	str	r3, [r2, #0]
 8006254:	6051      	str	r1, [r2, #4]
 8006256:	69d3      	ldr	r3, [r2, #28]
 8006258:	2000      	movs	r0, #0
 800625a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800625e:	61d3      	str	r3, [r2, #28]
 8006260:	2301      	movs	r3, #1
 8006262:	6560      	str	r0, [r4, #84]	; 0x54
 8006264:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 8006268:	bd10      	pop	{r4, pc}
 800626a:	2300      	movs	r3, #0
 800626c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006270:	e7b5      	b.n	80061de <HAL_SPI_Init+0x18>
 8006272:	2001      	movs	r0, #1
 8006274:	e7f8      	b.n	8006268 <HAL_SPI_Init+0xa2>

08006276 <HAL_SPI_TransmitReceive>:
 8006276:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800627a:	461e      	mov	r6, r3
 800627c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8006280:	4604      	mov	r4, r0
 8006282:	2b01      	cmp	r3, #1
 8006284:	460d      	mov	r5, r1
 8006286:	4691      	mov	r9, r2
 8006288:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800628c:	f000 80e0 	beq.w	8006450 <HAL_SPI_TransmitReceive+0x1da>
 8006290:	2301      	movs	r3, #1
 8006292:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8006296:	f7fd fadf 	bl	8003858 <HAL_GetTick>
 800629a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800629e:	4607      	mov	r7, r0
 80062a0:	2b01      	cmp	r3, #1
 80062a2:	6862      	ldr	r2, [r4, #4]
 80062a4:	b2d9      	uxtb	r1, r3
 80062a6:	d00a      	beq.n	80062be <HAL_SPI_TransmitReceive+0x48>
 80062a8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80062ac:	f040 80ce 	bne.w	800644c <HAL_SPI_TransmitReceive+0x1d6>
 80062b0:	68a3      	ldr	r3, [r4, #8]
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	f040 80ca 	bne.w	800644c <HAL_SPI_TransmitReceive+0x1d6>
 80062b8:	2904      	cmp	r1, #4
 80062ba:	f040 80c7 	bne.w	800644c <HAL_SPI_TransmitReceive+0x1d6>
 80062be:	2d00      	cmp	r5, #0
 80062c0:	d03f      	beq.n	8006342 <HAL_SPI_TransmitReceive+0xcc>
 80062c2:	f1b9 0f00 	cmp.w	r9, #0
 80062c6:	d03c      	beq.n	8006342 <HAL_SPI_TransmitReceive+0xcc>
 80062c8:	2e00      	cmp	r6, #0
 80062ca:	d03a      	beq.n	8006342 <HAL_SPI_TransmitReceive+0xcc>
 80062cc:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80062d0:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
 80062d4:	2b04      	cmp	r3, #4
 80062d6:	bf1c      	itt	ne
 80062d8:	2305      	movne	r3, #5
 80062da:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
 80062de:	2300      	movs	r3, #0
 80062e0:	6563      	str	r3, [r4, #84]	; 0x54
 80062e2:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 80062e6:	6823      	ldr	r3, [r4, #0]
 80062e8:	87e6      	strh	r6, [r4, #62]	; 0x3e
 80062ea:	86e6      	strh	r6, [r4, #54]	; 0x36
 80062ec:	6819      	ldr	r1, [r3, #0]
 80062ee:	87a6      	strh	r6, [r4, #60]	; 0x3c
 80062f0:	0649      	lsls	r1, r1, #25
 80062f2:	bf58      	it	pl
 80062f4:	6819      	ldrpl	r1, [r3, #0]
 80062f6:	6325      	str	r5, [r4, #48]	; 0x30
 80062f8:	bf58      	it	pl
 80062fa:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
 80062fe:	86a6      	strh	r6, [r4, #52]	; 0x34
 8006300:	bf58      	it	pl
 8006302:	6019      	strpl	r1, [r3, #0]
 8006304:	68e1      	ldr	r1, [r4, #12]
 8006306:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800630a:	d151      	bne.n	80063b0 <HAL_SPI_TransmitReceive+0x13a>
 800630c:	b10a      	cbz	r2, 8006312 <HAL_SPI_TransmitReceive+0x9c>
 800630e:	2e01      	cmp	r6, #1
 8006310:	d107      	bne.n	8006322 <HAL_SPI_TransmitReceive+0xac>
 8006312:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006316:	60da      	str	r2, [r3, #12]
 8006318:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800631a:	6325      	str	r5, [r4, #48]	; 0x30
 800631c:	3b01      	subs	r3, #1
 800631e:	b29b      	uxth	r3, r3
 8006320:	86e3      	strh	r3, [r4, #54]	; 0x36
 8006322:	2501      	movs	r5, #1
 8006324:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006326:	b29b      	uxth	r3, r3
 8006328:	b96b      	cbnz	r3, 8006346 <HAL_SPI_TransmitReceive+0xd0>
 800632a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800632c:	b29b      	uxth	r3, r3
 800632e:	b953      	cbnz	r3, 8006346 <HAL_SPI_TransmitReceive+0xd0>
 8006330:	463a      	mov	r2, r7
 8006332:	4641      	mov	r1, r8
 8006334:	4620      	mov	r0, r4
 8006336:	f7ff ff38 	bl	80061aa <SPI_EndRxTxTransaction>
 800633a:	2800      	cmp	r0, #0
 800633c:	d07b      	beq.n	8006436 <HAL_SPI_TransmitReceive+0x1c0>
 800633e:	2320      	movs	r3, #32
 8006340:	6563      	str	r3, [r4, #84]	; 0x54
 8006342:	2001      	movs	r0, #1
 8006344:	e02b      	b.n	800639e <HAL_SPI_TransmitReceive+0x128>
 8006346:	6821      	ldr	r1, [r4, #0]
 8006348:	688b      	ldr	r3, [r1, #8]
 800634a:	079a      	lsls	r2, r3, #30
 800634c:	d50d      	bpl.n	800636a <HAL_SPI_TransmitReceive+0xf4>
 800634e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006350:	b29b      	uxth	r3, r3
 8006352:	b153      	cbz	r3, 800636a <HAL_SPI_TransmitReceive+0xf4>
 8006354:	b14d      	cbz	r5, 800636a <HAL_SPI_TransmitReceive+0xf4>
 8006356:	2500      	movs	r5, #0
 8006358:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800635a:	f833 2b02 	ldrh.w	r2, [r3], #2
 800635e:	60ca      	str	r2, [r1, #12]
 8006360:	6323      	str	r3, [r4, #48]	; 0x30
 8006362:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006364:	3b01      	subs	r3, #1
 8006366:	b29b      	uxth	r3, r3
 8006368:	86e3      	strh	r3, [r4, #54]	; 0x36
 800636a:	688a      	ldr	r2, [r1, #8]
 800636c:	f012 0201 	ands.w	r2, r2, #1
 8006370:	d00c      	beq.n	800638c <HAL_SPI_TransmitReceive+0x116>
 8006372:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006374:	b29b      	uxth	r3, r3
 8006376:	b14b      	cbz	r3, 800638c <HAL_SPI_TransmitReceive+0x116>
 8006378:	4615      	mov	r5, r2
 800637a:	68c9      	ldr	r1, [r1, #12]
 800637c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800637e:	f823 1b02 	strh.w	r1, [r3], #2
 8006382:	63a3      	str	r3, [r4, #56]	; 0x38
 8006384:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006386:	3b01      	subs	r3, #1
 8006388:	b29b      	uxth	r3, r3
 800638a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800638c:	f7fd fa64 	bl	8003858 <HAL_GetTick>
 8006390:	1bc0      	subs	r0, r0, r7
 8006392:	4540      	cmp	r0, r8
 8006394:	d3c6      	bcc.n	8006324 <HAL_SPI_TransmitReceive+0xae>
 8006396:	f1b8 3fff 	cmp.w	r8, #4294967295
 800639a:	d0c3      	beq.n	8006324 <HAL_SPI_TransmitReceive+0xae>
 800639c:	2003      	movs	r0, #3
 800639e:	2301      	movs	r3, #1
 80063a0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80063a4:	2300      	movs	r3, #0
 80063a6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80063aa:	b003      	add	sp, #12
 80063ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80063b0:	b10a      	cbz	r2, 80063b6 <HAL_SPI_TransmitReceive+0x140>
 80063b2:	2e01      	cmp	r6, #1
 80063b4:	d108      	bne.n	80063c8 <HAL_SPI_TransmitReceive+0x152>
 80063b6:	782a      	ldrb	r2, [r5, #0]
 80063b8:	731a      	strb	r2, [r3, #12]
 80063ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80063bc:	3301      	adds	r3, #1
 80063be:	6323      	str	r3, [r4, #48]	; 0x30
 80063c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80063c2:	3b01      	subs	r3, #1
 80063c4:	b29b      	uxth	r3, r3
 80063c6:	86e3      	strh	r3, [r4, #54]	; 0x36
 80063c8:	2501      	movs	r5, #1
 80063ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80063cc:	b29b      	uxth	r3, r3
 80063ce:	b91b      	cbnz	r3, 80063d8 <HAL_SPI_TransmitReceive+0x162>
 80063d0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80063d2:	b29b      	uxth	r3, r3
 80063d4:	2b00      	cmp	r3, #0
 80063d6:	d0ab      	beq.n	8006330 <HAL_SPI_TransmitReceive+0xba>
 80063d8:	6822      	ldr	r2, [r4, #0]
 80063da:	6893      	ldr	r3, [r2, #8]
 80063dc:	079b      	lsls	r3, r3, #30
 80063de:	d50e      	bpl.n	80063fe <HAL_SPI_TransmitReceive+0x188>
 80063e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80063e2:	b29b      	uxth	r3, r3
 80063e4:	b15b      	cbz	r3, 80063fe <HAL_SPI_TransmitReceive+0x188>
 80063e6:	b155      	cbz	r5, 80063fe <HAL_SPI_TransmitReceive+0x188>
 80063e8:	2500      	movs	r5, #0
 80063ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80063ec:	781b      	ldrb	r3, [r3, #0]
 80063ee:	7313      	strb	r3, [r2, #12]
 80063f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80063f2:	3301      	adds	r3, #1
 80063f4:	6323      	str	r3, [r4, #48]	; 0x30
 80063f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80063f8:	3b01      	subs	r3, #1
 80063fa:	b29b      	uxth	r3, r3
 80063fc:	86e3      	strh	r3, [r4, #54]	; 0x36
 80063fe:	6822      	ldr	r2, [r4, #0]
 8006400:	6891      	ldr	r1, [r2, #8]
 8006402:	f011 0101 	ands.w	r1, r1, #1
 8006406:	d00d      	beq.n	8006424 <HAL_SPI_TransmitReceive+0x1ae>
 8006408:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800640a:	b29b      	uxth	r3, r3
 800640c:	b153      	cbz	r3, 8006424 <HAL_SPI_TransmitReceive+0x1ae>
 800640e:	460d      	mov	r5, r1
 8006410:	68d2      	ldr	r2, [r2, #12]
 8006412:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006414:	701a      	strb	r2, [r3, #0]
 8006416:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006418:	3301      	adds	r3, #1
 800641a:	63a3      	str	r3, [r4, #56]	; 0x38
 800641c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800641e:	3b01      	subs	r3, #1
 8006420:	b29b      	uxth	r3, r3
 8006422:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8006424:	f7fd fa18 	bl	8003858 <HAL_GetTick>
 8006428:	1bc0      	subs	r0, r0, r7
 800642a:	4540      	cmp	r0, r8
 800642c:	d3cd      	bcc.n	80063ca <HAL_SPI_TransmitReceive+0x154>
 800642e:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006432:	d0ca      	beq.n	80063ca <HAL_SPI_TransmitReceive+0x154>
 8006434:	e7b2      	b.n	800639c <HAL_SPI_TransmitReceive+0x126>
 8006436:	68a3      	ldr	r3, [r4, #8]
 8006438:	2b00      	cmp	r3, #0
 800643a:	d1b0      	bne.n	800639e <HAL_SPI_TransmitReceive+0x128>
 800643c:	6823      	ldr	r3, [r4, #0]
 800643e:	9001      	str	r0, [sp, #4]
 8006440:	68da      	ldr	r2, [r3, #12]
 8006442:	9201      	str	r2, [sp, #4]
 8006444:	689b      	ldr	r3, [r3, #8]
 8006446:	9301      	str	r3, [sp, #4]
 8006448:	9b01      	ldr	r3, [sp, #4]
 800644a:	e7a8      	b.n	800639e <HAL_SPI_TransmitReceive+0x128>
 800644c:	2002      	movs	r0, #2
 800644e:	e7a6      	b.n	800639e <HAL_SPI_TransmitReceive+0x128>
 8006450:	2002      	movs	r0, #2
 8006452:	e7aa      	b.n	80063aa <HAL_SPI_TransmitReceive+0x134>

08006454 <HAL_SPI_Receive>:
 8006454:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006458:	461d      	mov	r5, r3
 800645a:	6843      	ldr	r3, [r0, #4]
 800645c:	4604      	mov	r4, r0
 800645e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006462:	4688      	mov	r8, r1
 8006464:	4616      	mov	r6, r2
 8006466:	d10c      	bne.n	8006482 <HAL_SPI_Receive+0x2e>
 8006468:	6883      	ldr	r3, [r0, #8]
 800646a:	b953      	cbnz	r3, 8006482 <HAL_SPI_Receive+0x2e>
 800646c:	2304      	movs	r3, #4
 800646e:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
 8006472:	4613      	mov	r3, r2
 8006474:	9500      	str	r5, [sp, #0]
 8006476:	460a      	mov	r2, r1
 8006478:	f7ff fefd 	bl	8006276 <HAL_SPI_TransmitReceive>
 800647c:	b002      	add	sp, #8
 800647e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006482:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8006486:	2b01      	cmp	r3, #1
 8006488:	d07d      	beq.n	8006586 <HAL_SPI_Receive+0x132>
 800648a:	2301      	movs	r3, #1
 800648c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8006490:	f7fd f9e2 	bl	8003858 <HAL_GetTick>
 8006494:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006498:	4607      	mov	r7, r0
 800649a:	2b01      	cmp	r3, #1
 800649c:	b2d8      	uxtb	r0, r3
 800649e:	d170      	bne.n	8006582 <HAL_SPI_Receive+0x12e>
 80064a0:	f1b8 0f00 	cmp.w	r8, #0
 80064a4:	d05b      	beq.n	800655e <HAL_SPI_Receive+0x10a>
 80064a6:	2e00      	cmp	r6, #0
 80064a8:	d059      	beq.n	800655e <HAL_SPI_Receive+0x10a>
 80064aa:	2304      	movs	r3, #4
 80064ac:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80064b0:	2300      	movs	r3, #0
 80064b2:	68a2      	ldr	r2, [r4, #8]
 80064b4:	6563      	str	r3, [r4, #84]	; 0x54
 80064b6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80064ba:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 80064be:	87e6      	strh	r6, [r4, #62]	; 0x3e
 80064c0:	6323      	str	r3, [r4, #48]	; 0x30
 80064c2:	86a3      	strh	r3, [r4, #52]	; 0x34
 80064c4:	86e3      	strh	r3, [r4, #54]	; 0x36
 80064c6:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
 80064ca:	6823      	ldr	r3, [r4, #0]
 80064cc:	87a6      	strh	r6, [r4, #60]	; 0x3c
 80064ce:	d107      	bne.n	80064e0 <HAL_SPI_Receive+0x8c>
 80064d0:	681a      	ldr	r2, [r3, #0]
 80064d2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80064d6:	601a      	str	r2, [r3, #0]
 80064d8:	681a      	ldr	r2, [r3, #0]
 80064da:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80064de:	601a      	str	r2, [r3, #0]
 80064e0:	681a      	ldr	r2, [r3, #0]
 80064e2:	0656      	lsls	r6, r2, #25
 80064e4:	bf5e      	ittt	pl
 80064e6:	681a      	ldrpl	r2, [r3, #0]
 80064e8:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80064ec:	601a      	strpl	r2, [r3, #0]
 80064ee:	68e3      	ldr	r3, [r4, #12]
 80064f0:	b1f3      	cbz	r3, 8006530 <HAL_SPI_Receive+0xdc>
 80064f2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80064f4:	b29b      	uxth	r3, r3
 80064f6:	b1fb      	cbz	r3, 8006538 <HAL_SPI_Receive+0xe4>
 80064f8:	6823      	ldr	r3, [r4, #0]
 80064fa:	689a      	ldr	r2, [r3, #8]
 80064fc:	07d2      	lsls	r2, r2, #31
 80064fe:	d535      	bpl.n	800656c <HAL_SPI_Receive+0x118>
 8006500:	68da      	ldr	r2, [r3, #12]
 8006502:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006504:	f823 2b02 	strh.w	r2, [r3], #2
 8006508:	63a3      	str	r3, [r4, #56]	; 0x38
 800650a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800650c:	3b01      	subs	r3, #1
 800650e:	b29b      	uxth	r3, r3
 8006510:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8006512:	e7ee      	b.n	80064f2 <HAL_SPI_Receive+0x9e>
 8006514:	6823      	ldr	r3, [r4, #0]
 8006516:	689a      	ldr	r2, [r3, #8]
 8006518:	07d0      	lsls	r0, r2, #31
 800651a:	d518      	bpl.n	800654e <HAL_SPI_Receive+0xfa>
 800651c:	7b1b      	ldrb	r3, [r3, #12]
 800651e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006520:	7013      	strb	r3, [r2, #0]
 8006522:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006524:	3301      	adds	r3, #1
 8006526:	63a3      	str	r3, [r4, #56]	; 0x38
 8006528:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800652a:	3b01      	subs	r3, #1
 800652c:	b29b      	uxth	r3, r3
 800652e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8006530:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006532:	b29b      	uxth	r3, r3
 8006534:	2b00      	cmp	r3, #0
 8006536:	d1ed      	bne.n	8006514 <HAL_SPI_Receive+0xc0>
 8006538:	463a      	mov	r2, r7
 800653a:	4629      	mov	r1, r5
 800653c:	4620      	mov	r0, r4
 800653e:	f7ff fe0d 	bl	800615c <SPI_EndRxTransaction>
 8006542:	b9d8      	cbnz	r0, 800657c <HAL_SPI_Receive+0x128>
 8006544:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006546:	3800      	subs	r0, #0
 8006548:	bf18      	it	ne
 800654a:	2001      	movne	r0, #1
 800654c:	e007      	b.n	800655e <HAL_SPI_Receive+0x10a>
 800654e:	f7fd f983 	bl	8003858 <HAL_GetTick>
 8006552:	1bc0      	subs	r0, r0, r7
 8006554:	42a8      	cmp	r0, r5
 8006556:	d3eb      	bcc.n	8006530 <HAL_SPI_Receive+0xdc>
 8006558:	1c69      	adds	r1, r5, #1
 800655a:	d0e9      	beq.n	8006530 <HAL_SPI_Receive+0xdc>
 800655c:	2003      	movs	r0, #3
 800655e:	2301      	movs	r3, #1
 8006560:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 8006564:	2300      	movs	r3, #0
 8006566:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800656a:	e787      	b.n	800647c <HAL_SPI_Receive+0x28>
 800656c:	f7fd f974 	bl	8003858 <HAL_GetTick>
 8006570:	1bc0      	subs	r0, r0, r7
 8006572:	42a8      	cmp	r0, r5
 8006574:	d3bd      	bcc.n	80064f2 <HAL_SPI_Receive+0x9e>
 8006576:	1c6b      	adds	r3, r5, #1
 8006578:	d0bb      	beq.n	80064f2 <HAL_SPI_Receive+0x9e>
 800657a:	e7ef      	b.n	800655c <HAL_SPI_Receive+0x108>
 800657c:	2320      	movs	r3, #32
 800657e:	6563      	str	r3, [r4, #84]	; 0x54
 8006580:	e7e0      	b.n	8006544 <HAL_SPI_Receive+0xf0>
 8006582:	2002      	movs	r0, #2
 8006584:	e7eb      	b.n	800655e <HAL_SPI_Receive+0x10a>
 8006586:	2002      	movs	r0, #2
 8006588:	e778      	b.n	800647c <HAL_SPI_Receive+0x28>

0800658a <HAL_SPI_ErrorCallback>:
 800658a:	4770      	bx	lr

0800658c <HAL_SPI_IRQHandler>:
 800658c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800658e:	6803      	ldr	r3, [r0, #0]
 8006590:	4604      	mov	r4, r0
 8006592:	6859      	ldr	r1, [r3, #4]
 8006594:	689a      	ldr	r2, [r3, #8]
 8006596:	b085      	sub	sp, #20
 8006598:	0656      	lsls	r6, r2, #25
 800659a:	ea4f 1592 	mov.w	r5, r2, lsr #6
 800659e:	f3c2 1780 	ubfx	r7, r2, #6, #1
 80065a2:	d408      	bmi.n	80065b6 <HAL_SPI_IRQHandler+0x2a>
 80065a4:	07d6      	lsls	r6, r2, #31
 80065a6:	d506      	bpl.n	80065b6 <HAL_SPI_IRQHandler+0x2a>
 80065a8:	064e      	lsls	r6, r1, #25
 80065aa:	d504      	bpl.n	80065b6 <HAL_SPI_IRQHandler+0x2a>
 80065ac:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80065ae:	b005      	add	sp, #20
 80065b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80065b4:	4718      	bx	r3
 80065b6:	0796      	lsls	r6, r2, #30
 80065b8:	d504      	bpl.n	80065c4 <HAL_SPI_IRQHandler+0x38>
 80065ba:	0608      	lsls	r0, r1, #24
 80065bc:	d502      	bpl.n	80065c4 <HAL_SPI_IRQHandler+0x38>
 80065be:	4620      	mov	r0, r4
 80065c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80065c2:	e7f4      	b.n	80065ae <HAL_SPI_IRQHandler+0x22>
 80065c4:	0956      	lsrs	r6, r2, #5
 80065c6:	ea45 1252 	orr.w	r2, r5, r2, lsr #5
 80065ca:	07d2      	lsls	r2, r2, #31
 80065cc:	d54c      	bpl.n	8006668 <HAL_SPI_IRQHandler+0xdc>
 80065ce:	068d      	lsls	r5, r1, #26
 80065d0:	d54a      	bpl.n	8006668 <HAL_SPI_IRQHandler+0xdc>
 80065d2:	b177      	cbz	r7, 80065f2 <HAL_SPI_IRQHandler+0x66>
 80065d4:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 80065d8:	2000      	movs	r0, #0
 80065da:	2a03      	cmp	r2, #3
 80065dc:	d03e      	beq.n	800665c <HAL_SPI_IRQHandler+0xd0>
 80065de:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80065e0:	f042 0204 	orr.w	r2, r2, #4
 80065e4:	6562      	str	r2, [r4, #84]	; 0x54
 80065e6:	9001      	str	r0, [sp, #4]
 80065e8:	68da      	ldr	r2, [r3, #12]
 80065ea:	9201      	str	r2, [sp, #4]
 80065ec:	689a      	ldr	r2, [r3, #8]
 80065ee:	9201      	str	r2, [sp, #4]
 80065f0:	9a01      	ldr	r2, [sp, #4]
 80065f2:	07f0      	lsls	r0, r6, #31
 80065f4:	d50c      	bpl.n	8006610 <HAL_SPI_IRQHandler+0x84>
 80065f6:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80065f8:	f042 0201 	orr.w	r2, r2, #1
 80065fc:	6562      	str	r2, [r4, #84]	; 0x54
 80065fe:	2200      	movs	r2, #0
 8006600:	9203      	str	r2, [sp, #12]
 8006602:	689a      	ldr	r2, [r3, #8]
 8006604:	9203      	str	r2, [sp, #12]
 8006606:	681a      	ldr	r2, [r3, #0]
 8006608:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800660c:	601a      	str	r2, [r3, #0]
 800660e:	9a03      	ldr	r2, [sp, #12]
 8006610:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8006612:	b34a      	cbz	r2, 8006668 <HAL_SPI_IRQHandler+0xdc>
 8006614:	685a      	ldr	r2, [r3, #4]
 8006616:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800661a:	605a      	str	r2, [r3, #4]
 800661c:	2201      	movs	r2, #1
 800661e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 8006622:	078a      	lsls	r2, r1, #30
 8006624:	d022      	beq.n	800666c <HAL_SPI_IRQHandler+0xe0>
 8006626:	685a      	ldr	r2, [r3, #4]
 8006628:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800662a:	f022 0203 	bic.w	r2, r2, #3
 800662e:	605a      	str	r2, [r3, #4]
 8006630:	b140      	cbz	r0, 8006644 <HAL_SPI_IRQHandler+0xb8>
 8006632:	4b10      	ldr	r3, [pc, #64]	; (8006674 <HAL_SPI_IRQHandler+0xe8>)
 8006634:	6343      	str	r3, [r0, #52]	; 0x34
 8006636:	f7fd f9a7 	bl	8003988 <HAL_DMA_Abort_IT>
 800663a:	b118      	cbz	r0, 8006644 <HAL_SPI_IRQHandler+0xb8>
 800663c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800663e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006642:	6563      	str	r3, [r4, #84]	; 0x54
 8006644:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8006646:	b178      	cbz	r0, 8006668 <HAL_SPI_IRQHandler+0xdc>
 8006648:	4b0a      	ldr	r3, [pc, #40]	; (8006674 <HAL_SPI_IRQHandler+0xe8>)
 800664a:	6343      	str	r3, [r0, #52]	; 0x34
 800664c:	f7fd f99c 	bl	8003988 <HAL_DMA_Abort_IT>
 8006650:	b150      	cbz	r0, 8006668 <HAL_SPI_IRQHandler+0xdc>
 8006652:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006654:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006658:	6563      	str	r3, [r4, #84]	; 0x54
 800665a:	e005      	b.n	8006668 <HAL_SPI_IRQHandler+0xdc>
 800665c:	9002      	str	r0, [sp, #8]
 800665e:	68da      	ldr	r2, [r3, #12]
 8006660:	9202      	str	r2, [sp, #8]
 8006662:	689b      	ldr	r3, [r3, #8]
 8006664:	9302      	str	r3, [sp, #8]
 8006666:	9b02      	ldr	r3, [sp, #8]
 8006668:	b005      	add	sp, #20
 800666a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800666c:	4620      	mov	r0, r4
 800666e:	f7ff ff8c 	bl	800658a <HAL_SPI_ErrorCallback>
 8006672:	e7f9      	b.n	8006668 <HAL_SPI_IRQHandler+0xdc>
 8006674:	08006679 	.word	0x08006679

08006678 <SPI_DMAAbortOnError>:
 8006678:	b508      	push	{r3, lr}
 800667a:	2300      	movs	r3, #0
 800667c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800667e:	87c3      	strh	r3, [r0, #62]	; 0x3e
 8006680:	86c3      	strh	r3, [r0, #54]	; 0x36
 8006682:	f7ff ff82 	bl	800658a <HAL_SPI_ErrorCallback>
 8006686:	bd08      	pop	{r3, pc}

08006688 <TIM_OC1_SetConfig>:
 8006688:	6a03      	ldr	r3, [r0, #32]
 800668a:	b570      	push	{r4, r5, r6, lr}
 800668c:	f023 0301 	bic.w	r3, r3, #1
 8006690:	6203      	str	r3, [r0, #32]
 8006692:	6a03      	ldr	r3, [r0, #32]
 8006694:	6844      	ldr	r4, [r0, #4]
 8006696:	6982      	ldr	r2, [r0, #24]
 8006698:	680d      	ldr	r5, [r1, #0]
 800669a:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 800669e:	432a      	orrs	r2, r5
 80066a0:	688d      	ldr	r5, [r1, #8]
 80066a2:	f023 0302 	bic.w	r3, r3, #2
 80066a6:	432b      	orrs	r3, r5
 80066a8:	4d0a      	ldr	r5, [pc, #40]	; (80066d4 <TIM_OC1_SetConfig+0x4c>)
 80066aa:	42a8      	cmp	r0, r5
 80066ac:	d10b      	bne.n	80066c6 <TIM_OC1_SetConfig+0x3e>
 80066ae:	68cd      	ldr	r5, [r1, #12]
 80066b0:	f023 0308 	bic.w	r3, r3, #8
 80066b4:	432b      	orrs	r3, r5
 80066b6:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 80066ba:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 80066be:	4335      	orrs	r5, r6
 80066c0:	f023 0304 	bic.w	r3, r3, #4
 80066c4:	432c      	orrs	r4, r5
 80066c6:	6044      	str	r4, [r0, #4]
 80066c8:	6182      	str	r2, [r0, #24]
 80066ca:	684a      	ldr	r2, [r1, #4]
 80066cc:	6342      	str	r2, [r0, #52]	; 0x34
 80066ce:	6203      	str	r3, [r0, #32]
 80066d0:	bd70      	pop	{r4, r5, r6, pc}
 80066d2:	bf00      	nop
 80066d4:	40012c00 	.word	0x40012c00

080066d8 <TIM_OC3_SetConfig>:
 80066d8:	6a03      	ldr	r3, [r0, #32]
 80066da:	b570      	push	{r4, r5, r6, lr}
 80066dc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80066e0:	6203      	str	r3, [r0, #32]
 80066e2:	6a03      	ldr	r3, [r0, #32]
 80066e4:	6844      	ldr	r4, [r0, #4]
 80066e6:	69c2      	ldr	r2, [r0, #28]
 80066e8:	680d      	ldr	r5, [r1, #0]
 80066ea:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 80066ee:	432a      	orrs	r2, r5
 80066f0:	688d      	ldr	r5, [r1, #8]
 80066f2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80066f6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80066fa:	4d0b      	ldr	r5, [pc, #44]	; (8006728 <TIM_OC3_SetConfig+0x50>)
 80066fc:	42a8      	cmp	r0, r5
 80066fe:	d10d      	bne.n	800671c <TIM_OC3_SetConfig+0x44>
 8006700:	68cd      	ldr	r5, [r1, #12]
 8006702:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006706:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800670a:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
 800670e:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 8006712:	4335      	orrs	r5, r6
 8006714:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006718:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
 800671c:	6044      	str	r4, [r0, #4]
 800671e:	61c2      	str	r2, [r0, #28]
 8006720:	684a      	ldr	r2, [r1, #4]
 8006722:	63c2      	str	r2, [r0, #60]	; 0x3c
 8006724:	6203      	str	r3, [r0, #32]
 8006726:	bd70      	pop	{r4, r5, r6, pc}
 8006728:	40012c00 	.word	0x40012c00

0800672c <TIM_OC4_SetConfig>:
 800672c:	6a03      	ldr	r3, [r0, #32]
 800672e:	b530      	push	{r4, r5, lr}
 8006730:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006734:	6203      	str	r3, [r0, #32]
 8006736:	6a03      	ldr	r3, [r0, #32]
 8006738:	6844      	ldr	r4, [r0, #4]
 800673a:	69c2      	ldr	r2, [r0, #28]
 800673c:	680d      	ldr	r5, [r1, #0]
 800673e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8006742:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006746:	688d      	ldr	r5, [r1, #8]
 8006748:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800674c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 8006750:	4d06      	ldr	r5, [pc, #24]	; (800676c <TIM_OC4_SetConfig+0x40>)
 8006752:	42a8      	cmp	r0, r5
 8006754:	bf02      	ittt	eq
 8006756:	694d      	ldreq	r5, [r1, #20]
 8006758:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
 800675c:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
 8006760:	6044      	str	r4, [r0, #4]
 8006762:	61c2      	str	r2, [r0, #28]
 8006764:	684a      	ldr	r2, [r1, #4]
 8006766:	6402      	str	r2, [r0, #64]	; 0x40
 8006768:	6203      	str	r3, [r0, #32]
 800676a:	bd30      	pop	{r4, r5, pc}
 800676c:	40012c00 	.word	0x40012c00

08006770 <HAL_TIM_Base_Start>:
 8006770:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006774:	2b01      	cmp	r3, #1
 8006776:	d11c      	bne.n	80067b2 <HAL_TIM_Base_Start+0x42>
 8006778:	2302      	movs	r3, #2
 800677a:	4a0f      	ldr	r2, [pc, #60]	; (80067b8 <HAL_TIM_Base_Start+0x48>)
 800677c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 8006780:	6803      	ldr	r3, [r0, #0]
 8006782:	4293      	cmp	r3, r2
 8006784:	d00a      	beq.n	800679c <HAL_TIM_Base_Start+0x2c>
 8006786:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800678a:	d007      	beq.n	800679c <HAL_TIM_Base_Start+0x2c>
 800678c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006790:	4293      	cmp	r3, r2
 8006792:	d003      	beq.n	800679c <HAL_TIM_Base_Start+0x2c>
 8006794:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006798:	4293      	cmp	r3, r2
 800679a:	d104      	bne.n	80067a6 <HAL_TIM_Base_Start+0x36>
 800679c:	689a      	ldr	r2, [r3, #8]
 800679e:	f002 0207 	and.w	r2, r2, #7
 80067a2:	2a06      	cmp	r2, #6
 80067a4:	d003      	beq.n	80067ae <HAL_TIM_Base_Start+0x3e>
 80067a6:	681a      	ldr	r2, [r3, #0]
 80067a8:	f042 0201 	orr.w	r2, r2, #1
 80067ac:	601a      	str	r2, [r3, #0]
 80067ae:	2000      	movs	r0, #0
 80067b0:	4770      	bx	lr
 80067b2:	2001      	movs	r0, #1
 80067b4:	4770      	bx	lr
 80067b6:	bf00      	nop
 80067b8:	40012c00 	.word	0x40012c00

080067bc <HAL_TIM_Base_Start_IT>:
 80067bc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80067c0:	2b01      	cmp	r3, #1
 80067c2:	d120      	bne.n	8006806 <HAL_TIM_Base_Start_IT+0x4a>
 80067c4:	2302      	movs	r3, #2
 80067c6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
 80067ca:	6803      	ldr	r3, [r0, #0]
 80067cc:	68da      	ldr	r2, [r3, #12]
 80067ce:	f042 0201 	orr.w	r2, r2, #1
 80067d2:	60da      	str	r2, [r3, #12]
 80067d4:	4a0d      	ldr	r2, [pc, #52]	; (800680c <HAL_TIM_Base_Start_IT+0x50>)
 80067d6:	4293      	cmp	r3, r2
 80067d8:	d00a      	beq.n	80067f0 <HAL_TIM_Base_Start_IT+0x34>
 80067da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80067de:	d007      	beq.n	80067f0 <HAL_TIM_Base_Start_IT+0x34>
 80067e0:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80067e4:	4293      	cmp	r3, r2
 80067e6:	d003      	beq.n	80067f0 <HAL_TIM_Base_Start_IT+0x34>
 80067e8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80067ec:	4293      	cmp	r3, r2
 80067ee:	d104      	bne.n	80067fa <HAL_TIM_Base_Start_IT+0x3e>
 80067f0:	689a      	ldr	r2, [r3, #8]
 80067f2:	f002 0207 	and.w	r2, r2, #7
 80067f6:	2a06      	cmp	r2, #6
 80067f8:	d003      	beq.n	8006802 <HAL_TIM_Base_Start_IT+0x46>
 80067fa:	681a      	ldr	r2, [r3, #0]
 80067fc:	f042 0201 	orr.w	r2, r2, #1
 8006800:	601a      	str	r2, [r3, #0]
 8006802:	2000      	movs	r0, #0
 8006804:	4770      	bx	lr
 8006806:	2001      	movs	r0, #1
 8006808:	4770      	bx	lr
 800680a:	bf00      	nop
 800680c:	40012c00 	.word	0x40012c00

08006810 <HAL_TIM_PWM_MspInit>:
 8006810:	4770      	bx	lr

08006812 <HAL_TIM_Encoder_Start>:
 8006812:	4603      	mov	r3, r0
 8006814:	b530      	push	{r4, r5, lr}
 8006816:	f890 203e 	ldrb.w	r2, [r0, #62]	; 0x3e
 800681a:	f890 003f 	ldrb.w	r0, [r0, #63]	; 0x3f
 800681e:	f893 5042 	ldrb.w	r5, [r3, #66]	; 0x42
 8006822:	f893 4043 	ldrb.w	r4, [r3, #67]	; 0x43
 8006826:	b2d2      	uxtb	r2, r2
 8006828:	b2c0      	uxtb	r0, r0
 800682a:	b2ed      	uxtb	r5, r5
 800682c:	b2e4      	uxtb	r4, r4
 800682e:	b9c1      	cbnz	r1, 8006862 <HAL_TIM_Encoder_Start+0x50>
 8006830:	2a01      	cmp	r2, #1
 8006832:	d145      	bne.n	80068c0 <HAL_TIM_Encoder_Start+0xae>
 8006834:	2d01      	cmp	r5, #1
 8006836:	d145      	bne.n	80068c4 <HAL_TIM_Encoder_Start+0xb2>
 8006838:	2202      	movs	r2, #2
 800683a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800683e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006842:	681a      	ldr	r2, [r3, #0]
 8006844:	6a11      	ldr	r1, [r2, #32]
 8006846:	f021 0101 	bic.w	r1, r1, #1
 800684a:	6211      	str	r1, [r2, #32]
 800684c:	6a11      	ldr	r1, [r2, #32]
 800684e:	f041 0101 	orr.w	r1, r1, #1
 8006852:	2000      	movs	r0, #0
 8006854:	6211      	str	r1, [r2, #32]
 8006856:	681a      	ldr	r2, [r3, #0]
 8006858:	6813      	ldr	r3, [r2, #0]
 800685a:	f043 0301 	orr.w	r3, r3, #1
 800685e:	6013      	str	r3, [r2, #0]
 8006860:	bd30      	pop	{r4, r5, pc}
 8006862:	2904      	cmp	r1, #4
 8006864:	d111      	bne.n	800688a <HAL_TIM_Encoder_Start+0x78>
 8006866:	2801      	cmp	r0, #1
 8006868:	d12a      	bne.n	80068c0 <HAL_TIM_Encoder_Start+0xae>
 800686a:	2c01      	cmp	r4, #1
 800686c:	d1f8      	bne.n	8006860 <HAL_TIM_Encoder_Start+0x4e>
 800686e:	2202      	movs	r2, #2
 8006870:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006874:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006878:	681a      	ldr	r2, [r3, #0]
 800687a:	6a11      	ldr	r1, [r2, #32]
 800687c:	f021 0110 	bic.w	r1, r1, #16
 8006880:	6211      	str	r1, [r2, #32]
 8006882:	6a11      	ldr	r1, [r2, #32]
 8006884:	f041 0110 	orr.w	r1, r1, #16
 8006888:	e7e3      	b.n	8006852 <HAL_TIM_Encoder_Start+0x40>
 800688a:	2a01      	cmp	r2, #1
 800688c:	d118      	bne.n	80068c0 <HAL_TIM_Encoder_Start+0xae>
 800688e:	2801      	cmp	r0, #1
 8006890:	d118      	bne.n	80068c4 <HAL_TIM_Encoder_Start+0xb2>
 8006892:	2d01      	cmp	r5, #1
 8006894:	d1e4      	bne.n	8006860 <HAL_TIM_Encoder_Start+0x4e>
 8006896:	2c01      	cmp	r4, #1
 8006898:	d1e2      	bne.n	8006860 <HAL_TIM_Encoder_Start+0x4e>
 800689a:	2202      	movs	r2, #2
 800689c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068a0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80068a4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80068a8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80068ac:	681a      	ldr	r2, [r3, #0]
 80068ae:	6a11      	ldr	r1, [r2, #32]
 80068b0:	f021 0101 	bic.w	r1, r1, #1
 80068b4:	6211      	str	r1, [r2, #32]
 80068b6:	6a11      	ldr	r1, [r2, #32]
 80068b8:	f041 0101 	orr.w	r1, r1, #1
 80068bc:	6211      	str	r1, [r2, #32]
 80068be:	e7dc      	b.n	800687a <HAL_TIM_Encoder_Start+0x68>
 80068c0:	2001      	movs	r0, #1
 80068c2:	e7cd      	b.n	8006860 <HAL_TIM_Encoder_Start+0x4e>
 80068c4:	4610      	mov	r0, r2
 80068c6:	e7cb      	b.n	8006860 <HAL_TIM_Encoder_Start+0x4e>

080068c8 <HAL_TIM_OC_DelayElapsedCallback>:
 80068c8:	4770      	bx	lr

080068ca <HAL_TIM_IC_CaptureCallback>:
 80068ca:	4770      	bx	lr

080068cc <HAL_TIM_PWM_PulseFinishedCallback>:
 80068cc:	4770      	bx	lr

080068ce <HAL_TIM_TriggerCallback>:
 80068ce:	4770      	bx	lr

080068d0 <HAL_TIM_IRQHandler>:
 80068d0:	6803      	ldr	r3, [r0, #0]
 80068d2:	b510      	push	{r4, lr}
 80068d4:	691a      	ldr	r2, [r3, #16]
 80068d6:	4604      	mov	r4, r0
 80068d8:	0791      	lsls	r1, r2, #30
 80068da:	d50e      	bpl.n	80068fa <HAL_TIM_IRQHandler+0x2a>
 80068dc:	68da      	ldr	r2, [r3, #12]
 80068de:	0792      	lsls	r2, r2, #30
 80068e0:	d50b      	bpl.n	80068fa <HAL_TIM_IRQHandler+0x2a>
 80068e2:	f06f 0202 	mvn.w	r2, #2
 80068e6:	611a      	str	r2, [r3, #16]
 80068e8:	2201      	movs	r2, #1
 80068ea:	7702      	strb	r2, [r0, #28]
 80068ec:	699b      	ldr	r3, [r3, #24]
 80068ee:	079b      	lsls	r3, r3, #30
 80068f0:	d077      	beq.n	80069e2 <HAL_TIM_IRQHandler+0x112>
 80068f2:	f7ff ffea 	bl	80068ca <HAL_TIM_IC_CaptureCallback>
 80068f6:	2300      	movs	r3, #0
 80068f8:	7723      	strb	r3, [r4, #28]
 80068fa:	6823      	ldr	r3, [r4, #0]
 80068fc:	691a      	ldr	r2, [r3, #16]
 80068fe:	0750      	lsls	r0, r2, #29
 8006900:	d510      	bpl.n	8006924 <HAL_TIM_IRQHandler+0x54>
 8006902:	68da      	ldr	r2, [r3, #12]
 8006904:	0751      	lsls	r1, r2, #29
 8006906:	d50d      	bpl.n	8006924 <HAL_TIM_IRQHandler+0x54>
 8006908:	f06f 0204 	mvn.w	r2, #4
 800690c:	611a      	str	r2, [r3, #16]
 800690e:	2202      	movs	r2, #2
 8006910:	7722      	strb	r2, [r4, #28]
 8006912:	699b      	ldr	r3, [r3, #24]
 8006914:	4620      	mov	r0, r4
 8006916:	f413 7f40 	tst.w	r3, #768	; 0x300
 800691a:	d068      	beq.n	80069ee <HAL_TIM_IRQHandler+0x11e>
 800691c:	f7ff ffd5 	bl	80068ca <HAL_TIM_IC_CaptureCallback>
 8006920:	2300      	movs	r3, #0
 8006922:	7723      	strb	r3, [r4, #28]
 8006924:	6823      	ldr	r3, [r4, #0]
 8006926:	691a      	ldr	r2, [r3, #16]
 8006928:	0712      	lsls	r2, r2, #28
 800692a:	d50f      	bpl.n	800694c <HAL_TIM_IRQHandler+0x7c>
 800692c:	68da      	ldr	r2, [r3, #12]
 800692e:	0710      	lsls	r0, r2, #28
 8006930:	d50c      	bpl.n	800694c <HAL_TIM_IRQHandler+0x7c>
 8006932:	f06f 0208 	mvn.w	r2, #8
 8006936:	611a      	str	r2, [r3, #16]
 8006938:	2204      	movs	r2, #4
 800693a:	7722      	strb	r2, [r4, #28]
 800693c:	69db      	ldr	r3, [r3, #28]
 800693e:	4620      	mov	r0, r4
 8006940:	0799      	lsls	r1, r3, #30
 8006942:	d05a      	beq.n	80069fa <HAL_TIM_IRQHandler+0x12a>
 8006944:	f7ff ffc1 	bl	80068ca <HAL_TIM_IC_CaptureCallback>
 8006948:	2300      	movs	r3, #0
 800694a:	7723      	strb	r3, [r4, #28]
 800694c:	6823      	ldr	r3, [r4, #0]
 800694e:	691a      	ldr	r2, [r3, #16]
 8006950:	06d2      	lsls	r2, r2, #27
 8006952:	d510      	bpl.n	8006976 <HAL_TIM_IRQHandler+0xa6>
 8006954:	68da      	ldr	r2, [r3, #12]
 8006956:	06d0      	lsls	r0, r2, #27
 8006958:	d50d      	bpl.n	8006976 <HAL_TIM_IRQHandler+0xa6>
 800695a:	f06f 0210 	mvn.w	r2, #16
 800695e:	611a      	str	r2, [r3, #16]
 8006960:	2208      	movs	r2, #8
 8006962:	7722      	strb	r2, [r4, #28]
 8006964:	69db      	ldr	r3, [r3, #28]
 8006966:	4620      	mov	r0, r4
 8006968:	f413 7f40 	tst.w	r3, #768	; 0x300
 800696c:	d04b      	beq.n	8006a06 <HAL_TIM_IRQHandler+0x136>
 800696e:	f7ff ffac 	bl	80068ca <HAL_TIM_IC_CaptureCallback>
 8006972:	2300      	movs	r3, #0
 8006974:	7723      	strb	r3, [r4, #28]
 8006976:	6823      	ldr	r3, [r4, #0]
 8006978:	691a      	ldr	r2, [r3, #16]
 800697a:	07d1      	lsls	r1, r2, #31
 800697c:	d508      	bpl.n	8006990 <HAL_TIM_IRQHandler+0xc0>
 800697e:	68da      	ldr	r2, [r3, #12]
 8006980:	07d2      	lsls	r2, r2, #31
 8006982:	d505      	bpl.n	8006990 <HAL_TIM_IRQHandler+0xc0>
 8006984:	f06f 0201 	mvn.w	r2, #1
 8006988:	4620      	mov	r0, r4
 800698a:	611a      	str	r2, [r3, #16]
 800698c:	f7fb f932 	bl	8001bf4 <HAL_TIM_PeriodElapsedCallback>
 8006990:	6823      	ldr	r3, [r4, #0]
 8006992:	691a      	ldr	r2, [r3, #16]
 8006994:	0610      	lsls	r0, r2, #24
 8006996:	d508      	bpl.n	80069aa <HAL_TIM_IRQHandler+0xda>
 8006998:	68da      	ldr	r2, [r3, #12]
 800699a:	0611      	lsls	r1, r2, #24
 800699c:	d505      	bpl.n	80069aa <HAL_TIM_IRQHandler+0xda>
 800699e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80069a2:	4620      	mov	r0, r4
 80069a4:	611a      	str	r2, [r3, #16]
 80069a6:	f000 face 	bl	8006f46 <HAL_TIMEx_BreakCallback>
 80069aa:	6823      	ldr	r3, [r4, #0]
 80069ac:	691a      	ldr	r2, [r3, #16]
 80069ae:	0652      	lsls	r2, r2, #25
 80069b0:	d508      	bpl.n	80069c4 <HAL_TIM_IRQHandler+0xf4>
 80069b2:	68da      	ldr	r2, [r3, #12]
 80069b4:	0650      	lsls	r0, r2, #25
 80069b6:	d505      	bpl.n	80069c4 <HAL_TIM_IRQHandler+0xf4>
 80069b8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80069bc:	4620      	mov	r0, r4
 80069be:	611a      	str	r2, [r3, #16]
 80069c0:	f7ff ff85 	bl	80068ce <HAL_TIM_TriggerCallback>
 80069c4:	6823      	ldr	r3, [r4, #0]
 80069c6:	691a      	ldr	r2, [r3, #16]
 80069c8:	0691      	lsls	r1, r2, #26
 80069ca:	d522      	bpl.n	8006a12 <HAL_TIM_IRQHandler+0x142>
 80069cc:	68da      	ldr	r2, [r3, #12]
 80069ce:	0692      	lsls	r2, r2, #26
 80069d0:	d51f      	bpl.n	8006a12 <HAL_TIM_IRQHandler+0x142>
 80069d2:	f06f 0220 	mvn.w	r2, #32
 80069d6:	4620      	mov	r0, r4
 80069d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80069dc:	611a      	str	r2, [r3, #16]
 80069de:	f000 bab1 	b.w	8006f44 <HAL_TIMEx_CommutCallback>
 80069e2:	f7ff ff71 	bl	80068c8 <HAL_TIM_OC_DelayElapsedCallback>
 80069e6:	4620      	mov	r0, r4
 80069e8:	f7ff ff70 	bl	80068cc <HAL_TIM_PWM_PulseFinishedCallback>
 80069ec:	e783      	b.n	80068f6 <HAL_TIM_IRQHandler+0x26>
 80069ee:	f7ff ff6b 	bl	80068c8 <HAL_TIM_OC_DelayElapsedCallback>
 80069f2:	4620      	mov	r0, r4
 80069f4:	f7ff ff6a 	bl	80068cc <HAL_TIM_PWM_PulseFinishedCallback>
 80069f8:	e792      	b.n	8006920 <HAL_TIM_IRQHandler+0x50>
 80069fa:	f7ff ff65 	bl	80068c8 <HAL_TIM_OC_DelayElapsedCallback>
 80069fe:	4620      	mov	r0, r4
 8006a00:	f7ff ff64 	bl	80068cc <HAL_TIM_PWM_PulseFinishedCallback>
 8006a04:	e7a0      	b.n	8006948 <HAL_TIM_IRQHandler+0x78>
 8006a06:	f7ff ff5f 	bl	80068c8 <HAL_TIM_OC_DelayElapsedCallback>
 8006a0a:	4620      	mov	r0, r4
 8006a0c:	f7ff ff5e 	bl	80068cc <HAL_TIM_PWM_PulseFinishedCallback>
 8006a10:	e7af      	b.n	8006972 <HAL_TIM_IRQHandler+0xa2>
 8006a12:	bd10      	pop	{r4, pc}

08006a14 <TIM_Base_SetConfig>:
 8006a14:	4a1a      	ldr	r2, [pc, #104]	; (8006a80 <TIM_Base_SetConfig+0x6c>)
 8006a16:	6803      	ldr	r3, [r0, #0]
 8006a18:	4290      	cmp	r0, r2
 8006a1a:	d00a      	beq.n	8006a32 <TIM_Base_SetConfig+0x1e>
 8006a1c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006a20:	d007      	beq.n	8006a32 <TIM_Base_SetConfig+0x1e>
 8006a22:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006a26:	4290      	cmp	r0, r2
 8006a28:	d003      	beq.n	8006a32 <TIM_Base_SetConfig+0x1e>
 8006a2a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a2e:	4290      	cmp	r0, r2
 8006a30:	d115      	bne.n	8006a5e <TIM_Base_SetConfig+0x4a>
 8006a32:	684a      	ldr	r2, [r1, #4]
 8006a34:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006a38:	4313      	orrs	r3, r2
 8006a3a:	4a11      	ldr	r2, [pc, #68]	; (8006a80 <TIM_Base_SetConfig+0x6c>)
 8006a3c:	4290      	cmp	r0, r2
 8006a3e:	d00a      	beq.n	8006a56 <TIM_Base_SetConfig+0x42>
 8006a40:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006a44:	d007      	beq.n	8006a56 <TIM_Base_SetConfig+0x42>
 8006a46:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006a4a:	4290      	cmp	r0, r2
 8006a4c:	d003      	beq.n	8006a56 <TIM_Base_SetConfig+0x42>
 8006a4e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a52:	4290      	cmp	r0, r2
 8006a54:	d103      	bne.n	8006a5e <TIM_Base_SetConfig+0x4a>
 8006a56:	68ca      	ldr	r2, [r1, #12]
 8006a58:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006a5c:	4313      	orrs	r3, r2
 8006a5e:	694a      	ldr	r2, [r1, #20]
 8006a60:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006a64:	4313      	orrs	r3, r2
 8006a66:	6003      	str	r3, [r0, #0]
 8006a68:	688b      	ldr	r3, [r1, #8]
 8006a6a:	62c3      	str	r3, [r0, #44]	; 0x2c
 8006a6c:	680b      	ldr	r3, [r1, #0]
 8006a6e:	6283      	str	r3, [r0, #40]	; 0x28
 8006a70:	4b03      	ldr	r3, [pc, #12]	; (8006a80 <TIM_Base_SetConfig+0x6c>)
 8006a72:	4298      	cmp	r0, r3
 8006a74:	bf04      	itt	eq
 8006a76:	690b      	ldreq	r3, [r1, #16]
 8006a78:	6303      	streq	r3, [r0, #48]	; 0x30
 8006a7a:	2301      	movs	r3, #1
 8006a7c:	6143      	str	r3, [r0, #20]
 8006a7e:	4770      	bx	lr
 8006a80:	40012c00 	.word	0x40012c00

08006a84 <HAL_TIM_Base_Init>:
 8006a84:	b510      	push	{r4, lr}
 8006a86:	4604      	mov	r4, r0
 8006a88:	b330      	cbz	r0, 8006ad8 <HAL_TIM_Base_Init+0x54>
 8006a8a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006a8e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a92:	b91b      	cbnz	r3, 8006a9c <HAL_TIM_Base_Init+0x18>
 8006a94:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8006a98:	f7fb fcd0 	bl	800243c <HAL_TIM_Base_MspInit>
 8006a9c:	2302      	movs	r3, #2
 8006a9e:	6820      	ldr	r0, [r4, #0]
 8006aa0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006aa4:	1d21      	adds	r1, r4, #4
 8006aa6:	f7ff ffb5 	bl	8006a14 <TIM_Base_SetConfig>
 8006aaa:	2301      	movs	r3, #1
 8006aac:	2000      	movs	r0, #0
 8006aae:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8006ab2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006ab6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8006aba:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8006abe:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8006ac2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006ac6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006aca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8006ace:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8006ad2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006ad6:	bd10      	pop	{r4, pc}
 8006ad8:	2001      	movs	r0, #1
 8006ada:	e7fc      	b.n	8006ad6 <HAL_TIM_Base_Init+0x52>

08006adc <HAL_TIM_PWM_Init>:
 8006adc:	b510      	push	{r4, lr}
 8006ade:	4604      	mov	r4, r0
 8006ae0:	b330      	cbz	r0, 8006b30 <HAL_TIM_PWM_Init+0x54>
 8006ae2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006ae6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006aea:	b91b      	cbnz	r3, 8006af4 <HAL_TIM_PWM_Init+0x18>
 8006aec:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8006af0:	f7ff fe8e 	bl	8006810 <HAL_TIM_PWM_MspInit>
 8006af4:	2302      	movs	r3, #2
 8006af6:	6820      	ldr	r0, [r4, #0]
 8006af8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006afc:	1d21      	adds	r1, r4, #4
 8006afe:	f7ff ff89 	bl	8006a14 <TIM_Base_SetConfig>
 8006b02:	2301      	movs	r3, #1
 8006b04:	2000      	movs	r0, #0
 8006b06:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8006b0a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006b0e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8006b12:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8006b16:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8006b1a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006b1e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006b22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8006b26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8006b2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006b2e:	bd10      	pop	{r4, pc}
 8006b30:	2001      	movs	r0, #1
 8006b32:	e7fc      	b.n	8006b2e <HAL_TIM_PWM_Init+0x52>

08006b34 <HAL_TIM_Encoder_Init>:
 8006b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b36:	460d      	mov	r5, r1
 8006b38:	4604      	mov	r4, r0
 8006b3a:	2800      	cmp	r0, #0
 8006b3c:	d04d      	beq.n	8006bda <HAL_TIM_Encoder_Init+0xa6>
 8006b3e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006b42:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006b46:	b91b      	cbnz	r3, 8006b50 <HAL_TIM_Encoder_Init+0x1c>
 8006b48:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8006b4c:	f7fb fcac 	bl	80024a8 <HAL_TIM_Encoder_MspInit>
 8006b50:	2302      	movs	r3, #2
 8006b52:	4621      	mov	r1, r4
 8006b54:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006b58:	f851 0b04 	ldr.w	r0, [r1], #4
 8006b5c:	6883      	ldr	r3, [r0, #8]
 8006b5e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006b62:	f023 0307 	bic.w	r3, r3, #7
 8006b66:	6083      	str	r3, [r0, #8]
 8006b68:	f7ff ff54 	bl	8006a14 <TIM_Base_SetConfig>
 8006b6c:	6820      	ldr	r0, [r4, #0]
 8006b6e:	682b      	ldr	r3, [r5, #0]
 8006b70:	6886      	ldr	r6, [r0, #8]
 8006b72:	6982      	ldr	r2, [r0, #24]
 8006b74:	68a9      	ldr	r1, [r5, #8]
 8006b76:	431e      	orrs	r6, r3
 8006b78:	69ab      	ldr	r3, [r5, #24]
 8006b7a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006b7e:	f022 0203 	bic.w	r2, r2, #3
 8006b82:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 8006b86:	4313      	orrs	r3, r2
 8006b88:	f423 427c 	bic.w	r2, r3, #64512	; 0xfc00
 8006b8c:	692b      	ldr	r3, [r5, #16]
 8006b8e:	69e9      	ldr	r1, [r5, #28]
 8006b90:	011b      	lsls	r3, r3, #4
 8006b92:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8006b96:	68e9      	ldr	r1, [r5, #12]
 8006b98:	6a07      	ldr	r7, [r0, #32]
 8006b9a:	430b      	orrs	r3, r1
 8006b9c:	6a29      	ldr	r1, [r5, #32]
 8006b9e:	f022 02fc 	bic.w	r2, r2, #252	; 0xfc
 8006ba2:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8006ba6:	4313      	orrs	r3, r2
 8006ba8:	6969      	ldr	r1, [r5, #20]
 8006baa:	f027 0222 	bic.w	r2, r7, #34	; 0x22
 8006bae:	686f      	ldr	r7, [r5, #4]
 8006bb0:	6086      	str	r6, [r0, #8]
 8006bb2:	ea47 1701 	orr.w	r7, r7, r1, lsl #4
 8006bb6:	6183      	str	r3, [r0, #24]
 8006bb8:	4317      	orrs	r7, r2
 8006bba:	2301      	movs	r3, #1
 8006bbc:	6207      	str	r7, [r0, #32]
 8006bbe:	2000      	movs	r0, #0
 8006bc0:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 8006bc4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006bc8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8006bcc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006bd0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006bd4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006bd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006bda:	2001      	movs	r0, #1
 8006bdc:	e7fc      	b.n	8006bd8 <HAL_TIM_Encoder_Init+0xa4>
	...

08006be0 <TIM_OC2_SetConfig>:
 8006be0:	6a03      	ldr	r3, [r0, #32]
 8006be2:	b570      	push	{r4, r5, r6, lr}
 8006be4:	f023 0310 	bic.w	r3, r3, #16
 8006be8:	6203      	str	r3, [r0, #32]
 8006bea:	6a03      	ldr	r3, [r0, #32]
 8006bec:	6844      	ldr	r4, [r0, #4]
 8006bee:	6982      	ldr	r2, [r0, #24]
 8006bf0:	680d      	ldr	r5, [r1, #0]
 8006bf2:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8006bf6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006bfa:	688d      	ldr	r5, [r1, #8]
 8006bfc:	f023 0320 	bic.w	r3, r3, #32
 8006c00:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8006c04:	4d0b      	ldr	r5, [pc, #44]	; (8006c34 <TIM_OC2_SetConfig+0x54>)
 8006c06:	42a8      	cmp	r0, r5
 8006c08:	d10d      	bne.n	8006c26 <TIM_OC2_SetConfig+0x46>
 8006c0a:	68cd      	ldr	r5, [r1, #12]
 8006c0c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006c10:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8006c14:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 8006c18:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
 8006c1c:	4335      	orrs	r5, r6
 8006c1e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006c22:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
 8006c26:	6044      	str	r4, [r0, #4]
 8006c28:	6182      	str	r2, [r0, #24]
 8006c2a:	684a      	ldr	r2, [r1, #4]
 8006c2c:	6382      	str	r2, [r0, #56]	; 0x38
 8006c2e:	6203      	str	r3, [r0, #32]
 8006c30:	bd70      	pop	{r4, r5, r6, pc}
 8006c32:	bf00      	nop
 8006c34:	40012c00 	.word	0x40012c00

08006c38 <HAL_TIM_PWM_ConfigChannel>:
 8006c38:	b538      	push	{r3, r4, r5, lr}
 8006c3a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006c3e:	4604      	mov	r4, r0
 8006c40:	2b01      	cmp	r3, #1
 8006c42:	d052      	beq.n	8006cea <HAL_TIM_PWM_ConfigChannel+0xb2>
 8006c44:	2301      	movs	r3, #1
 8006c46:	2a08      	cmp	r2, #8
 8006c48:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8006c4c:	d03c      	beq.n	8006cc8 <HAL_TIM_PWM_ConfigChannel+0x90>
 8006c4e:	d806      	bhi.n	8006c5e <HAL_TIM_PWM_ConfigChannel+0x26>
 8006c50:	b1c2      	cbz	r2, 8006c84 <HAL_TIM_PWM_ConfigChannel+0x4c>
 8006c52:	2a04      	cmp	r2, #4
 8006c54:	d027      	beq.n	8006ca6 <HAL_TIM_PWM_ConfigChannel+0x6e>
 8006c56:	2000      	movs	r0, #0
 8006c58:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
 8006c5c:	bd38      	pop	{r3, r4, r5, pc}
 8006c5e:	2a0c      	cmp	r2, #12
 8006c60:	d1f9      	bne.n	8006c56 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006c62:	6800      	ldr	r0, [r0, #0]
 8006c64:	f7ff fd62 	bl	800672c <TIM_OC4_SetConfig>
 8006c68:	6823      	ldr	r3, [r4, #0]
 8006c6a:	6909      	ldr	r1, [r1, #16]
 8006c6c:	69da      	ldr	r2, [r3, #28]
 8006c6e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006c72:	61da      	str	r2, [r3, #28]
 8006c74:	69da      	ldr	r2, [r3, #28]
 8006c76:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c7a:	61da      	str	r2, [r3, #28]
 8006c7c:	69da      	ldr	r2, [r3, #28]
 8006c7e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006c82:	e030      	b.n	8006ce6 <HAL_TIM_PWM_ConfigChannel+0xae>
 8006c84:	6800      	ldr	r0, [r0, #0]
 8006c86:	f7ff fcff 	bl	8006688 <TIM_OC1_SetConfig>
 8006c8a:	6823      	ldr	r3, [r4, #0]
 8006c8c:	6909      	ldr	r1, [r1, #16]
 8006c8e:	699a      	ldr	r2, [r3, #24]
 8006c90:	f042 0208 	orr.w	r2, r2, #8
 8006c94:	619a      	str	r2, [r3, #24]
 8006c96:	699a      	ldr	r2, [r3, #24]
 8006c98:	f022 0204 	bic.w	r2, r2, #4
 8006c9c:	619a      	str	r2, [r3, #24]
 8006c9e:	699a      	ldr	r2, [r3, #24]
 8006ca0:	430a      	orrs	r2, r1
 8006ca2:	619a      	str	r2, [r3, #24]
 8006ca4:	e7d7      	b.n	8006c56 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006ca6:	6800      	ldr	r0, [r0, #0]
 8006ca8:	f7ff ff9a 	bl	8006be0 <TIM_OC2_SetConfig>
 8006cac:	6823      	ldr	r3, [r4, #0]
 8006cae:	6909      	ldr	r1, [r1, #16]
 8006cb0:	699a      	ldr	r2, [r3, #24]
 8006cb2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006cb6:	619a      	str	r2, [r3, #24]
 8006cb8:	699a      	ldr	r2, [r3, #24]
 8006cba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006cbe:	619a      	str	r2, [r3, #24]
 8006cc0:	699a      	ldr	r2, [r3, #24]
 8006cc2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006cc6:	e7ec      	b.n	8006ca2 <HAL_TIM_PWM_ConfigChannel+0x6a>
 8006cc8:	6800      	ldr	r0, [r0, #0]
 8006cca:	f7ff fd05 	bl	80066d8 <TIM_OC3_SetConfig>
 8006cce:	6823      	ldr	r3, [r4, #0]
 8006cd0:	6909      	ldr	r1, [r1, #16]
 8006cd2:	69da      	ldr	r2, [r3, #28]
 8006cd4:	f042 0208 	orr.w	r2, r2, #8
 8006cd8:	61da      	str	r2, [r3, #28]
 8006cda:	69da      	ldr	r2, [r3, #28]
 8006cdc:	f022 0204 	bic.w	r2, r2, #4
 8006ce0:	61da      	str	r2, [r3, #28]
 8006ce2:	69da      	ldr	r2, [r3, #28]
 8006ce4:	430a      	orrs	r2, r1
 8006ce6:	61da      	str	r2, [r3, #28]
 8006ce8:	e7b5      	b.n	8006c56 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006cea:	2002      	movs	r0, #2
 8006cec:	e7b6      	b.n	8006c5c <HAL_TIM_PWM_ConfigChannel+0x24>

08006cee <TIM_ETR_SetConfig>:
 8006cee:	b510      	push	{r4, lr}
 8006cf0:	6884      	ldr	r4, [r0, #8]
 8006cf2:	430a      	orrs	r2, r1
 8006cf4:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
 8006cf8:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8006cfc:	4322      	orrs	r2, r4
 8006cfe:	6082      	str	r2, [r0, #8]
 8006d00:	bd10      	pop	{r4, pc}

08006d02 <HAL_TIM_ConfigClockSource>:
 8006d02:	b570      	push	{r4, r5, r6, lr}
 8006d04:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006d08:	4604      	mov	r4, r0
 8006d0a:	2b01      	cmp	r3, #1
 8006d0c:	f04f 0002 	mov.w	r0, #2
 8006d10:	d027      	beq.n	8006d62 <HAL_TIM_ConfigClockSource+0x60>
 8006d12:	2301      	movs	r3, #1
 8006d14:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 8006d18:	6820      	ldr	r0, [r4, #0]
 8006d1a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8006d1e:	6883      	ldr	r3, [r0, #8]
 8006d20:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006d24:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006d28:	6083      	str	r3, [r0, #8]
 8006d2a:	680b      	ldr	r3, [r1, #0]
 8006d2c:	2b60      	cmp	r3, #96	; 0x60
 8006d2e:	d04d      	beq.n	8006dcc <HAL_TIM_ConfigClockSource+0xca>
 8006d30:	d832      	bhi.n	8006d98 <HAL_TIM_ConfigClockSource+0x96>
 8006d32:	2b40      	cmp	r3, #64	; 0x40
 8006d34:	d062      	beq.n	8006dfc <HAL_TIM_ConfigClockSource+0xfa>
 8006d36:	d815      	bhi.n	8006d64 <HAL_TIM_ConfigClockSource+0x62>
 8006d38:	2b20      	cmp	r3, #32
 8006d3a:	d003      	beq.n	8006d44 <HAL_TIM_ConfigClockSource+0x42>
 8006d3c:	d809      	bhi.n	8006d52 <HAL_TIM_ConfigClockSource+0x50>
 8006d3e:	f033 0210 	bics.w	r2, r3, #16
 8006d42:	d108      	bne.n	8006d56 <HAL_TIM_ConfigClockSource+0x54>
 8006d44:	6882      	ldr	r2, [r0, #8]
 8006d46:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8006d4a:	4313      	orrs	r3, r2
 8006d4c:	f043 0307 	orr.w	r3, r3, #7
 8006d50:	e020      	b.n	8006d94 <HAL_TIM_ConfigClockSource+0x92>
 8006d52:	2b30      	cmp	r3, #48	; 0x30
 8006d54:	d0f6      	beq.n	8006d44 <HAL_TIM_ConfigClockSource+0x42>
 8006d56:	2301      	movs	r3, #1
 8006d58:	2000      	movs	r0, #0
 8006d5a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8006d5e:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
 8006d62:	bd70      	pop	{r4, r5, r6, pc}
 8006d64:	2b50      	cmp	r3, #80	; 0x50
 8006d66:	d1f6      	bne.n	8006d56 <HAL_TIM_ConfigClockSource+0x54>
 8006d68:	684a      	ldr	r2, [r1, #4]
 8006d6a:	68ce      	ldr	r6, [r1, #12]
 8006d6c:	6a01      	ldr	r1, [r0, #32]
 8006d6e:	6a05      	ldr	r5, [r0, #32]
 8006d70:	f021 010a 	bic.w	r1, r1, #10
 8006d74:	f025 0501 	bic.w	r5, r5, #1
 8006d78:	6205      	str	r5, [r0, #32]
 8006d7a:	6983      	ldr	r3, [r0, #24]
 8006d7c:	430a      	orrs	r2, r1
 8006d7e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006d82:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 8006d86:	6183      	str	r3, [r0, #24]
 8006d88:	6202      	str	r2, [r0, #32]
 8006d8a:	6883      	ldr	r3, [r0, #8]
 8006d8c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006d90:	f043 0357 	orr.w	r3, r3, #87	; 0x57
 8006d94:	6083      	str	r3, [r0, #8]
 8006d96:	e7de      	b.n	8006d56 <HAL_TIM_ConfigClockSource+0x54>
 8006d98:	2b70      	cmp	r3, #112	; 0x70
 8006d9a:	d00c      	beq.n	8006db6 <HAL_TIM_ConfigClockSource+0xb4>
 8006d9c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006da0:	d1d9      	bne.n	8006d56 <HAL_TIM_ConfigClockSource+0x54>
 8006da2:	68cb      	ldr	r3, [r1, #12]
 8006da4:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8006da8:	f7ff ffa1 	bl	8006cee <TIM_ETR_SetConfig>
 8006dac:	6822      	ldr	r2, [r4, #0]
 8006dae:	6893      	ldr	r3, [r2, #8]
 8006db0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006db4:	e008      	b.n	8006dc8 <HAL_TIM_ConfigClockSource+0xc6>
 8006db6:	68cb      	ldr	r3, [r1, #12]
 8006db8:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8006dbc:	f7ff ff97 	bl	8006cee <TIM_ETR_SetConfig>
 8006dc0:	6822      	ldr	r2, [r4, #0]
 8006dc2:	6893      	ldr	r3, [r2, #8]
 8006dc4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8006dc8:	6093      	str	r3, [r2, #8]
 8006dca:	e7c4      	b.n	8006d56 <HAL_TIM_ConfigClockSource+0x54>
 8006dcc:	684d      	ldr	r5, [r1, #4]
 8006dce:	68ce      	ldr	r6, [r1, #12]
 8006dd0:	6a01      	ldr	r1, [r0, #32]
 8006dd2:	f021 0110 	bic.w	r1, r1, #16
 8006dd6:	6201      	str	r1, [r0, #32]
 8006dd8:	6982      	ldr	r2, [r0, #24]
 8006dda:	6a03      	ldr	r3, [r0, #32]
 8006ddc:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8006de0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8006de4:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8006de8:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
 8006dec:	6182      	str	r2, [r0, #24]
 8006dee:	6203      	str	r3, [r0, #32]
 8006df0:	6883      	ldr	r3, [r0, #8]
 8006df2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006df6:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 8006dfa:	e7cb      	b.n	8006d94 <HAL_TIM_ConfigClockSource+0x92>
 8006dfc:	684a      	ldr	r2, [r1, #4]
 8006dfe:	68ce      	ldr	r6, [r1, #12]
 8006e00:	6a01      	ldr	r1, [r0, #32]
 8006e02:	6a05      	ldr	r5, [r0, #32]
 8006e04:	f021 010a 	bic.w	r1, r1, #10
 8006e08:	f025 0501 	bic.w	r5, r5, #1
 8006e0c:	6205      	str	r5, [r0, #32]
 8006e0e:	6983      	ldr	r3, [r0, #24]
 8006e10:	430a      	orrs	r2, r1
 8006e12:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006e16:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 8006e1a:	6183      	str	r3, [r0, #24]
 8006e1c:	6202      	str	r2, [r0, #32]
 8006e1e:	6883      	ldr	r3, [r0, #8]
 8006e20:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006e24:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 8006e28:	e7b4      	b.n	8006d94 <HAL_TIM_ConfigClockSource+0x92>

08006e2a <TIM_CCxChannelCmd>:
 8006e2a:	b510      	push	{r4, lr}
 8006e2c:	2401      	movs	r4, #1
 8006e2e:	6a03      	ldr	r3, [r0, #32]
 8006e30:	f001 011f 	and.w	r1, r1, #31
 8006e34:	408c      	lsls	r4, r1
 8006e36:	ea23 0304 	bic.w	r3, r3, r4
 8006e3a:	6203      	str	r3, [r0, #32]
 8006e3c:	6a03      	ldr	r3, [r0, #32]
 8006e3e:	408a      	lsls	r2, r1
 8006e40:	431a      	orrs	r2, r3
 8006e42:	6202      	str	r2, [r0, #32]
 8006e44:	bd10      	pop	{r4, pc}
	...

08006e48 <HAL_TIM_OC_Start>:
 8006e48:	b510      	push	{r4, lr}
 8006e4a:	4604      	mov	r4, r0
 8006e4c:	b929      	cbnz	r1, 8006e5a <HAL_TIM_OC_Start+0x12>
 8006e4e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 8006e52:	2b01      	cmp	r3, #1
 8006e54:	d01d      	beq.n	8006e92 <HAL_TIM_OC_Start+0x4a>
 8006e56:	2001      	movs	r0, #1
 8006e58:	bd10      	pop	{r4, pc}
 8006e5a:	2904      	cmp	r1, #4
 8006e5c:	d107      	bne.n	8006e6e <HAL_TIM_OC_Start+0x26>
 8006e5e:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 8006e62:	2b01      	cmp	r3, #1
 8006e64:	d1f7      	bne.n	8006e56 <HAL_TIM_OC_Start+0xe>
 8006e66:	2302      	movs	r3, #2
 8006e68:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 8006e6c:	e014      	b.n	8006e98 <HAL_TIM_OC_Start+0x50>
 8006e6e:	2908      	cmp	r1, #8
 8006e70:	d107      	bne.n	8006e82 <HAL_TIM_OC_Start+0x3a>
 8006e72:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8006e76:	2b01      	cmp	r3, #1
 8006e78:	d1ed      	bne.n	8006e56 <HAL_TIM_OC_Start+0xe>
 8006e7a:	2302      	movs	r3, #2
 8006e7c:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8006e80:	e00a      	b.n	8006e98 <HAL_TIM_OC_Start+0x50>
 8006e82:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8006e86:	2b01      	cmp	r3, #1
 8006e88:	d1e5      	bne.n	8006e56 <HAL_TIM_OC_Start+0xe>
 8006e8a:	2302      	movs	r3, #2
 8006e8c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 8006e90:	e002      	b.n	8006e98 <HAL_TIM_OC_Start+0x50>
 8006e92:	2302      	movs	r3, #2
 8006e94:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 8006e98:	2201      	movs	r2, #1
 8006e9a:	6820      	ldr	r0, [r4, #0]
 8006e9c:	f7ff ffc5 	bl	8006e2a <TIM_CCxChannelCmd>
 8006ea0:	6823      	ldr	r3, [r4, #0]
 8006ea2:	4a0e      	ldr	r2, [pc, #56]	; (8006edc <HAL_TIM_OC_Start+0x94>)
 8006ea4:	4293      	cmp	r3, r2
 8006ea6:	d10a      	bne.n	8006ebe <HAL_TIM_OC_Start+0x76>
 8006ea8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006eaa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006eae:	645a      	str	r2, [r3, #68]	; 0x44
 8006eb0:	689a      	ldr	r2, [r3, #8]
 8006eb2:	f002 0207 	and.w	r2, r2, #7
 8006eb6:	2a06      	cmp	r2, #6
 8006eb8:	d10b      	bne.n	8006ed2 <HAL_TIM_OC_Start+0x8a>
 8006eba:	2000      	movs	r0, #0
 8006ebc:	e7cc      	b.n	8006e58 <HAL_TIM_OC_Start+0x10>
 8006ebe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006ec2:	d0f5      	beq.n	8006eb0 <HAL_TIM_OC_Start+0x68>
 8006ec4:	4a06      	ldr	r2, [pc, #24]	; (8006ee0 <HAL_TIM_OC_Start+0x98>)
 8006ec6:	4293      	cmp	r3, r2
 8006ec8:	d0f2      	beq.n	8006eb0 <HAL_TIM_OC_Start+0x68>
 8006eca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ece:	4293      	cmp	r3, r2
 8006ed0:	d0ee      	beq.n	8006eb0 <HAL_TIM_OC_Start+0x68>
 8006ed2:	681a      	ldr	r2, [r3, #0]
 8006ed4:	f042 0201 	orr.w	r2, r2, #1
 8006ed8:	601a      	str	r2, [r3, #0]
 8006eda:	e7ee      	b.n	8006eba <HAL_TIM_OC_Start+0x72>
 8006edc:	40012c00 	.word	0x40012c00
 8006ee0:	40000400 	.word	0x40000400

08006ee4 <HAL_TIM_PWM_Start>:
 8006ee4:	f7ff bfb0 	b.w	8006e48 <HAL_TIM_OC_Start>

08006ee8 <HAL_TIMEx_MasterConfigSynchronization>:
 8006ee8:	b530      	push	{r4, r5, lr}
 8006eea:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006eee:	4602      	mov	r2, r0
 8006ef0:	2b01      	cmp	r3, #1
 8006ef2:	f04f 0002 	mov.w	r0, #2
 8006ef6:	d022      	beq.n	8006f3e <HAL_TIMEx_MasterConfigSynchronization+0x56>
 8006ef8:	6813      	ldr	r3, [r2, #0]
 8006efa:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
 8006efe:	685c      	ldr	r4, [r3, #4]
 8006f00:	680d      	ldr	r5, [r1, #0]
 8006f02:	f024 0470 	bic.w	r4, r4, #112	; 0x70
 8006f06:	432c      	orrs	r4, r5
 8006f08:	6898      	ldr	r0, [r3, #8]
 8006f0a:	605c      	str	r4, [r3, #4]
 8006f0c:	4c0c      	ldr	r4, [pc, #48]	; (8006f40 <HAL_TIMEx_MasterConfigSynchronization+0x58>)
 8006f0e:	42a3      	cmp	r3, r4
 8006f10:	d00a      	beq.n	8006f28 <HAL_TIMEx_MasterConfigSynchronization+0x40>
 8006f12:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006f16:	d007      	beq.n	8006f28 <HAL_TIMEx_MasterConfigSynchronization+0x40>
 8006f18:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8006f1c:	42a3      	cmp	r3, r4
 8006f1e:	d003      	beq.n	8006f28 <HAL_TIMEx_MasterConfigSynchronization+0x40>
 8006f20:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006f24:	42a3      	cmp	r3, r4
 8006f26:	d104      	bne.n	8006f32 <HAL_TIMEx_MasterConfigSynchronization+0x4a>
 8006f28:	6849      	ldr	r1, [r1, #4]
 8006f2a:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8006f2e:	4301      	orrs	r1, r0
 8006f30:	6099      	str	r1, [r3, #8]
 8006f32:	2301      	movs	r3, #1
 8006f34:	2000      	movs	r0, #0
 8006f36:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
 8006f3a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
 8006f3e:	bd30      	pop	{r4, r5, pc}
 8006f40:	40012c00 	.word	0x40012c00

08006f44 <HAL_TIMEx_CommutCallback>:
 8006f44:	4770      	bx	lr

08006f46 <HAL_TIMEx_BreakCallback>:
 8006f46:	4770      	bx	lr

08006f48 <UART_SetConfig>:
 8006f48:	b510      	push	{r4, lr}
 8006f4a:	4604      	mov	r4, r0
 8006f4c:	6803      	ldr	r3, [r0, #0]
 8006f4e:	68c1      	ldr	r1, [r0, #12]
 8006f50:	691a      	ldr	r2, [r3, #16]
 8006f52:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8006f56:	430a      	orrs	r2, r1
 8006f58:	611a      	str	r2, [r3, #16]
 8006f5a:	6882      	ldr	r2, [r0, #8]
 8006f5c:	6900      	ldr	r0, [r0, #16]
 8006f5e:	68d9      	ldr	r1, [r3, #12]
 8006f60:	4302      	orrs	r2, r0
 8006f62:	6960      	ldr	r0, [r4, #20]
 8006f64:	f421 51b0 	bic.w	r1, r1, #5632	; 0x1600
 8006f68:	f021 010c 	bic.w	r1, r1, #12
 8006f6c:	4302      	orrs	r2, r0
 8006f6e:	430a      	orrs	r2, r1
 8006f70:	60da      	str	r2, [r3, #12]
 8006f72:	695a      	ldr	r2, [r3, #20]
 8006f74:	69a1      	ldr	r1, [r4, #24]
 8006f76:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006f7a:	430a      	orrs	r2, r1
 8006f7c:	615a      	str	r2, [r3, #20]
 8006f7e:	4a0e      	ldr	r2, [pc, #56]	; (8006fb8 <UART_SetConfig+0x70>)
 8006f80:	4293      	cmp	r3, r2
 8006f82:	d115      	bne.n	8006fb0 <UART_SetConfig+0x68>
 8006f84:	f7fe ffee 	bl	8005f64 <HAL_RCC_GetPCLK2Freq>
 8006f88:	2319      	movs	r3, #25
 8006f8a:	4343      	muls	r3, r0
 8006f8c:	6862      	ldr	r2, [r4, #4]
 8006f8e:	6820      	ldr	r0, [r4, #0]
 8006f90:	0092      	lsls	r2, r2, #2
 8006f92:	fbb3 f3f2 	udiv	r3, r3, r2
 8006f96:	2264      	movs	r2, #100	; 0x64
 8006f98:	fbb3 f1f2 	udiv	r1, r3, r2
 8006f9c:	fb02 3311 	mls	r3, r2, r1, r3
 8006fa0:	011b      	lsls	r3, r3, #4
 8006fa2:	3332      	adds	r3, #50	; 0x32
 8006fa4:	fbb3 f3f2 	udiv	r3, r3, r2
 8006fa8:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8006fac:	6083      	str	r3, [r0, #8]
 8006fae:	bd10      	pop	{r4, pc}
 8006fb0:	f7fe ffc8 	bl	8005f44 <HAL_RCC_GetPCLK1Freq>
 8006fb4:	e7e8      	b.n	8006f88 <UART_SetConfig+0x40>
 8006fb6:	bf00      	nop
 8006fb8:	40013800 	.word	0x40013800

08006fbc <HAL_UART_Init>:
 8006fbc:	b510      	push	{r4, lr}
 8006fbe:	4604      	mov	r4, r0
 8006fc0:	b340      	cbz	r0, 8007014 <HAL_UART_Init+0x58>
 8006fc2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006fc6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006fca:	b91b      	cbnz	r3, 8006fd4 <HAL_UART_Init+0x18>
 8006fcc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8006fd0:	f7fb fac8 	bl	8002564 <HAL_UART_MspInit>
 8006fd4:	2324      	movs	r3, #36	; 0x24
 8006fd6:	6822      	ldr	r2, [r4, #0]
 8006fd8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8006fdc:	68d3      	ldr	r3, [r2, #12]
 8006fde:	4620      	mov	r0, r4
 8006fe0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006fe4:	60d3      	str	r3, [r2, #12]
 8006fe6:	f7ff ffaf 	bl	8006f48 <UART_SetConfig>
 8006fea:	6823      	ldr	r3, [r4, #0]
 8006fec:	2000      	movs	r0, #0
 8006fee:	691a      	ldr	r2, [r3, #16]
 8006ff0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006ff4:	611a      	str	r2, [r3, #16]
 8006ff6:	695a      	ldr	r2, [r3, #20]
 8006ff8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006ffc:	615a      	str	r2, [r3, #20]
 8006ffe:	68da      	ldr	r2, [r3, #12]
 8007000:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007004:	60da      	str	r2, [r3, #12]
 8007006:	2320      	movs	r3, #32
 8007008:	63e0      	str	r0, [r4, #60]	; 0x3c
 800700a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800700e:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8007012:	bd10      	pop	{r4, pc}
 8007014:	2001      	movs	r0, #1
 8007016:	e7fc      	b.n	8007012 <HAL_UART_Init+0x56>

08007018 <USB_CoreInit>:
 8007018:	b084      	sub	sp, #16
 800701a:	a801      	add	r0, sp, #4
 800701c:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8007020:	b004      	add	sp, #16
 8007022:	2000      	movs	r0, #0
 8007024:	4770      	bx	lr

08007026 <USB_EnableGlobalInt>:
 8007026:	4603      	mov	r3, r0
 8007028:	f44f 423f 	mov.w	r2, #48896	; 0xbf00
 800702c:	2000      	movs	r0, #0
 800702e:	f8a3 0044 	strh.w	r0, [r3, #68]	; 0x44
 8007032:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8007036:	4770      	bx	lr

08007038 <USB_DisableGlobalInt>:
 8007038:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800703c:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8007040:	045b      	lsls	r3, r3, #17
 8007042:	0c5b      	lsrs	r3, r3, #17
 8007044:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8007048:	2000      	movs	r0, #0
 800704a:	4770      	bx	lr

0800704c <USB_SetCurrentMode>:
 800704c:	2000      	movs	r0, #0
 800704e:	4770      	bx	lr

08007050 <USB_DevInit>:
 8007050:	b084      	sub	sp, #16
 8007052:	b510      	push	{r4, lr}
 8007054:	4604      	mov	r4, r0
 8007056:	a803      	add	r0, sp, #12
 8007058:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800705c:	2000      	movs	r0, #0
 800705e:	2301      	movs	r3, #1
 8007060:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 8007064:	f8a4 0040 	strh.w	r0, [r4, #64]	; 0x40
 8007068:	f8a4 0044 	strh.w	r0, [r4, #68]	; 0x44
 800706c:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 8007070:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007074:	b004      	add	sp, #16
 8007076:	4770      	bx	lr

08007078 <USB_ActivateEndpoint>:
 8007078:	b5f0      	push	{r4, r5, r6, r7, lr}
 800707a:	780d      	ldrb	r5, [r1, #0]
 800707c:	4603      	mov	r3, r0
 800707e:	f830 2025 	ldrh.w	r2, [r0, r5, lsl #2]
 8007082:	78c8      	ldrb	r0, [r1, #3]
 8007084:	f422 42ec 	bic.w	r2, r2, #30208	; 0x7600
 8007088:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800708c:	0412      	lsls	r2, r2, #16
 800708e:	0c12      	lsrs	r2, r2, #16
 8007090:	2803      	cmp	r0, #3
 8007092:	d84f      	bhi.n	8007134 <USB_ActivateEndpoint+0xbc>
 8007094:	e8df f000 	tbb	[pc, r0]
 8007098:	47494b02 	.word	0x47494b02
 800709c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80070a0:	f248 0480 	movw	r4, #32896	; 0x8080
 80070a4:	4322      	orrs	r2, r4
 80070a6:	f823 2025 	strh.w	r2, [r3, r5, lsl #2]
 80070aa:	780e      	ldrb	r6, [r1, #0]
 80070ac:	4d9b      	ldr	r5, [pc, #620]	; (800731c <USB_ActivateEndpoint+0x2a4>)
 80070ae:	f833 2026 	ldrh.w	r2, [r3, r6, lsl #2]
 80070b2:	b292      	uxth	r2, r2
 80070b4:	402a      	ands	r2, r5
 80070b6:	4332      	orrs	r2, r6
 80070b8:	4322      	orrs	r2, r4
 80070ba:	f823 2026 	strh.w	r2, [r3, r6, lsl #2]
 80070be:	7b0c      	ldrb	r4, [r1, #12]
 80070c0:	780a      	ldrb	r2, [r1, #0]
 80070c2:	2c00      	cmp	r4, #0
 80070c4:	f040 8089 	bne.w	80071da <USB_ActivateEndpoint+0x162>
 80070c8:	88cc      	ldrh	r4, [r1, #6]
 80070ca:	784e      	ldrb	r6, [r1, #1]
 80070cc:	0864      	lsrs	r4, r4, #1
 80070ce:	0064      	lsls	r4, r4, #1
 80070d0:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 80070d4:	b386      	cbz	r6, 8007138 <USB_ActivateEndpoint+0xc0>
 80070d6:	f8b3 6050 	ldrh.w	r6, [r3, #80]	; 0x50
 80070da:	b2b6      	uxth	r6, r6
 80070dc:	4432      	add	r2, r6
 80070de:	f8a2 4400 	strh.w	r4, [r2, #1024]	; 0x400
 80070e2:	780c      	ldrb	r4, [r1, #0]
 80070e4:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 80070e8:	0652      	lsls	r2, r2, #25
 80070ea:	d509      	bpl.n	8007100 <USB_ActivateEndpoint+0x88>
 80070ec:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 80070f0:	b292      	uxth	r2, r2
 80070f2:	402a      	ands	r2, r5
 80070f4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80070f8:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 80070fc:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8007100:	78ca      	ldrb	r2, [r1, #3]
 8007102:	780c      	ldrb	r4, [r1, #0]
 8007104:	2a01      	cmp	r2, #1
 8007106:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 800710a:	4985      	ldr	r1, [pc, #532]	; (8007320 <USB_ActivateEndpoint+0x2a8>)
 800710c:	b292      	uxth	r2, r2
 800710e:	ea02 0201 	and.w	r2, r2, r1
 8007112:	bf18      	it	ne
 8007114:	f082 0220 	eorne.w	r2, r2, #32
 8007118:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800711c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007120:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8007124:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007126:	f442 62c0 	orr.w	r2, r2, #1536	; 0x600
 800712a:	2000      	movs	r0, #0
 800712c:	e7b8      	b.n	80070a0 <USB_ActivateEndpoint+0x28>
 800712e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007132:	e7fa      	b.n	800712a <USB_ActivateEndpoint+0xb2>
 8007134:	2001      	movs	r0, #1
 8007136:	e7b3      	b.n	80070a0 <USB_ActivateEndpoint+0x28>
 8007138:	f8b3 5050 	ldrh.w	r5, [r3, #80]	; 0x50
 800713c:	690e      	ldr	r6, [r1, #16]
 800713e:	b2ad      	uxth	r5, r5
 8007140:	442a      	add	r2, r5
 8007142:	f8a2 4408 	strh.w	r4, [r2, #1032]	; 0x408
 8007146:	780a      	ldrb	r2, [r1, #0]
 8007148:	f8b3 4050 	ldrh.w	r4, [r3, #80]	; 0x50
 800714c:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 8007150:	b2a4      	uxth	r4, r4
 8007152:	f202 420c 	addw	r2, r2, #1036	; 0x40c
 8007156:	bb7e      	cbnz	r6, 80071b8 <USB_ActivateEndpoint+0x140>
 8007158:	5b15      	ldrh	r5, [r2, r4]
 800715a:	f425 45f8 	bic.w	r5, r5, #31744	; 0x7c00
 800715e:	042d      	lsls	r5, r5, #16
 8007160:	0c2d      	lsrs	r5, r5, #16
 8007162:	5315      	strh	r5, [r2, r4]
 8007164:	5b15      	ldrh	r5, [r2, r4]
 8007166:	ea6f 4545 	mvn.w	r5, r5, lsl #17
 800716a:	ea6f 4555 	mvn.w	r5, r5, lsr #17
 800716e:	b2ad      	uxth	r5, r5
 8007170:	5315      	strh	r5, [r2, r4]
 8007172:	780c      	ldrb	r4, [r1, #0]
 8007174:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8007178:	0455      	lsls	r5, r2, #17
 800717a:	d50d      	bpl.n	8007198 <USB_ActivateEndpoint+0x120>
 800717c:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8007180:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 8007184:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007188:	0412      	lsls	r2, r2, #16
 800718a:	0c12      	lsrs	r2, r2, #16
 800718c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8007190:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007194:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8007198:	7809      	ldrb	r1, [r1, #0]
 800719a:	f833 2021 	ldrh.w	r2, [r3, r1, lsl #2]
 800719e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80071a2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80071a6:	0412      	lsls	r2, r2, #16
 80071a8:	0c12      	lsrs	r2, r2, #16
 80071aa:	f482 5240 	eor.w	r2, r2, #12288	; 0x3000
 80071ae:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80071b2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80071b6:	e071      	b.n	800729c <USB_ActivateEndpoint+0x224>
 80071b8:	2e3e      	cmp	r6, #62	; 0x3e
 80071ba:	d805      	bhi.n	80071c8 <USB_ActivateEndpoint+0x150>
 80071bc:	0875      	lsrs	r5, r6, #1
 80071be:	07f7      	lsls	r7, r6, #31
 80071c0:	bf48      	it	mi
 80071c2:	3501      	addmi	r5, #1
 80071c4:	02ad      	lsls	r5, r5, #10
 80071c6:	e7d2      	b.n	800716e <USB_ActivateEndpoint+0xf6>
 80071c8:	0977      	lsrs	r7, r6, #5
 80071ca:	4d56      	ldr	r5, [pc, #344]	; (8007324 <USB_ActivateEndpoint+0x2ac>)
 80071cc:	06f6      	lsls	r6, r6, #27
 80071ce:	bf08      	it	eq
 80071d0:	f107 37ff 	addeq.w	r7, r7, #4294967295
 80071d4:	ea45 2587 	orr.w	r5, r5, r7, lsl #10
 80071d8:	e7c9      	b.n	800716e <USB_ActivateEndpoint+0xf6>
 80071da:	f833 4022 	ldrh.w	r4, [r3, r2, lsl #2]
 80071de:	b2a4      	uxth	r4, r4
 80071e0:	402c      	ands	r4, r5
 80071e2:	f444 4401 	orr.w	r4, r4, #33024	; 0x8100
 80071e6:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80071ea:	f823 4022 	strh.w	r4, [r3, r2, lsl #2]
 80071ee:	780a      	ldrb	r2, [r1, #0]
 80071f0:	890c      	ldrh	r4, [r1, #8]
 80071f2:	f8b3 6050 	ldrh.w	r6, [r3, #80]	; 0x50
 80071f6:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 80071fa:	0864      	lsrs	r4, r4, #1
 80071fc:	b2b6      	uxth	r6, r6
 80071fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007202:	0064      	lsls	r4, r4, #1
 8007204:	5394      	strh	r4, [r2, r6]
 8007206:	780a      	ldrb	r2, [r1, #0]
 8007208:	894c      	ldrh	r4, [r1, #10]
 800720a:	f8b3 6050 	ldrh.w	r6, [r3, #80]	; 0x50
 800720e:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 8007212:	0864      	lsrs	r4, r4, #1
 8007214:	f502 6281 	add.w	r2, r2, #1032	; 0x408
 8007218:	0064      	lsls	r4, r4, #1
 800721a:	b2b6      	uxth	r6, r6
 800721c:	5394      	strh	r4, [r2, r6]
 800721e:	784a      	ldrb	r2, [r1, #1]
 8007220:	780c      	ldrb	r4, [r1, #0]
 8007222:	2a00      	cmp	r2, #0
 8007224:	d13d      	bne.n	80072a2 <USB_ActivateEndpoint+0x22a>
 8007226:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 800722a:	0452      	lsls	r2, r2, #17
 800722c:	d509      	bpl.n	8007242 <USB_ActivateEndpoint+0x1ca>
 800722e:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8007232:	b292      	uxth	r2, r2
 8007234:	402a      	ands	r2, r5
 8007236:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800723a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800723e:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8007242:	780c      	ldrb	r4, [r1, #0]
 8007244:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8007248:	0657      	lsls	r7, r2, #25
 800724a:	d50d      	bpl.n	8007268 <USB_ActivateEndpoint+0x1f0>
 800724c:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 8007250:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 8007254:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007258:	0412      	lsls	r2, r2, #16
 800725a:	0c12      	lsrs	r2, r2, #16
 800725c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007260:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 8007264:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8007268:	f248 0480 	movw	r4, #32896	; 0x8080
 800726c:	780d      	ldrb	r5, [r1, #0]
 800726e:	f833 2025 	ldrh.w	r2, [r3, r5, lsl #2]
 8007272:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8007276:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800727a:	0412      	lsls	r2, r2, #16
 800727c:	0c12      	lsrs	r2, r2, #16
 800727e:	f482 5240 	eor.w	r2, r2, #12288	; 0x3000
 8007282:	4322      	orrs	r2, r4
 8007284:	f823 2025 	strh.w	r2, [r3, r5, lsl #2]
 8007288:	7809      	ldrb	r1, [r1, #0]
 800728a:	f833 2021 	ldrh.w	r2, [r3, r1, lsl #2]
 800728e:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 8007292:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007296:	0412      	lsls	r2, r2, #16
 8007298:	0c12      	lsrs	r2, r2, #16
 800729a:	4322      	orrs	r2, r4
 800729c:	f823 2021 	strh.w	r2, [r3, r1, lsl #2]
 80072a0:	e740      	b.n	8007124 <USB_ActivateEndpoint+0xac>
 80072a2:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 80072a6:	0456      	lsls	r6, r2, #17
 80072a8:	d509      	bpl.n	80072be <USB_ActivateEndpoint+0x246>
 80072aa:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 80072ae:	b292      	uxth	r2, r2
 80072b0:	402a      	ands	r2, r5
 80072b2:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80072b6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80072ba:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 80072be:	780c      	ldrb	r4, [r1, #0]
 80072c0:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 80072c4:	0652      	lsls	r2, r2, #25
 80072c6:	d50d      	bpl.n	80072e4 <USB_ActivateEndpoint+0x26c>
 80072c8:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 80072cc:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 80072d0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80072d4:	0412      	lsls	r2, r2, #16
 80072d6:	0c12      	lsrs	r2, r2, #16
 80072d8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80072dc:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 80072e0:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 80072e4:	78ca      	ldrb	r2, [r1, #3]
 80072e6:	780c      	ldrb	r4, [r1, #0]
 80072e8:	2a01      	cmp	r2, #1
 80072ea:	f833 2024 	ldrh.w	r2, [r3, r4, lsl #2]
 80072ee:	4d0c      	ldr	r5, [pc, #48]	; (8007320 <USB_ActivateEndpoint+0x2a8>)
 80072f0:	b292      	uxth	r2, r2
 80072f2:	ea02 0205 	and.w	r2, r2, r5
 80072f6:	bf18      	it	ne
 80072f8:	f082 0220 	eorne.w	r2, r2, #32
 80072fc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007300:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007304:	f823 2024 	strh.w	r2, [r3, r4, lsl #2]
 8007308:	7809      	ldrb	r1, [r1, #0]
 800730a:	f833 2021 	ldrh.w	r2, [r3, r1, lsl #2]
 800730e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8007312:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007316:	0412      	lsls	r2, r2, #16
 8007318:	0c12      	lsrs	r2, r2, #16
 800731a:	e748      	b.n	80071ae <USB_ActivateEndpoint+0x136>
 800731c:	ffff8f8f 	.word	0xffff8f8f
 8007320:	ffff8fbf 	.word	0xffff8fbf
 8007324:	ffff8000 	.word	0xffff8000

08007328 <USB_DeactivateEndpoint>:
 8007328:	b510      	push	{r4, lr}
 800732a:	7b0c      	ldrb	r4, [r1, #12]
 800732c:	784b      	ldrb	r3, [r1, #1]
 800732e:	780a      	ldrb	r2, [r1, #0]
 8007330:	2c00      	cmp	r4, #0
 8007332:	d13d      	bne.n	80073b0 <USB_DeactivateEndpoint+0x88>
 8007334:	b313      	cbz	r3, 800737c <USB_DeactivateEndpoint+0x54>
 8007336:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800733a:	065c      	lsls	r4, r3, #25
 800733c:	d50d      	bpl.n	800735a <USB_DeactivateEndpoint+0x32>
 800733e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007342:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007346:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800734a:	041b      	lsls	r3, r3, #16
 800734c:	0c1b      	lsrs	r3, r3, #16
 800734e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007352:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8007356:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800735a:	780a      	ldrb	r2, [r1, #0]
 800735c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007360:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007364:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007368:	041b      	lsls	r3, r3, #16
 800736a:	0c1b      	lsrs	r3, r3, #16
 800736c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007370:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007374:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007378:	2000      	movs	r0, #0
 800737a:	bd10      	pop	{r4, pc}
 800737c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007380:	045b      	lsls	r3, r3, #17
 8007382:	d50d      	bpl.n	80073a0 <USB_DeactivateEndpoint+0x78>
 8007384:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007388:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800738c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007390:	041b      	lsls	r3, r3, #16
 8007392:	0c1b      	lsrs	r3, r3, #16
 8007394:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8007398:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800739c:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80073a0:	780a      	ldrb	r2, [r1, #0]
 80073a2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80073a6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80073aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80073ae:	e7db      	b.n	8007368 <USB_DeactivateEndpoint+0x40>
 80073b0:	2b00      	cmp	r3, #0
 80073b2:	d14e      	bne.n	8007452 <USB_DeactivateEndpoint+0x12a>
 80073b4:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80073b8:	045c      	lsls	r4, r3, #17
 80073ba:	d50d      	bpl.n	80073d8 <USB_DeactivateEndpoint+0xb0>
 80073bc:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80073c0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80073c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80073c8:	041b      	lsls	r3, r3, #16
 80073ca:	0c1b      	lsrs	r3, r3, #16
 80073cc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80073d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80073d4:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80073d8:	780a      	ldrb	r2, [r1, #0]
 80073da:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80073de:	065b      	lsls	r3, r3, #25
 80073e0:	d50d      	bpl.n	80073fe <USB_DeactivateEndpoint+0xd6>
 80073e2:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80073e6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80073ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80073ee:	041b      	lsls	r3, r3, #16
 80073f0:	0c1b      	lsrs	r3, r3, #16
 80073f2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80073f6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80073fa:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80073fe:	780a      	ldrb	r2, [r1, #0]
 8007400:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007404:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007408:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800740c:	041b      	lsls	r3, r3, #16
 800740e:	0c1b      	lsrs	r3, r3, #16
 8007410:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007414:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8007418:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800741c:	f248 0280 	movw	r2, #32896	; 0x8080
 8007420:	780c      	ldrb	r4, [r1, #0]
 8007422:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 8007426:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800742a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800742e:	041b      	lsls	r3, r3, #16
 8007430:	0c1b      	lsrs	r3, r3, #16
 8007432:	4313      	orrs	r3, r2
 8007434:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 8007438:	7809      	ldrb	r1, [r1, #0]
 800743a:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 800743e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007442:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007446:	041b      	lsls	r3, r3, #16
 8007448:	0c1b      	lsrs	r3, r3, #16
 800744a:	4313      	orrs	r3, r2
 800744c:	f820 3021 	strh.w	r3, [r0, r1, lsl #2]
 8007450:	e792      	b.n	8007378 <USB_DeactivateEndpoint+0x50>
 8007452:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007456:	045c      	lsls	r4, r3, #17
 8007458:	d50d      	bpl.n	8007476 <USB_DeactivateEndpoint+0x14e>
 800745a:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800745e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007462:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007466:	041b      	lsls	r3, r3, #16
 8007468:	0c1b      	lsrs	r3, r3, #16
 800746a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800746e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007472:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007476:	780a      	ldrb	r2, [r1, #0]
 8007478:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800747c:	065b      	lsls	r3, r3, #25
 800747e:	d50d      	bpl.n	800749c <USB_DeactivateEndpoint+0x174>
 8007480:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007484:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007488:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800748c:	041b      	lsls	r3, r3, #16
 800748e:	0c1b      	lsrs	r3, r3, #16
 8007490:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007494:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8007498:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800749c:	780a      	ldrb	r2, [r1, #0]
 800749e:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80074a2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80074a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80074aa:	041b      	lsls	r3, r3, #16
 80074ac:	0c1b      	lsrs	r3, r3, #16
 80074ae:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80074b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80074b6:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80074ba:	f248 0280 	movw	r2, #32896	; 0x8080
 80074be:	780c      	ldrb	r4, [r1, #0]
 80074c0:	f830 3024 	ldrh.w	r3, [r0, r4, lsl #2]
 80074c4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80074c8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80074cc:	041b      	lsls	r3, r3, #16
 80074ce:	0c1b      	lsrs	r3, r3, #16
 80074d0:	4313      	orrs	r3, r2
 80074d2:	f820 3024 	strh.w	r3, [r0, r4, lsl #2]
 80074d6:	7809      	ldrb	r1, [r1, #0]
 80074d8:	f830 3021 	ldrh.w	r3, [r0, r1, lsl #2]
 80074dc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80074e0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80074e4:	e7af      	b.n	8007446 <USB_DeactivateEndpoint+0x11e>

080074e6 <USB_EPSetStall>:
 80074e6:	784b      	ldrb	r3, [r1, #1]
 80074e8:	780a      	ldrb	r2, [r1, #0]
 80074ea:	b18b      	cbz	r3, 8007510 <USB_EPSetStall+0x2a>
 80074ec:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80074f0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80074f4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80074f8:	041b      	lsls	r3, r3, #16
 80074fa:	0c1b      	lsrs	r3, r3, #16
 80074fc:	f083 0310 	eor.w	r3, r3, #16
 8007500:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007504:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007508:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800750c:	2000      	movs	r0, #0
 800750e:	4770      	bx	lr
 8007510:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007514:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007518:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800751c:	041b      	lsls	r3, r3, #16
 800751e:	0c1b      	lsrs	r3, r3, #16
 8007520:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8007524:	e7ec      	b.n	8007500 <USB_EPSetStall+0x1a>

08007526 <USB_EPClearStall>:
 8007526:	7b0b      	ldrb	r3, [r1, #12]
 8007528:	bb43      	cbnz	r3, 800757c <USB_EPClearStall+0x56>
 800752a:	784b      	ldrb	r3, [r1, #1]
 800752c:	780a      	ldrb	r2, [r1, #0]
 800752e:	b33b      	cbz	r3, 8007580 <USB_EPClearStall+0x5a>
 8007530:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007534:	065b      	lsls	r3, r3, #25
 8007536:	d50d      	bpl.n	8007554 <USB_EPClearStall+0x2e>
 8007538:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800753c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007540:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007544:	041b      	lsls	r3, r3, #16
 8007546:	0c1b      	lsrs	r3, r3, #16
 8007548:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800754c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8007550:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 8007554:	78cb      	ldrb	r3, [r1, #3]
 8007556:	2b01      	cmp	r3, #1
 8007558:	d010      	beq.n	800757c <USB_EPClearStall+0x56>
 800755a:	780a      	ldrb	r2, [r1, #0]
 800755c:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007560:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007564:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007568:	041b      	lsls	r3, r3, #16
 800756a:	0c1b      	lsrs	r3, r3, #16
 800756c:	f083 0320 	eor.w	r3, r3, #32
 8007570:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007574:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007578:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 800757c:	2000      	movs	r0, #0
 800757e:	4770      	bx	lr
 8007580:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 8007584:	045b      	lsls	r3, r3, #17
 8007586:	d50d      	bpl.n	80075a4 <USB_EPClearStall+0x7e>
 8007588:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 800758c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007590:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007594:	041b      	lsls	r3, r3, #16
 8007596:	0c1b      	lsrs	r3, r3, #16
 8007598:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800759c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80075a0:	f820 3022 	strh.w	r3, [r0, r2, lsl #2]
 80075a4:	780a      	ldrb	r2, [r1, #0]
 80075a6:	f830 3022 	ldrh.w	r3, [r0, r2, lsl #2]
 80075aa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80075ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80075b2:	041b      	lsls	r3, r3, #16
 80075b4:	0c1b      	lsrs	r3, r3, #16
 80075b6:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 80075ba:	e7d9      	b.n	8007570 <USB_EPClearStall+0x4a>

080075bc <USB_SetDevAddress>:
 80075bc:	b911      	cbnz	r1, 80075c4 <USB_SetDevAddress+0x8>
 80075be:	2380      	movs	r3, #128	; 0x80
 80075c0:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
 80075c4:	2000      	movs	r0, #0
 80075c6:	4770      	bx	lr

080075c8 <USB_DevConnect>:
 80075c8:	2000      	movs	r0, #0
 80075ca:	4770      	bx	lr

080075cc <USB_DevDisconnect>:
 80075cc:	2000      	movs	r0, #0
 80075ce:	4770      	bx	lr

080075d0 <USB_ReadInterrupts>:
 80075d0:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 80075d4:	b280      	uxth	r0, r0
 80075d6:	4770      	bx	lr

080075d8 <USB_EP0_OutStart>:
 80075d8:	2000      	movs	r0, #0
 80075da:	4770      	bx	lr

080075dc <USB_WritePMA>:
 80075dc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80075e0:	3301      	adds	r3, #1
 80075e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80075e6:	085b      	lsrs	r3, r3, #1
 80075e8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80075ec:	429a      	cmp	r2, r3
 80075ee:	d100      	bne.n	80075f2 <USB_WritePMA+0x16>
 80075f0:	4770      	bx	lr
 80075f2:	f831 0b02 	ldrh.w	r0, [r1], #2
 80075f6:	f822 0b04 	strh.w	r0, [r2], #4
 80075fa:	e7f7      	b.n	80075ec <USB_WritePMA+0x10>

080075fc <USB_EPStartXfer>:
 80075fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80075fe:	460d      	mov	r5, r1
 8007600:	7849      	ldrb	r1, [r1, #1]
 8007602:	4604      	mov	r4, r0
 8007604:	2901      	cmp	r1, #1
 8007606:	7b2a      	ldrb	r2, [r5, #12]
 8007608:	f040 81a1 	bne.w	800794e <USB_EPStartXfer+0x352>
 800760c:	f8d5 c010 	ldr.w	ip, [r5, #16]
 8007610:	69ae      	ldr	r6, [r5, #24]
 8007612:	6969      	ldr	r1, [r5, #20]
 8007614:	4566      	cmp	r6, ip
 8007616:	bf28      	it	cs
 8007618:	4666      	movcs	r6, ip
 800761a:	bb02      	cbnz	r2, 800765e <USB_EPStartXfer+0x62>
 800761c:	b2b6      	uxth	r6, r6
 800761e:	88ea      	ldrh	r2, [r5, #6]
 8007620:	4633      	mov	r3, r6
 8007622:	f7ff ffdb 	bl	80075dc <USB_WritePMA>
 8007626:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 800762a:	7829      	ldrb	r1, [r5, #0]
 800762c:	b290      	uxth	r0, r2
 800762e:	f204 4204 	addw	r2, r4, #1028	; 0x404
 8007632:	0109      	lsls	r1, r1, #4
 8007634:	4402      	add	r2, r0
 8007636:	528e      	strh	r6, [r1, r2]
 8007638:	782a      	ldrb	r2, [r5, #0]
 800763a:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 800763e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007642:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007646:	041b      	lsls	r3, r3, #16
 8007648:	0c1b      	lsrs	r3, r3, #16
 800764a:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 800764e:	2000      	movs	r0, #0
 8007650:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007654:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007658:	f824 3022 	strh.w	r3, [r4, r2, lsl #2]
 800765c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800765e:	78eb      	ldrb	r3, [r5, #3]
 8007660:	782f      	ldrb	r7, [r5, #0]
 8007662:	2b02      	cmp	r3, #2
 8007664:	f040 8138 	bne.w	80078d8 <USB_EPStartXfer+0x2dc>
 8007668:	6a2b      	ldr	r3, [r5, #32]
 800766a:	f830 2027 	ldrh.w	r2, [r0, r7, lsl #2]
 800766e:	459c      	cmp	ip, r3
 8007670:	f080 811a 	bcs.w	80078a8 <USB_EPStartXfer+0x2ac>
 8007674:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 8007678:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800767c:	0412      	lsls	r2, r2, #16
 800767e:	0c12      	lsrs	r2, r2, #16
 8007680:	f442 4201 	orr.w	r2, r2, #33024	; 0x8100
 8007684:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007688:	f820 2027 	strh.w	r2, [r0, r7, lsl #2]
 800768c:	782a      	ldrb	r2, [r5, #0]
 800768e:	1b9b      	subs	r3, r3, r6
 8007690:	f830 0022 	ldrh.w	r0, [r0, r2, lsl #2]
 8007694:	622b      	str	r3, [r5, #32]
 8007696:	f010 0f40 	tst.w	r0, #64	; 0x40
 800769a:	b2b3      	uxth	r3, r6
 800769c:	7868      	ldrb	r0, [r5, #1]
 800769e:	f000 8083 	beq.w	80077a8 <USB_EPStartXfer+0x1ac>
 80076a2:	2800      	cmp	r0, #0
 80076a4:	d152      	bne.n	800774c <USB_EPStartXfer+0x150>
 80076a6:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 80076aa:	f204 470c 	addw	r7, r4, #1036	; 0x40c
 80076ae:	b280      	uxth	r0, r0
 80076b0:	4438      	add	r0, r7
 80076b2:	0112      	lsls	r2, r2, #4
 80076b4:	2e00      	cmp	r6, #0
 80076b6:	d136      	bne.n	8007726 <USB_EPStartXfer+0x12a>
 80076b8:	5a87      	ldrh	r7, [r0, r2]
 80076ba:	f427 47f8 	bic.w	r7, r7, #31744	; 0x7c00
 80076be:	043f      	lsls	r7, r7, #16
 80076c0:	0c3f      	lsrs	r7, r7, #16
 80076c2:	5287      	strh	r7, [r0, r2]
 80076c4:	5a87      	ldrh	r7, [r0, r2]
 80076c6:	ea6f 4747 	mvn.w	r7, r7, lsl #17
 80076ca:	ea6f 4757 	mvn.w	r7, r7, lsr #17
 80076ce:	b2bf      	uxth	r7, r7
 80076d0:	5287      	strh	r7, [r0, r2]
 80076d2:	4620      	mov	r0, r4
 80076d4:	896a      	ldrh	r2, [r5, #10]
 80076d6:	f7ff ff81 	bl	80075dc <USB_WritePMA>
 80076da:	6a2a      	ldr	r2, [r5, #32]
 80076dc:	692b      	ldr	r3, [r5, #16]
 80076de:	6969      	ldr	r1, [r5, #20]
 80076e0:	429a      	cmp	r2, r3
 80076e2:	bf8a      	itet	hi
 80076e4:	1b93      	subhi	r3, r2, r6
 80076e6:	2300      	movls	r3, #0
 80076e8:	4632      	movhi	r2, r6
 80076ea:	7868      	ldrb	r0, [r5, #1]
 80076ec:	4431      	add	r1, r6
 80076ee:	622b      	str	r3, [r5, #32]
 80076f0:	6169      	str	r1, [r5, #20]
 80076f2:	b293      	uxth	r3, r2
 80076f4:	2800      	cmp	r0, #0
 80076f6:	d14b      	bne.n	8007790 <USB_EPStartXfer+0x194>
 80076f8:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 80076fc:	782e      	ldrb	r6, [r5, #0]
 80076fe:	b280      	uxth	r0, r0
 8007700:	f204 4704 	addw	r7, r4, #1028	; 0x404
 8007704:	0136      	lsls	r6, r6, #4
 8007706:	4438      	add	r0, r7
 8007708:	bb5a      	cbnz	r2, 8007762 <USB_EPStartXfer+0x166>
 800770a:	5a32      	ldrh	r2, [r6, r0]
 800770c:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007710:	0412      	lsls	r2, r2, #16
 8007712:	0c12      	lsrs	r2, r2, #16
 8007714:	5232      	strh	r2, [r6, r0]
 8007716:	5a32      	ldrh	r2, [r6, r0]
 8007718:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 800771c:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007720:	b292      	uxth	r2, r2
 8007722:	5232      	strh	r2, [r6, r0]
 8007724:	e026      	b.n	8007774 <USB_EPStartXfer+0x178>
 8007726:	2e3e      	cmp	r6, #62	; 0x3e
 8007728:	d806      	bhi.n	8007738 <USB_EPStartXfer+0x13c>
 800772a:	0877      	lsrs	r7, r6, #1
 800772c:	f016 0f01 	tst.w	r6, #1
 8007730:	bf18      	it	ne
 8007732:	3701      	addne	r7, #1
 8007734:	02bf      	lsls	r7, r7, #10
 8007736:	e7ca      	b.n	80076ce <USB_EPStartXfer+0xd2>
 8007738:	ea4f 1c56 	mov.w	ip, r6, lsr #5
 800773c:	06f7      	lsls	r7, r6, #27
 800773e:	4fa3      	ldr	r7, [pc, #652]	; (80079cc <USB_EPStartXfer+0x3d0>)
 8007740:	bf08      	it	eq
 8007742:	f10c 3cff 	addeq.w	ip, ip, #4294967295
 8007746:	ea47 278c 	orr.w	r7, r7, ip, lsl #10
 800774a:	e7c0      	b.n	80076ce <USB_EPStartXfer+0xd2>
 800774c:	2801      	cmp	r0, #1
 800774e:	d1c0      	bne.n	80076d2 <USB_EPStartXfer+0xd6>
 8007750:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 8007754:	0112      	lsls	r2, r2, #4
 8007756:	b287      	uxth	r7, r0
 8007758:	f204 400c 	addw	r0, r4, #1036	; 0x40c
 800775c:	4438      	add	r0, r7
 800775e:	5283      	strh	r3, [r0, r2]
 8007760:	e7b7      	b.n	80076d2 <USB_EPStartXfer+0xd6>
 8007762:	2a3e      	cmp	r2, #62	; 0x3e
 8007764:	d80b      	bhi.n	800777e <USB_EPStartXfer+0x182>
 8007766:	0857      	lsrs	r7, r2, #1
 8007768:	07d2      	lsls	r2, r2, #31
 800776a:	bf48      	it	mi
 800776c:	3701      	addmi	r7, #1
 800776e:	02bf      	lsls	r7, r7, #10
 8007770:	b2bf      	uxth	r7, r7
 8007772:	5237      	strh	r7, [r6, r0]
 8007774:	892a      	ldrh	r2, [r5, #8]
 8007776:	4620      	mov	r0, r4
 8007778:	f7ff ff30 	bl	80075dc <USB_WritePMA>
 800777c:	e75c      	b.n	8007638 <USB_EPStartXfer+0x3c>
 800777e:	0957      	lsrs	r7, r2, #5
 8007780:	06d2      	lsls	r2, r2, #27
 8007782:	4a92      	ldr	r2, [pc, #584]	; (80079cc <USB_EPStartXfer+0x3d0>)
 8007784:	bf08      	it	eq
 8007786:	f107 37ff 	addeq.w	r7, r7, #4294967295
 800778a:	ea42 2287 	orr.w	r2, r2, r7, lsl #10
 800778e:	e7c7      	b.n	8007720 <USB_EPStartXfer+0x124>
 8007790:	2801      	cmp	r0, #1
 8007792:	d1ef      	bne.n	8007774 <USB_EPStartXfer+0x178>
 8007794:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 8007798:	7828      	ldrb	r0, [r5, #0]
 800779a:	b296      	uxth	r6, r2
 800779c:	f204 4204 	addw	r2, r4, #1028	; 0x404
 80077a0:	0100      	lsls	r0, r0, #4
 80077a2:	4432      	add	r2, r6
 80077a4:	5283      	strh	r3, [r0, r2]
 80077a6:	e7e5      	b.n	8007774 <USB_EPStartXfer+0x178>
 80077a8:	2800      	cmp	r0, #0
 80077aa:	d152      	bne.n	8007852 <USB_EPStartXfer+0x256>
 80077ac:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 80077b0:	f204 4704 	addw	r7, r4, #1028	; 0x404
 80077b4:	b280      	uxth	r0, r0
 80077b6:	4438      	add	r0, r7
 80077b8:	0112      	lsls	r2, r2, #4
 80077ba:	2e00      	cmp	r6, #0
 80077bc:	d136      	bne.n	800782c <USB_EPStartXfer+0x230>
 80077be:	5a87      	ldrh	r7, [r0, r2]
 80077c0:	f427 47f8 	bic.w	r7, r7, #31744	; 0x7c00
 80077c4:	043f      	lsls	r7, r7, #16
 80077c6:	0c3f      	lsrs	r7, r7, #16
 80077c8:	5287      	strh	r7, [r0, r2]
 80077ca:	5a87      	ldrh	r7, [r0, r2]
 80077cc:	ea6f 4747 	mvn.w	r7, r7, lsl #17
 80077d0:	ea6f 4757 	mvn.w	r7, r7, lsr #17
 80077d4:	b2bf      	uxth	r7, r7
 80077d6:	5287      	strh	r7, [r0, r2]
 80077d8:	4620      	mov	r0, r4
 80077da:	892a      	ldrh	r2, [r5, #8]
 80077dc:	f7ff fefe 	bl	80075dc <USB_WritePMA>
 80077e0:	6a2a      	ldr	r2, [r5, #32]
 80077e2:	692b      	ldr	r3, [r5, #16]
 80077e4:	6969      	ldr	r1, [r5, #20]
 80077e6:	429a      	cmp	r2, r3
 80077e8:	bf8a      	itet	hi
 80077ea:	1b93      	subhi	r3, r2, r6
 80077ec:	2300      	movls	r3, #0
 80077ee:	4632      	movhi	r2, r6
 80077f0:	7868      	ldrb	r0, [r5, #1]
 80077f2:	4431      	add	r1, r6
 80077f4:	622b      	str	r3, [r5, #32]
 80077f6:	6169      	str	r1, [r5, #20]
 80077f8:	b293      	uxth	r3, r2
 80077fa:	2800      	cmp	r0, #0
 80077fc:	d148      	bne.n	8007890 <USB_EPStartXfer+0x294>
 80077fe:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 8007802:	782e      	ldrb	r6, [r5, #0]
 8007804:	b280      	uxth	r0, r0
 8007806:	f204 470c 	addw	r7, r4, #1036	; 0x40c
 800780a:	0136      	lsls	r6, r6, #4
 800780c:	4438      	add	r0, r7
 800780e:	bb5a      	cbnz	r2, 8007868 <USB_EPStartXfer+0x26c>
 8007810:	5a32      	ldrh	r2, [r6, r0]
 8007812:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007816:	0412      	lsls	r2, r2, #16
 8007818:	0c12      	lsrs	r2, r2, #16
 800781a:	5232      	strh	r2, [r6, r0]
 800781c:	5a32      	ldrh	r2, [r6, r0]
 800781e:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007822:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007826:	b292      	uxth	r2, r2
 8007828:	5232      	strh	r2, [r6, r0]
 800782a:	e026      	b.n	800787a <USB_EPStartXfer+0x27e>
 800782c:	2e3e      	cmp	r6, #62	; 0x3e
 800782e:	d806      	bhi.n	800783e <USB_EPStartXfer+0x242>
 8007830:	0877      	lsrs	r7, r6, #1
 8007832:	f016 0f01 	tst.w	r6, #1
 8007836:	bf18      	it	ne
 8007838:	3701      	addne	r7, #1
 800783a:	02bf      	lsls	r7, r7, #10
 800783c:	e7ca      	b.n	80077d4 <USB_EPStartXfer+0x1d8>
 800783e:	ea4f 1c56 	mov.w	ip, r6, lsr #5
 8007842:	06f7      	lsls	r7, r6, #27
 8007844:	4f61      	ldr	r7, [pc, #388]	; (80079cc <USB_EPStartXfer+0x3d0>)
 8007846:	bf08      	it	eq
 8007848:	f10c 3cff 	addeq.w	ip, ip, #4294967295
 800784c:	ea47 278c 	orr.w	r7, r7, ip, lsl #10
 8007850:	e7c0      	b.n	80077d4 <USB_EPStartXfer+0x1d8>
 8007852:	2801      	cmp	r0, #1
 8007854:	d1c0      	bne.n	80077d8 <USB_EPStartXfer+0x1dc>
 8007856:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800785a:	0112      	lsls	r2, r2, #4
 800785c:	b287      	uxth	r7, r0
 800785e:	f204 4004 	addw	r0, r4, #1028	; 0x404
 8007862:	4438      	add	r0, r7
 8007864:	5283      	strh	r3, [r0, r2]
 8007866:	e7b7      	b.n	80077d8 <USB_EPStartXfer+0x1dc>
 8007868:	2a3e      	cmp	r2, #62	; 0x3e
 800786a:	d808      	bhi.n	800787e <USB_EPStartXfer+0x282>
 800786c:	0857      	lsrs	r7, r2, #1
 800786e:	07d2      	lsls	r2, r2, #31
 8007870:	bf48      	it	mi
 8007872:	3701      	addmi	r7, #1
 8007874:	02bf      	lsls	r7, r7, #10
 8007876:	b2bf      	uxth	r7, r7
 8007878:	5237      	strh	r7, [r6, r0]
 800787a:	896a      	ldrh	r2, [r5, #10]
 800787c:	e77b      	b.n	8007776 <USB_EPStartXfer+0x17a>
 800787e:	0957      	lsrs	r7, r2, #5
 8007880:	06d2      	lsls	r2, r2, #27
 8007882:	4a52      	ldr	r2, [pc, #328]	; (80079cc <USB_EPStartXfer+0x3d0>)
 8007884:	bf08      	it	eq
 8007886:	f107 37ff 	addeq.w	r7, r7, #4294967295
 800788a:	ea42 2287 	orr.w	r2, r2, r7, lsl #10
 800788e:	e7ca      	b.n	8007826 <USB_EPStartXfer+0x22a>
 8007890:	2801      	cmp	r0, #1
 8007892:	d1f2      	bne.n	800787a <USB_EPStartXfer+0x27e>
 8007894:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 8007898:	7828      	ldrb	r0, [r5, #0]
 800789a:	b296      	uxth	r6, r2
 800789c:	f204 420c 	addw	r2, r4, #1036	; 0x40c
 80078a0:	0100      	lsls	r0, r0, #4
 80078a2:	4432      	add	r2, r6
 80078a4:	5283      	strh	r3, [r0, r2]
 80078a6:	e7e8      	b.n	800787a <USB_EPStartXfer+0x27e>
 80078a8:	f422 42e2 	bic.w	r2, r2, #28928	; 0x7100
 80078ac:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80078b0:	0412      	lsls	r2, r2, #16
 80078b2:	0c12      	lsrs	r2, r2, #16
 80078b4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80078b8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80078bc:	f820 2027 	strh.w	r2, [r0, r7, lsl #2]
 80078c0:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80078c4:	782e      	ldrb	r6, [r5, #0]
 80078c6:	b297      	uxth	r7, r2
 80078c8:	f200 4204 	addw	r2, r0, #1028	; 0x404
 80078cc:	443a      	add	r2, r7
 80078ce:	0136      	lsls	r6, r6, #4
 80078d0:	b29b      	uxth	r3, r3
 80078d2:	52b3      	strh	r3, [r6, r2]
 80078d4:	892a      	ldrh	r2, [r5, #8]
 80078d6:	e74f      	b.n	8007778 <USB_EPStartXfer+0x17c>
 80078d8:	f830 2027 	ldrh.w	r2, [r0, r7, lsl #2]
 80078dc:	b2b3      	uxth	r3, r6
 80078de:	f012 0f40 	tst.w	r2, #64	; 0x40
 80078e2:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80078e6:	ea4f 1707 	mov.w	r7, r7, lsl #4
 80078ea:	b290      	uxth	r0, r2
 80078ec:	bf15      	itete	ne
 80078ee:	f204 420c 	addwne	r2, r4, #1036	; 0x40c
 80078f2:	f204 4204 	addweq	r2, r4, #1028	; 0x404
 80078f6:	1812      	addne	r2, r2, r0
 80078f8:	1812      	addeq	r2, r2, r0
 80078fa:	bf15      	itete	ne
 80078fc:	53d3      	strhne	r3, [r2, r7]
 80078fe:	53d3      	strheq	r3, [r2, r7]
 8007900:	896a      	ldrhne	r2, [r5, #10]
 8007902:	892a      	ldrheq	r2, [r5, #8]
 8007904:	4620      	mov	r0, r4
 8007906:	f7ff fe69 	bl	80075dc <USB_WritePMA>
 800790a:	786b      	ldrb	r3, [r5, #1]
 800790c:	782a      	ldrb	r2, [r5, #0]
 800790e:	b973      	cbnz	r3, 800792e <USB_EPStartXfer+0x332>
 8007910:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 8007914:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007918:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800791c:	041b      	lsls	r3, r3, #16
 800791e:	0c1b      	lsrs	r3, r3, #16
 8007920:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007924:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8007928:	f824 3022 	strh.w	r3, [r4, r2, lsl #2]
 800792c:	e684      	b.n	8007638 <USB_EPStartXfer+0x3c>
 800792e:	2b01      	cmp	r3, #1
 8007930:	f47f ae82 	bne.w	8007638 <USB_EPStartXfer+0x3c>
 8007934:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 8007938:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800793c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007940:	041b      	lsls	r3, r3, #16
 8007942:	0c1b      	lsrs	r3, r3, #16
 8007944:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8007948:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800794c:	e7ec      	b.n	8007928 <USB_EPStartXfer+0x32c>
 800794e:	2a00      	cmp	r2, #0
 8007950:	d13e      	bne.n	80079d0 <USB_EPStartXfer+0x3d4>
 8007952:	69ab      	ldr	r3, [r5, #24]
 8007954:	6929      	ldr	r1, [r5, #16]
 8007956:	428b      	cmp	r3, r1
 8007958:	bf84      	itt	hi
 800795a:	1a5a      	subhi	r2, r3, r1
 800795c:	460b      	movhi	r3, r1
 800795e:	f8b0 1050 	ldrh.w	r1, [r0, #80]	; 0x50
 8007962:	7828      	ldrb	r0, [r5, #0]
 8007964:	61aa      	str	r2, [r5, #24]
 8007966:	b28a      	uxth	r2, r1
 8007968:	f204 410c 	addw	r1, r4, #1036	; 0x40c
 800796c:	0100      	lsls	r0, r0, #4
 800796e:	4411      	add	r1, r2
 8007970:	b96b      	cbnz	r3, 800798e <USB_EPStartXfer+0x392>
 8007972:	5a43      	ldrh	r3, [r0, r1]
 8007974:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007978:	041b      	lsls	r3, r3, #16
 800797a:	0c1b      	lsrs	r3, r3, #16
 800797c:	5243      	strh	r3, [r0, r1]
 800797e:	5a43      	ldrh	r3, [r0, r1]
 8007980:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007984:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007988:	b29b      	uxth	r3, r3
 800798a:	5243      	strh	r3, [r0, r1]
 800798c:	e008      	b.n	80079a0 <USB_EPStartXfer+0x3a4>
 800798e:	2b3e      	cmp	r3, #62	; 0x3e
 8007990:	d812      	bhi.n	80079b8 <USB_EPStartXfer+0x3bc>
 8007992:	085a      	lsrs	r2, r3, #1
 8007994:	07df      	lsls	r7, r3, #31
 8007996:	bf48      	it	mi
 8007998:	3201      	addmi	r2, #1
 800799a:	0292      	lsls	r2, r2, #10
 800799c:	b292      	uxth	r2, r2
 800799e:	5242      	strh	r2, [r0, r1]
 80079a0:	782a      	ldrb	r2, [r5, #0]
 80079a2:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 80079a6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80079aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80079ae:	041b      	lsls	r3, r3, #16
 80079b0:	0c1b      	lsrs	r3, r3, #16
 80079b2:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 80079b6:	e64a      	b.n	800764e <USB_EPStartXfer+0x52>
 80079b8:	095a      	lsrs	r2, r3, #5
 80079ba:	06de      	lsls	r6, r3, #27
 80079bc:	4b03      	ldr	r3, [pc, #12]	; (80079cc <USB_EPStartXfer+0x3d0>)
 80079be:	bf08      	it	eq
 80079c0:	f102 32ff 	addeq.w	r2, r2, #4294967295
 80079c4:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
 80079c8:	e7de      	b.n	8007988 <USB_EPStartXfer+0x38c>
 80079ca:	bf00      	nop
 80079cc:	ffff8000 	.word	0xffff8000
 80079d0:	78eb      	ldrb	r3, [r5, #3]
 80079d2:	2b02      	cmp	r3, #2
 80079d4:	d17e      	bne.n	8007ad4 <USB_EPStartXfer+0x4d8>
 80079d6:	b9b9      	cbnz	r1, 8007a08 <USB_EPStartXfer+0x40c>
 80079d8:	f8b0 2050 	ldrh.w	r2, [r0, #80]	; 0x50
 80079dc:	7829      	ldrb	r1, [r5, #0]
 80079de:	b293      	uxth	r3, r2
 80079e0:	f200 4204 	addw	r2, r0, #1028	; 0x404
 80079e4:	6928      	ldr	r0, [r5, #16]
 80079e6:	0109      	lsls	r1, r1, #4
 80079e8:	441a      	add	r2, r3
 80079ea:	2800      	cmp	r0, #0
 80079ec:	d144      	bne.n	8007a78 <USB_EPStartXfer+0x47c>
 80079ee:	5a8b      	ldrh	r3, [r1, r2]
 80079f0:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 80079f4:	041b      	lsls	r3, r3, #16
 80079f6:	0c1b      	lsrs	r3, r3, #16
 80079f8:	528b      	strh	r3, [r1, r2]
 80079fa:	5a8b      	ldrh	r3, [r1, r2]
 80079fc:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007a00:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007a04:	b29b      	uxth	r3, r3
 8007a06:	528b      	strh	r3, [r1, r2]
 8007a08:	786a      	ldrb	r2, [r5, #1]
 8007a0a:	782b      	ldrb	r3, [r5, #0]
 8007a0c:	2a00      	cmp	r2, #0
 8007a0e:	d155      	bne.n	8007abc <USB_EPStartXfer+0x4c0>
 8007a10:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8007a14:	6928      	ldr	r0, [r5, #16]
 8007a16:	b28a      	uxth	r2, r1
 8007a18:	f204 410c 	addw	r1, r4, #1036	; 0x40c
 8007a1c:	4411      	add	r1, r2
 8007a1e:	011b      	lsls	r3, r3, #4
 8007a20:	2800      	cmp	r0, #0
 8007a22:	d13a      	bne.n	8007a9a <USB_EPStartXfer+0x49e>
 8007a24:	5aca      	ldrh	r2, [r1, r3]
 8007a26:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007a2a:	0412      	lsls	r2, r2, #16
 8007a2c:	0c12      	lsrs	r2, r2, #16
 8007a2e:	52ca      	strh	r2, [r1, r3]
 8007a30:	5aca      	ldrh	r2, [r1, r3]
 8007a32:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007a36:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007a3a:	b292      	uxth	r2, r2
 8007a3c:	52ca      	strh	r2, [r1, r3]
 8007a3e:	69eb      	ldr	r3, [r5, #28]
 8007a40:	2b00      	cmp	r3, #0
 8007a42:	d0ad      	beq.n	80079a0 <USB_EPStartXfer+0x3a4>
 8007a44:	f244 0340 	movw	r3, #16448	; 0x4040
 8007a48:	782a      	ldrb	r2, [r5, #0]
 8007a4a:	f834 1022 	ldrh.w	r1, [r4, r2, lsl #2]
 8007a4e:	ea03 0001 	and.w	r0, r3, r1
 8007a52:	438b      	bics	r3, r1
 8007a54:	d001      	beq.n	8007a5a <USB_EPStartXfer+0x45e>
 8007a56:	2800      	cmp	r0, #0
 8007a58:	d1a2      	bne.n	80079a0 <USB_EPStartXfer+0x3a4>
 8007a5a:	f834 3022 	ldrh.w	r3, [r4, r2, lsl #2]
 8007a5e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007a62:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007a66:	041b      	lsls	r3, r3, #16
 8007a68:	0c1b      	lsrs	r3, r3, #16
 8007a6a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007a6e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8007a72:	f824 3022 	strh.w	r3, [r4, r2, lsl #2]
 8007a76:	e793      	b.n	80079a0 <USB_EPStartXfer+0x3a4>
 8007a78:	283e      	cmp	r0, #62	; 0x3e
 8007a7a:	d805      	bhi.n	8007a88 <USB_EPStartXfer+0x48c>
 8007a7c:	0843      	lsrs	r3, r0, #1
 8007a7e:	07c0      	lsls	r0, r0, #31
 8007a80:	bf48      	it	mi
 8007a82:	3301      	addmi	r3, #1
 8007a84:	029b      	lsls	r3, r3, #10
 8007a86:	e7bd      	b.n	8007a04 <USB_EPStartXfer+0x408>
 8007a88:	0946      	lsrs	r6, r0, #5
 8007a8a:	4b4a      	ldr	r3, [pc, #296]	; (8007bb4 <USB_EPStartXfer+0x5b8>)
 8007a8c:	06c7      	lsls	r7, r0, #27
 8007a8e:	bf08      	it	eq
 8007a90:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8007a94:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
 8007a98:	e7b4      	b.n	8007a04 <USB_EPStartXfer+0x408>
 8007a9a:	283e      	cmp	r0, #62	; 0x3e
 8007a9c:	d805      	bhi.n	8007aaa <USB_EPStartXfer+0x4ae>
 8007a9e:	0842      	lsrs	r2, r0, #1
 8007aa0:	07c0      	lsls	r0, r0, #31
 8007aa2:	bf48      	it	mi
 8007aa4:	3201      	addmi	r2, #1
 8007aa6:	0292      	lsls	r2, r2, #10
 8007aa8:	e7c7      	b.n	8007a3a <USB_EPStartXfer+0x43e>
 8007aaa:	0946      	lsrs	r6, r0, #5
 8007aac:	4a41      	ldr	r2, [pc, #260]	; (8007bb4 <USB_EPStartXfer+0x5b8>)
 8007aae:	06c7      	lsls	r7, r0, #27
 8007ab0:	bf08      	it	eq
 8007ab2:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8007ab6:	ea42 2286 	orr.w	r2, r2, r6, lsl #10
 8007aba:	e7be      	b.n	8007a3a <USB_EPStartXfer+0x43e>
 8007abc:	2a01      	cmp	r2, #1
 8007abe:	d1be      	bne.n	8007a3e <USB_EPStartXfer+0x442>
 8007ac0:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 8007ac4:	011b      	lsls	r3, r3, #4
 8007ac6:	b291      	uxth	r1, r2
 8007ac8:	f204 420c 	addw	r2, r4, #1036	; 0x40c
 8007acc:	440a      	add	r2, r1
 8007ace:	8a29      	ldrh	r1, [r5, #16]
 8007ad0:	52d1      	strh	r1, [r2, r3]
 8007ad2:	e7b4      	b.n	8007a3e <USB_EPStartXfer+0x442>
 8007ad4:	2b01      	cmp	r3, #1
 8007ad6:	d16a      	bne.n	8007bae <USB_EPStartXfer+0x5b2>
 8007ad8:	69ab      	ldr	r3, [r5, #24]
 8007ada:	692a      	ldr	r2, [r5, #16]
 8007adc:	4293      	cmp	r3, r2
 8007ade:	bf94      	ite	ls
 8007ae0:	2000      	movls	r0, #0
 8007ae2:	1a98      	subhi	r0, r3, r2
 8007ae4:	61a8      	str	r0, [r5, #24]
 8007ae6:	bf88      	it	hi
 8007ae8:	4613      	movhi	r3, r2
 8007aea:	b9a9      	cbnz	r1, 8007b18 <USB_EPStartXfer+0x51c>
 8007aec:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8007af0:	7828      	ldrb	r0, [r5, #0]
 8007af2:	b28a      	uxth	r2, r1
 8007af4:	f204 4104 	addw	r1, r4, #1028	; 0x404
 8007af8:	0100      	lsls	r0, r0, #4
 8007afa:	4411      	add	r1, r2
 8007afc:	bb33      	cbnz	r3, 8007b4c <USB_EPStartXfer+0x550>
 8007afe:	5a42      	ldrh	r2, [r0, r1]
 8007b00:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8007b04:	0412      	lsls	r2, r2, #16
 8007b06:	0c12      	lsrs	r2, r2, #16
 8007b08:	5242      	strh	r2, [r0, r1]
 8007b0a:	5a42      	ldrh	r2, [r0, r1]
 8007b0c:	ea6f 4242 	mvn.w	r2, r2, lsl #17
 8007b10:	ea6f 4252 	mvn.w	r2, r2, lsr #17
 8007b14:	b292      	uxth	r2, r2
 8007b16:	5242      	strh	r2, [r0, r1]
 8007b18:	7869      	ldrb	r1, [r5, #1]
 8007b1a:	782a      	ldrb	r2, [r5, #0]
 8007b1c:	2900      	cmp	r1, #0
 8007b1e:	d139      	bne.n	8007b94 <USB_EPStartXfer+0x598>
 8007b20:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 8007b24:	0112      	lsls	r2, r2, #4
 8007b26:	b281      	uxth	r1, r0
 8007b28:	f204 400c 	addw	r0, r4, #1036	; 0x40c
 8007b2c:	4408      	add	r0, r1
 8007b2e:	b9f3      	cbnz	r3, 8007b6e <USB_EPStartXfer+0x572>
 8007b30:	5a83      	ldrh	r3, [r0, r2]
 8007b32:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007b36:	041b      	lsls	r3, r3, #16
 8007b38:	0c1b      	lsrs	r3, r3, #16
 8007b3a:	5283      	strh	r3, [r0, r2]
 8007b3c:	5a83      	ldrh	r3, [r0, r2]
 8007b3e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8007b42:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8007b46:	b29b      	uxth	r3, r3
 8007b48:	5283      	strh	r3, [r0, r2]
 8007b4a:	e729      	b.n	80079a0 <USB_EPStartXfer+0x3a4>
 8007b4c:	2b3e      	cmp	r3, #62	; 0x3e
 8007b4e:	d805      	bhi.n	8007b5c <USB_EPStartXfer+0x560>
 8007b50:	085a      	lsrs	r2, r3, #1
 8007b52:	07de      	lsls	r6, r3, #31
 8007b54:	bf48      	it	mi
 8007b56:	3201      	addmi	r2, #1
 8007b58:	0292      	lsls	r2, r2, #10
 8007b5a:	e7db      	b.n	8007b14 <USB_EPStartXfer+0x518>
 8007b5c:	095e      	lsrs	r6, r3, #5
 8007b5e:	4a15      	ldr	r2, [pc, #84]	; (8007bb4 <USB_EPStartXfer+0x5b8>)
 8007b60:	06df      	lsls	r7, r3, #27
 8007b62:	bf08      	it	eq
 8007b64:	f106 36ff 	addeq.w	r6, r6, #4294967295
 8007b68:	ea42 2286 	orr.w	r2, r2, r6, lsl #10
 8007b6c:	e7d2      	b.n	8007b14 <USB_EPStartXfer+0x518>
 8007b6e:	2b3e      	cmp	r3, #62	; 0x3e
 8007b70:	d807      	bhi.n	8007b82 <USB_EPStartXfer+0x586>
 8007b72:	0859      	lsrs	r1, r3, #1
 8007b74:	07de      	lsls	r6, r3, #31
 8007b76:	bf48      	it	mi
 8007b78:	3101      	addmi	r1, #1
 8007b7a:	0289      	lsls	r1, r1, #10
 8007b7c:	b289      	uxth	r1, r1
 8007b7e:	5281      	strh	r1, [r0, r2]
 8007b80:	e70e      	b.n	80079a0 <USB_EPStartXfer+0x3a4>
 8007b82:	0959      	lsrs	r1, r3, #5
 8007b84:	06db      	lsls	r3, r3, #27
 8007b86:	4b0b      	ldr	r3, [pc, #44]	; (8007bb4 <USB_EPStartXfer+0x5b8>)
 8007b88:	bf08      	it	eq
 8007b8a:	f101 31ff 	addeq.w	r1, r1, #4294967295
 8007b8e:	ea43 2381 	orr.w	r3, r3, r1, lsl #10
 8007b92:	e7d8      	b.n	8007b46 <USB_EPStartXfer+0x54a>
 8007b94:	2901      	cmp	r1, #1
 8007b96:	f47f af03 	bne.w	80079a0 <USB_EPStartXfer+0x3a4>
 8007b9a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8007b9e:	0112      	lsls	r2, r2, #4
 8007ba0:	b288      	uxth	r0, r1
 8007ba2:	f204 410c 	addw	r1, r4, #1036	; 0x40c
 8007ba6:	4401      	add	r1, r0
 8007ba8:	b29b      	uxth	r3, r3
 8007baa:	528b      	strh	r3, [r1, r2]
 8007bac:	e6f8      	b.n	80079a0 <USB_EPStartXfer+0x3a4>
 8007bae:	2001      	movs	r0, #1
 8007bb0:	e554      	b.n	800765c <USB_EPStartXfer+0x60>
 8007bb2:	bf00      	nop
 8007bb4:	ffff8000 	.word	0xffff8000

08007bb8 <USB_ReadPMA>:
 8007bb8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8007bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007bbe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007bc2:	085d      	lsrs	r5, r3, #1
 8007bc4:	460c      	mov	r4, r1
 8007bc6:	4617      	mov	r7, r2
 8007bc8:	462e      	mov	r6, r5
 8007bca:	3402      	adds	r4, #2
 8007bcc:	b936      	cbnz	r6, 8007bdc <USB_ReadPMA+0x24>
 8007bce:	07db      	lsls	r3, r3, #31
 8007bd0:	bf44      	itt	mi
 8007bd2:	f832 3025 	ldrhmi.w	r3, [r2, r5, lsl #2]
 8007bd6:	f801 3015 	strbmi.w	r3, [r1, r5, lsl #1]
 8007bda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007bdc:	f837 0b04 	ldrh.w	r0, [r7], #4
 8007be0:	3e01      	subs	r6, #1
 8007be2:	b280      	uxth	r0, r0
 8007be4:	f804 0c02 	strb.w	r0, [r4, #-2]
 8007be8:	0a00      	lsrs	r0, r0, #8
 8007bea:	f804 0c01 	strb.w	r0, [r4, #-1]
 8007bee:	e7ec      	b.n	8007bca <USB_ReadPMA+0x12>

08007bf0 <USBD_CDC_EP0_RxReady>:
 8007bf0:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc
 8007bf4:	b510      	push	{r4, lr}
 8007bf6:	b16b      	cbz	r3, 8007c14 <USBD_CDC_EP0_RxReady+0x24>
 8007bf8:	f8d0 42b8 	ldr.w	r4, [r0, #696]	; 0x2b8
 8007bfc:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 8007c00:	28ff      	cmp	r0, #255	; 0xff
 8007c02:	d007      	beq.n	8007c14 <USBD_CDC_EP0_RxReady+0x24>
 8007c04:	689b      	ldr	r3, [r3, #8]
 8007c06:	4621      	mov	r1, r4
 8007c08:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 8007c0c:	4798      	blx	r3
 8007c0e:	23ff      	movs	r3, #255	; 0xff
 8007c10:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200
 8007c14:	2000      	movs	r0, #0
 8007c16:	bd10      	pop	{r4, pc}

08007c18 <USBD_CDC_GetFSCfgDesc>:
 8007c18:	2343      	movs	r3, #67	; 0x43
 8007c1a:	8003      	strh	r3, [r0, #0]
 8007c1c:	4800      	ldr	r0, [pc, #0]	; (8007c20 <USBD_CDC_GetFSCfgDesc+0x8>)
 8007c1e:	4770      	bx	lr
 8007c20:	20000044 	.word	0x20000044

08007c24 <USBD_CDC_GetHSCfgDesc>:
 8007c24:	2343      	movs	r3, #67	; 0x43
 8007c26:	8003      	strh	r3, [r0, #0]
 8007c28:	4800      	ldr	r0, [pc, #0]	; (8007c2c <USBD_CDC_GetHSCfgDesc+0x8>)
 8007c2a:	4770      	bx	lr
 8007c2c:	20000088 	.word	0x20000088

08007c30 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8007c30:	2343      	movs	r3, #67	; 0x43
 8007c32:	8003      	strh	r3, [r0, #0]
 8007c34:	4800      	ldr	r0, [pc, #0]	; (8007c38 <USBD_CDC_GetOtherSpeedCfgDesc+0x8>)
 8007c36:	4770      	bx	lr
 8007c38:	200000d8 	.word	0x200000d8

08007c3c <USBD_CDC_GetDeviceQualifierDescriptor>:
 8007c3c:	230a      	movs	r3, #10
 8007c3e:	8003      	strh	r3, [r0, #0]
 8007c40:	4800      	ldr	r0, [pc, #0]	; (8007c44 <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 8007c42:	4770      	bx	lr
 8007c44:	200000cc 	.word	0x200000cc

08007c48 <USBD_CDC_DataOut>:
 8007c48:	b538      	push	{r3, r4, r5, lr}
 8007c4a:	4604      	mov	r4, r0
 8007c4c:	f8d0 52b8 	ldr.w	r5, [r0, #696]	; 0x2b8
 8007c50:	f002 fbba 	bl	800a3c8 <USBD_LL_GetRxDataSize>
 8007c54:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 8007c58:	f8c5 020c 	str.w	r0, [r5, #524]	; 0x20c
 8007c5c:	b14b      	cbz	r3, 8007c72 <USBD_CDC_DataOut+0x2a>
 8007c5e:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 8007c62:	f8d5 0204 	ldr.w	r0, [r5, #516]	; 0x204
 8007c66:	68db      	ldr	r3, [r3, #12]
 8007c68:	f505 7103 	add.w	r1, r5, #524	; 0x20c
 8007c6c:	4798      	blx	r3
 8007c6e:	2000      	movs	r0, #0
 8007c70:	bd38      	pop	{r3, r4, r5, pc}
 8007c72:	2002      	movs	r0, #2
 8007c74:	e7fc      	b.n	8007c70 <USBD_CDC_DataOut+0x28>

08007c76 <USBD_CDC_DataIn>:
 8007c76:	f8d0 22b8 	ldr.w	r2, [r0, #696]	; 0x2b8
 8007c7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007c7c:	b1d2      	cbz	r2, 8007cb4 <USBD_CDC_DataIn+0x3e>
 8007c7e:	2714      	movs	r7, #20
 8007c80:	fb07 0701 	mla	r7, r7, r1, r0
 8007c84:	69fb      	ldr	r3, [r7, #28]
 8007c86:	b18b      	cbz	r3, 8007cac <USBD_CDC_DataIn+0x36>
 8007c88:	2628      	movs	r6, #40	; 0x28
 8007c8a:	f8d0 42c0 	ldr.w	r4, [r0, #704]	; 0x2c0
 8007c8e:	fb06 4501 	mla	r5, r6, r1, r4
 8007c92:	6bad      	ldr	r5, [r5, #56]	; 0x38
 8007c94:	fbb3 f4f5 	udiv	r4, r3, r5
 8007c98:	fb05 3414 	mls	r4, r5, r4, r3
 8007c9c:	b934      	cbnz	r4, 8007cac <USBD_CDC_DataIn+0x36>
 8007c9e:	4623      	mov	r3, r4
 8007ca0:	4622      	mov	r2, r4
 8007ca2:	61fc      	str	r4, [r7, #28]
 8007ca4:	f002 fb74 	bl	800a390 <USBD_LL_Transmit>
 8007ca8:	4620      	mov	r0, r4
 8007caa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007cac:	2000      	movs	r0, #0
 8007cae:	f8c2 0214 	str.w	r0, [r2, #532]	; 0x214
 8007cb2:	e7fa      	b.n	8007caa <USBD_CDC_DataIn+0x34>
 8007cb4:	2002      	movs	r0, #2
 8007cb6:	e7f8      	b.n	8007caa <USBD_CDC_DataIn+0x34>

08007cb8 <USBD_CDC_Setup>:
 8007cb8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007cbc:	f04f 0800 	mov.w	r8, #0
 8007cc0:	780a      	ldrb	r2, [r1, #0]
 8007cc2:	4605      	mov	r5, r0
 8007cc4:	f012 0460 	ands.w	r4, r2, #96	; 0x60
 8007cc8:	460e      	mov	r6, r1
 8007cca:	f8d0 72b8 	ldr.w	r7, [r0, #696]	; 0x2b8
 8007cce:	f88d 8005 	strb.w	r8, [sp, #5]
 8007cd2:	f8ad 8006 	strh.w	r8, [sp, #6]
 8007cd6:	d028      	beq.n	8007d2a <USBD_CDC_Setup+0x72>
 8007cd8:	2c20      	cmp	r4, #32
 8007cda:	d142      	bne.n	8007d62 <USBD_CDC_Setup+0xaa>
 8007cdc:	88cc      	ldrh	r4, [r1, #6]
 8007cde:	784b      	ldrb	r3, [r1, #1]
 8007ce0:	b1e4      	cbz	r4, 8007d1c <USBD_CDC_Setup+0x64>
 8007ce2:	0612      	lsls	r2, r2, #24
 8007ce4:	d511      	bpl.n	8007d0a <USBD_CDC_Setup+0x52>
 8007ce6:	f8d0 22bc 	ldr.w	r2, [r0, #700]	; 0x2bc
 8007cea:	4639      	mov	r1, r7
 8007cec:	f8d2 9008 	ldr.w	r9, [r2, #8]
 8007cf0:	4618      	mov	r0, r3
 8007cf2:	4622      	mov	r2, r4
 8007cf4:	47c8      	blx	r9
 8007cf6:	4639      	mov	r1, r7
 8007cf8:	4628      	mov	r0, r5
 8007cfa:	88f2      	ldrh	r2, [r6, #6]
 8007cfc:	f000 fc4b 	bl	8008596 <USBD_CtlSendData>
 8007d00:	4644      	mov	r4, r8
 8007d02:	4620      	mov	r0, r4
 8007d04:	b003      	add	sp, #12
 8007d06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007d0a:	4622      	mov	r2, r4
 8007d0c:	4639      	mov	r1, r7
 8007d0e:	f887 3200 	strb.w	r3, [r7, #512]	; 0x200
 8007d12:	f887 4201 	strb.w	r4, [r7, #513]	; 0x201
 8007d16:	f000 fc53 	bl	80085c0 <USBD_CtlPrepareRx>
 8007d1a:	e7f1      	b.n	8007d00 <USBD_CDC_Setup+0x48>
 8007d1c:	f8d0 22bc 	ldr.w	r2, [r0, #700]	; 0x2bc
 8007d20:	4618      	mov	r0, r3
 8007d22:	6895      	ldr	r5, [r2, #8]
 8007d24:	4622      	mov	r2, r4
 8007d26:	47a8      	blx	r5
 8007d28:	e7eb      	b.n	8007d02 <USBD_CDC_Setup+0x4a>
 8007d2a:	784b      	ldrb	r3, [r1, #1]
 8007d2c:	2b0a      	cmp	r3, #10
 8007d2e:	d00c      	beq.n	8007d4a <USBD_CDC_Setup+0x92>
 8007d30:	2b0b      	cmp	r3, #11
 8007d32:	d012      	beq.n	8007d5a <USBD_CDC_Setup+0xa2>
 8007d34:	b9ab      	cbnz	r3, 8007d62 <USBD_CDC_Setup+0xaa>
 8007d36:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8007d3a:	2b03      	cmp	r3, #3
 8007d3c:	d111      	bne.n	8007d62 <USBD_CDC_Setup+0xaa>
 8007d3e:	2202      	movs	r2, #2
 8007d40:	f10d 0106 	add.w	r1, sp, #6
 8007d44:	f000 fc27 	bl	8008596 <USBD_CtlSendData>
 8007d48:	e7db      	b.n	8007d02 <USBD_CDC_Setup+0x4a>
 8007d4a:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8007d4e:	2b03      	cmp	r3, #3
 8007d50:	d107      	bne.n	8007d62 <USBD_CDC_Setup+0xaa>
 8007d52:	2201      	movs	r2, #1
 8007d54:	f10d 0105 	add.w	r1, sp, #5
 8007d58:	e7f4      	b.n	8007d44 <USBD_CDC_Setup+0x8c>
 8007d5a:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8007d5e:	2b03      	cmp	r3, #3
 8007d60:	d0cf      	beq.n	8007d02 <USBD_CDC_Setup+0x4a>
 8007d62:	4631      	mov	r1, r6
 8007d64:	4628      	mov	r0, r5
 8007d66:	f000 fbef 	bl	8008548 <USBD_CtlError>
 8007d6a:	2402      	movs	r4, #2
 8007d6c:	e7c9      	b.n	8007d02 <USBD_CDC_Setup+0x4a>

08007d6e <USBD_CDC_DeInit>:
 8007d6e:	b538      	push	{r3, r4, r5, lr}
 8007d70:	4604      	mov	r4, r0
 8007d72:	2500      	movs	r5, #0
 8007d74:	2181      	movs	r1, #129	; 0x81
 8007d76:	f002 fac1 	bl	800a2fc <USBD_LL_CloseEP>
 8007d7a:	2101      	movs	r1, #1
 8007d7c:	4620      	mov	r0, r4
 8007d7e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8007d80:	f002 fabc 	bl	800a2fc <USBD_LL_CloseEP>
 8007d84:	2182      	movs	r1, #130	; 0x82
 8007d86:	4620      	mov	r0, r4
 8007d88:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
 8007d8c:	f002 fab6 	bl	800a2fc <USBD_LL_CloseEP>
 8007d90:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 8007d94:	6425      	str	r5, [r4, #64]	; 0x40
 8007d96:	b14b      	cbz	r3, 8007dac <USBD_CDC_DeInit+0x3e>
 8007d98:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 8007d9c:	685b      	ldr	r3, [r3, #4]
 8007d9e:	4798      	blx	r3
 8007da0:	f8d4 02b8 	ldr.w	r0, [r4, #696]	; 0x2b8
 8007da4:	f002 fb18 	bl	800a3d8 <USBD_static_free>
 8007da8:	f8c4 52b8 	str.w	r5, [r4, #696]	; 0x2b8
 8007dac:	2000      	movs	r0, #0
 8007dae:	bd38      	pop	{r3, r4, r5, pc}

08007db0 <USBD_CDC_Init>:
 8007db0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007db4:	7c03      	ldrb	r3, [r0, #16]
 8007db6:	4604      	mov	r4, r0
 8007db8:	bbbb      	cbnz	r3, 8007e2a <USBD_CDC_Init+0x7a>
 8007dba:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007dbe:	2202      	movs	r2, #2
 8007dc0:	2181      	movs	r1, #129	; 0x81
 8007dc2:	2501      	movs	r5, #1
 8007dc4:	f002 fa8a 	bl	800a2dc <USBD_LL_OpenEP>
 8007dc8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007dcc:	62e5      	str	r5, [r4, #44]	; 0x2c
 8007dce:	2701      	movs	r7, #1
 8007dd0:	4629      	mov	r1, r5
 8007dd2:	2202      	movs	r2, #2
 8007dd4:	4620      	mov	r0, r4
 8007dd6:	f002 fa81 	bl	800a2dc <USBD_LL_OpenEP>
 8007dda:	2308      	movs	r3, #8
 8007ddc:	2203      	movs	r2, #3
 8007dde:	2182      	movs	r1, #130	; 0x82
 8007de0:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
 8007de4:	4620      	mov	r0, r4
 8007de6:	f002 fa79 	bl	800a2dc <USBD_LL_OpenEP>
 8007dea:	f44f 7007 	mov.w	r0, #540	; 0x21c
 8007dee:	6427      	str	r7, [r4, #64]	; 0x40
 8007df0:	f002 faee 	bl	800a3d0 <USBD_static_malloc>
 8007df4:	4605      	mov	r5, r0
 8007df6:	f8c4 02b8 	str.w	r0, [r4, #696]	; 0x2b8
 8007dfa:	b340      	cbz	r0, 8007e4e <USBD_CDC_Init+0x9e>
 8007dfc:	f04f 0800 	mov.w	r8, #0
 8007e00:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 8007e04:	681b      	ldr	r3, [r3, #0]
 8007e06:	4798      	blx	r3
 8007e08:	f8c5 8214 	str.w	r8, [r5, #532]	; 0x214
 8007e0c:	f8c5 8218 	str.w	r8, [r5, #536]	; 0x218
 8007e10:	7c26      	ldrb	r6, [r4, #16]
 8007e12:	b99e      	cbnz	r6, 8007e3c <USBD_CDC_Init+0x8c>
 8007e14:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007e18:	4639      	mov	r1, r7
 8007e1a:	4620      	mov	r0, r4
 8007e1c:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8007e20:	f002 fac4 	bl	800a3ac <USBD_LL_PrepareReceive>
 8007e24:	4630      	mov	r0, r6
 8007e26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e2a:	2501      	movs	r5, #1
 8007e2c:	2340      	movs	r3, #64	; 0x40
 8007e2e:	2202      	movs	r2, #2
 8007e30:	2181      	movs	r1, #129	; 0x81
 8007e32:	f002 fa53 	bl	800a2dc <USBD_LL_OpenEP>
 8007e36:	2340      	movs	r3, #64	; 0x40
 8007e38:	62e5      	str	r5, [r4, #44]	; 0x2c
 8007e3a:	e7c8      	b.n	8007dce <USBD_CDC_Init+0x1e>
 8007e3c:	2340      	movs	r3, #64	; 0x40
 8007e3e:	4639      	mov	r1, r7
 8007e40:	4620      	mov	r0, r4
 8007e42:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8007e46:	f002 fab1 	bl	800a3ac <USBD_LL_PrepareReceive>
 8007e4a:	4646      	mov	r6, r8
 8007e4c:	e7ea      	b.n	8007e24 <USBD_CDC_Init+0x74>
 8007e4e:	463e      	mov	r6, r7
 8007e50:	e7e8      	b.n	8007e24 <USBD_CDC_Init+0x74>

08007e52 <USBD_CDC_RegisterInterface>:
 8007e52:	b119      	cbz	r1, 8007e5c <USBD_CDC_RegisterInterface+0xa>
 8007e54:	f8c0 12bc 	str.w	r1, [r0, #700]	; 0x2bc
 8007e58:	2000      	movs	r0, #0
 8007e5a:	4770      	bx	lr
 8007e5c:	2002      	movs	r0, #2
 8007e5e:	4770      	bx	lr

08007e60 <USBD_CDC_SetTxBuffer>:
 8007e60:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8007e64:	2000      	movs	r0, #0
 8007e66:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
 8007e6a:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 8007e6e:	4770      	bx	lr

08007e70 <USBD_CDC_SetRxBuffer>:
 8007e70:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8007e74:	2000      	movs	r0, #0
 8007e76:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8007e7a:	4770      	bx	lr

08007e7c <USBD_CDC_TransmitPacket>:
 8007e7c:	f8d0 22b8 	ldr.w	r2, [r0, #696]	; 0x2b8
 8007e80:	b510      	push	{r4, lr}
 8007e82:	b182      	cbz	r2, 8007ea6 <USBD_CDC_TransmitPacket+0x2a>
 8007e84:	f8d2 4214 	ldr.w	r4, [r2, #532]	; 0x214
 8007e88:	2301      	movs	r3, #1
 8007e8a:	b974      	cbnz	r4, 8007eaa <USBD_CDC_TransmitPacket+0x2e>
 8007e8c:	f8c2 3214 	str.w	r3, [r2, #532]	; 0x214
 8007e90:	f8d2 3210 	ldr.w	r3, [r2, #528]	; 0x210
 8007e94:	2181      	movs	r1, #129	; 0x81
 8007e96:	6303      	str	r3, [r0, #48]	; 0x30
 8007e98:	f8d2 2208 	ldr.w	r2, [r2, #520]	; 0x208
 8007e9c:	b29b      	uxth	r3, r3
 8007e9e:	f002 fa77 	bl	800a390 <USBD_LL_Transmit>
 8007ea2:	4620      	mov	r0, r4
 8007ea4:	bd10      	pop	{r4, pc}
 8007ea6:	2002      	movs	r0, #2
 8007ea8:	e7fc      	b.n	8007ea4 <USBD_CDC_TransmitPacket+0x28>
 8007eaa:	4618      	mov	r0, r3
 8007eac:	e7fa      	b.n	8007ea4 <USBD_CDC_TransmitPacket+0x28>

08007eae <USBD_CDC_ReceivePacket>:
 8007eae:	f8d0 22b8 	ldr.w	r2, [r0, #696]	; 0x2b8
 8007eb2:	b510      	push	{r4, lr}
 8007eb4:	b182      	cbz	r2, 8007ed8 <USBD_CDC_ReceivePacket+0x2a>
 8007eb6:	7c04      	ldrb	r4, [r0, #16]
 8007eb8:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8007ebc:	b934      	cbnz	r4, 8007ecc <USBD_CDC_ReceivePacket+0x1e>
 8007ebe:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007ec2:	2101      	movs	r1, #1
 8007ec4:	f002 fa72 	bl	800a3ac <USBD_LL_PrepareReceive>
 8007ec8:	4620      	mov	r0, r4
 8007eca:	bd10      	pop	{r4, pc}
 8007ecc:	2340      	movs	r3, #64	; 0x40
 8007ece:	2101      	movs	r1, #1
 8007ed0:	f002 fa6c 	bl	800a3ac <USBD_LL_PrepareReceive>
 8007ed4:	2400      	movs	r4, #0
 8007ed6:	e7f7      	b.n	8007ec8 <USBD_CDC_ReceivePacket+0x1a>
 8007ed8:	2402      	movs	r4, #2
 8007eda:	e7f5      	b.n	8007ec8 <USBD_CDC_ReceivePacket+0x1a>

08007edc <USBD_Init>:
 8007edc:	b508      	push	{r3, lr}
 8007ede:	b180      	cbz	r0, 8007f02 <USBD_Init+0x26>
 8007ee0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8007ee4:	b113      	cbz	r3, 8007eec <USBD_Init+0x10>
 8007ee6:	2300      	movs	r3, #0
 8007ee8:	f8c0 32b4 	str.w	r3, [r0, #692]	; 0x2b4
 8007eec:	b109      	cbz	r1, 8007ef2 <USBD_Init+0x16>
 8007eee:	f8c0 12b0 	str.w	r1, [r0, #688]	; 0x2b0
 8007ef2:	2301      	movs	r3, #1
 8007ef4:	7002      	strb	r2, [r0, #0]
 8007ef6:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 8007efa:	f002 f99f 	bl	800a23c <USBD_LL_Init>
 8007efe:	2000      	movs	r0, #0
 8007f00:	bd08      	pop	{r3, pc}
 8007f02:	2002      	movs	r0, #2
 8007f04:	e7fc      	b.n	8007f00 <USBD_Init+0x24>

08007f06 <USBD_RegisterClass>:
 8007f06:	b119      	cbz	r1, 8007f10 <USBD_RegisterClass+0xa>
 8007f08:	f8c0 12b4 	str.w	r1, [r0, #692]	; 0x2b4
 8007f0c:	2000      	movs	r0, #0
 8007f0e:	4770      	bx	lr
 8007f10:	2002      	movs	r0, #2
 8007f12:	4770      	bx	lr

08007f14 <USBD_Start>:
 8007f14:	b508      	push	{r3, lr}
 8007f16:	f002 f9d3 	bl	800a2c0 <USBD_LL_Start>
 8007f1a:	2000      	movs	r0, #0
 8007f1c:	bd08      	pop	{r3, pc}

08007f1e <USBD_SetClassConfig>:
 8007f1e:	b508      	push	{r3, lr}
 8007f20:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8007f24:	b90b      	cbnz	r3, 8007f2a <USBD_SetClassConfig+0xc>
 8007f26:	2002      	movs	r0, #2
 8007f28:	bd08      	pop	{r3, pc}
 8007f2a:	681b      	ldr	r3, [r3, #0]
 8007f2c:	4798      	blx	r3
 8007f2e:	2800      	cmp	r0, #0
 8007f30:	d0fa      	beq.n	8007f28 <USBD_SetClassConfig+0xa>
 8007f32:	e7f8      	b.n	8007f26 <USBD_SetClassConfig+0x8>

08007f34 <USBD_ClrClassConfig>:
 8007f34:	b508      	push	{r3, lr}
 8007f36:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8007f3a:	685b      	ldr	r3, [r3, #4]
 8007f3c:	4798      	blx	r3
 8007f3e:	2000      	movs	r0, #0
 8007f40:	bd08      	pop	{r3, pc}

08007f42 <USBD_LL_SetupStage>:
 8007f42:	b538      	push	{r3, r4, r5, lr}
 8007f44:	f500 752a 	add.w	r5, r0, #680	; 0x2a8
 8007f48:	4604      	mov	r4, r0
 8007f4a:	4628      	mov	r0, r5
 8007f4c:	f000 fae8 	bl	8008520 <USBD_ParseSetupRequest>
 8007f50:	2301      	movs	r3, #1
 8007f52:	f894 12a8 	ldrb.w	r1, [r4, #680]	; 0x2a8
 8007f56:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
 8007f5a:	f8b4 32ae 	ldrh.w	r3, [r4, #686]	; 0x2ae
 8007f5e:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298
 8007f62:	f001 031f 	and.w	r3, r1, #31
 8007f66:	2b01      	cmp	r3, #1
 8007f68:	d008      	beq.n	8007f7c <USBD_LL_SetupStage+0x3a>
 8007f6a:	2b02      	cmp	r3, #2
 8007f6c:	d00b      	beq.n	8007f86 <USBD_LL_SetupStage+0x44>
 8007f6e:	b97b      	cbnz	r3, 8007f90 <USBD_LL_SetupStage+0x4e>
 8007f70:	4629      	mov	r1, r5
 8007f72:	4620      	mov	r0, r4
 8007f74:	f000 f8fc 	bl	8008170 <USBD_StdDevReq>
 8007f78:	2000      	movs	r0, #0
 8007f7a:	bd38      	pop	{r3, r4, r5, pc}
 8007f7c:	4629      	mov	r1, r5
 8007f7e:	4620      	mov	r0, r4
 8007f80:	f000 fa20 	bl	80083c4 <USBD_StdItfReq>
 8007f84:	e7f8      	b.n	8007f78 <USBD_LL_SetupStage+0x36>
 8007f86:	4629      	mov	r1, r5
 8007f88:	4620      	mov	r0, r4
 8007f8a:	f000 fa3f 	bl	800840c <USBD_StdEPReq>
 8007f8e:	e7f3      	b.n	8007f78 <USBD_LL_SetupStage+0x36>
 8007f90:	4620      	mov	r0, r4
 8007f92:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8007f96:	f002 f9bf 	bl	800a318 <USBD_LL_StallEP>
 8007f9a:	e7ed      	b.n	8007f78 <USBD_LL_SetupStage+0x36>

08007f9c <USBD_LL_DataOutStage>:
 8007f9c:	b570      	push	{r4, r5, r6, lr}
 8007f9e:	4604      	mov	r4, r0
 8007fa0:	4616      	mov	r6, r2
 8007fa2:	460d      	mov	r5, r1
 8007fa4:	bb39      	cbnz	r1, 8007ff6 <USBD_LL_DataOutStage+0x5a>
 8007fa6:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8007faa:	2b03      	cmp	r3, #3
 8007fac:	d11c      	bne.n	8007fe8 <USBD_LL_DataOutStage+0x4c>
 8007fae:	e9d0 1258 	ldrd	r1, r2, [r0, #352]	; 0x160
 8007fb2:	4291      	cmp	r1, r2
 8007fb4:	d90b      	bls.n	8007fce <USBD_LL_DataOutStage+0x32>
 8007fb6:	1a89      	subs	r1, r1, r2
 8007fb8:	428a      	cmp	r2, r1
 8007fba:	f8c0 1160 	str.w	r1, [r0, #352]	; 0x160
 8007fbe:	bf8c      	ite	hi
 8007fc0:	b28a      	uxthhi	r2, r1
 8007fc2:	b292      	uxthls	r2, r2
 8007fc4:	4631      	mov	r1, r6
 8007fc6:	f000 fb08 	bl	80085da <USBD_CtlContinueRx>
 8007fca:	4628      	mov	r0, r5
 8007fcc:	bd70      	pop	{r4, r5, r6, pc}
 8007fce:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8007fd2:	691b      	ldr	r3, [r3, #16]
 8007fd4:	b123      	cbz	r3, 8007fe0 <USBD_LL_DataOutStage+0x44>
 8007fd6:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8007fda:	2a03      	cmp	r2, #3
 8007fdc:	d100      	bne.n	8007fe0 <USBD_LL_DataOutStage+0x44>
 8007fde:	4798      	blx	r3
 8007fe0:	4620      	mov	r0, r4
 8007fe2:	f000 fb02 	bl	80085ea <USBD_CtlSendStatus>
 8007fe6:	e7f0      	b.n	8007fca <USBD_LL_DataOutStage+0x2e>
 8007fe8:	2b05      	cmp	r3, #5
 8007fea:	d1ee      	bne.n	8007fca <USBD_LL_DataOutStage+0x2e>
 8007fec:	f8c4 1294 	str.w	r1, [r4, #660]	; 0x294
 8007ff0:	f002 f992 	bl	800a318 <USBD_LL_StallEP>
 8007ff4:	e7e9      	b.n	8007fca <USBD_LL_DataOutStage+0x2e>
 8007ff6:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8007ffa:	699b      	ldr	r3, [r3, #24]
 8007ffc:	b133      	cbz	r3, 800800c <USBD_LL_DataOutStage+0x70>
 8007ffe:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8008002:	2a03      	cmp	r2, #3
 8008004:	d102      	bne.n	800800c <USBD_LL_DataOutStage+0x70>
 8008006:	4798      	blx	r3
 8008008:	2500      	movs	r5, #0
 800800a:	e7de      	b.n	8007fca <USBD_LL_DataOutStage+0x2e>
 800800c:	2502      	movs	r5, #2
 800800e:	e7dc      	b.n	8007fca <USBD_LL_DataOutStage+0x2e>

08008010 <USBD_LL_DataInStage>:
 8008010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008012:	4604      	mov	r4, r0
 8008014:	4617      	mov	r7, r2
 8008016:	460d      	mov	r5, r1
 8008018:	2900      	cmp	r1, #0
 800801a:	d147      	bne.n	80080ac <USBD_LL_DataInStage+0x9c>
 800801c:	f8d0 3294 	ldr.w	r3, [r0, #660]	; 0x294
 8008020:	2b02      	cmp	r3, #2
 8008022:	d13c      	bne.n	800809e <USBD_LL_DataInStage+0x8e>
 8008024:	e9d0 6308 	ldrd	r6, r3, [r0, #32]
 8008028:	429e      	cmp	r6, r3
 800802a:	d914      	bls.n	8008056 <USBD_LL_DataInStage+0x46>
 800802c:	1af3      	subs	r3, r6, r3
 800802e:	4639      	mov	r1, r7
 8008030:	6203      	str	r3, [r0, #32]
 8008032:	b29a      	uxth	r2, r3
 8008034:	f000 fabc 	bl	80085b0 <USBD_CtlContinueSendData>
 8008038:	462b      	mov	r3, r5
 800803a:	462a      	mov	r2, r5
 800803c:	4629      	mov	r1, r5
 800803e:	4620      	mov	r0, r4
 8008040:	f002 f9b4 	bl	800a3ac <USBD_LL_PrepareReceive>
 8008044:	f894 32a0 	ldrb.w	r3, [r4, #672]	; 0x2a0
 8008048:	2b01      	cmp	r3, #1
 800804a:	d102      	bne.n	8008052 <USBD_LL_DataInStage+0x42>
 800804c:	2300      	movs	r3, #0
 800804e:	f884 32a0 	strb.w	r3, [r4, #672]	; 0x2a0
 8008052:	4628      	mov	r0, r5
 8008054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008056:	69c2      	ldr	r2, [r0, #28]
 8008058:	fbb2 f6f3 	udiv	r6, r2, r3
 800805c:	fb03 2616 	mls	r6, r3, r6, r2
 8008060:	b95e      	cbnz	r6, 800807a <USBD_LL_DataInStage+0x6a>
 8008062:	4293      	cmp	r3, r2
 8008064:	d809      	bhi.n	800807a <USBD_LL_DataInStage+0x6a>
 8008066:	f8d0 3298 	ldr.w	r3, [r0, #664]	; 0x298
 800806a:	429a      	cmp	r2, r3
 800806c:	d205      	bcs.n	800807a <USBD_LL_DataInStage+0x6a>
 800806e:	460a      	mov	r2, r1
 8008070:	f000 fa9e 	bl	80085b0 <USBD_CtlContinueSendData>
 8008074:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008078:	e7de      	b.n	8008038 <USBD_LL_DataInStage+0x28>
 800807a:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 800807e:	68db      	ldr	r3, [r3, #12]
 8008080:	b12b      	cbz	r3, 800808e <USBD_LL_DataInStage+0x7e>
 8008082:	f894 229c 	ldrb.w	r2, [r4, #668]	; 0x29c
 8008086:	2a03      	cmp	r2, #3
 8008088:	d101      	bne.n	800808e <USBD_LL_DataInStage+0x7e>
 800808a:	4620      	mov	r0, r4
 800808c:	4798      	blx	r3
 800808e:	2180      	movs	r1, #128	; 0x80
 8008090:	4620      	mov	r0, r4
 8008092:	f002 f941 	bl	800a318 <USBD_LL_StallEP>
 8008096:	4620      	mov	r0, r4
 8008098:	f000 fab2 	bl	8008600 <USBD_CtlReceiveStatus>
 800809c:	e7d2      	b.n	8008044 <USBD_LL_DataInStage+0x34>
 800809e:	f033 0304 	bics.w	r3, r3, #4
 80080a2:	d1cf      	bne.n	8008044 <USBD_LL_DataInStage+0x34>
 80080a4:	2180      	movs	r1, #128	; 0x80
 80080a6:	f002 f937 	bl	800a318 <USBD_LL_StallEP>
 80080aa:	e7cb      	b.n	8008044 <USBD_LL_DataInStage+0x34>
 80080ac:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80080b0:	695b      	ldr	r3, [r3, #20]
 80080b2:	b133      	cbz	r3, 80080c2 <USBD_LL_DataInStage+0xb2>
 80080b4:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 80080b8:	2a03      	cmp	r2, #3
 80080ba:	d102      	bne.n	80080c2 <USBD_LL_DataInStage+0xb2>
 80080bc:	4798      	blx	r3
 80080be:	2500      	movs	r5, #0
 80080c0:	e7c7      	b.n	8008052 <USBD_LL_DataInStage+0x42>
 80080c2:	2502      	movs	r5, #2
 80080c4:	e7c5      	b.n	8008052 <USBD_LL_DataInStage+0x42>

080080c6 <USBD_LL_Reset>:
 80080c6:	2200      	movs	r2, #0
 80080c8:	b570      	push	{r4, r5, r6, lr}
 80080ca:	4604      	mov	r4, r0
 80080cc:	2501      	movs	r5, #1
 80080ce:	2640      	movs	r6, #64	; 0x40
 80080d0:	4611      	mov	r1, r2
 80080d2:	2340      	movs	r3, #64	; 0x40
 80080d4:	f002 f902 	bl	800a2dc <USBD_LL_OpenEP>
 80080d8:	4633      	mov	r3, r6
 80080da:	2180      	movs	r1, #128	; 0x80
 80080dc:	2200      	movs	r2, #0
 80080de:	4620      	mov	r0, r4
 80080e0:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 80080e4:	f8c4 6164 	str.w	r6, [r4, #356]	; 0x164
 80080e8:	f002 f8f8 	bl	800a2dc <USBD_LL_OpenEP>
 80080ec:	2100      	movs	r1, #0
 80080ee:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 80080f2:	61a5      	str	r5, [r4, #24]
 80080f4:	6266      	str	r6, [r4, #36]	; 0x24
 80080f6:	f884 529c 	strb.w	r5, [r4, #668]	; 0x29c
 80080fa:	f8c4 1294 	str.w	r1, [r4, #660]	; 0x294
 80080fe:	6061      	str	r1, [r4, #4]
 8008100:	f8c4 12a4 	str.w	r1, [r4, #676]	; 0x2a4
 8008104:	b123      	cbz	r3, 8008110 <USBD_LL_Reset+0x4a>
 8008106:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 800810a:	4620      	mov	r0, r4
 800810c:	685b      	ldr	r3, [r3, #4]
 800810e:	4798      	blx	r3
 8008110:	2000      	movs	r0, #0
 8008112:	bd70      	pop	{r4, r5, r6, pc}

08008114 <USBD_LL_SetSpeed>:
 8008114:	7401      	strb	r1, [r0, #16]
 8008116:	2000      	movs	r0, #0
 8008118:	4770      	bx	lr

0800811a <USBD_LL_Suspend>:
 800811a:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800811e:	f880 329d 	strb.w	r3, [r0, #669]	; 0x29d
 8008122:	2304      	movs	r3, #4
 8008124:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 8008128:	2000      	movs	r0, #0
 800812a:	4770      	bx	lr

0800812c <USBD_LL_Resume>:
 800812c:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8008130:	2b04      	cmp	r3, #4
 8008132:	bf04      	itt	eq
 8008134:	f890 329d 	ldrbeq.w	r3, [r0, #669]	; 0x29d
 8008138:	f880 329c 	strbeq.w	r3, [r0, #668]	; 0x29c
 800813c:	2000      	movs	r0, #0
 800813e:	4770      	bx	lr

08008140 <USBD_LL_SOF>:
 8008140:	b508      	push	{r3, lr}
 8008142:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8008146:	2a03      	cmp	r2, #3
 8008148:	d104      	bne.n	8008154 <USBD_LL_SOF+0x14>
 800814a:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800814e:	69db      	ldr	r3, [r3, #28]
 8008150:	b103      	cbz	r3, 8008154 <USBD_LL_SOF+0x14>
 8008152:	4798      	blx	r3
 8008154:	2000      	movs	r0, #0
 8008156:	bd08      	pop	{r3, pc}

08008158 <USBD_CtlError.constprop.0>:
 8008158:	b510      	push	{r4, lr}
 800815a:	4604      	mov	r4, r0
 800815c:	2180      	movs	r1, #128	; 0x80
 800815e:	f002 f8db 	bl	800a318 <USBD_LL_StallEP>
 8008162:	4620      	mov	r0, r4
 8008164:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008168:	2100      	movs	r1, #0
 800816a:	f002 b8d5 	b.w	800a318 <USBD_LL_StallEP>
	...

08008170 <USBD_StdDevReq>:
 8008170:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008172:	780b      	ldrb	r3, [r1, #0]
 8008174:	4604      	mov	r4, r0
 8008176:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800817a:	2b20      	cmp	r3, #32
 800817c:	460d      	mov	r5, r1
 800817e:	d012      	beq.n	80081a6 <USBD_StdDevReq+0x36>
 8008180:	2b40      	cmp	r3, #64	; 0x40
 8008182:	d010      	beq.n	80081a6 <USBD_StdDevReq+0x36>
 8008184:	2b00      	cmp	r3, #0
 8008186:	d151      	bne.n	800822c <USBD_StdDevReq+0xbc>
 8008188:	784b      	ldrb	r3, [r1, #1]
 800818a:	2b09      	cmp	r3, #9
 800818c:	d84e      	bhi.n	800822c <USBD_StdDevReq+0xbc>
 800818e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8008192:	00ee      	.short	0x00ee
 8008194:	004d010a 	.word	0x004d010a
 8008198:	004d0103 	.word	0x004d0103
 800819c:	00130087 	.word	0x00130087
 80081a0:	00d6004d 	.word	0x00d6004d
 80081a4:	00a3      	.short	0x00a3
 80081a6:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 80081aa:	4629      	mov	r1, r5
 80081ac:	4620      	mov	r0, r4
 80081ae:	689b      	ldr	r3, [r3, #8]
 80081b0:	4798      	blx	r3
 80081b2:	2000      	movs	r0, #0
 80081b4:	b003      	add	sp, #12
 80081b6:	bd30      	pop	{r4, r5, pc}
 80081b8:	2300      	movs	r3, #0
 80081ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 80081be:	884b      	ldrh	r3, [r1, #2]
 80081c0:	0a1a      	lsrs	r2, r3, #8
 80081c2:	3a01      	subs	r2, #1
 80081c4:	2a06      	cmp	r2, #6
 80081c6:	d831      	bhi.n	800822c <USBD_StdDevReq+0xbc>
 80081c8:	e8df f002 	tbb	[pc, r2]
 80081cc:	30231604 	.word	0x30231604
 80081d0:	4830      	.short	0x4830
 80081d2:	52          	.byte	0x52
 80081d3:	00          	.byte	0x00
 80081d4:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 80081d8:	681b      	ldr	r3, [r3, #0]
 80081da:	7c20      	ldrb	r0, [r4, #16]
 80081dc:	f10d 0106 	add.w	r1, sp, #6
 80081e0:	4798      	blx	r3
 80081e2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80081e6:	2a00      	cmp	r2, #0
 80081e8:	d056      	beq.n	8008298 <USBD_StdDevReq+0x128>
 80081ea:	88eb      	ldrh	r3, [r5, #6]
 80081ec:	2b00      	cmp	r3, #0
 80081ee:	d14a      	bne.n	8008286 <USBD_StdDevReq+0x116>
 80081f0:	4620      	mov	r0, r4
 80081f2:	f000 f9fa 	bl	80085ea <USBD_CtlSendStatus>
 80081f6:	e7dc      	b.n	80081b2 <USBD_StdDevReq+0x42>
 80081f8:	7c02      	ldrb	r2, [r0, #16]
 80081fa:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80081fe:	b932      	cbnz	r2, 800820e <USBD_StdDevReq+0x9e>
 8008200:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008202:	f10d 0006 	add.w	r0, sp, #6
 8008206:	4798      	blx	r3
 8008208:	2302      	movs	r3, #2
 800820a:	7043      	strb	r3, [r0, #1]
 800820c:	e7e9      	b.n	80081e2 <USBD_StdDevReq+0x72>
 800820e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008210:	e7f7      	b.n	8008202 <USBD_StdDevReq+0x92>
 8008212:	b2db      	uxtb	r3, r3
 8008214:	2b05      	cmp	r3, #5
 8008216:	d809      	bhi.n	800822c <USBD_StdDevReq+0xbc>
 8008218:	e8df f003 	tbb	[pc, r3]
 800821c:	14100c03 	.word	0x14100c03
 8008220:	1c18      	.short	0x1c18
 8008222:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8008226:	685b      	ldr	r3, [r3, #4]
 8008228:	2b00      	cmp	r3, #0
 800822a:	d1d6      	bne.n	80081da <USBD_StdDevReq+0x6a>
 800822c:	4620      	mov	r0, r4
 800822e:	f7ff ff93 	bl	8008158 <USBD_CtlError.constprop.0>
 8008232:	e7be      	b.n	80081b2 <USBD_StdDevReq+0x42>
 8008234:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8008238:	689b      	ldr	r3, [r3, #8]
 800823a:	e7f5      	b.n	8008228 <USBD_StdDevReq+0xb8>
 800823c:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8008240:	68db      	ldr	r3, [r3, #12]
 8008242:	e7f1      	b.n	8008228 <USBD_StdDevReq+0xb8>
 8008244:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8008248:	691b      	ldr	r3, [r3, #16]
 800824a:	e7ed      	b.n	8008228 <USBD_StdDevReq+0xb8>
 800824c:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8008250:	695b      	ldr	r3, [r3, #20]
 8008252:	e7e9      	b.n	8008228 <USBD_StdDevReq+0xb8>
 8008254:	f8d0 32b0 	ldr.w	r3, [r0, #688]	; 0x2b0
 8008258:	699b      	ldr	r3, [r3, #24]
 800825a:	e7e5      	b.n	8008228 <USBD_StdDevReq+0xb8>
 800825c:	7c03      	ldrb	r3, [r0, #16]
 800825e:	2b00      	cmp	r3, #0
 8008260:	d1e4      	bne.n	800822c <USBD_StdDevReq+0xbc>
 8008262:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8008266:	f10d 0006 	add.w	r0, sp, #6
 800826a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800826c:	4798      	blx	r3
 800826e:	e7b8      	b.n	80081e2 <USBD_StdDevReq+0x72>
 8008270:	7c03      	ldrb	r3, [r0, #16]
 8008272:	2b00      	cmp	r3, #0
 8008274:	d1da      	bne.n	800822c <USBD_StdDevReq+0xbc>
 8008276:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800827a:	f10d 0006 	add.w	r0, sp, #6
 800827e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008280:	4798      	blx	r3
 8008282:	2307      	movs	r3, #7
 8008284:	e7c1      	b.n	800820a <USBD_StdDevReq+0x9a>
 8008286:	429a      	cmp	r2, r3
 8008288:	bf28      	it	cs
 800828a:	461a      	movcs	r2, r3
 800828c:	4601      	mov	r1, r0
 800828e:	4620      	mov	r0, r4
 8008290:	f8ad 2006 	strh.w	r2, [sp, #6]
 8008294:	f000 f97f 	bl	8008596 <USBD_CtlSendData>
 8008298:	88eb      	ldrh	r3, [r5, #6]
 800829a:	2b00      	cmp	r3, #0
 800829c:	d189      	bne.n	80081b2 <USBD_StdDevReq+0x42>
 800829e:	e7a7      	b.n	80081f0 <USBD_StdDevReq+0x80>
 80082a0:	888b      	ldrh	r3, [r1, #4]
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d1c2      	bne.n	800822c <USBD_StdDevReq+0xbc>
 80082a6:	88cb      	ldrh	r3, [r1, #6]
 80082a8:	2b00      	cmp	r3, #0
 80082aa:	d1bf      	bne.n	800822c <USBD_StdDevReq+0xbc>
 80082ac:	884d      	ldrh	r5, [r1, #2]
 80082ae:	2d7f      	cmp	r5, #127	; 0x7f
 80082b0:	d8bc      	bhi.n	800822c <USBD_StdDevReq+0xbc>
 80082b2:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80082b6:	2b03      	cmp	r3, #3
 80082b8:	d0b8      	beq.n	800822c <USBD_StdDevReq+0xbc>
 80082ba:	b2e9      	uxtb	r1, r5
 80082bc:	f880 129e 	strb.w	r1, [r0, #670]	; 0x29e
 80082c0:	f002 f858 	bl	800a374 <USBD_LL_SetUSBAddress>
 80082c4:	4620      	mov	r0, r4
 80082c6:	f000 f990 	bl	80085ea <USBD_CtlSendStatus>
 80082ca:	b11d      	cbz	r5, 80082d4 <USBD_StdDevReq+0x164>
 80082cc:	2302      	movs	r3, #2
 80082ce:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 80082d2:	e76e      	b.n	80081b2 <USBD_StdDevReq+0x42>
 80082d4:	2301      	movs	r3, #1
 80082d6:	e7fa      	b.n	80082ce <USBD_StdDevReq+0x15e>
 80082d8:	7889      	ldrb	r1, [r1, #2]
 80082da:	4d39      	ldr	r5, [pc, #228]	; (80083c0 <USBD_StdDevReq+0x250>)
 80082dc:	2901      	cmp	r1, #1
 80082de:	7029      	strb	r1, [r5, #0]
 80082e0:	d8a4      	bhi.n	800822c <USBD_StdDevReq+0xbc>
 80082e2:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80082e6:	2b02      	cmp	r3, #2
 80082e8:	d008      	beq.n	80082fc <USBD_StdDevReq+0x18c>
 80082ea:	2b03      	cmp	r3, #3
 80082ec:	d015      	beq.n	800831a <USBD_StdDevReq+0x1aa>
 80082ee:	f7ff ff33 	bl	8008158 <USBD_CtlError.constprop.0>
 80082f2:	4620      	mov	r0, r4
 80082f4:	7829      	ldrb	r1, [r5, #0]
 80082f6:	f7ff fe1d 	bl	8007f34 <USBD_ClrClassConfig>
 80082fa:	e75a      	b.n	80081b2 <USBD_StdDevReq+0x42>
 80082fc:	2900      	cmp	r1, #0
 80082fe:	f43f af77 	beq.w	80081f0 <USBD_StdDevReq+0x80>
 8008302:	2101      	movs	r1, #1
 8008304:	2303      	movs	r3, #3
 8008306:	6041      	str	r1, [r0, #4]
 8008308:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 800830c:	4620      	mov	r0, r4
 800830e:	f7ff fe06 	bl	8007f1e <USBD_SetClassConfig>
 8008312:	2802      	cmp	r0, #2
 8008314:	f47f af6c 	bne.w	80081f0 <USBD_StdDevReq+0x80>
 8008318:	e788      	b.n	800822c <USBD_StdDevReq+0xbc>
 800831a:	b931      	cbnz	r1, 800832a <USBD_StdDevReq+0x1ba>
 800831c:	2302      	movs	r3, #2
 800831e:	6041      	str	r1, [r0, #4]
 8008320:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 8008324:	f7ff fe06 	bl	8007f34 <USBD_ClrClassConfig>
 8008328:	e762      	b.n	80081f0 <USBD_StdDevReq+0x80>
 800832a:	6841      	ldr	r1, [r0, #4]
 800832c:	2901      	cmp	r1, #1
 800832e:	f43f af5f 	beq.w	80081f0 <USBD_StdDevReq+0x80>
 8008332:	b2c9      	uxtb	r1, r1
 8008334:	f7ff fdfe 	bl	8007f34 <USBD_ClrClassConfig>
 8008338:	7829      	ldrb	r1, [r5, #0]
 800833a:	6061      	str	r1, [r4, #4]
 800833c:	e7e6      	b.n	800830c <USBD_StdDevReq+0x19c>
 800833e:	88ca      	ldrh	r2, [r1, #6]
 8008340:	2a01      	cmp	r2, #1
 8008342:	f47f af73 	bne.w	800822c <USBD_StdDevReq+0xbc>
 8008346:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800834a:	2b02      	cmp	r3, #2
 800834c:	d80a      	bhi.n	8008364 <USBD_StdDevReq+0x1f4>
 800834e:	2b00      	cmp	r3, #0
 8008350:	f43f af6c 	beq.w	800822c <USBD_StdDevReq+0xbc>
 8008354:	4601      	mov	r1, r0
 8008356:	2300      	movs	r3, #0
 8008358:	f841 3f08 	str.w	r3, [r1, #8]!
 800835c:	4620      	mov	r0, r4
 800835e:	f000 f91a 	bl	8008596 <USBD_CtlSendData>
 8008362:	e726      	b.n	80081b2 <USBD_StdDevReq+0x42>
 8008364:	2b03      	cmp	r3, #3
 8008366:	f47f af61 	bne.w	800822c <USBD_StdDevReq+0xbc>
 800836a:	1d01      	adds	r1, r0, #4
 800836c:	e7f6      	b.n	800835c <USBD_StdDevReq+0x1ec>
 800836e:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8008372:	3b01      	subs	r3, #1
 8008374:	2b02      	cmp	r3, #2
 8008376:	f63f af59 	bhi.w	800822c <USBD_StdDevReq+0xbc>
 800837a:	88cb      	ldrh	r3, [r1, #6]
 800837c:	2b02      	cmp	r3, #2
 800837e:	f47f af55 	bne.w	800822c <USBD_StdDevReq+0xbc>
 8008382:	2301      	movs	r3, #1
 8008384:	60c3      	str	r3, [r0, #12]
 8008386:	f8d0 32a4 	ldr.w	r3, [r0, #676]	; 0x2a4
 800838a:	b10b      	cbz	r3, 8008390 <USBD_StdDevReq+0x220>
 800838c:	2303      	movs	r3, #3
 800838e:	60c3      	str	r3, [r0, #12]
 8008390:	2202      	movs	r2, #2
 8008392:	f104 010c 	add.w	r1, r4, #12
 8008396:	e7e1      	b.n	800835c <USBD_StdDevReq+0x1ec>
 8008398:	884b      	ldrh	r3, [r1, #2]
 800839a:	2b01      	cmp	r3, #1
 800839c:	f47f af09 	bne.w	80081b2 <USBD_StdDevReq+0x42>
 80083a0:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80083a4:	e724      	b.n	80081f0 <USBD_StdDevReq+0x80>
 80083a6:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80083aa:	3b01      	subs	r3, #1
 80083ac:	2b02      	cmp	r3, #2
 80083ae:	f63f af3d 	bhi.w	800822c <USBD_StdDevReq+0xbc>
 80083b2:	884b      	ldrh	r3, [r1, #2]
 80083b4:	2b01      	cmp	r3, #1
 80083b6:	f47f aefc 	bne.w	80081b2 <USBD_StdDevReq+0x42>
 80083ba:	2300      	movs	r3, #0
 80083bc:	e7f0      	b.n	80083a0 <USBD_StdDevReq+0x230>
 80083be:	bf00      	nop
 80083c0:	20000b33 	.word	0x20000b33

080083c4 <USBD_StdItfReq>:
 80083c4:	b538      	push	{r3, r4, r5, lr}
 80083c6:	780b      	ldrb	r3, [r1, #0]
 80083c8:	4604      	mov	r4, r0
 80083ca:	f003 0260 	and.w	r2, r3, #96	; 0x60
 80083ce:	2a40      	cmp	r2, #64	; 0x40
 80083d0:	460d      	mov	r5, r1
 80083d2:	d001      	beq.n	80083d8 <USBD_StdItfReq+0x14>
 80083d4:	065b      	lsls	r3, r3, #25
 80083d6:	d415      	bmi.n	8008404 <USBD_StdItfReq+0x40>
 80083d8:	f894 329c 	ldrb.w	r3, [r4, #668]	; 0x29c
 80083dc:	3b01      	subs	r3, #1
 80083de:	2b02      	cmp	r3, #2
 80083e0:	d810      	bhi.n	8008404 <USBD_StdItfReq+0x40>
 80083e2:	792b      	ldrb	r3, [r5, #4]
 80083e4:	2b01      	cmp	r3, #1
 80083e6:	d80d      	bhi.n	8008404 <USBD_StdItfReq+0x40>
 80083e8:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
 80083ec:	4629      	mov	r1, r5
 80083ee:	689b      	ldr	r3, [r3, #8]
 80083f0:	4620      	mov	r0, r4
 80083f2:	4798      	blx	r3
 80083f4:	88eb      	ldrh	r3, [r5, #6]
 80083f6:	b91b      	cbnz	r3, 8008400 <USBD_StdItfReq+0x3c>
 80083f8:	b910      	cbnz	r0, 8008400 <USBD_StdItfReq+0x3c>
 80083fa:	4620      	mov	r0, r4
 80083fc:	f000 f8f5 	bl	80085ea <USBD_CtlSendStatus>
 8008400:	2000      	movs	r0, #0
 8008402:	bd38      	pop	{r3, r4, r5, pc}
 8008404:	4620      	mov	r0, r4
 8008406:	f7ff fea7 	bl	8008158 <USBD_CtlError.constprop.0>
 800840a:	e7f9      	b.n	8008400 <USBD_StdItfReq+0x3c>

0800840c <USBD_StdEPReq>:
 800840c:	b538      	push	{r3, r4, r5, lr}
 800840e:	780a      	ldrb	r2, [r1, #0]
 8008410:	4604      	mov	r4, r0
 8008412:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8008416:	2a20      	cmp	r2, #32
 8008418:	460b      	mov	r3, r1
 800841a:	d027      	beq.n	800846c <USBD_StdEPReq+0x60>
 800841c:	2a40      	cmp	r2, #64	; 0x40
 800841e:	d025      	beq.n	800846c <USBD_StdEPReq+0x60>
 8008420:	bb92      	cbnz	r2, 8008488 <USBD_StdEPReq+0x7c>
 8008422:	785a      	ldrb	r2, [r3, #1]
 8008424:	888d      	ldrh	r5, [r1, #4]
 8008426:	2a01      	cmp	r2, #1
 8008428:	7909      	ldrb	r1, [r1, #4]
 800842a:	d03d      	beq.n	80084a8 <USBD_StdEPReq+0x9c>
 800842c:	2a03      	cmp	r2, #3
 800842e:	d025      	beq.n	800847c <USBD_StdEPReq+0x70>
 8008430:	bb52      	cbnz	r2, 8008488 <USBD_StdEPReq+0x7c>
 8008432:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8008436:	2b02      	cmp	r3, #2
 8008438:	d04d      	beq.n	80084d6 <USBD_StdEPReq+0xca>
 800843a:	2b03      	cmp	r3, #3
 800843c:	d124      	bne.n	8008488 <USBD_StdEPReq+0x7c>
 800843e:	2214      	movs	r2, #20
 8008440:	f001 030f 	and.w	r3, r1, #15
 8008444:	f015 0f80 	tst.w	r5, #128	; 0x80
 8008448:	fb02 0303 	mla	r3, r2, r3, r0
 800844c:	d054      	beq.n	80084f8 <USBD_StdEPReq+0xec>
 800844e:	699b      	ldr	r3, [r3, #24]
 8008450:	b1d3      	cbz	r3, 8008488 <USBD_StdEPReq+0x7c>
 8008452:	2314      	movs	r3, #20
 8008454:	f001 057f 	and.w	r5, r1, #127	; 0x7f
 8008458:	fb05 3303 	mla	r3, r5, r3, r3
 800845c:	18c5      	adds	r5, r0, r3
 800845e:	f011 037f 	ands.w	r3, r1, #127	; 0x7f
 8008462:	d155      	bne.n	8008510 <USBD_StdEPReq+0x104>
 8008464:	602b      	str	r3, [r5, #0]
 8008466:	2202      	movs	r2, #2
 8008468:	4629      	mov	r1, r5
 800846a:	e041      	b.n	80084f0 <USBD_StdEPReq+0xe4>
 800846c:	f8d4 22b4 	ldr.w	r2, [r4, #692]	; 0x2b4
 8008470:	4619      	mov	r1, r3
 8008472:	4620      	mov	r0, r4
 8008474:	6892      	ldr	r2, [r2, #8]
 8008476:	4790      	blx	r2
 8008478:	2000      	movs	r0, #0
 800847a:	bd38      	pop	{r3, r4, r5, pc}
 800847c:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 8008480:	2a02      	cmp	r2, #2
 8008482:	d01f      	beq.n	80084c4 <USBD_StdEPReq+0xb8>
 8008484:	2a03      	cmp	r2, #3
 8008486:	d003      	beq.n	8008490 <USBD_StdEPReq+0x84>
 8008488:	4620      	mov	r0, r4
 800848a:	f7ff fe65 	bl	8008158 <USBD_CtlError.constprop.0>
 800848e:	e7f3      	b.n	8008478 <USBD_StdEPReq+0x6c>
 8008490:	885a      	ldrh	r2, [r3, #2]
 8008492:	b92a      	cbnz	r2, 80084a0 <USBD_StdEPReq+0x94>
 8008494:	064a      	lsls	r2, r1, #25
 8008496:	d003      	beq.n	80084a0 <USBD_StdEPReq+0x94>
 8008498:	88db      	ldrh	r3, [r3, #6]
 800849a:	b90b      	cbnz	r3, 80084a0 <USBD_StdEPReq+0x94>
 800849c:	f001 ff3c 	bl	800a318 <USBD_LL_StallEP>
 80084a0:	4620      	mov	r0, r4
 80084a2:	f000 f8a2 	bl	80085ea <USBD_CtlSendStatus>
 80084a6:	e7e7      	b.n	8008478 <USBD_StdEPReq+0x6c>
 80084a8:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
 80084ac:	2a02      	cmp	r2, #2
 80084ae:	d009      	beq.n	80084c4 <USBD_StdEPReq+0xb8>
 80084b0:	2a03      	cmp	r2, #3
 80084b2:	d1e9      	bne.n	8008488 <USBD_StdEPReq+0x7c>
 80084b4:	885b      	ldrh	r3, [r3, #2]
 80084b6:	2b00      	cmp	r3, #0
 80084b8:	d1de      	bne.n	8008478 <USBD_StdEPReq+0x6c>
 80084ba:	064d      	lsls	r5, r1, #25
 80084bc:	d0f0      	beq.n	80084a0 <USBD_StdEPReq+0x94>
 80084be:	f001 ff39 	bl	800a334 <USBD_LL_ClearStallEP>
 80084c2:	e7ed      	b.n	80084a0 <USBD_StdEPReq+0x94>
 80084c4:	064b      	lsls	r3, r1, #25
 80084c6:	d0df      	beq.n	8008488 <USBD_StdEPReq+0x7c>
 80084c8:	f001 ff26 	bl	800a318 <USBD_LL_StallEP>
 80084cc:	2180      	movs	r1, #128	; 0x80
 80084ce:	4620      	mov	r0, r4
 80084d0:	f001 ff22 	bl	800a318 <USBD_LL_StallEP>
 80084d4:	e7d0      	b.n	8008478 <USBD_StdEPReq+0x6c>
 80084d6:	064a      	lsls	r2, r1, #25
 80084d8:	d1d6      	bne.n	8008488 <USBD_StdEPReq+0x7c>
 80084da:	062b      	lsls	r3, r5, #24
 80084dc:	f04f 0300 	mov.w	r3, #0
 80084e0:	f04f 0202 	mov.w	r2, #2
 80084e4:	bf4c      	ite	mi
 80084e6:	f100 0114 	addmi.w	r1, r0, #20
 80084ea:	f500 71aa 	addpl.w	r1, r0, #340	; 0x154
 80084ee:	600b      	str	r3, [r1, #0]
 80084f0:	4620      	mov	r0, r4
 80084f2:	f000 f850 	bl	8008596 <USBD_CtlSendData>
 80084f6:	e7bf      	b.n	8008478 <USBD_StdEPReq+0x6c>
 80084f8:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 80084fc:	2b00      	cmp	r3, #0
 80084fe:	d0c3      	beq.n	8008488 <USBD_StdEPReq+0x7c>
 8008500:	2314      	movs	r3, #20
 8008502:	f001 057f 	and.w	r5, r1, #127	; 0x7f
 8008506:	fb03 0505 	mla	r5, r3, r5, r0
 800850a:	f505 75aa 	add.w	r5, r5, #340	; 0x154
 800850e:	e7a6      	b.n	800845e <USBD_StdEPReq+0x52>
 8008510:	4620      	mov	r0, r4
 8008512:	f001 ff1d 	bl	800a350 <USBD_LL_IsStallEP>
 8008516:	b108      	cbz	r0, 800851c <USBD_StdEPReq+0x110>
 8008518:	2301      	movs	r3, #1
 800851a:	e7a3      	b.n	8008464 <USBD_StdEPReq+0x58>
 800851c:	6028      	str	r0, [r5, #0]
 800851e:	e7a2      	b.n	8008466 <USBD_StdEPReq+0x5a>

08008520 <USBD_ParseSetupRequest>:
 8008520:	780b      	ldrb	r3, [r1, #0]
 8008522:	7003      	strb	r3, [r0, #0]
 8008524:	784b      	ldrb	r3, [r1, #1]
 8008526:	7043      	strb	r3, [r0, #1]
 8008528:	78ca      	ldrb	r2, [r1, #3]
 800852a:	788b      	ldrb	r3, [r1, #2]
 800852c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8008530:	8043      	strh	r3, [r0, #2]
 8008532:	794a      	ldrb	r2, [r1, #5]
 8008534:	790b      	ldrb	r3, [r1, #4]
 8008536:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800853a:	8083      	strh	r3, [r0, #4]
 800853c:	79ca      	ldrb	r2, [r1, #7]
 800853e:	798b      	ldrb	r3, [r1, #6]
 8008540:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8008544:	80c3      	strh	r3, [r0, #6]
 8008546:	4770      	bx	lr

08008548 <USBD_CtlError>:
 8008548:	b510      	push	{r4, lr}
 800854a:	4604      	mov	r4, r0
 800854c:	2180      	movs	r1, #128	; 0x80
 800854e:	f001 fee3 	bl	800a318 <USBD_LL_StallEP>
 8008552:	4620      	mov	r0, r4
 8008554:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008558:	2100      	movs	r1, #0
 800855a:	f001 bedd 	b.w	800a318 <USBD_LL_StallEP>

0800855e <USBD_GetString>:
 800855e:	b530      	push	{r4, r5, lr}
 8008560:	b188      	cbz	r0, 8008586 <USBD_GetString+0x28>
 8008562:	2500      	movs	r5, #0
 8008564:	3801      	subs	r0, #1
 8008566:	462b      	mov	r3, r5
 8008568:	3501      	adds	r5, #1
 800856a:	5d44      	ldrb	r4, [r0, r5]
 800856c:	2c00      	cmp	r4, #0
 800856e:	d1fa      	bne.n	8008566 <USBD_GetString+0x8>
 8008570:	b2db      	uxtb	r3, r3
 8008572:	3301      	adds	r3, #1
 8008574:	005b      	lsls	r3, r3, #1
 8008576:	8013      	strh	r3, [r2, #0]
 8008578:	700b      	strb	r3, [r1, #0]
 800857a:	2303      	movs	r3, #3
 800857c:	704b      	strb	r3, [r1, #1]
 800857e:	2302      	movs	r3, #2
 8008580:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8008584:	b905      	cbnz	r5, 8008588 <USBD_GetString+0x2a>
 8008586:	bd30      	pop	{r4, r5, pc}
 8008588:	1c5a      	adds	r2, r3, #1
 800858a:	54cd      	strb	r5, [r1, r3]
 800858c:	b2d2      	uxtb	r2, r2
 800858e:	3302      	adds	r3, #2
 8008590:	b2db      	uxtb	r3, r3
 8008592:	548c      	strb	r4, [r1, r2]
 8008594:	e7f4      	b.n	8008580 <USBD_GetString+0x22>

08008596 <USBD_CtlSendData>:
 8008596:	4613      	mov	r3, r2
 8008598:	2202      	movs	r2, #2
 800859a:	b510      	push	{r4, lr}
 800859c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80085a0:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
 80085a4:	460a      	mov	r2, r1
 80085a6:	2100      	movs	r1, #0
 80085a8:	f001 fef2 	bl	800a390 <USBD_LL_Transmit>
 80085ac:	2000      	movs	r0, #0
 80085ae:	bd10      	pop	{r4, pc}

080085b0 <USBD_CtlContinueSendData>:
 80085b0:	b508      	push	{r3, lr}
 80085b2:	4613      	mov	r3, r2
 80085b4:	460a      	mov	r2, r1
 80085b6:	2100      	movs	r1, #0
 80085b8:	f001 feea 	bl	800a390 <USBD_LL_Transmit>
 80085bc:	2000      	movs	r0, #0
 80085be:	bd08      	pop	{r3, pc}

080085c0 <USBD_CtlPrepareRx>:
 80085c0:	4613      	mov	r3, r2
 80085c2:	2203      	movs	r2, #3
 80085c4:	b510      	push	{r4, lr}
 80085c6:	e9c0 3357 	strd	r3, r3, [r0, #348]	; 0x15c
 80085ca:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
 80085ce:	460a      	mov	r2, r1
 80085d0:	2100      	movs	r1, #0
 80085d2:	f001 feeb 	bl	800a3ac <USBD_LL_PrepareReceive>
 80085d6:	2000      	movs	r0, #0
 80085d8:	bd10      	pop	{r4, pc}

080085da <USBD_CtlContinueRx>:
 80085da:	b508      	push	{r3, lr}
 80085dc:	4613      	mov	r3, r2
 80085de:	460a      	mov	r2, r1
 80085e0:	2100      	movs	r1, #0
 80085e2:	f001 fee3 	bl	800a3ac <USBD_LL_PrepareReceive>
 80085e6:	2000      	movs	r0, #0
 80085e8:	bd08      	pop	{r3, pc}

080085ea <USBD_CtlSendStatus>:
 80085ea:	b508      	push	{r3, lr}
 80085ec:	2304      	movs	r3, #4
 80085ee:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294
 80085f2:	2300      	movs	r3, #0
 80085f4:	461a      	mov	r2, r3
 80085f6:	4619      	mov	r1, r3
 80085f8:	f001 feca 	bl	800a390 <USBD_LL_Transmit>
 80085fc:	2000      	movs	r0, #0
 80085fe:	bd08      	pop	{r3, pc}

08008600 <USBD_CtlReceiveStatus>:
 8008600:	b508      	push	{r3, lr}
 8008602:	2305      	movs	r3, #5
 8008604:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294
 8008608:	2300      	movs	r3, #0
 800860a:	461a      	mov	r2, r3
 800860c:	4619      	mov	r1, r3
 800860e:	f001 fecd 	bl	800a3ac <USBD_LL_PrepareReceive>
 8008612:	2000      	movs	r0, #0
 8008614:	bd08      	pop	{r3, pc}

08008616 <osKernelStart>:
* @param  argument      pointer that is passed to the thread function as start argument.
* @retval status code that indicates the execution status of the function
* @note   MUST REMAIN UNCHANGED: \b osKernelStart shall be consistent in every CMSIS-RTOS.
*/
osStatus osKernelStart (void)
{
 8008616:	b508      	push	{r3, lr}
  vTaskStartScheduler();
 8008618:	f000 fdb4 	bl	8009184 <vTaskStartScheduler>
  
  return osOK;
}
 800861c:	2000      	movs	r0, #0
 800861e:	bd08      	pop	{r3, pc}

08008620 <osThreadCreate>:
* @param  argument      pointer that is passed to the thread function as start argument.
* @retval thread ID for reference by other functions or NULL in case of error.
* @note   MUST REMAIN UNCHANGED: \b osThreadCreate shall be consistent in every CMSIS-RTOS.
*/
osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument)
{
 8008620:	b570      	push	{r4, r5, r6, lr}
 8008622:	4605      	mov	r5, r0
  TaskHandle_t handle;
  
#if( configSUPPORT_STATIC_ALLOCATION == 1 ) &&  ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
  if((thread_def->buffer != NULL) && (thread_def->controlblock != NULL)) {
 8008624:	6946      	ldr	r6, [r0, #20]
{
 8008626:	460b      	mov	r3, r1
 8008628:	e9d0 1000 	ldrd	r1, r0, [r0]
 800862c:	692a      	ldr	r2, [r5, #16]
 800862e:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 8008632:	b086      	sub	sp, #24
  if((thread_def->buffer != NULL) && (thread_def->controlblock != NULL)) {
 8008634:	b176      	cbz	r6, 8008654 <osThreadCreate+0x34>
 8008636:	69ad      	ldr	r5, [r5, #24]
 8008638:	b165      	cbz	r5, 8008654 <osThreadCreate+0x34>
  if (priority != osPriorityError) {
 800863a:	2c84      	cmp	r4, #132	; 0x84
  unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
 800863c:	bf0c      	ite	eq
 800863e:	2400      	moveq	r4, #0
    fpriority += (priority - osPriorityIdle);
 8008640:	3403      	addne	r4, #3
    handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 8008642:	e9cd 6501 	strd	r6, r5, [sp, #4]
 8008646:	9400      	str	r4, [sp, #0]
 8008648:	f000 fd38 	bl	80090bc <xTaskCreateStatic>
 800864c:	9005      	str	r0, [sp, #20]
                   &handle) != pdPASS)  {
    return NULL;
  }     
#endif
  
  return handle;
 800864e:	9805      	ldr	r0, [sp, #20]
}
 8008650:	b006      	add	sp, #24
 8008652:	bd70      	pop	{r4, r5, r6, pc}
  if (priority != osPriorityError) {
 8008654:	2c84      	cmp	r4, #132	; 0x84
  unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
 8008656:	bf0c      	ite	eq
 8008658:	2400      	moveq	r4, #0
    fpriority += (priority - osPriorityIdle);
 800865a:	3403      	addne	r4, #3
    if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 800865c:	ad05      	add	r5, sp, #20
 800865e:	e9cd 4500 	strd	r4, r5, [sp]
 8008662:	b292      	uxth	r2, r2
 8008664:	f000 fd61 	bl	800912a <xTaskCreate>
 8008668:	2801      	cmp	r0, #1
 800866a:	d0f0      	beq.n	800864e <osThreadCreate+0x2e>
      return NULL;
 800866c:	2000      	movs	r0, #0
 800866e:	e7ef      	b.n	8008650 <osThreadCreate+0x30>

08008670 <osDelay>:
* @brief   Wait for Timeout (Time Delay)
* @param   millisec      time delay value
* @retval  status code that indicates the execution status of the function.
*/
osStatus osDelay (uint32_t millisec)
{
 8008670:	b508      	push	{r3, lr}
#if INCLUDE_vTaskDelay
  TickType_t ticks = millisec / portTICK_PERIOD_MS;
  
  vTaskDelay(ticks ? ticks : 1);          /* Minimum delay = 1 tick */
 8008672:	2801      	cmp	r0, #1
 8008674:	bf38      	it	cc
 8008676:	2001      	movcc	r0, #1
 8008678:	f000 fede 	bl	8009438 <vTaskDelay>
#else
  (void) millisec;
  
  return osErrorResource;
#endif
}
 800867c:	2000      	movs	r0, #0
 800867e:	bd08      	pop	{r3, pc}

08008680 <osTimerCreate>:
* @param  argument      argument to the timer call back function.
* @retval  timer ID for reference by other functions or NULL in case of error.
* @note   MUST REMAIN UNCHANGED: \b osTimerCreate shall be consistent in every CMSIS-RTOS.
*/
osTimerId osTimerCreate (const osTimerDef_t *timer_def, os_timer_type type, void *argument)
{
 8008680:	b513      	push	{r0, r1, r4, lr}
 8008682:	c811      	ldmia	r0, {r0, r4}
 8008684:	3901      	subs	r1, #1
 8008686:	4613      	mov	r3, r2
 8008688:	424a      	negs	r2, r1
 800868a:	414a      	adcs	r2, r1
#if (configUSE_TIMERS == 1)

#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) 
  if(timer_def->controlblock != NULL) {
 800868c:	b13c      	cbz	r4, 800869e <osTimerCreate+0x1e>
    return xTimerCreateStatic((const char *)"",
 800868e:	e9cd 0400 	strd	r0, r4, [sp]
 8008692:	2101      	movs	r1, #1
 8008694:	4805      	ldr	r0, [pc, #20]	; (80086ac <osTimerCreate+0x2c>)
 8008696:	f001 f8b2 	bl	80097fe <xTimerCreateStatic>
#endif

#else 
	return NULL;
#endif
}
 800869a:	b002      	add	sp, #8
 800869c:	bd10      	pop	{r4, pc}
    return xTimerCreate((const char *)"",
 800869e:	9000      	str	r0, [sp, #0]
 80086a0:	2101      	movs	r1, #1
 80086a2:	4802      	ldr	r0, [pc, #8]	; (80086ac <osTimerCreate+0x2c>)
 80086a4:	f001 f884 	bl	80097b0 <xTimerCreate>
 80086a8:	e7f7      	b.n	800869a <osTimerCreate+0x1a>
 80086aa:	bf00      	nop
 80086ac:	0800d3b4 	.word	0x0800d3b4

080086b0 <osTimerStart>:
* @param  millisec      time delay value of the timer.
* @retval  status code that indicates the execution status of the function
* @note   MUST REMAIN UNCHANGED: \b osTimerStart shall be consistent in every CMSIS-RTOS.
*/
osStatus osTimerStart (osTimerId timer_id, uint32_t millisec)
{
 80086b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  osStatus result = osOK;
#if (configUSE_TIMERS == 1)  
  portBASE_TYPE taskWoken = pdFALSE;
 80086b2:	2400      	movs	r4, #0
 80086b4:	2901      	cmp	r1, #1
 80086b6:	460a      	mov	r2, r1
 80086b8:	9403      	str	r4, [sp, #12]
  TickType_t ticks = millisec / portTICK_PERIOD_MS;

  if (ticks == 0)
 80086ba:	bf38      	it	cc
 80086bc:	2201      	movcc	r2, #1
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086be:	f3ef 8305 	mrs	r3, IPSR
    ticks = 1;
    
  if (inHandlerMode()) 
 80086c2:	b1a3      	cbz	r3, 80086ee <osTimerStart+0x3e>
  {
    if (xTimerChangePeriodFromISR(timer_id, ticks, &taskWoken) != pdPASS)
 80086c4:	2109      	movs	r1, #9
 80086c6:	9400      	str	r4, [sp, #0]
 80086c8:	ab03      	add	r3, sp, #12
 80086ca:	f001 f8d5 	bl	8009878 <xTimerGenericCommand>
 80086ce:	2801      	cmp	r0, #1
 80086d0:	d113      	bne.n	80086fa <osTimerStart+0x4a>
    {
      result = osErrorOS;
    }
    else
    {
      portEND_SWITCHING_ISR(taskWoken);     
 80086d2:	9b03      	ldr	r3, [sp, #12]
 80086d4:	b913      	cbnz	r3, 80086dc <osTimerStart+0x2c>
  osStatus result = osOK;
 80086d6:	2000      	movs	r0, #0

#else 
  result = osErrorOS;
#endif
  return result;
}
 80086d8:	b004      	add	sp, #16
 80086da:	bd10      	pop	{r4, pc}
      portEND_SWITCHING_ISR(taskWoken);     
 80086dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086e0:	4b07      	ldr	r3, [pc, #28]	; (8008700 <osTimerStart+0x50>)
 80086e2:	601a      	str	r2, [r3, #0]
 80086e4:	f3bf 8f4f 	dsb	sy
 80086e8:	f3bf 8f6f 	isb	sy
 80086ec:	e7f3      	b.n	80086d6 <osTimerStart+0x26>
    if (xTimerChangePeriod(timer_id, ticks, 0) != pdPASS)
 80086ee:	2104      	movs	r1, #4
 80086f0:	9300      	str	r3, [sp, #0]
 80086f2:	f001 f8c1 	bl	8009878 <xTimerGenericCommand>
 80086f6:	2801      	cmp	r0, #1
 80086f8:	d0ed      	beq.n	80086d6 <osTimerStart+0x26>
      result = osErrorOS;
 80086fa:	20ff      	movs	r0, #255	; 0xff
  return result;
 80086fc:	e7ec      	b.n	80086d8 <osTimerStart+0x28>
 80086fe:	bf00      	nop
 8008700:	e000ed04 	.word	0xe000ed04

08008704 <osTimerStop>:
* @param  timer_id      timer ID obtained by \ref osTimerCreate
* @retval  status code that indicates the execution status of the function.
* @note   MUST REMAIN UNCHANGED: \b osTimerStop shall be consistent in every CMSIS-RTOS.
*/
osStatus osTimerStop (osTimerId timer_id)
{
 8008704:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  osStatus result = osOK;
#if (configUSE_TIMERS == 1)  
  portBASE_TYPE taskWoken = pdFALSE;
 8008706:	2400      	movs	r4, #0
 8008708:	9403      	str	r4, [sp, #12]
 800870a:	f3ef 8305 	mrs	r3, IPSR

  if (inHandlerMode()) {
 800870e:	b1ab      	cbz	r3, 800873c <osTimerStop+0x38>
    if (xTimerStopFromISR(timer_id, &taskWoken) != pdPASS) {
 8008710:	4622      	mov	r2, r4
 8008712:	2108      	movs	r1, #8
 8008714:	9400      	str	r4, [sp, #0]
 8008716:	ab03      	add	r3, sp, #12
 8008718:	f001 f8ae 	bl	8009878 <xTimerGenericCommand>
 800871c:	2801      	cmp	r0, #1
 800871e:	d114      	bne.n	800874a <osTimerStop+0x46>
      return osErrorOS;
    }
    portEND_SWITCHING_ISR(taskWoken);
 8008720:	9b03      	ldr	r3, [sp, #12]
 8008722:	b913      	cbnz	r3, 800872a <osTimerStop+0x26>
  osStatus result = osOK;
 8008724:	2000      	movs	r0, #0
  }
#else 
  result = osErrorOS;
#endif 
  return result;
}
 8008726:	b004      	add	sp, #16
 8008728:	bd10      	pop	{r4, pc}
    portEND_SWITCHING_ISR(taskWoken);
 800872a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800872e:	4b08      	ldr	r3, [pc, #32]	; (8008750 <osTimerStop+0x4c>)
 8008730:	601a      	str	r2, [r3, #0]
 8008732:	f3bf 8f4f 	dsb	sy
 8008736:	f3bf 8f6f 	isb	sy
 800873a:	e7f3      	b.n	8008724 <osTimerStop+0x20>
    if (xTimerStop(timer_id, 0) != pdPASS) {
 800873c:	461a      	mov	r2, r3
 800873e:	2103      	movs	r1, #3
 8008740:	9300      	str	r3, [sp, #0]
 8008742:	f001 f899 	bl	8009878 <xTimerGenericCommand>
 8008746:	2801      	cmp	r0, #1
 8008748:	d0ec      	beq.n	8008724 <osTimerStop+0x20>
      result = osErrorOS;
 800874a:	20ff      	movs	r0, #255	; 0xff
 800874c:	e7eb      	b.n	8008726 <osTimerStop+0x22>
 800874e:	bf00      	nop
 8008750:	e000ed04 	.word	0xe000ed04

08008754 <vListInitialise>:
 8008754:	f04f 32ff 	mov.w	r2, #4294967295
 8008758:	f100 0308 	add.w	r3, r0, #8
 800875c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8008760:	6043      	str	r3, [r0, #4]
 8008762:	6103      	str	r3, [r0, #16]
 8008764:	2300      	movs	r3, #0
 8008766:	6003      	str	r3, [r0, #0]
 8008768:	4770      	bx	lr

0800876a <vListInitialiseItem>:
 800876a:	2300      	movs	r3, #0
 800876c:	6103      	str	r3, [r0, #16]
 800876e:	4770      	bx	lr

08008770 <vListInsertEnd>:
 8008770:	6843      	ldr	r3, [r0, #4]
 8008772:	689a      	ldr	r2, [r3, #8]
 8008774:	604b      	str	r3, [r1, #4]
 8008776:	608a      	str	r2, [r1, #8]
 8008778:	689a      	ldr	r2, [r3, #8]
 800877a:	6051      	str	r1, [r2, #4]
 800877c:	6099      	str	r1, [r3, #8]
 800877e:	6803      	ldr	r3, [r0, #0]
 8008780:	6108      	str	r0, [r1, #16]
 8008782:	3301      	adds	r3, #1
 8008784:	6003      	str	r3, [r0, #0]
 8008786:	4770      	bx	lr

08008788 <vListInsert>:
 8008788:	b530      	push	{r4, r5, lr}
 800878a:	680c      	ldr	r4, [r1, #0]
 800878c:	1c63      	adds	r3, r4, #1
 800878e:	d10a      	bne.n	80087a6 <vListInsert+0x1e>
 8008790:	6903      	ldr	r3, [r0, #16]
 8008792:	685a      	ldr	r2, [r3, #4]
 8008794:	604a      	str	r2, [r1, #4]
 8008796:	6091      	str	r1, [r2, #8]
 8008798:	608b      	str	r3, [r1, #8]
 800879a:	6059      	str	r1, [r3, #4]
 800879c:	6803      	ldr	r3, [r0, #0]
 800879e:	6108      	str	r0, [r1, #16]
 80087a0:	3301      	adds	r3, #1
 80087a2:	6003      	str	r3, [r0, #0]
 80087a4:	bd30      	pop	{r4, r5, pc}
 80087a6:	f100 0208 	add.w	r2, r0, #8
 80087aa:	4613      	mov	r3, r2
 80087ac:	6852      	ldr	r2, [r2, #4]
 80087ae:	6815      	ldr	r5, [r2, #0]
 80087b0:	42a5      	cmp	r5, r4
 80087b2:	d9fa      	bls.n	80087aa <vListInsert+0x22>
 80087b4:	e7ed      	b.n	8008792 <vListInsert+0xa>

080087b6 <uxListRemove>:
 80087b6:	6903      	ldr	r3, [r0, #16]
 80087b8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 80087bc:	608a      	str	r2, [r1, #8]
 80087be:	6051      	str	r1, [r2, #4]
 80087c0:	6859      	ldr	r1, [r3, #4]
 80087c2:	4281      	cmp	r1, r0
 80087c4:	bf08      	it	eq
 80087c6:	605a      	streq	r2, [r3, #4]
 80087c8:	2200      	movs	r2, #0
 80087ca:	6102      	str	r2, [r0, #16]
 80087cc:	681a      	ldr	r2, [r3, #0]
 80087ce:	3a01      	subs	r2, #1
 80087d0:	601a      	str	r2, [r3, #0]
 80087d2:	6818      	ldr	r0, [r3, #0]
 80087d4:	4770      	bx	lr

080087d6 <prvIsQueueEmpty>:
 80087d6:	b510      	push	{r4, lr}
 80087d8:	4604      	mov	r4, r0
 80087da:	f001 f9fb 	bl	8009bd4 <vPortEnterCritical>
 80087de:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 80087e0:	f001 fa1a 	bl	8009c18 <vPortExitCritical>
 80087e4:	fab4 f084 	clz	r0, r4
 80087e8:	0940      	lsrs	r0, r0, #5
 80087ea:	bd10      	pop	{r4, pc}

080087ec <prvCopyDataToQueue>:
 80087ec:	b570      	push	{r4, r5, r6, lr}
 80087ee:	4616      	mov	r6, r2
 80087f0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80087f2:	4604      	mov	r4, r0
 80087f4:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80087f6:	b162      	cbz	r2, 8008812 <prvCopyDataToQueue+0x26>
 80087f8:	b97e      	cbnz	r6, 800881a <prvCopyDataToQueue+0x2e>
 80087fa:	6880      	ldr	r0, [r0, #8]
 80087fc:	f001 fe1c 	bl	800a438 <memcpy>
 8008800:	68a3      	ldr	r3, [r4, #8]
 8008802:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008804:	4413      	add	r3, r2
 8008806:	6862      	ldr	r2, [r4, #4]
 8008808:	60a3      	str	r3, [r4, #8]
 800880a:	4293      	cmp	r3, r2
 800880c:	d301      	bcc.n	8008812 <prvCopyDataToQueue+0x26>
 800880e:	6823      	ldr	r3, [r4, #0]
 8008810:	60a3      	str	r3, [r4, #8]
 8008812:	3501      	adds	r5, #1
 8008814:	2000      	movs	r0, #0
 8008816:	63a5      	str	r5, [r4, #56]	; 0x38
 8008818:	bd70      	pop	{r4, r5, r6, pc}
 800881a:	68c0      	ldr	r0, [r0, #12]
 800881c:	f001 fe0c 	bl	800a438 <memcpy>
 8008820:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008822:	68e3      	ldr	r3, [r4, #12]
 8008824:	4251      	negs	r1, r2
 8008826:	1a9b      	subs	r3, r3, r2
 8008828:	6822      	ldr	r2, [r4, #0]
 800882a:	60e3      	str	r3, [r4, #12]
 800882c:	4293      	cmp	r3, r2
 800882e:	bf3e      	ittt	cc
 8008830:	6863      	ldrcc	r3, [r4, #4]
 8008832:	185b      	addcc	r3, r3, r1
 8008834:	60e3      	strcc	r3, [r4, #12]
 8008836:	2e02      	cmp	r6, #2
 8008838:	d1eb      	bne.n	8008812 <prvCopyDataToQueue+0x26>
 800883a:	2d00      	cmp	r5, #0
 800883c:	d0e9      	beq.n	8008812 <prvCopyDataToQueue+0x26>
 800883e:	3d01      	subs	r5, #1
 8008840:	e7e7      	b.n	8008812 <prvCopyDataToQueue+0x26>

08008842 <prvCopyDataFromQueue>:
 8008842:	4603      	mov	r3, r0
 8008844:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008846:	4608      	mov	r0, r1
 8008848:	b410      	push	{r4}
 800884a:	b162      	cbz	r2, 8008866 <prvCopyDataFromQueue+0x24>
 800884c:	68dc      	ldr	r4, [r3, #12]
 800884e:	6859      	ldr	r1, [r3, #4]
 8008850:	4414      	add	r4, r2
 8008852:	428c      	cmp	r4, r1
 8008854:	bf28      	it	cs
 8008856:	6819      	ldrcs	r1, [r3, #0]
 8008858:	60dc      	str	r4, [r3, #12]
 800885a:	bf28      	it	cs
 800885c:	60d9      	strcs	r1, [r3, #12]
 800885e:	68d9      	ldr	r1, [r3, #12]
 8008860:	bc10      	pop	{r4}
 8008862:	f001 bde9 	b.w	800a438 <memcpy>
 8008866:	bc10      	pop	{r4}
 8008868:	4770      	bx	lr

0800886a <prvUnlockQueue>:
 800886a:	b570      	push	{r4, r5, r6, lr}
 800886c:	4604      	mov	r4, r0
 800886e:	f001 f9b1 	bl	8009bd4 <vPortEnterCritical>
 8008872:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
 8008876:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800887a:	b26d      	sxtb	r5, r5
 800887c:	2d00      	cmp	r5, #0
 800887e:	dc14      	bgt.n	80088aa <prvUnlockQueue+0x40>
 8008880:	23ff      	movs	r3, #255	; 0xff
 8008882:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008886:	f001 f9c7 	bl	8009c18 <vPortExitCritical>
 800888a:	f001 f9a3 	bl	8009bd4 <vPortEnterCritical>
 800888e:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 8008892:	f104 0610 	add.w	r6, r4, #16
 8008896:	b26d      	sxtb	r5, r5
 8008898:	2d00      	cmp	r5, #0
 800889a:	dc12      	bgt.n	80088c2 <prvUnlockQueue+0x58>
 800889c:	23ff      	movs	r3, #255	; 0xff
 800889e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80088a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80088a6:	f001 b9b7 	b.w	8009c18 <vPortExitCritical>
 80088aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80088ac:	2b00      	cmp	r3, #0
 80088ae:	d0e7      	beq.n	8008880 <prvUnlockQueue+0x16>
 80088b0:	4630      	mov	r0, r6
 80088b2:	f000 fe59 	bl	8009568 <xTaskRemoveFromEventList>
 80088b6:	b108      	cbz	r0, 80088bc <prvUnlockQueue+0x52>
 80088b8:	f000 fee0 	bl	800967c <vTaskMissedYield>
 80088bc:	3d01      	subs	r5, #1
 80088be:	b26d      	sxtb	r5, r5
 80088c0:	e7dc      	b.n	800887c <prvUnlockQueue+0x12>
 80088c2:	6923      	ldr	r3, [r4, #16]
 80088c4:	2b00      	cmp	r3, #0
 80088c6:	d0e9      	beq.n	800889c <prvUnlockQueue+0x32>
 80088c8:	4630      	mov	r0, r6
 80088ca:	f000 fe4d 	bl	8009568 <xTaskRemoveFromEventList>
 80088ce:	b108      	cbz	r0, 80088d4 <prvUnlockQueue+0x6a>
 80088d0:	f000 fed4 	bl	800967c <vTaskMissedYield>
 80088d4:	3d01      	subs	r5, #1
 80088d6:	b26d      	sxtb	r5, r5
 80088d8:	e7de      	b.n	8008898 <prvUnlockQueue+0x2e>
	...

080088dc <xQueueGenericReset>:
 80088dc:	b538      	push	{r3, r4, r5, lr}
 80088de:	460d      	mov	r5, r1
 80088e0:	4604      	mov	r4, r0
 80088e2:	b940      	cbnz	r0, 80088f6 <xQueueGenericReset+0x1a>
 80088e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088e8:	f383 8811 	msr	BASEPRI, r3
 80088ec:	f3bf 8f6f 	isb	sy
 80088f0:	f3bf 8f4f 	dsb	sy
 80088f4:	e7fe      	b.n	80088f4 <xQueueGenericReset+0x18>
 80088f6:	f001 f96d 	bl	8009bd4 <vPortEnterCritical>
 80088fa:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80088fe:	434b      	muls	r3, r1
 8008900:	6822      	ldr	r2, [r4, #0]
 8008902:	18d0      	adds	r0, r2, r3
 8008904:	1a5b      	subs	r3, r3, r1
 8008906:	4413      	add	r3, r2
 8008908:	6060      	str	r0, [r4, #4]
 800890a:	60e3      	str	r3, [r4, #12]
 800890c:	2000      	movs	r0, #0
 800890e:	23ff      	movs	r3, #255	; 0xff
 8008910:	63a0      	str	r0, [r4, #56]	; 0x38
 8008912:	60a2      	str	r2, [r4, #8]
 8008914:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8008918:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800891c:	b995      	cbnz	r5, 8008944 <xQueueGenericReset+0x68>
 800891e:	6923      	ldr	r3, [r4, #16]
 8008920:	b163      	cbz	r3, 800893c <xQueueGenericReset+0x60>
 8008922:	f104 0010 	add.w	r0, r4, #16
 8008926:	f000 fe1f 	bl	8009568 <xTaskRemoveFromEventList>
 800892a:	b138      	cbz	r0, 800893c <xQueueGenericReset+0x60>
 800892c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008930:	4b09      	ldr	r3, [pc, #36]	; (8008958 <xQueueGenericReset+0x7c>)
 8008932:	601a      	str	r2, [r3, #0]
 8008934:	f3bf 8f4f 	dsb	sy
 8008938:	f3bf 8f6f 	isb	sy
 800893c:	f001 f96c 	bl	8009c18 <vPortExitCritical>
 8008940:	2001      	movs	r0, #1
 8008942:	bd38      	pop	{r3, r4, r5, pc}
 8008944:	f104 0010 	add.w	r0, r4, #16
 8008948:	f7ff ff04 	bl	8008754 <vListInitialise>
 800894c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008950:	f7ff ff00 	bl	8008754 <vListInitialise>
 8008954:	e7f2      	b.n	800893c <xQueueGenericReset+0x60>
 8008956:	bf00      	nop
 8008958:	e000ed04 	.word	0xe000ed04

0800895c <xQueueGenericCreateStatic>:
 800895c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800895e:	460d      	mov	r5, r1
 8008960:	461c      	mov	r4, r3
 8008962:	b940      	cbnz	r0, 8008976 <xQueueGenericCreateStatic+0x1a>
 8008964:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008968:	f383 8811 	msr	BASEPRI, r3
 800896c:	f3bf 8f6f 	isb	sy
 8008970:	f3bf 8f4f 	dsb	sy
 8008974:	e7fe      	b.n	8008974 <xQueueGenericCreateStatic+0x18>
 8008976:	b943      	cbnz	r3, 800898a <xQueueGenericCreateStatic+0x2e>
 8008978:	f04f 0350 	mov.w	r3, #80	; 0x50
 800897c:	f383 8811 	msr	BASEPRI, r3
 8008980:	f3bf 8f6f 	isb	sy
 8008984:	f3bf 8f4f 	dsb	sy
 8008988:	e7fe      	b.n	8008988 <xQueueGenericCreateStatic+0x2c>
 800898a:	b14a      	cbz	r2, 80089a0 <xQueueGenericCreateStatic+0x44>
 800898c:	b991      	cbnz	r1, 80089b4 <xQueueGenericCreateStatic+0x58>
 800898e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008992:	f383 8811 	msr	BASEPRI, r3
 8008996:	f3bf 8f6f 	isb	sy
 800899a:	f3bf 8f4f 	dsb	sy
 800899e:	e7fe      	b.n	800899e <xQueueGenericCreateStatic+0x42>
 80089a0:	b141      	cbz	r1, 80089b4 <xQueueGenericCreateStatic+0x58>
 80089a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089a6:	f383 8811 	msr	BASEPRI, r3
 80089aa:	f3bf 8f6f 	isb	sy
 80089ae:	f3bf 8f4f 	dsb	sy
 80089b2:	e7fe      	b.n	80089b2 <xQueueGenericCreateStatic+0x56>
 80089b4:	2348      	movs	r3, #72	; 0x48
 80089b6:	9301      	str	r3, [sp, #4]
 80089b8:	9b01      	ldr	r3, [sp, #4]
 80089ba:	2b48      	cmp	r3, #72	; 0x48
 80089bc:	d008      	beq.n	80089d0 <xQueueGenericCreateStatic+0x74>
 80089be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089c2:	f383 8811 	msr	BASEPRI, r3
 80089c6:	f3bf 8f6f 	isb	sy
 80089ca:	f3bf 8f4f 	dsb	sy
 80089ce:	e7fe      	b.n	80089ce <xQueueGenericCreateStatic+0x72>
 80089d0:	2101      	movs	r1, #1
 80089d2:	2d00      	cmp	r5, #0
 80089d4:	bf08      	it	eq
 80089d6:	4622      	moveq	r2, r4
 80089d8:	e9c4 050f 	strd	r0, r5, [r4, #60]	; 0x3c
 80089dc:	f884 1046 	strb.w	r1, [r4, #70]	; 0x46
 80089e0:	4620      	mov	r0, r4
 80089e2:	6022      	str	r2, [r4, #0]
 80089e4:	f7ff ff7a 	bl	80088dc <xQueueGenericReset>
 80089e8:	4620      	mov	r0, r4
 80089ea:	b003      	add	sp, #12
 80089ec:	bd30      	pop	{r4, r5, pc}
	...

080089f0 <xQueueGenericSend>:
 80089f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80089f4:	4688      	mov	r8, r1
 80089f6:	461f      	mov	r7, r3
 80089f8:	4604      	mov	r4, r0
 80089fa:	9201      	str	r2, [sp, #4]
 80089fc:	b940      	cbnz	r0, 8008a10 <xQueueGenericSend+0x20>
 80089fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a02:	f383 8811 	msr	BASEPRI, r3
 8008a06:	f3bf 8f6f 	isb	sy
 8008a0a:	f3bf 8f4f 	dsb	sy
 8008a0e:	e7fe      	b.n	8008a0e <xQueueGenericSend+0x1e>
 8008a10:	b951      	cbnz	r1, 8008a28 <xQueueGenericSend+0x38>
 8008a12:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008a14:	b143      	cbz	r3, 8008a28 <xQueueGenericSend+0x38>
 8008a16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a1a:	f383 8811 	msr	BASEPRI, r3
 8008a1e:	f3bf 8f6f 	isb	sy
 8008a22:	f3bf 8f4f 	dsb	sy
 8008a26:	e7fe      	b.n	8008a26 <xQueueGenericSend+0x36>
 8008a28:	2f02      	cmp	r7, #2
 8008a2a:	d10b      	bne.n	8008a44 <xQueueGenericSend+0x54>
 8008a2c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008a2e:	2b01      	cmp	r3, #1
 8008a30:	d008      	beq.n	8008a44 <xQueueGenericSend+0x54>
 8008a32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a36:	f383 8811 	msr	BASEPRI, r3
 8008a3a:	f3bf 8f6f 	isb	sy
 8008a3e:	f3bf 8f4f 	dsb	sy
 8008a42:	e7fe      	b.n	8008a42 <xQueueGenericSend+0x52>
 8008a44:	f000 fe20 	bl	8009688 <xTaskGetSchedulerState>
 8008a48:	4606      	mov	r6, r0
 8008a4a:	b950      	cbnz	r0, 8008a62 <xQueueGenericSend+0x72>
 8008a4c:	9b01      	ldr	r3, [sp, #4]
 8008a4e:	b14b      	cbz	r3, 8008a64 <xQueueGenericSend+0x74>
 8008a50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a54:	f383 8811 	msr	BASEPRI, r3
 8008a58:	f3bf 8f6f 	isb	sy
 8008a5c:	f3bf 8f4f 	dsb	sy
 8008a60:	e7fe      	b.n	8008a60 <xQueueGenericSend+0x70>
 8008a62:	2600      	movs	r6, #0
 8008a64:	f04f 0900 	mov.w	r9, #0
 8008a68:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8008b50 <xQueueGenericSend+0x160>
 8008a6c:	e037      	b.n	8008ade <xQueueGenericSend+0xee>
 8008a6e:	9d01      	ldr	r5, [sp, #4]
 8008a70:	b91d      	cbnz	r5, 8008a7a <xQueueGenericSend+0x8a>
 8008a72:	f001 f8d1 	bl	8009c18 <vPortExitCritical>
 8008a76:	2000      	movs	r0, #0
 8008a78:	e050      	b.n	8008b1c <xQueueGenericSend+0x12c>
 8008a7a:	b916      	cbnz	r6, 8008a82 <xQueueGenericSend+0x92>
 8008a7c:	a802      	add	r0, sp, #8
 8008a7e:	f000 fdb5 	bl	80095ec <vTaskInternalSetTimeOutState>
 8008a82:	f001 f8c9 	bl	8009c18 <vPortExitCritical>
 8008a86:	f000 fbc1 	bl	800920c <vTaskSuspendAll>
 8008a8a:	f001 f8a3 	bl	8009bd4 <vPortEnterCritical>
 8008a8e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008a92:	2bff      	cmp	r3, #255	; 0xff
 8008a94:	bf08      	it	eq
 8008a96:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008a9a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008a9e:	2bff      	cmp	r3, #255	; 0xff
 8008aa0:	bf08      	it	eq
 8008aa2:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008aa6:	f001 f8b7 	bl	8009c18 <vPortExitCritical>
 8008aaa:	a901      	add	r1, sp, #4
 8008aac:	a802      	add	r0, sp, #8
 8008aae:	f000 fda9 	bl	8009604 <xTaskCheckForTimeOut>
 8008ab2:	2800      	cmp	r0, #0
 8008ab4:	d146      	bne.n	8008b44 <xQueueGenericSend+0x154>
 8008ab6:	f001 f88d 	bl	8009bd4 <vPortEnterCritical>
 8008aba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008abc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008abe:	429a      	cmp	r2, r3
 8008ac0:	d12f      	bne.n	8008b22 <xQueueGenericSend+0x132>
 8008ac2:	f001 f8a9 	bl	8009c18 <vPortExitCritical>
 8008ac6:	9901      	ldr	r1, [sp, #4]
 8008ac8:	f104 0010 	add.w	r0, r4, #16
 8008acc:	f000 fd12 	bl	80094f4 <vTaskPlaceOnEventList>
 8008ad0:	4620      	mov	r0, r4
 8008ad2:	f7ff feca 	bl	800886a <prvUnlockQueue>
 8008ad6:	f000 fc39 	bl	800934c <xTaskResumeAll>
 8008ada:	b350      	cbz	r0, 8008b32 <xQueueGenericSend+0x142>
 8008adc:	2601      	movs	r6, #1
 8008ade:	f001 f879 	bl	8009bd4 <vPortEnterCritical>
 8008ae2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008ae4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008ae6:	429a      	cmp	r2, r3
 8008ae8:	d301      	bcc.n	8008aee <xQueueGenericSend+0xfe>
 8008aea:	2f02      	cmp	r7, #2
 8008aec:	d1bf      	bne.n	8008a6e <xQueueGenericSend+0x7e>
 8008aee:	463a      	mov	r2, r7
 8008af0:	4641      	mov	r1, r8
 8008af2:	4620      	mov	r0, r4
 8008af4:	f7ff fe7a 	bl	80087ec <prvCopyDataToQueue>
 8008af8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008afa:	b11b      	cbz	r3, 8008b04 <xQueueGenericSend+0x114>
 8008afc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008b00:	f000 fd32 	bl	8009568 <xTaskRemoveFromEventList>
 8008b04:	b138      	cbz	r0, 8008b16 <xQueueGenericSend+0x126>
 8008b06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b0a:	4b11      	ldr	r3, [pc, #68]	; (8008b50 <xQueueGenericSend+0x160>)
 8008b0c:	601a      	str	r2, [r3, #0]
 8008b0e:	f3bf 8f4f 	dsb	sy
 8008b12:	f3bf 8f6f 	isb	sy
 8008b16:	f001 f87f 	bl	8009c18 <vPortExitCritical>
 8008b1a:	2001      	movs	r0, #1
 8008b1c:	b004      	add	sp, #16
 8008b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008b22:	f001 f879 	bl	8009c18 <vPortExitCritical>
 8008b26:	4620      	mov	r0, r4
 8008b28:	f7ff fe9f 	bl	800886a <prvUnlockQueue>
 8008b2c:	f000 fc0e 	bl	800934c <xTaskResumeAll>
 8008b30:	e7d4      	b.n	8008adc <xQueueGenericSend+0xec>
 8008b32:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008b36:	f8ca 3000 	str.w	r3, [sl]
 8008b3a:	f3bf 8f4f 	dsb	sy
 8008b3e:	f3bf 8f6f 	isb	sy
 8008b42:	e7cb      	b.n	8008adc <xQueueGenericSend+0xec>
 8008b44:	4620      	mov	r0, r4
 8008b46:	f7ff fe90 	bl	800886a <prvUnlockQueue>
 8008b4a:	f000 fbff 	bl	800934c <xTaskResumeAll>
 8008b4e:	e792      	b.n	8008a76 <xQueueGenericSend+0x86>
 8008b50:	e000ed04 	.word	0xe000ed04

08008b54 <xQueueGenericSendFromISR>:
 8008b54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008b58:	4689      	mov	r9, r1
 8008b5a:	4690      	mov	r8, r2
 8008b5c:	461f      	mov	r7, r3
 8008b5e:	4604      	mov	r4, r0
 8008b60:	b940      	cbnz	r0, 8008b74 <xQueueGenericSendFromISR+0x20>
 8008b62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b66:	f383 8811 	msr	BASEPRI, r3
 8008b6a:	f3bf 8f6f 	isb	sy
 8008b6e:	f3bf 8f4f 	dsb	sy
 8008b72:	e7fe      	b.n	8008b72 <xQueueGenericSendFromISR+0x1e>
 8008b74:	b951      	cbnz	r1, 8008b8c <xQueueGenericSendFromISR+0x38>
 8008b76:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008b78:	b143      	cbz	r3, 8008b8c <xQueueGenericSendFromISR+0x38>
 8008b7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b7e:	f383 8811 	msr	BASEPRI, r3
 8008b82:	f3bf 8f6f 	isb	sy
 8008b86:	f3bf 8f4f 	dsb	sy
 8008b8a:	e7fe      	b.n	8008b8a <xQueueGenericSendFromISR+0x36>
 8008b8c:	2f02      	cmp	r7, #2
 8008b8e:	d10b      	bne.n	8008ba8 <xQueueGenericSendFromISR+0x54>
 8008b90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008b92:	2b01      	cmp	r3, #1
 8008b94:	d008      	beq.n	8008ba8 <xQueueGenericSendFromISR+0x54>
 8008b96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b9a:	f383 8811 	msr	BASEPRI, r3
 8008b9e:	f3bf 8f6f 	isb	sy
 8008ba2:	f3bf 8f4f 	dsb	sy
 8008ba6:	e7fe      	b.n	8008ba6 <xQueueGenericSendFromISR+0x52>
 8008ba8:	f001 f8f4 	bl	8009d94 <vPortValidateInterruptPriority>
 8008bac:	f3ef 8611 	mrs	r6, BASEPRI
 8008bb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bb4:	f383 8811 	msr	BASEPRI, r3
 8008bb8:	f3bf 8f6f 	isb	sy
 8008bbc:	f3bf 8f4f 	dsb	sy
 8008bc0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008bc2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008bc4:	429a      	cmp	r2, r3
 8008bc6:	d301      	bcc.n	8008bcc <xQueueGenericSendFromISR+0x78>
 8008bc8:	2f02      	cmp	r7, #2
 8008bca:	d122      	bne.n	8008c12 <xQueueGenericSendFromISR+0xbe>
 8008bcc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
 8008bd0:	463a      	mov	r2, r7
 8008bd2:	4649      	mov	r1, r9
 8008bd4:	4620      	mov	r0, r4
 8008bd6:	b26d      	sxtb	r5, r5
 8008bd8:	f7ff fe08 	bl	80087ec <prvCopyDataToQueue>
 8008bdc:	1c6b      	adds	r3, r5, #1
 8008bde:	d113      	bne.n	8008c08 <xQueueGenericSendFromISR+0xb4>
 8008be0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008be2:	b90b      	cbnz	r3, 8008be8 <xQueueGenericSendFromISR+0x94>
 8008be4:	2001      	movs	r0, #1
 8008be6:	e00b      	b.n	8008c00 <xQueueGenericSendFromISR+0xac>
 8008be8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008bec:	f000 fcbc 	bl	8009568 <xTaskRemoveFromEventList>
 8008bf0:	2800      	cmp	r0, #0
 8008bf2:	d0f7      	beq.n	8008be4 <xQueueGenericSendFromISR+0x90>
 8008bf4:	f1b8 0f00 	cmp.w	r8, #0
 8008bf8:	d0f4      	beq.n	8008be4 <xQueueGenericSendFromISR+0x90>
 8008bfa:	2001      	movs	r0, #1
 8008bfc:	f8c8 0000 	str.w	r0, [r8]
 8008c00:	f386 8811 	msr	BASEPRI, r6
 8008c04:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008c08:	3501      	adds	r5, #1
 8008c0a:	b26d      	sxtb	r5, r5
 8008c0c:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008c10:	e7e8      	b.n	8008be4 <xQueueGenericSendFromISR+0x90>
 8008c12:	2000      	movs	r0, #0
 8008c14:	e7f4      	b.n	8008c00 <xQueueGenericSendFromISR+0xac>
	...

08008c18 <xQueueReceive>:
 8008c18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008c1c:	b085      	sub	sp, #20
 8008c1e:	460f      	mov	r7, r1
 8008c20:	4604      	mov	r4, r0
 8008c22:	9201      	str	r2, [sp, #4]
 8008c24:	b940      	cbnz	r0, 8008c38 <xQueueReceive+0x20>
 8008c26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c2a:	f383 8811 	msr	BASEPRI, r3
 8008c2e:	f3bf 8f6f 	isb	sy
 8008c32:	f3bf 8f4f 	dsb	sy
 8008c36:	e7fe      	b.n	8008c36 <xQueueReceive+0x1e>
 8008c38:	b951      	cbnz	r1, 8008c50 <xQueueReceive+0x38>
 8008c3a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008c3c:	b143      	cbz	r3, 8008c50 <xQueueReceive+0x38>
 8008c3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c42:	f383 8811 	msr	BASEPRI, r3
 8008c46:	f3bf 8f6f 	isb	sy
 8008c4a:	f3bf 8f4f 	dsb	sy
 8008c4e:	e7fe      	b.n	8008c4e <xQueueReceive+0x36>
 8008c50:	f000 fd1a 	bl	8009688 <xTaskGetSchedulerState>
 8008c54:	4606      	mov	r6, r0
 8008c56:	b950      	cbnz	r0, 8008c6e <xQueueReceive+0x56>
 8008c58:	9b01      	ldr	r3, [sp, #4]
 8008c5a:	b14b      	cbz	r3, 8008c70 <xQueueReceive+0x58>
 8008c5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c60:	f383 8811 	msr	BASEPRI, r3
 8008c64:	f3bf 8f6f 	isb	sy
 8008c68:	f3bf 8f4f 	dsb	sy
 8008c6c:	e7fe      	b.n	8008c6c <xQueueReceive+0x54>
 8008c6e:	2600      	movs	r6, #0
 8008c70:	f04f 0800 	mov.w	r8, #0
 8008c74:	f8df 90dc 	ldr.w	r9, [pc, #220]	; 8008d54 <xQueueReceive+0x13c>
 8008c78:	e03b      	b.n	8008cf2 <xQueueReceive+0xda>
 8008c7a:	9d01      	ldr	r5, [sp, #4]
 8008c7c:	b91d      	cbnz	r5, 8008c86 <xQueueReceive+0x6e>
 8008c7e:	f000 ffcb 	bl	8009c18 <vPortExitCritical>
 8008c82:	2000      	movs	r0, #0
 8008c84:	e052      	b.n	8008d2c <xQueueReceive+0x114>
 8008c86:	b916      	cbnz	r6, 8008c8e <xQueueReceive+0x76>
 8008c88:	a802      	add	r0, sp, #8
 8008c8a:	f000 fcaf 	bl	80095ec <vTaskInternalSetTimeOutState>
 8008c8e:	f000 ffc3 	bl	8009c18 <vPortExitCritical>
 8008c92:	f000 fabb 	bl	800920c <vTaskSuspendAll>
 8008c96:	f000 ff9d 	bl	8009bd4 <vPortEnterCritical>
 8008c9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008c9e:	2bff      	cmp	r3, #255	; 0xff
 8008ca0:	bf08      	it	eq
 8008ca2:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008ca6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008caa:	2bff      	cmp	r3, #255	; 0xff
 8008cac:	bf08      	it	eq
 8008cae:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008cb2:	f000 ffb1 	bl	8009c18 <vPortExitCritical>
 8008cb6:	a901      	add	r1, sp, #4
 8008cb8:	a802      	add	r0, sp, #8
 8008cba:	f000 fca3 	bl	8009604 <xTaskCheckForTimeOut>
 8008cbe:	2800      	cmp	r0, #0
 8008cc0:	d13d      	bne.n	8008d3e <xQueueReceive+0x126>
 8008cc2:	4620      	mov	r0, r4
 8008cc4:	f7ff fd87 	bl	80087d6 <prvIsQueueEmpty>
 8008cc8:	b398      	cbz	r0, 8008d32 <xQueueReceive+0x11a>
 8008cca:	9901      	ldr	r1, [sp, #4]
 8008ccc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008cd0:	f000 fc10 	bl	80094f4 <vTaskPlaceOnEventList>
 8008cd4:	4620      	mov	r0, r4
 8008cd6:	f7ff fdc8 	bl	800886a <prvUnlockQueue>
 8008cda:	f000 fb37 	bl	800934c <xTaskResumeAll>
 8008cde:	b938      	cbnz	r0, 8008cf0 <xQueueReceive+0xd8>
 8008ce0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008ce4:	f8c9 3000 	str.w	r3, [r9]
 8008ce8:	f3bf 8f4f 	dsb	sy
 8008cec:	f3bf 8f6f 	isb	sy
 8008cf0:	2601      	movs	r6, #1
 8008cf2:	f000 ff6f 	bl	8009bd4 <vPortEnterCritical>
 8008cf6:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8008cf8:	2d00      	cmp	r5, #0
 8008cfa:	d0be      	beq.n	8008c7a <xQueueReceive+0x62>
 8008cfc:	4639      	mov	r1, r7
 8008cfe:	4620      	mov	r0, r4
 8008d00:	3d01      	subs	r5, #1
 8008d02:	f7ff fd9e 	bl	8008842 <prvCopyDataFromQueue>
 8008d06:	63a5      	str	r5, [r4, #56]	; 0x38
 8008d08:	6923      	ldr	r3, [r4, #16]
 8008d0a:	b163      	cbz	r3, 8008d26 <xQueueReceive+0x10e>
 8008d0c:	f104 0010 	add.w	r0, r4, #16
 8008d10:	f000 fc2a 	bl	8009568 <xTaskRemoveFromEventList>
 8008d14:	b138      	cbz	r0, 8008d26 <xQueueReceive+0x10e>
 8008d16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d1a:	4b0e      	ldr	r3, [pc, #56]	; (8008d54 <xQueueReceive+0x13c>)
 8008d1c:	601a      	str	r2, [r3, #0]
 8008d1e:	f3bf 8f4f 	dsb	sy
 8008d22:	f3bf 8f6f 	isb	sy
 8008d26:	f000 ff77 	bl	8009c18 <vPortExitCritical>
 8008d2a:	2001      	movs	r0, #1
 8008d2c:	b005      	add	sp, #20
 8008d2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008d32:	4620      	mov	r0, r4
 8008d34:	f7ff fd99 	bl	800886a <prvUnlockQueue>
 8008d38:	f000 fb08 	bl	800934c <xTaskResumeAll>
 8008d3c:	e7d8      	b.n	8008cf0 <xQueueReceive+0xd8>
 8008d3e:	4620      	mov	r0, r4
 8008d40:	f7ff fd93 	bl	800886a <prvUnlockQueue>
 8008d44:	f000 fb02 	bl	800934c <xTaskResumeAll>
 8008d48:	4620      	mov	r0, r4
 8008d4a:	f7ff fd44 	bl	80087d6 <prvIsQueueEmpty>
 8008d4e:	2800      	cmp	r0, #0
 8008d50:	d0ce      	beq.n	8008cf0 <xQueueReceive+0xd8>
 8008d52:	e796      	b.n	8008c82 <xQueueReceive+0x6a>
 8008d54:	e000ed04 	.word	0xe000ed04

08008d58 <vQueueAddToRegistry>:
 8008d58:	2300      	movs	r3, #0
 8008d5a:	b530      	push	{r4, r5, lr}
 8008d5c:	4a06      	ldr	r2, [pc, #24]	; (8008d78 <vQueueAddToRegistry+0x20>)
 8008d5e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008d62:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008d66:	b91d      	cbnz	r5, 8008d70 <vQueueAddToRegistry+0x18>
 8008d68:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8008d6c:	6060      	str	r0, [r4, #4]
 8008d6e:	bd30      	pop	{r4, r5, pc}
 8008d70:	3301      	adds	r3, #1
 8008d72:	2b08      	cmp	r3, #8
 8008d74:	d1f3      	bne.n	8008d5e <vQueueAddToRegistry+0x6>
 8008d76:	e7fa      	b.n	8008d6e <vQueueAddToRegistry+0x16>
 8008d78:	20002430 	.word	0x20002430

08008d7c <vQueueWaitForMessageRestricted>:
 8008d7c:	b570      	push	{r4, r5, r6, lr}
 8008d7e:	4604      	mov	r4, r0
 8008d80:	460d      	mov	r5, r1
 8008d82:	4616      	mov	r6, r2
 8008d84:	f000 ff26 	bl	8009bd4 <vPortEnterCritical>
 8008d88:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008d8c:	2bff      	cmp	r3, #255	; 0xff
 8008d8e:	bf04      	itt	eq
 8008d90:	2300      	moveq	r3, #0
 8008d92:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008d96:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008d9a:	2bff      	cmp	r3, #255	; 0xff
 8008d9c:	bf04      	itt	eq
 8008d9e:	2300      	moveq	r3, #0
 8008da0:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008da4:	f000 ff38 	bl	8009c18 <vPortExitCritical>
 8008da8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008daa:	b92b      	cbnz	r3, 8008db8 <vQueueWaitForMessageRestricted+0x3c>
 8008dac:	4632      	mov	r2, r6
 8008dae:	4629      	mov	r1, r5
 8008db0:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008db4:	f000 fbb8 	bl	8009528 <vTaskPlaceOnEventListRestricted>
 8008db8:	4620      	mov	r0, r4
 8008dba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008dbe:	f7ff bd54 	b.w	800886a <prvUnlockQueue>
	...

08008dc4 <prvAddNewTaskToReadyList>:
 8008dc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008dc8:	4604      	mov	r4, r0
 8008dca:	f000 ff03 	bl	8009bd4 <vPortEnterCritical>
 8008dce:	4b34      	ldr	r3, [pc, #208]	; (8008ea0 <prvAddNewTaskToReadyList+0xdc>)
 8008dd0:	4d34      	ldr	r5, [pc, #208]	; (8008ea4 <prvAddNewTaskToReadyList+0xe0>)
 8008dd2:	681a      	ldr	r2, [r3, #0]
 8008dd4:	4e34      	ldr	r6, [pc, #208]	; (8008ea8 <prvAddNewTaskToReadyList+0xe4>)
 8008dd6:	3201      	adds	r2, #1
 8008dd8:	601a      	str	r2, [r3, #0]
 8008dda:	682a      	ldr	r2, [r5, #0]
 8008ddc:	2a00      	cmp	r2, #0
 8008dde:	d154      	bne.n	8008e8a <prvAddNewTaskToReadyList+0xc6>
 8008de0:	602c      	str	r4, [r5, #0]
 8008de2:	681b      	ldr	r3, [r3, #0]
 8008de4:	2b01      	cmp	r3, #1
 8008de6:	d12b      	bne.n	8008e40 <prvAddNewTaskToReadyList+0x7c>
 8008de8:	4830      	ldr	r0, [pc, #192]	; (8008eac <prvAddNewTaskToReadyList+0xe8>)
 8008dea:	f7ff fcb3 	bl	8008754 <vListInitialise>
 8008dee:	4830      	ldr	r0, [pc, #192]	; (8008eb0 <prvAddNewTaskToReadyList+0xec>)
 8008df0:	f7ff fcb0 	bl	8008754 <vListInitialise>
 8008df4:	482f      	ldr	r0, [pc, #188]	; (8008eb4 <prvAddNewTaskToReadyList+0xf0>)
 8008df6:	f7ff fcad 	bl	8008754 <vListInitialise>
 8008dfa:	482f      	ldr	r0, [pc, #188]	; (8008eb8 <prvAddNewTaskToReadyList+0xf4>)
 8008dfc:	f7ff fcaa 	bl	8008754 <vListInitialise>
 8008e00:	482e      	ldr	r0, [pc, #184]	; (8008ebc <prvAddNewTaskToReadyList+0xf8>)
 8008e02:	f7ff fca7 	bl	8008754 <vListInitialise>
 8008e06:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8008eec <prvAddNewTaskToReadyList+0x128>
 8008e0a:	482d      	ldr	r0, [pc, #180]	; (8008ec0 <prvAddNewTaskToReadyList+0xfc>)
 8008e0c:	f7ff fca2 	bl	8008754 <vListInitialise>
 8008e10:	4f2c      	ldr	r7, [pc, #176]	; (8008ec4 <prvAddNewTaskToReadyList+0x100>)
 8008e12:	482d      	ldr	r0, [pc, #180]	; (8008ec8 <prvAddNewTaskToReadyList+0x104>)
 8008e14:	f7ff fc9e 	bl	8008754 <vListInitialise>
 8008e18:	4640      	mov	r0, r8
 8008e1a:	f7ff fc9b 	bl	8008754 <vListInitialise>
 8008e1e:	4638      	mov	r0, r7
 8008e20:	f7ff fc98 	bl	8008754 <vListInitialise>
 8008e24:	4829      	ldr	r0, [pc, #164]	; (8008ecc <prvAddNewTaskToReadyList+0x108>)
 8008e26:	f7ff fc95 	bl	8008754 <vListInitialise>
 8008e2a:	4829      	ldr	r0, [pc, #164]	; (8008ed0 <prvAddNewTaskToReadyList+0x10c>)
 8008e2c:	f7ff fc92 	bl	8008754 <vListInitialise>
 8008e30:	4828      	ldr	r0, [pc, #160]	; (8008ed4 <prvAddNewTaskToReadyList+0x110>)
 8008e32:	f7ff fc8f 	bl	8008754 <vListInitialise>
 8008e36:	4b28      	ldr	r3, [pc, #160]	; (8008ed8 <prvAddNewTaskToReadyList+0x114>)
 8008e38:	f8c3 8000 	str.w	r8, [r3]
 8008e3c:	4b27      	ldr	r3, [pc, #156]	; (8008edc <prvAddNewTaskToReadyList+0x118>)
 8008e3e:	601f      	str	r7, [r3, #0]
 8008e40:	4a27      	ldr	r2, [pc, #156]	; (8008ee0 <prvAddNewTaskToReadyList+0x11c>)
 8008e42:	4928      	ldr	r1, [pc, #160]	; (8008ee4 <prvAddNewTaskToReadyList+0x120>)
 8008e44:	6813      	ldr	r3, [r2, #0]
 8008e46:	6808      	ldr	r0, [r1, #0]
 8008e48:	3301      	adds	r3, #1
 8008e4a:	6013      	str	r3, [r2, #0]
 8008e4c:	2301      	movs	r3, #1
 8008e4e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e50:	4093      	lsls	r3, r2
 8008e52:	4303      	orrs	r3, r0
 8008e54:	2014      	movs	r0, #20
 8008e56:	600b      	str	r3, [r1, #0]
 8008e58:	4b14      	ldr	r3, [pc, #80]	; (8008eac <prvAddNewTaskToReadyList+0xe8>)
 8008e5a:	1d21      	adds	r1, r4, #4
 8008e5c:	fb00 3002 	mla	r0, r0, r2, r3
 8008e60:	f7ff fc86 	bl	8008770 <vListInsertEnd>
 8008e64:	f000 fed8 	bl	8009c18 <vPortExitCritical>
 8008e68:	6833      	ldr	r3, [r6, #0]
 8008e6a:	b163      	cbz	r3, 8008e86 <prvAddNewTaskToReadyList+0xc2>
 8008e6c:	682b      	ldr	r3, [r5, #0]
 8008e6e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008e70:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008e72:	429a      	cmp	r2, r3
 8008e74:	d207      	bcs.n	8008e86 <prvAddNewTaskToReadyList+0xc2>
 8008e76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e7a:	4b1b      	ldr	r3, [pc, #108]	; (8008ee8 <prvAddNewTaskToReadyList+0x124>)
 8008e7c:	601a      	str	r2, [r3, #0]
 8008e7e:	f3bf 8f4f 	dsb	sy
 8008e82:	f3bf 8f6f 	isb	sy
 8008e86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008e8a:	6833      	ldr	r3, [r6, #0]
 8008e8c:	2b00      	cmp	r3, #0
 8008e8e:	d1d7      	bne.n	8008e40 <prvAddNewTaskToReadyList+0x7c>
 8008e90:	682b      	ldr	r3, [r5, #0]
 8008e92:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008e94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008e96:	429a      	cmp	r2, r3
 8008e98:	bf98      	it	ls
 8008e9a:	602c      	strls	r4, [r5, #0]
 8008e9c:	e7d0      	b.n	8008e40 <prvAddNewTaskToReadyList+0x7c>
 8008e9e:	bf00      	nop
 8008ea0:	20000bcc 	.word	0x20000bcc
 8008ea4:	20000b34 	.word	0x20000b34
 8008ea8:	20000c28 	.word	0x20000c28
 8008eac:	20000b40 	.word	0x20000b40
 8008eb0:	20000b54 	.word	0x20000b54
 8008eb4:	20000b68 	.word	0x20000b68
 8008eb8:	20000b7c 	.word	0x20000b7c
 8008ebc:	20000b90 	.word	0x20000b90
 8008ec0:	20000ba4 	.word	0x20000ba4
 8008ec4:	20000bf8 	.word	0x20000bf8
 8008ec8:	20000bb8 	.word	0x20000bb8
 8008ecc:	20000c14 	.word	0x20000c14
 8008ed0:	20000c40 	.word	0x20000c40
 8008ed4:	20000c2c 	.word	0x20000c2c
 8008ed8:	20000b38 	.word	0x20000b38
 8008edc:	20000b3c 	.word	0x20000b3c
 8008ee0:	20000bdc 	.word	0x20000bdc
 8008ee4:	20000be0 	.word	0x20000be0
 8008ee8:	e000ed04 	.word	0xe000ed04
 8008eec:	20000be4 	.word	0x20000be4

08008ef0 <prvResetNextTaskUnblockTime>:
 8008ef0:	4a06      	ldr	r2, [pc, #24]	; (8008f0c <prvResetNextTaskUnblockTime+0x1c>)
 8008ef2:	6813      	ldr	r3, [r2, #0]
 8008ef4:	6819      	ldr	r1, [r3, #0]
 8008ef6:	4b06      	ldr	r3, [pc, #24]	; (8008f10 <prvResetNextTaskUnblockTime+0x20>)
 8008ef8:	b919      	cbnz	r1, 8008f02 <prvResetNextTaskUnblockTime+0x12>
 8008efa:	f04f 32ff 	mov.w	r2, #4294967295
 8008efe:	601a      	str	r2, [r3, #0]
 8008f00:	4770      	bx	lr
 8008f02:	6812      	ldr	r2, [r2, #0]
 8008f04:	68d2      	ldr	r2, [r2, #12]
 8008f06:	68d2      	ldr	r2, [r2, #12]
 8008f08:	6852      	ldr	r2, [r2, #4]
 8008f0a:	e7f8      	b.n	8008efe <prvResetNextTaskUnblockTime+0xe>
 8008f0c:	20000b38 	.word	0x20000b38
 8008f10:	20000c0c 	.word	0x20000c0c

08008f14 <prvInitialiseNewTask.isra.0>:
 8008f14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008f18:	4607      	mov	r7, r0
 8008f1a:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
 8008f1e:	f102 4080 	add.w	r0, r2, #1073741824	; 0x40000000
 8008f22:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8008f24:	3801      	subs	r0, #1
 8008f26:	eb06 0680 	add.w	r6, r6, r0, lsl #2
 8008f2a:	4699      	mov	r9, r3
 8008f2c:	f026 0607 	bic.w	r6, r6, #7
 8008f30:	1e4b      	subs	r3, r1, #1
 8008f32:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008f36:	310f      	adds	r1, #15
 8008f38:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008f3c:	f802 0b01 	strb.w	r0, [r2], #1
 8008f40:	7818      	ldrb	r0, [r3, #0]
 8008f42:	b108      	cbz	r0, 8008f48 <prvInitialiseNewTask.isra.0+0x34>
 8008f44:	428b      	cmp	r3, r1
 8008f46:	d1f7      	bne.n	8008f38 <prvInitialiseNewTask.isra.0+0x24>
 8008f48:	9d08      	ldr	r5, [sp, #32]
 8008f4a:	f04f 0a00 	mov.w	sl, #0
 8008f4e:	2d06      	cmp	r5, #6
 8008f50:	bf28      	it	cs
 8008f52:	2506      	movcs	r5, #6
 8008f54:	1d20      	adds	r0, r4, #4
 8008f56:	62e5      	str	r5, [r4, #44]	; 0x2c
 8008f58:	f884 a043 	strb.w	sl, [r4, #67]	; 0x43
 8008f5c:	f7ff fc05 	bl	800876a <vListInitialiseItem>
 8008f60:	f1c5 0507 	rsb	r5, r5, #7
 8008f64:	f104 0018 	add.w	r0, r4, #24
 8008f68:	f7ff fbff 	bl	800876a <vListInitialiseItem>
 8008f6c:	f8c4 a044 	str.w	sl, [r4, #68]	; 0x44
 8008f70:	464a      	mov	r2, r9
 8008f72:	4639      	mov	r1, r7
 8008f74:	4630      	mov	r0, r6
 8008f76:	6124      	str	r4, [r4, #16]
 8008f78:	61a5      	str	r5, [r4, #24]
 8008f7a:	6264      	str	r4, [r4, #36]	; 0x24
 8008f7c:	f884 a048 	strb.w	sl, [r4, #72]	; 0x48
 8008f80:	f000 fe04 	bl	8009b8c <pxPortInitialiseStack>
 8008f84:	6020      	str	r0, [r4, #0]
 8008f86:	f1b8 0f00 	cmp.w	r8, #0
 8008f8a:	d001      	beq.n	8008f90 <prvInitialiseNewTask.isra.0+0x7c>
 8008f8c:	f8c8 4000 	str.w	r4, [r8]
 8008f90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008f94 <prvDeleteTCB>:
 8008f94:	b510      	push	{r4, lr}
 8008f96:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
 8008f9a:	4604      	mov	r4, r0
 8008f9c:	b93b      	cbnz	r3, 8008fae <prvDeleteTCB+0x1a>
 8008f9e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008fa0:	f000 ffd4 	bl	8009f4c <vPortFree>
 8008fa4:	4620      	mov	r0, r4
 8008fa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008faa:	f000 bfcf 	b.w	8009f4c <vPortFree>
 8008fae:	2b01      	cmp	r3, #1
 8008fb0:	d0f9      	beq.n	8008fa6 <prvDeleteTCB+0x12>
 8008fb2:	2b02      	cmp	r3, #2
 8008fb4:	d008      	beq.n	8008fc8 <prvDeleteTCB+0x34>
 8008fb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fba:	f383 8811 	msr	BASEPRI, r3
 8008fbe:	f3bf 8f6f 	isb	sy
 8008fc2:	f3bf 8f4f 	dsb	sy
 8008fc6:	e7fe      	b.n	8008fc6 <prvDeleteTCB+0x32>
 8008fc8:	bd10      	pop	{r4, pc}
	...

08008fcc <prvIdleTask>:
 8008fcc:	b580      	push	{r7, lr}
 8008fce:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800902c <prvIdleTask+0x60>
 8008fd2:	4f12      	ldr	r7, [pc, #72]	; (800901c <prvIdleTask+0x50>)
 8008fd4:	4c12      	ldr	r4, [pc, #72]	; (8009020 <prvIdleTask+0x54>)
 8008fd6:	4d13      	ldr	r5, [pc, #76]	; (8009024 <prvIdleTask+0x58>)
 8008fd8:	6823      	ldr	r3, [r4, #0]
 8008fda:	b963      	cbnz	r3, 8008ff6 <prvIdleTask+0x2a>
 8008fdc:	4b12      	ldr	r3, [pc, #72]	; (8009028 <prvIdleTask+0x5c>)
 8008fde:	681b      	ldr	r3, [r3, #0]
 8008fe0:	2b01      	cmp	r3, #1
 8008fe2:	d9f8      	bls.n	8008fd6 <prvIdleTask+0xa>
 8008fe4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008fe8:	f8c8 3000 	str.w	r3, [r8]
 8008fec:	f3bf 8f4f 	dsb	sy
 8008ff0:	f3bf 8f6f 	isb	sy
 8008ff4:	e7ee      	b.n	8008fd4 <prvIdleTask+0x8>
 8008ff6:	f000 fded 	bl	8009bd4 <vPortEnterCritical>
 8008ffa:	68fb      	ldr	r3, [r7, #12]
 8008ffc:	68de      	ldr	r6, [r3, #12]
 8008ffe:	1d30      	adds	r0, r6, #4
 8009000:	f7ff fbd9 	bl	80087b6 <uxListRemove>
 8009004:	682b      	ldr	r3, [r5, #0]
 8009006:	3b01      	subs	r3, #1
 8009008:	602b      	str	r3, [r5, #0]
 800900a:	6823      	ldr	r3, [r4, #0]
 800900c:	3b01      	subs	r3, #1
 800900e:	6023      	str	r3, [r4, #0]
 8009010:	f000 fe02 	bl	8009c18 <vPortExitCritical>
 8009014:	4630      	mov	r0, r6
 8009016:	f7ff ffbd 	bl	8008f94 <prvDeleteTCB>
 800901a:	e7dd      	b.n	8008fd8 <prvIdleTask+0xc>
 800901c:	20000c40 	.word	0x20000c40
 8009020:	20000bd0 	.word	0x20000bd0
 8009024:	20000bcc 	.word	0x20000bcc
 8009028:	20000b40 	.word	0x20000b40
 800902c:	e000ed04 	.word	0xe000ed04

08009030 <prvAddCurrentTaskToDelayedList>:
 8009030:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009032:	4b1b      	ldr	r3, [pc, #108]	; (80090a0 <prvAddCurrentTaskToDelayedList+0x70>)
 8009034:	4f1b      	ldr	r7, [pc, #108]	; (80090a4 <prvAddCurrentTaskToDelayedList+0x74>)
 8009036:	681c      	ldr	r4, [r3, #0]
 8009038:	4605      	mov	r5, r0
 800903a:	6838      	ldr	r0, [r7, #0]
 800903c:	460e      	mov	r6, r1
 800903e:	3004      	adds	r0, #4
 8009040:	f7ff fbb9 	bl	80087b6 <uxListRemove>
 8009044:	463b      	mov	r3, r7
 8009046:	b940      	cbnz	r0, 800905a <prvAddCurrentTaskToDelayedList+0x2a>
 8009048:	6839      	ldr	r1, [r7, #0]
 800904a:	4817      	ldr	r0, [pc, #92]	; (80090a8 <prvAddCurrentTaskToDelayedList+0x78>)
 800904c:	6acf      	ldr	r7, [r1, #44]	; 0x2c
 800904e:	2101      	movs	r1, #1
 8009050:	6802      	ldr	r2, [r0, #0]
 8009052:	40b9      	lsls	r1, r7
 8009054:	ea22 0201 	bic.w	r2, r2, r1
 8009058:	6002      	str	r2, [r0, #0]
 800905a:	1c6a      	adds	r2, r5, #1
 800905c:	d107      	bne.n	800906e <prvAddCurrentTaskToDelayedList+0x3e>
 800905e:	b136      	cbz	r6, 800906e <prvAddCurrentTaskToDelayedList+0x3e>
 8009060:	6819      	ldr	r1, [r3, #0]
 8009062:	4812      	ldr	r0, [pc, #72]	; (80090ac <prvAddCurrentTaskToDelayedList+0x7c>)
 8009064:	3104      	adds	r1, #4
 8009066:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800906a:	f7ff bb81 	b.w	8008770 <vListInsertEnd>
 800906e:	681a      	ldr	r2, [r3, #0]
 8009070:	1964      	adds	r4, r4, r5
 8009072:	6054      	str	r4, [r2, #4]
 8009074:	d307      	bcc.n	8009086 <prvAddCurrentTaskToDelayedList+0x56>
 8009076:	4a0e      	ldr	r2, [pc, #56]	; (80090b0 <prvAddCurrentTaskToDelayedList+0x80>)
 8009078:	6810      	ldr	r0, [r2, #0]
 800907a:	6819      	ldr	r1, [r3, #0]
 800907c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8009080:	3104      	adds	r1, #4
 8009082:	f7ff bb81 	b.w	8008788 <vListInsert>
 8009086:	4a0b      	ldr	r2, [pc, #44]	; (80090b4 <prvAddCurrentTaskToDelayedList+0x84>)
 8009088:	6810      	ldr	r0, [r2, #0]
 800908a:	6819      	ldr	r1, [r3, #0]
 800908c:	3104      	adds	r1, #4
 800908e:	f7ff fb7b 	bl	8008788 <vListInsert>
 8009092:	4b09      	ldr	r3, [pc, #36]	; (80090b8 <prvAddCurrentTaskToDelayedList+0x88>)
 8009094:	681a      	ldr	r2, [r3, #0]
 8009096:	42a2      	cmp	r2, r4
 8009098:	bf88      	it	hi
 800909a:	601c      	strhi	r4, [r3, #0]
 800909c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800909e:	bf00      	nop
 80090a0:	20000c54 	.word	0x20000c54
 80090a4:	20000b34 	.word	0x20000b34
 80090a8:	20000be0 	.word	0x20000be0
 80090ac:	20000c2c 	.word	0x20000c2c
 80090b0:	20000b3c 	.word	0x20000b3c
 80090b4:	20000b38 	.word	0x20000b38
 80090b8:	20000c0c 	.word	0x20000c0c

080090bc <xTaskCreateStatic>:
 80090bc:	b570      	push	{r4, r5, r6, lr}
 80090be:	b086      	sub	sp, #24
 80090c0:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
 80090c4:	b945      	cbnz	r5, 80090d8 <xTaskCreateStatic+0x1c>
 80090c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ca:	f383 8811 	msr	BASEPRI, r3
 80090ce:	f3bf 8f6f 	isb	sy
 80090d2:	f3bf 8f4f 	dsb	sy
 80090d6:	e7fe      	b.n	80090d6 <xTaskCreateStatic+0x1a>
 80090d8:	b944      	cbnz	r4, 80090ec <xTaskCreateStatic+0x30>
 80090da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090de:	f383 8811 	msr	BASEPRI, r3
 80090e2:	f3bf 8f6f 	isb	sy
 80090e6:	f3bf 8f4f 	dsb	sy
 80090ea:	e7fe      	b.n	80090ea <xTaskCreateStatic+0x2e>
 80090ec:	264c      	movs	r6, #76	; 0x4c
 80090ee:	9604      	str	r6, [sp, #16]
 80090f0:	9e04      	ldr	r6, [sp, #16]
 80090f2:	2e4c      	cmp	r6, #76	; 0x4c
 80090f4:	d008      	beq.n	8009108 <xTaskCreateStatic+0x4c>
 80090f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090fa:	f383 8811 	msr	BASEPRI, r3
 80090fe:	f3bf 8f6f 	isb	sy
 8009102:	f3bf 8f4f 	dsb	sy
 8009106:	e7fe      	b.n	8009106 <xTaskCreateStatic+0x4a>
 8009108:	6325      	str	r5, [r4, #48]	; 0x30
 800910a:	2502      	movs	r5, #2
 800910c:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8009110:	ad05      	add	r5, sp, #20
 8009112:	9501      	str	r5, [sp, #4]
 8009114:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009116:	9402      	str	r4, [sp, #8]
 8009118:	9500      	str	r5, [sp, #0]
 800911a:	f7ff fefb 	bl	8008f14 <prvInitialiseNewTask.isra.0>
 800911e:	4620      	mov	r0, r4
 8009120:	f7ff fe50 	bl	8008dc4 <prvAddNewTaskToReadyList>
 8009124:	9805      	ldr	r0, [sp, #20]
 8009126:	b006      	add	sp, #24
 8009128:	bd70      	pop	{r4, r5, r6, pc}

0800912a <xTaskCreate>:
 800912a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800912e:	4607      	mov	r7, r0
 8009130:	b085      	sub	sp, #20
 8009132:	0090      	lsls	r0, r2, #2
 8009134:	4688      	mov	r8, r1
 8009136:	4616      	mov	r6, r2
 8009138:	4699      	mov	r9, r3
 800913a:	f000 fe7d 	bl	8009e38 <pvPortMalloc>
 800913e:	4605      	mov	r5, r0
 8009140:	b1e8      	cbz	r0, 800917e <xTaskCreate+0x54>
 8009142:	204c      	movs	r0, #76	; 0x4c
 8009144:	f000 fe78 	bl	8009e38 <pvPortMalloc>
 8009148:	4604      	mov	r4, r0
 800914a:	b1a8      	cbz	r0, 8009178 <xTaskCreate+0x4e>
 800914c:	2300      	movs	r3, #0
 800914e:	f880 3049 	strb.w	r3, [r0, #73]	; 0x49
 8009152:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009154:	6305      	str	r5, [r0, #48]	; 0x30
 8009156:	9301      	str	r3, [sp, #4]
 8009158:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800915a:	4632      	mov	r2, r6
 800915c:	4641      	mov	r1, r8
 800915e:	9002      	str	r0, [sp, #8]
 8009160:	9300      	str	r3, [sp, #0]
 8009162:	4638      	mov	r0, r7
 8009164:	464b      	mov	r3, r9
 8009166:	f7ff fed5 	bl	8008f14 <prvInitialiseNewTask.isra.0>
 800916a:	4620      	mov	r0, r4
 800916c:	f7ff fe2a 	bl	8008dc4 <prvAddNewTaskToReadyList>
 8009170:	2001      	movs	r0, #1
 8009172:	b005      	add	sp, #20
 8009174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009178:	4628      	mov	r0, r5
 800917a:	f000 fee7 	bl	8009f4c <vPortFree>
 800917e:	f04f 30ff 	mov.w	r0, #4294967295
 8009182:	e7f6      	b.n	8009172 <xTaskCreate+0x48>

08009184 <vTaskStartScheduler>:
 8009184:	b510      	push	{r4, lr}
 8009186:	2400      	movs	r4, #0
 8009188:	b088      	sub	sp, #32
 800918a:	aa07      	add	r2, sp, #28
 800918c:	a906      	add	r1, sp, #24
 800918e:	a805      	add	r0, sp, #20
 8009190:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8009194:	f7f7 ffb2 	bl	80010fc <vApplicationGetIdleTaskMemory>
 8009198:	9b05      	ldr	r3, [sp, #20]
 800919a:	9a07      	ldr	r2, [sp, #28]
 800919c:	9302      	str	r3, [sp, #8]
 800919e:	9b06      	ldr	r3, [sp, #24]
 80091a0:	4915      	ldr	r1, [pc, #84]	; (80091f8 <vTaskStartScheduler+0x74>)
 80091a2:	e9cd 4300 	strd	r4, r3, [sp]
 80091a6:	4815      	ldr	r0, [pc, #84]	; (80091fc <vTaskStartScheduler+0x78>)
 80091a8:	4623      	mov	r3, r4
 80091aa:	f7ff ff87 	bl	80090bc <xTaskCreateStatic>
 80091ae:	b1a8      	cbz	r0, 80091dc <vTaskStartScheduler+0x58>
 80091b0:	f000 facc 	bl	800974c <xTimerCreateTimerTask>
 80091b4:	2801      	cmp	r0, #1
 80091b6:	d113      	bne.n	80091e0 <vTaskStartScheduler+0x5c>
 80091b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091bc:	f383 8811 	msr	BASEPRI, r3
 80091c0:	f3bf 8f6f 	isb	sy
 80091c4:	f3bf 8f4f 	dsb	sy
 80091c8:	f04f 32ff 	mov.w	r2, #4294967295
 80091cc:	4b0c      	ldr	r3, [pc, #48]	; (8009200 <vTaskStartScheduler+0x7c>)
 80091ce:	601a      	str	r2, [r3, #0]
 80091d0:	4b0c      	ldr	r3, [pc, #48]	; (8009204 <vTaskStartScheduler+0x80>)
 80091d2:	6018      	str	r0, [r3, #0]
 80091d4:	4b0c      	ldr	r3, [pc, #48]	; (8009208 <vTaskStartScheduler+0x84>)
 80091d6:	601c      	str	r4, [r3, #0]
 80091d8:	f000 fd84 	bl	8009ce4 <xPortStartScheduler>
 80091dc:	b008      	add	sp, #32
 80091de:	bd10      	pop	{r4, pc}
 80091e0:	3001      	adds	r0, #1
 80091e2:	d1fb      	bne.n	80091dc <vTaskStartScheduler+0x58>
 80091e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091e8:	f383 8811 	msr	BASEPRI, r3
 80091ec:	f3bf 8f6f 	isb	sy
 80091f0:	f3bf 8f4f 	dsb	sy
 80091f4:	e7fe      	b.n	80091f4 <vTaskStartScheduler+0x70>
 80091f6:	bf00      	nop
 80091f8:	0800ee79 	.word	0x0800ee79
 80091fc:	08008fcd 	.word	0x08008fcd
 8009200:	20000c0c 	.word	0x20000c0c
 8009204:	20000c28 	.word	0x20000c28
 8009208:	20000c54 	.word	0x20000c54

0800920c <vTaskSuspendAll>:
 800920c:	4a02      	ldr	r2, [pc, #8]	; (8009218 <vTaskSuspendAll+0xc>)
 800920e:	6813      	ldr	r3, [r2, #0]
 8009210:	3301      	adds	r3, #1
 8009212:	6013      	str	r3, [r2, #0]
 8009214:	4770      	bx	lr
 8009216:	bf00      	nop
 8009218:	20000bd8 	.word	0x20000bd8

0800921c <xTaskGetTickCount>:
 800921c:	4b01      	ldr	r3, [pc, #4]	; (8009224 <xTaskGetTickCount+0x8>)
 800921e:	6818      	ldr	r0, [r3, #0]
 8009220:	4770      	bx	lr
 8009222:	bf00      	nop
 8009224:	20000c54 	.word	0x20000c54

08009228 <xTaskIncrementTick>:
 8009228:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800922c:	4b3c      	ldr	r3, [pc, #240]	; (8009320 <xTaskIncrementTick+0xf8>)
 800922e:	681b      	ldr	r3, [r3, #0]
 8009230:	2b00      	cmp	r3, #0
 8009232:	d16e      	bne.n	8009312 <xTaskIncrementTick+0xea>
 8009234:	4b3b      	ldr	r3, [pc, #236]	; (8009324 <xTaskIncrementTick+0xfc>)
 8009236:	681d      	ldr	r5, [r3, #0]
 8009238:	3501      	adds	r5, #1
 800923a:	601d      	str	r5, [r3, #0]
 800923c:	b9bd      	cbnz	r5, 800926e <xTaskIncrementTick+0x46>
 800923e:	4b3a      	ldr	r3, [pc, #232]	; (8009328 <xTaskIncrementTick+0x100>)
 8009240:	681a      	ldr	r2, [r3, #0]
 8009242:	6812      	ldr	r2, [r2, #0]
 8009244:	b142      	cbz	r2, 8009258 <xTaskIncrementTick+0x30>
 8009246:	f04f 0350 	mov.w	r3, #80	; 0x50
 800924a:	f383 8811 	msr	BASEPRI, r3
 800924e:	f3bf 8f6f 	isb	sy
 8009252:	f3bf 8f4f 	dsb	sy
 8009256:	e7fe      	b.n	8009256 <xTaskIncrementTick+0x2e>
 8009258:	4a34      	ldr	r2, [pc, #208]	; (800932c <xTaskIncrementTick+0x104>)
 800925a:	6819      	ldr	r1, [r3, #0]
 800925c:	6810      	ldr	r0, [r2, #0]
 800925e:	6018      	str	r0, [r3, #0]
 8009260:	6011      	str	r1, [r2, #0]
 8009262:	4a33      	ldr	r2, [pc, #204]	; (8009330 <xTaskIncrementTick+0x108>)
 8009264:	6813      	ldr	r3, [r2, #0]
 8009266:	3301      	adds	r3, #1
 8009268:	6013      	str	r3, [r2, #0]
 800926a:	f7ff fe41 	bl	8008ef0 <prvResetNextTaskUnblockTime>
 800926e:	4e31      	ldr	r6, [pc, #196]	; (8009334 <xTaskIncrementTick+0x10c>)
 8009270:	2400      	movs	r4, #0
 8009272:	6833      	ldr	r3, [r6, #0]
 8009274:	4f30      	ldr	r7, [pc, #192]	; (8009338 <xTaskIncrementTick+0x110>)
 8009276:	42ab      	cmp	r3, r5
 8009278:	d910      	bls.n	800929c <xTaskIncrementTick+0x74>
 800927a:	4b30      	ldr	r3, [pc, #192]	; (800933c <xTaskIncrementTick+0x114>)
 800927c:	681b      	ldr	r3, [r3, #0]
 800927e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009280:	2314      	movs	r3, #20
 8009282:	4353      	muls	r3, r2
 8009284:	58fb      	ldr	r3, [r7, r3]
 8009286:	2b02      	cmp	r3, #2
 8009288:	bf28      	it	cs
 800928a:	2401      	movcs	r4, #1
 800928c:	4b2c      	ldr	r3, [pc, #176]	; (8009340 <xTaskIncrementTick+0x118>)
 800928e:	681b      	ldr	r3, [r3, #0]
 8009290:	2b00      	cmp	r3, #0
 8009292:	bf0c      	ite	eq
 8009294:	4620      	moveq	r0, r4
 8009296:	2001      	movne	r0, #1
 8009298:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800929c:	f8df a088 	ldr.w	sl, [pc, #136]	; 8009328 <xTaskIncrementTick+0x100>
 80092a0:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 8009348 <xTaskIncrementTick+0x120>
 80092a4:	f8da 3000 	ldr.w	r3, [sl]
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	b91b      	cbnz	r3, 80092b4 <xTaskIncrementTick+0x8c>
 80092ac:	f04f 33ff 	mov.w	r3, #4294967295
 80092b0:	6033      	str	r3, [r6, #0]
 80092b2:	e7e2      	b.n	800927a <xTaskIncrementTick+0x52>
 80092b4:	f8da 3000 	ldr.w	r3, [sl]
 80092b8:	68db      	ldr	r3, [r3, #12]
 80092ba:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80092be:	f8db 2004 	ldr.w	r2, [fp, #4]
 80092c2:	4295      	cmp	r5, r2
 80092c4:	d201      	bcs.n	80092ca <xTaskIncrementTick+0xa2>
 80092c6:	6032      	str	r2, [r6, #0]
 80092c8:	e7d7      	b.n	800927a <xTaskIncrementTick+0x52>
 80092ca:	f10b 0804 	add.w	r8, fp, #4
 80092ce:	4640      	mov	r0, r8
 80092d0:	f7ff fa71 	bl	80087b6 <uxListRemove>
 80092d4:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80092d8:	b11a      	cbz	r2, 80092e2 <xTaskIncrementTick+0xba>
 80092da:	f10b 0018 	add.w	r0, fp, #24
 80092de:	f7ff fa6a 	bl	80087b6 <uxListRemove>
 80092e2:	2201      	movs	r2, #1
 80092e4:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80092e8:	f8d9 3000 	ldr.w	r3, [r9]
 80092ec:	4082      	lsls	r2, r0
 80092ee:	431a      	orrs	r2, r3
 80092f0:	f8c9 2000 	str.w	r2, [r9]
 80092f4:	2214      	movs	r2, #20
 80092f6:	4641      	mov	r1, r8
 80092f8:	fb02 7000 	mla	r0, r2, r0, r7
 80092fc:	f7ff fa38 	bl	8008770 <vListInsertEnd>
 8009300:	4b0e      	ldr	r3, [pc, #56]	; (800933c <xTaskIncrementTick+0x114>)
 8009302:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009306:	6819      	ldr	r1, [r3, #0]
 8009308:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800930a:	429a      	cmp	r2, r3
 800930c:	bf28      	it	cs
 800930e:	2401      	movcs	r4, #1
 8009310:	e7c8      	b.n	80092a4 <xTaskIncrementTick+0x7c>
 8009312:	4a0c      	ldr	r2, [pc, #48]	; (8009344 <xTaskIncrementTick+0x11c>)
 8009314:	2400      	movs	r4, #0
 8009316:	6813      	ldr	r3, [r2, #0]
 8009318:	3301      	adds	r3, #1
 800931a:	6013      	str	r3, [r2, #0]
 800931c:	e7b6      	b.n	800928c <xTaskIncrementTick+0x64>
 800931e:	bf00      	nop
 8009320:	20000bd8 	.word	0x20000bd8
 8009324:	20000c54 	.word	0x20000c54
 8009328:	20000b38 	.word	0x20000b38
 800932c:	20000b3c 	.word	0x20000b3c
 8009330:	20000c10 	.word	0x20000c10
 8009334:	20000c0c 	.word	0x20000c0c
 8009338:	20000b40 	.word	0x20000b40
 800933c:	20000b34 	.word	0x20000b34
 8009340:	20000c58 	.word	0x20000c58
 8009344:	20000bd4 	.word	0x20000bd4
 8009348:	20000be0 	.word	0x20000be0

0800934c <xTaskResumeAll>:
 800934c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009350:	4c30      	ldr	r4, [pc, #192]	; (8009414 <xTaskResumeAll+0xc8>)
 8009352:	6823      	ldr	r3, [r4, #0]
 8009354:	b943      	cbnz	r3, 8009368 <xTaskResumeAll+0x1c>
 8009356:	f04f 0350 	mov.w	r3, #80	; 0x50
 800935a:	f383 8811 	msr	BASEPRI, r3
 800935e:	f3bf 8f6f 	isb	sy
 8009362:	f3bf 8f4f 	dsb	sy
 8009366:	e7fe      	b.n	8009366 <xTaskResumeAll+0x1a>
 8009368:	f000 fc34 	bl	8009bd4 <vPortEnterCritical>
 800936c:	6823      	ldr	r3, [r4, #0]
 800936e:	3b01      	subs	r3, #1
 8009370:	6023      	str	r3, [r4, #0]
 8009372:	6824      	ldr	r4, [r4, #0]
 8009374:	b12c      	cbz	r4, 8009382 <xTaskResumeAll+0x36>
 8009376:	2400      	movs	r4, #0
 8009378:	f000 fc4e 	bl	8009c18 <vPortExitCritical>
 800937c:	4620      	mov	r0, r4
 800937e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009382:	4b25      	ldr	r3, [pc, #148]	; (8009418 <xTaskResumeAll+0xcc>)
 8009384:	681b      	ldr	r3, [r3, #0]
 8009386:	2b00      	cmp	r3, #0
 8009388:	d0f5      	beq.n	8009376 <xTaskResumeAll+0x2a>
 800938a:	4d24      	ldr	r5, [pc, #144]	; (800941c <xTaskResumeAll+0xd0>)
 800938c:	4e24      	ldr	r6, [pc, #144]	; (8009420 <xTaskResumeAll+0xd4>)
 800938e:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 8009434 <xTaskResumeAll+0xe8>
 8009392:	e01f      	b.n	80093d4 <xTaskResumeAll+0x88>
 8009394:	68eb      	ldr	r3, [r5, #12]
 8009396:	2701      	movs	r7, #1
 8009398:	68dc      	ldr	r4, [r3, #12]
 800939a:	f104 0904 	add.w	r9, r4, #4
 800939e:	f104 0018 	add.w	r0, r4, #24
 80093a2:	f7ff fa08 	bl	80087b6 <uxListRemove>
 80093a6:	4648      	mov	r0, r9
 80093a8:	f7ff fa05 	bl	80087b6 <uxListRemove>
 80093ac:	2014      	movs	r0, #20
 80093ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80093b0:	6831      	ldr	r1, [r6, #0]
 80093b2:	fa07 f302 	lsl.w	r3, r7, r2
 80093b6:	430b      	orrs	r3, r1
 80093b8:	fb00 8002 	mla	r0, r0, r2, r8
 80093bc:	4649      	mov	r1, r9
 80093be:	6033      	str	r3, [r6, #0]
 80093c0:	f7ff f9d6 	bl	8008770 <vListInsertEnd>
 80093c4:	4b17      	ldr	r3, [pc, #92]	; (8009424 <xTaskResumeAll+0xd8>)
 80093c6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80093c8:	681b      	ldr	r3, [r3, #0]
 80093ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80093cc:	429a      	cmp	r2, r3
 80093ce:	d301      	bcc.n	80093d4 <xTaskResumeAll+0x88>
 80093d0:	4b15      	ldr	r3, [pc, #84]	; (8009428 <xTaskResumeAll+0xdc>)
 80093d2:	601f      	str	r7, [r3, #0]
 80093d4:	682b      	ldr	r3, [r5, #0]
 80093d6:	2b00      	cmp	r3, #0
 80093d8:	d1dc      	bne.n	8009394 <xTaskResumeAll+0x48>
 80093da:	b10c      	cbz	r4, 80093e0 <xTaskResumeAll+0x94>
 80093dc:	f7ff fd88 	bl	8008ef0 <prvResetNextTaskUnblockTime>
 80093e0:	4d12      	ldr	r5, [pc, #72]	; (800942c <xTaskResumeAll+0xe0>)
 80093e2:	682c      	ldr	r4, [r5, #0]
 80093e4:	b144      	cbz	r4, 80093f8 <xTaskResumeAll+0xac>
 80093e6:	2701      	movs	r7, #1
 80093e8:	4e0f      	ldr	r6, [pc, #60]	; (8009428 <xTaskResumeAll+0xdc>)
 80093ea:	f7ff ff1d 	bl	8009228 <xTaskIncrementTick>
 80093ee:	b100      	cbz	r0, 80093f2 <xTaskResumeAll+0xa6>
 80093f0:	6037      	str	r7, [r6, #0]
 80093f2:	3c01      	subs	r4, #1
 80093f4:	d1f9      	bne.n	80093ea <xTaskResumeAll+0x9e>
 80093f6:	602c      	str	r4, [r5, #0]
 80093f8:	4b0b      	ldr	r3, [pc, #44]	; (8009428 <xTaskResumeAll+0xdc>)
 80093fa:	681b      	ldr	r3, [r3, #0]
 80093fc:	2b00      	cmp	r3, #0
 80093fe:	d0ba      	beq.n	8009376 <xTaskResumeAll+0x2a>
 8009400:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009404:	4b0a      	ldr	r3, [pc, #40]	; (8009430 <xTaskResumeAll+0xe4>)
 8009406:	601a      	str	r2, [r3, #0]
 8009408:	f3bf 8f4f 	dsb	sy
 800940c:	f3bf 8f6f 	isb	sy
 8009410:	2401      	movs	r4, #1
 8009412:	e7b1      	b.n	8009378 <xTaskResumeAll+0x2c>
 8009414:	20000bd8 	.word	0x20000bd8
 8009418:	20000bcc 	.word	0x20000bcc
 800941c:	20000c14 	.word	0x20000c14
 8009420:	20000be0 	.word	0x20000be0
 8009424:	20000b34 	.word	0x20000b34
 8009428:	20000c58 	.word	0x20000c58
 800942c:	20000bd4 	.word	0x20000bd4
 8009430:	e000ed04 	.word	0xe000ed04
 8009434:	20000b40 	.word	0x20000b40

08009438 <vTaskDelay>:
 8009438:	b508      	push	{r3, lr}
 800943a:	b940      	cbnz	r0, 800944e <vTaskDelay+0x16>
 800943c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009440:	4b0d      	ldr	r3, [pc, #52]	; (8009478 <vTaskDelay+0x40>)
 8009442:	601a      	str	r2, [r3, #0]
 8009444:	f3bf 8f4f 	dsb	sy
 8009448:	f3bf 8f6f 	isb	sy
 800944c:	bd08      	pop	{r3, pc}
 800944e:	4b0b      	ldr	r3, [pc, #44]	; (800947c <vTaskDelay+0x44>)
 8009450:	6819      	ldr	r1, [r3, #0]
 8009452:	b141      	cbz	r1, 8009466 <vTaskDelay+0x2e>
 8009454:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009458:	f383 8811 	msr	BASEPRI, r3
 800945c:	f3bf 8f6f 	isb	sy
 8009460:	f3bf 8f4f 	dsb	sy
 8009464:	e7fe      	b.n	8009464 <vTaskDelay+0x2c>
 8009466:	f7ff fed1 	bl	800920c <vTaskSuspendAll>
 800946a:	f7ff fde1 	bl	8009030 <prvAddCurrentTaskToDelayedList>
 800946e:	f7ff ff6d 	bl	800934c <xTaskResumeAll>
 8009472:	2800      	cmp	r0, #0
 8009474:	d0e2      	beq.n	800943c <vTaskDelay+0x4>
 8009476:	e7e9      	b.n	800944c <vTaskDelay+0x14>
 8009478:	e000ed04 	.word	0xe000ed04
 800947c:	20000bd8 	.word	0x20000bd8

08009480 <vTaskSwitchContext>:
 8009480:	4b17      	ldr	r3, [pc, #92]	; (80094e0 <vTaskSwitchContext+0x60>)
 8009482:	b510      	push	{r4, lr}
 8009484:	681a      	ldr	r2, [r3, #0]
 8009486:	4b17      	ldr	r3, [pc, #92]	; (80094e4 <vTaskSwitchContext+0x64>)
 8009488:	b112      	cbz	r2, 8009490 <vTaskSwitchContext+0x10>
 800948a:	2201      	movs	r2, #1
 800948c:	601a      	str	r2, [r3, #0]
 800948e:	bd10      	pop	{r4, pc}
 8009490:	601a      	str	r2, [r3, #0]
 8009492:	4b15      	ldr	r3, [pc, #84]	; (80094e8 <vTaskSwitchContext+0x68>)
 8009494:	681b      	ldr	r3, [r3, #0]
 8009496:	fab3 f383 	clz	r3, r3
 800949a:	2214      	movs	r2, #20
 800949c:	b2db      	uxtb	r3, r3
 800949e:	f1c3 031f 	rsb	r3, r3, #31
 80094a2:	435a      	muls	r2, r3
 80094a4:	4911      	ldr	r1, [pc, #68]	; (80094ec <vTaskSwitchContext+0x6c>)
 80094a6:	588c      	ldr	r4, [r1, r2]
 80094a8:	1888      	adds	r0, r1, r2
 80094aa:	b944      	cbnz	r4, 80094be <vTaskSwitchContext+0x3e>
 80094ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094b0:	f383 8811 	msr	BASEPRI, r3
 80094b4:	f3bf 8f6f 	isb	sy
 80094b8:	f3bf 8f4f 	dsb	sy
 80094bc:	e7fe      	b.n	80094bc <vTaskSwitchContext+0x3c>
 80094be:	6844      	ldr	r4, [r0, #4]
 80094c0:	3208      	adds	r2, #8
 80094c2:	6864      	ldr	r4, [r4, #4]
 80094c4:	440a      	add	r2, r1
 80094c6:	4294      	cmp	r4, r2
 80094c8:	bf08      	it	eq
 80094ca:	6862      	ldreq	r2, [r4, #4]
 80094cc:	6044      	str	r4, [r0, #4]
 80094ce:	bf08      	it	eq
 80094d0:	6042      	streq	r2, [r0, #4]
 80094d2:	2214      	movs	r2, #20
 80094d4:	fb02 1303 	mla	r3, r2, r3, r1
 80094d8:	685b      	ldr	r3, [r3, #4]
 80094da:	68da      	ldr	r2, [r3, #12]
 80094dc:	4b04      	ldr	r3, [pc, #16]	; (80094f0 <vTaskSwitchContext+0x70>)
 80094de:	e7d5      	b.n	800948c <vTaskSwitchContext+0xc>
 80094e0:	20000bd8 	.word	0x20000bd8
 80094e4:	20000c58 	.word	0x20000c58
 80094e8:	20000be0 	.word	0x20000be0
 80094ec:	20000b40 	.word	0x20000b40
 80094f0:	20000b34 	.word	0x20000b34

080094f4 <vTaskPlaceOnEventList>:
 80094f4:	b510      	push	{r4, lr}
 80094f6:	460c      	mov	r4, r1
 80094f8:	b940      	cbnz	r0, 800950c <vTaskPlaceOnEventList+0x18>
 80094fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094fe:	f383 8811 	msr	BASEPRI, r3
 8009502:	f3bf 8f6f 	isb	sy
 8009506:	f3bf 8f4f 	dsb	sy
 800950a:	e7fe      	b.n	800950a <vTaskPlaceOnEventList+0x16>
 800950c:	4b05      	ldr	r3, [pc, #20]	; (8009524 <vTaskPlaceOnEventList+0x30>)
 800950e:	6819      	ldr	r1, [r3, #0]
 8009510:	3118      	adds	r1, #24
 8009512:	f7ff f939 	bl	8008788 <vListInsert>
 8009516:	4620      	mov	r0, r4
 8009518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800951c:	2101      	movs	r1, #1
 800951e:	f7ff bd87 	b.w	8009030 <prvAddCurrentTaskToDelayedList>
 8009522:	bf00      	nop
 8009524:	20000b34 	.word	0x20000b34

08009528 <vTaskPlaceOnEventListRestricted>:
 8009528:	b538      	push	{r3, r4, r5, lr}
 800952a:	460d      	mov	r5, r1
 800952c:	4614      	mov	r4, r2
 800952e:	b940      	cbnz	r0, 8009542 <vTaskPlaceOnEventListRestricted+0x1a>
 8009530:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009534:	f383 8811 	msr	BASEPRI, r3
 8009538:	f3bf 8f6f 	isb	sy
 800953c:	f3bf 8f4f 	dsb	sy
 8009540:	e7fe      	b.n	8009540 <vTaskPlaceOnEventListRestricted+0x18>
 8009542:	4b08      	ldr	r3, [pc, #32]	; (8009564 <vTaskPlaceOnEventListRestricted+0x3c>)
 8009544:	6819      	ldr	r1, [r3, #0]
 8009546:	3118      	adds	r1, #24
 8009548:	f7ff f912 	bl	8008770 <vListInsertEnd>
 800954c:	2c00      	cmp	r4, #0
 800954e:	4621      	mov	r1, r4
 8009550:	bf08      	it	eq
 8009552:	4628      	moveq	r0, r5
 8009554:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009558:	bf18      	it	ne
 800955a:	f04f 30ff 	movne.w	r0, #4294967295
 800955e:	f7ff bd67 	b.w	8009030 <prvAddCurrentTaskToDelayedList>
 8009562:	bf00      	nop
 8009564:	20000b34 	.word	0x20000b34

08009568 <xTaskRemoveFromEventList>:
 8009568:	b538      	push	{r3, r4, r5, lr}
 800956a:	68c3      	ldr	r3, [r0, #12]
 800956c:	68dc      	ldr	r4, [r3, #12]
 800956e:	b944      	cbnz	r4, 8009582 <xTaskRemoveFromEventList+0x1a>
 8009570:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009574:	f383 8811 	msr	BASEPRI, r3
 8009578:	f3bf 8f6f 	isb	sy
 800957c:	f3bf 8f4f 	dsb	sy
 8009580:	e7fe      	b.n	8009580 <xTaskRemoveFromEventList+0x18>
 8009582:	f104 0518 	add.w	r5, r4, #24
 8009586:	4628      	mov	r0, r5
 8009588:	f7ff f915 	bl	80087b6 <uxListRemove>
 800958c:	4b11      	ldr	r3, [pc, #68]	; (80095d4 <xTaskRemoveFromEventList+0x6c>)
 800958e:	681b      	ldr	r3, [r3, #0]
 8009590:	b9e3      	cbnz	r3, 80095cc <xTaskRemoveFromEventList+0x64>
 8009592:	1d25      	adds	r5, r4, #4
 8009594:	4628      	mov	r0, r5
 8009596:	f7ff f90e 	bl	80087b6 <uxListRemove>
 800959a:	2301      	movs	r3, #1
 800959c:	490e      	ldr	r1, [pc, #56]	; (80095d8 <xTaskRemoveFromEventList+0x70>)
 800959e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80095a0:	6808      	ldr	r0, [r1, #0]
 80095a2:	4093      	lsls	r3, r2
 80095a4:	4303      	orrs	r3, r0
 80095a6:	2014      	movs	r0, #20
 80095a8:	600b      	str	r3, [r1, #0]
 80095aa:	4629      	mov	r1, r5
 80095ac:	4b0b      	ldr	r3, [pc, #44]	; (80095dc <xTaskRemoveFromEventList+0x74>)
 80095ae:	fb00 3002 	mla	r0, r0, r2, r3
 80095b2:	f7ff f8dd 	bl	8008770 <vListInsertEnd>
 80095b6:	4b0a      	ldr	r3, [pc, #40]	; (80095e0 <xTaskRemoveFromEventList+0x78>)
 80095b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80095ba:	681b      	ldr	r3, [r3, #0]
 80095bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095be:	429a      	cmp	r2, r3
 80095c0:	bf85      	ittet	hi
 80095c2:	2001      	movhi	r0, #1
 80095c4:	4b07      	ldrhi	r3, [pc, #28]	; (80095e4 <xTaskRemoveFromEventList+0x7c>)
 80095c6:	2000      	movls	r0, #0
 80095c8:	6018      	strhi	r0, [r3, #0]
 80095ca:	bd38      	pop	{r3, r4, r5, pc}
 80095cc:	4629      	mov	r1, r5
 80095ce:	4806      	ldr	r0, [pc, #24]	; (80095e8 <xTaskRemoveFromEventList+0x80>)
 80095d0:	e7ef      	b.n	80095b2 <xTaskRemoveFromEventList+0x4a>
 80095d2:	bf00      	nop
 80095d4:	20000bd8 	.word	0x20000bd8
 80095d8:	20000be0 	.word	0x20000be0
 80095dc:	20000b40 	.word	0x20000b40
 80095e0:	20000b34 	.word	0x20000b34
 80095e4:	20000c58 	.word	0x20000c58
 80095e8:	20000c14 	.word	0x20000c14

080095ec <vTaskInternalSetTimeOutState>:
 80095ec:	4b03      	ldr	r3, [pc, #12]	; (80095fc <vTaskInternalSetTimeOutState+0x10>)
 80095ee:	681b      	ldr	r3, [r3, #0]
 80095f0:	6003      	str	r3, [r0, #0]
 80095f2:	4b03      	ldr	r3, [pc, #12]	; (8009600 <vTaskInternalSetTimeOutState+0x14>)
 80095f4:	681b      	ldr	r3, [r3, #0]
 80095f6:	6043      	str	r3, [r0, #4]
 80095f8:	4770      	bx	lr
 80095fa:	bf00      	nop
 80095fc:	20000c10 	.word	0x20000c10
 8009600:	20000c54 	.word	0x20000c54

08009604 <xTaskCheckForTimeOut>:
 8009604:	b570      	push	{r4, r5, r6, lr}
 8009606:	460c      	mov	r4, r1
 8009608:	4605      	mov	r5, r0
 800960a:	b940      	cbnz	r0, 800961e <xTaskCheckForTimeOut+0x1a>
 800960c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009610:	f383 8811 	msr	BASEPRI, r3
 8009614:	f3bf 8f6f 	isb	sy
 8009618:	f3bf 8f4f 	dsb	sy
 800961c:	e7fe      	b.n	800961c <xTaskCheckForTimeOut+0x18>
 800961e:	b941      	cbnz	r1, 8009632 <xTaskCheckForTimeOut+0x2e>
 8009620:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009624:	f383 8811 	msr	BASEPRI, r3
 8009628:	f3bf 8f6f 	isb	sy
 800962c:	f3bf 8f4f 	dsb	sy
 8009630:	e7fe      	b.n	8009630 <xTaskCheckForTimeOut+0x2c>
 8009632:	f000 facf 	bl	8009bd4 <vPortEnterCritical>
 8009636:	4b0f      	ldr	r3, [pc, #60]	; (8009674 <xTaskCheckForTimeOut+0x70>)
 8009638:	6819      	ldr	r1, [r3, #0]
 800963a:	6823      	ldr	r3, [r4, #0]
 800963c:	1c5a      	adds	r2, r3, #1
 800963e:	d010      	beq.n	8009662 <xTaskCheckForTimeOut+0x5e>
 8009640:	480d      	ldr	r0, [pc, #52]	; (8009678 <xTaskCheckForTimeOut+0x74>)
 8009642:	682e      	ldr	r6, [r5, #0]
 8009644:	6800      	ldr	r0, [r0, #0]
 8009646:	686a      	ldr	r2, [r5, #4]
 8009648:	4286      	cmp	r6, r0
 800964a:	d001      	beq.n	8009650 <xTaskCheckForTimeOut+0x4c>
 800964c:	428a      	cmp	r2, r1
 800964e:	d90f      	bls.n	8009670 <xTaskCheckForTimeOut+0x6c>
 8009650:	1a88      	subs	r0, r1, r2
 8009652:	4283      	cmp	r3, r0
 8009654:	d90a      	bls.n	800966c <xTaskCheckForTimeOut+0x68>
 8009656:	1a5b      	subs	r3, r3, r1
 8009658:	4413      	add	r3, r2
 800965a:	4628      	mov	r0, r5
 800965c:	6023      	str	r3, [r4, #0]
 800965e:	f7ff ffc5 	bl	80095ec <vTaskInternalSetTimeOutState>
 8009662:	2400      	movs	r4, #0
 8009664:	f000 fad8 	bl	8009c18 <vPortExitCritical>
 8009668:	4620      	mov	r0, r4
 800966a:	bd70      	pop	{r4, r5, r6, pc}
 800966c:	2300      	movs	r3, #0
 800966e:	6023      	str	r3, [r4, #0]
 8009670:	2401      	movs	r4, #1
 8009672:	e7f7      	b.n	8009664 <xTaskCheckForTimeOut+0x60>
 8009674:	20000c54 	.word	0x20000c54
 8009678:	20000c10 	.word	0x20000c10

0800967c <vTaskMissedYield>:
 800967c:	2201      	movs	r2, #1
 800967e:	4b01      	ldr	r3, [pc, #4]	; (8009684 <vTaskMissedYield+0x8>)
 8009680:	601a      	str	r2, [r3, #0]
 8009682:	4770      	bx	lr
 8009684:	20000c58 	.word	0x20000c58

08009688 <xTaskGetSchedulerState>:
 8009688:	4b05      	ldr	r3, [pc, #20]	; (80096a0 <xTaskGetSchedulerState+0x18>)
 800968a:	681b      	ldr	r3, [r3, #0]
 800968c:	b133      	cbz	r3, 800969c <xTaskGetSchedulerState+0x14>
 800968e:	4b05      	ldr	r3, [pc, #20]	; (80096a4 <xTaskGetSchedulerState+0x1c>)
 8009690:	681b      	ldr	r3, [r3, #0]
 8009692:	2b00      	cmp	r3, #0
 8009694:	bf0c      	ite	eq
 8009696:	2002      	moveq	r0, #2
 8009698:	2000      	movne	r0, #0
 800969a:	4770      	bx	lr
 800969c:	2001      	movs	r0, #1
 800969e:	4770      	bx	lr
 80096a0:	20000c28 	.word	0x20000c28
 80096a4:	20000bd8 	.word	0x20000bd8

080096a8 <prvCheckForValidListAndQueue>:
 80096a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80096aa:	4c11      	ldr	r4, [pc, #68]	; (80096f0 <prvCheckForValidListAndQueue+0x48>)
 80096ac:	f000 fa92 	bl	8009bd4 <vPortEnterCritical>
 80096b0:	6825      	ldr	r5, [r4, #0]
 80096b2:	b9bd      	cbnz	r5, 80096e4 <prvCheckForValidListAndQueue+0x3c>
 80096b4:	4f0f      	ldr	r7, [pc, #60]	; (80096f4 <prvCheckForValidListAndQueue+0x4c>)
 80096b6:	4e10      	ldr	r6, [pc, #64]	; (80096f8 <prvCheckForValidListAndQueue+0x50>)
 80096b8:	4638      	mov	r0, r7
 80096ba:	f7ff f84b 	bl	8008754 <vListInitialise>
 80096be:	4630      	mov	r0, r6
 80096c0:	f7ff f848 	bl	8008754 <vListInitialise>
 80096c4:	4b0d      	ldr	r3, [pc, #52]	; (80096fc <prvCheckForValidListAndQueue+0x54>)
 80096c6:	210c      	movs	r1, #12
 80096c8:	601f      	str	r7, [r3, #0]
 80096ca:	4b0d      	ldr	r3, [pc, #52]	; (8009700 <prvCheckForValidListAndQueue+0x58>)
 80096cc:	200a      	movs	r0, #10
 80096ce:	601e      	str	r6, [r3, #0]
 80096d0:	4a0c      	ldr	r2, [pc, #48]	; (8009704 <prvCheckForValidListAndQueue+0x5c>)
 80096d2:	4b0d      	ldr	r3, [pc, #52]	; (8009708 <prvCheckForValidListAndQueue+0x60>)
 80096d4:	9500      	str	r5, [sp, #0]
 80096d6:	f7ff f941 	bl	800895c <xQueueGenericCreateStatic>
 80096da:	6020      	str	r0, [r4, #0]
 80096dc:	b110      	cbz	r0, 80096e4 <prvCheckForValidListAndQueue+0x3c>
 80096de:	490b      	ldr	r1, [pc, #44]	; (800970c <prvCheckForValidListAndQueue+0x64>)
 80096e0:	f7ff fb3a 	bl	8008d58 <vQueueAddToRegistry>
 80096e4:	b003      	add	sp, #12
 80096e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80096ea:	f000 ba95 	b.w	8009c18 <vPortExitCritical>
 80096ee:	bf00      	nop
 80096f0:	20000d50 	.word	0x20000d50
 80096f4:	20000cdc 	.word	0x20000cdc
 80096f8:	20000cf0 	.word	0x20000cf0
 80096fc:	20000c5c 	.word	0x20000c5c
 8009700:	20000c60 	.word	0x20000c60
 8009704:	20000c64 	.word	0x20000c64
 8009708:	20000d08 	.word	0x20000d08
 800970c:	0800ee7e 	.word	0x0800ee7e

08009710 <prvInsertTimerInActiveList>:
 8009710:	4291      	cmp	r1, r2
 8009712:	b508      	push	{r3, lr}
 8009714:	6041      	str	r1, [r0, #4]
 8009716:	6100      	str	r0, [r0, #16]
 8009718:	d80a      	bhi.n	8009730 <prvInsertTimerInActiveList+0x20>
 800971a:	1ad2      	subs	r2, r2, r3
 800971c:	6983      	ldr	r3, [r0, #24]
 800971e:	429a      	cmp	r2, r3
 8009720:	d20d      	bcs.n	800973e <prvInsertTimerInActiveList+0x2e>
 8009722:	4b08      	ldr	r3, [pc, #32]	; (8009744 <prvInsertTimerInActiveList+0x34>)
 8009724:	1d01      	adds	r1, r0, #4
 8009726:	6818      	ldr	r0, [r3, #0]
 8009728:	f7ff f82e 	bl	8008788 <vListInsert>
 800972c:	2000      	movs	r0, #0
 800972e:	bd08      	pop	{r3, pc}
 8009730:	429a      	cmp	r2, r3
 8009732:	d201      	bcs.n	8009738 <prvInsertTimerInActiveList+0x28>
 8009734:	4299      	cmp	r1, r3
 8009736:	d202      	bcs.n	800973e <prvInsertTimerInActiveList+0x2e>
 8009738:	4b03      	ldr	r3, [pc, #12]	; (8009748 <prvInsertTimerInActiveList+0x38>)
 800973a:	1d01      	adds	r1, r0, #4
 800973c:	e7f3      	b.n	8009726 <prvInsertTimerInActiveList+0x16>
 800973e:	2001      	movs	r0, #1
 8009740:	e7f5      	b.n	800972e <prvInsertTimerInActiveList+0x1e>
 8009742:	bf00      	nop
 8009744:	20000c60 	.word	0x20000c60
 8009748:	20000c5c 	.word	0x20000c5c

0800974c <xTimerCreateTimerTask>:
 800974c:	b510      	push	{r4, lr}
 800974e:	b088      	sub	sp, #32
 8009750:	f7ff ffaa 	bl	80096a8 <prvCheckForValidListAndQueue>
 8009754:	4b12      	ldr	r3, [pc, #72]	; (80097a0 <xTimerCreateTimerTask+0x54>)
 8009756:	681b      	ldr	r3, [r3, #0]
 8009758:	b1b3      	cbz	r3, 8009788 <xTimerCreateTimerTask+0x3c>
 800975a:	2400      	movs	r4, #0
 800975c:	aa07      	add	r2, sp, #28
 800975e:	a906      	add	r1, sp, #24
 8009760:	a805      	add	r0, sp, #20
 8009762:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8009766:	f7f7 fcd5 	bl	8001114 <vApplicationGetTimerTaskMemory>
 800976a:	9b05      	ldr	r3, [sp, #20]
 800976c:	9a07      	ldr	r2, [sp, #28]
 800976e:	9302      	str	r3, [sp, #8]
 8009770:	9b06      	ldr	r3, [sp, #24]
 8009772:	490c      	ldr	r1, [pc, #48]	; (80097a4 <xTimerCreateTimerTask+0x58>)
 8009774:	9301      	str	r3, [sp, #4]
 8009776:	2302      	movs	r3, #2
 8009778:	480b      	ldr	r0, [pc, #44]	; (80097a8 <xTimerCreateTimerTask+0x5c>)
 800977a:	9300      	str	r3, [sp, #0]
 800977c:	4623      	mov	r3, r4
 800977e:	f7ff fc9d 	bl	80090bc <xTaskCreateStatic>
 8009782:	4b0a      	ldr	r3, [pc, #40]	; (80097ac <xTimerCreateTimerTask+0x60>)
 8009784:	6018      	str	r0, [r3, #0]
 8009786:	b940      	cbnz	r0, 800979a <xTimerCreateTimerTask+0x4e>
 8009788:	f04f 0350 	mov.w	r3, #80	; 0x50
 800978c:	f383 8811 	msr	BASEPRI, r3
 8009790:	f3bf 8f6f 	isb	sy
 8009794:	f3bf 8f4f 	dsb	sy
 8009798:	e7fe      	b.n	8009798 <xTimerCreateTimerTask+0x4c>
 800979a:	2001      	movs	r0, #1
 800979c:	b008      	add	sp, #32
 800979e:	bd10      	pop	{r4, pc}
 80097a0:	20000d50 	.word	0x20000d50
 80097a4:	0800ee83 	.word	0x0800ee83
 80097a8:	08009949 	.word	0x08009949
 80097ac:	20000d54 	.word	0x20000d54

080097b0 <xTimerCreate>:
 80097b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097b4:	4680      	mov	r8, r0
 80097b6:	202c      	movs	r0, #44	; 0x2c
 80097b8:	460d      	mov	r5, r1
 80097ba:	4617      	mov	r7, r2
 80097bc:	461e      	mov	r6, r3
 80097be:	f000 fb3b 	bl	8009e38 <pvPortMalloc>
 80097c2:	4604      	mov	r4, r0
 80097c4:	b1c0      	cbz	r0, 80097f8 <xTimerCreate+0x48>
 80097c6:	b945      	cbnz	r5, 80097da <xTimerCreate+0x2a>
 80097c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097cc:	f383 8811 	msr	BASEPRI, r3
 80097d0:	f3bf 8f6f 	isb	sy
 80097d4:	f3bf 8f4f 	dsb	sy
 80097d8:	e7fe      	b.n	80097d8 <xTimerCreate+0x28>
 80097da:	f7ff ff65 	bl	80096a8 <prvCheckForValidListAndQueue>
 80097de:	9b06      	ldr	r3, [sp, #24]
 80097e0:	e9c4 5706 	strd	r5, r7, [r4, #24]
 80097e4:	6263      	str	r3, [r4, #36]	; 0x24
 80097e6:	f8c4 8000 	str.w	r8, [r4]
 80097ea:	6226      	str	r6, [r4, #32]
 80097ec:	1d20      	adds	r0, r4, #4
 80097ee:	f7fe ffbc 	bl	800876a <vListInitialiseItem>
 80097f2:	2300      	movs	r3, #0
 80097f4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80097f8:	4620      	mov	r0, r4
 80097fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080097fe <xTimerCreateStatic>:
 80097fe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009802:	461e      	mov	r6, r3
 8009804:	232c      	movs	r3, #44	; 0x2c
 8009806:	9301      	str	r3, [sp, #4]
 8009808:	9b01      	ldr	r3, [sp, #4]
 800980a:	4680      	mov	r8, r0
 800980c:	2b2c      	cmp	r3, #44	; 0x2c
 800980e:	460d      	mov	r5, r1
 8009810:	4617      	mov	r7, r2
 8009812:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8009814:	d008      	beq.n	8009828 <xTimerCreateStatic+0x2a>
 8009816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800981a:	f383 8811 	msr	BASEPRI, r3
 800981e:	f3bf 8f6f 	isb	sy
 8009822:	f3bf 8f4f 	dsb	sy
 8009826:	e7fe      	b.n	8009826 <xTimerCreateStatic+0x28>
 8009828:	b944      	cbnz	r4, 800983c <xTimerCreateStatic+0x3e>
 800982a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800982e:	f383 8811 	msr	BASEPRI, r3
 8009832:	f3bf 8f6f 	isb	sy
 8009836:	f3bf 8f4f 	dsb	sy
 800983a:	e7fe      	b.n	800983a <xTimerCreateStatic+0x3c>
 800983c:	b941      	cbnz	r1, 8009850 <xTimerCreateStatic+0x52>
 800983e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009842:	f383 8811 	msr	BASEPRI, r3
 8009846:	f3bf 8f6f 	isb	sy
 800984a:	f3bf 8f4f 	dsb	sy
 800984e:	e7fe      	b.n	800984e <xTimerCreateStatic+0x50>
 8009850:	f7ff ff2a 	bl	80096a8 <prvCheckForValidListAndQueue>
 8009854:	9b08      	ldr	r3, [sp, #32]
 8009856:	1d20      	adds	r0, r4, #4
 8009858:	6263      	str	r3, [r4, #36]	; 0x24
 800985a:	e9c4 5706 	strd	r5, r7, [r4, #24]
 800985e:	f8c4 8000 	str.w	r8, [r4]
 8009862:	6226      	str	r6, [r4, #32]
 8009864:	f7fe ff81 	bl	800876a <vListInitialiseItem>
 8009868:	2301      	movs	r3, #1
 800986a:	4620      	mov	r0, r4
 800986c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009870:	b002      	add	sp, #8
 8009872:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08009878 <xTimerGenericCommand>:
 8009878:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800987a:	4616      	mov	r6, r2
 800987c:	4604      	mov	r4, r0
 800987e:	461a      	mov	r2, r3
 8009880:	b940      	cbnz	r0, 8009894 <xTimerGenericCommand+0x1c>
 8009882:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009886:	f383 8811 	msr	BASEPRI, r3
 800988a:	f3bf 8f6f 	isb	sy
 800988e:	f3bf 8f4f 	dsb	sy
 8009892:	e7fe      	b.n	8009892 <xTimerGenericCommand+0x1a>
 8009894:	4d0c      	ldr	r5, [pc, #48]	; (80098c8 <xTimerGenericCommand+0x50>)
 8009896:	6828      	ldr	r0, [r5, #0]
 8009898:	b178      	cbz	r0, 80098ba <xTimerGenericCommand+0x42>
 800989a:	2905      	cmp	r1, #5
 800989c:	e9cd 1601 	strd	r1, r6, [sp, #4]
 80098a0:	9403      	str	r4, [sp, #12]
 80098a2:	dc0c      	bgt.n	80098be <xTimerGenericCommand+0x46>
 80098a4:	f7ff fef0 	bl	8009688 <xTaskGetSchedulerState>
 80098a8:	2300      	movs	r3, #0
 80098aa:	2802      	cmp	r0, #2
 80098ac:	bf14      	ite	ne
 80098ae:	461a      	movne	r2, r3
 80098b0:	9a08      	ldreq	r2, [sp, #32]
 80098b2:	6828      	ldr	r0, [r5, #0]
 80098b4:	a901      	add	r1, sp, #4
 80098b6:	f7ff f89b 	bl	80089f0 <xQueueGenericSend>
 80098ba:	b004      	add	sp, #16
 80098bc:	bd70      	pop	{r4, r5, r6, pc}
 80098be:	2300      	movs	r3, #0
 80098c0:	a901      	add	r1, sp, #4
 80098c2:	f7ff f947 	bl	8008b54 <xQueueGenericSendFromISR>
 80098c6:	e7f8      	b.n	80098ba <xTimerGenericCommand+0x42>
 80098c8:	20000d50 	.word	0x20000d50

080098cc <prvSwitchTimerLists>:
 80098cc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80098d0:	f04f 0800 	mov.w	r8, #0
 80098d4:	4d1a      	ldr	r5, [pc, #104]	; (8009940 <prvSwitchTimerLists+0x74>)
 80098d6:	682b      	ldr	r3, [r5, #0]
 80098d8:	681a      	ldr	r2, [r3, #0]
 80098da:	b932      	cbnz	r2, 80098ea <prvSwitchTimerLists+0x1e>
 80098dc:	4a19      	ldr	r2, [pc, #100]	; (8009944 <prvSwitchTimerLists+0x78>)
 80098de:	6811      	ldr	r1, [r2, #0]
 80098e0:	6013      	str	r3, [r2, #0]
 80098e2:	6029      	str	r1, [r5, #0]
 80098e4:	b002      	add	sp, #8
 80098e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80098ea:	68db      	ldr	r3, [r3, #12]
 80098ec:	68dc      	ldr	r4, [r3, #12]
 80098ee:	681e      	ldr	r6, [r3, #0]
 80098f0:	1d27      	adds	r7, r4, #4
 80098f2:	4638      	mov	r0, r7
 80098f4:	f7fe ff5f 	bl	80087b6 <uxListRemove>
 80098f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80098fa:	4620      	mov	r0, r4
 80098fc:	4798      	blx	r3
 80098fe:	69e3      	ldr	r3, [r4, #28]
 8009900:	2b01      	cmp	r3, #1
 8009902:	d1e8      	bne.n	80098d6 <prvSwitchTimerLists+0xa>
 8009904:	69a3      	ldr	r3, [r4, #24]
 8009906:	4433      	add	r3, r6
 8009908:	429e      	cmp	r6, r3
 800990a:	d206      	bcs.n	800991a <prvSwitchTimerLists+0x4e>
 800990c:	4639      	mov	r1, r7
 800990e:	6828      	ldr	r0, [r5, #0]
 8009910:	6063      	str	r3, [r4, #4]
 8009912:	6124      	str	r4, [r4, #16]
 8009914:	f7fe ff38 	bl	8008788 <vListInsert>
 8009918:	e7dd      	b.n	80098d6 <prvSwitchTimerLists+0xa>
 800991a:	2300      	movs	r3, #0
 800991c:	4632      	mov	r2, r6
 800991e:	4619      	mov	r1, r3
 8009920:	4620      	mov	r0, r4
 8009922:	f8cd 8000 	str.w	r8, [sp]
 8009926:	f7ff ffa7 	bl	8009878 <xTimerGenericCommand>
 800992a:	2800      	cmp	r0, #0
 800992c:	d1d3      	bne.n	80098d6 <prvSwitchTimerLists+0xa>
 800992e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009932:	f383 8811 	msr	BASEPRI, r3
 8009936:	f3bf 8f6f 	isb	sy
 800993a:	f3bf 8f4f 	dsb	sy
 800993e:	e7fe      	b.n	800993e <prvSwitchTimerLists+0x72>
 8009940:	20000c5c 	.word	0x20000c5c
 8009944:	20000c60 	.word	0x20000c60

08009948 <prvTimerTask>:
 8009948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800994c:	4e72      	ldr	r6, [pc, #456]	; (8009b18 <prvTimerTask+0x1d0>)
 800994e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8009b28 <prvTimerTask+0x1e0>
 8009952:	46b0      	mov	r8, r6
 8009954:	b087      	sub	sp, #28
 8009956:	6833      	ldr	r3, [r6, #0]
 8009958:	f8d3 b000 	ldr.w	fp, [r3]
 800995c:	f1bb 0f00 	cmp.w	fp, #0
 8009960:	d04a      	beq.n	80099f8 <prvTimerTask+0xb0>
 8009962:	68db      	ldr	r3, [r3, #12]
 8009964:	f8d3 a000 	ldr.w	sl, [r3]
 8009968:	f7ff fc50 	bl	800920c <vTaskSuspendAll>
 800996c:	f7ff fc56 	bl	800921c <xTaskGetTickCount>
 8009970:	4d6a      	ldr	r5, [pc, #424]	; (8009b1c <prvTimerTask+0x1d4>)
 8009972:	4604      	mov	r4, r0
 8009974:	682b      	ldr	r3, [r5, #0]
 8009976:	462f      	mov	r7, r5
 8009978:	4298      	cmp	r0, r3
 800997a:	d23f      	bcs.n	80099fc <prvTimerTask+0xb4>
 800997c:	f7ff ffa6 	bl	80098cc <prvSwitchTimerLists>
 8009980:	602c      	str	r4, [r5, #0]
 8009982:	f7ff fce3 	bl	800934c <xTaskResumeAll>
 8009986:	f04f 0b00 	mov.w	fp, #0
 800998a:	f8df a198 	ldr.w	sl, [pc, #408]	; 8009b24 <prvTimerTask+0x1dc>
 800998e:	2200      	movs	r2, #0
 8009990:	f8da 0000 	ldr.w	r0, [sl]
 8009994:	a903      	add	r1, sp, #12
 8009996:	f7ff f93f 	bl	8008c18 <xQueueReceive>
 800999a:	2800      	cmp	r0, #0
 800999c:	d0db      	beq.n	8009956 <prvTimerTask+0xe>
 800999e:	9b03      	ldr	r3, [sp, #12]
 80099a0:	2b00      	cmp	r3, #0
 80099a2:	dbf4      	blt.n	800998e <prvTimerTask+0x46>
 80099a4:	9c05      	ldr	r4, [sp, #20]
 80099a6:	6963      	ldr	r3, [r4, #20]
 80099a8:	b113      	cbz	r3, 80099b0 <prvTimerTask+0x68>
 80099aa:	1d20      	adds	r0, r4, #4
 80099ac:	f7fe ff03 	bl	80087b6 <uxListRemove>
 80099b0:	f7ff fc34 	bl	800921c <xTaskGetTickCount>
 80099b4:	683b      	ldr	r3, [r7, #0]
 80099b6:	4605      	mov	r5, r0
 80099b8:	4298      	cmp	r0, r3
 80099ba:	d201      	bcs.n	80099c0 <prvTimerTask+0x78>
 80099bc:	f7ff ff86 	bl	80098cc <prvSwitchTimerLists>
 80099c0:	9b03      	ldr	r3, [sp, #12]
 80099c2:	603d      	str	r5, [r7, #0]
 80099c4:	2b09      	cmp	r3, #9
 80099c6:	d8e2      	bhi.n	800998e <prvTimerTask+0x46>
 80099c8:	a201      	add	r2, pc, #4	; (adr r2, 80099d0 <prvTimerTask+0x88>)
 80099ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80099ce:	bf00      	nop
 80099d0:	08009a91 	.word	0x08009a91
 80099d4:	08009a91 	.word	0x08009a91
 80099d8:	08009a91 	.word	0x08009a91
 80099dc:	0800998f 	.word	0x0800998f
 80099e0:	08009adf 	.word	0x08009adf
 80099e4:	08009b05 	.word	0x08009b05
 80099e8:	08009a91 	.word	0x08009a91
 80099ec:	08009a91 	.word	0x08009a91
 80099f0:	0800998f 	.word	0x0800998f
 80099f4:	08009adf 	.word	0x08009adf
 80099f8:	46da      	mov	sl, fp
 80099fa:	e7b5      	b.n	8009968 <prvTimerTask+0x20>
 80099fc:	6028      	str	r0, [r5, #0]
 80099fe:	f1bb 0f00 	cmp.w	fp, #0
 8009a02:	d02a      	beq.n	8009a5a <prvTimerTask+0x112>
 8009a04:	4582      	cmp	sl, r0
 8009a06:	d841      	bhi.n	8009a8c <prvTimerTask+0x144>
 8009a08:	f7ff fca0 	bl	800934c <xTaskResumeAll>
 8009a0c:	f8d8 3000 	ldr.w	r3, [r8]
 8009a10:	68db      	ldr	r3, [r3, #12]
 8009a12:	68dd      	ldr	r5, [r3, #12]
 8009a14:	1d28      	adds	r0, r5, #4
 8009a16:	f7fe fece 	bl	80087b6 <uxListRemove>
 8009a1a:	69eb      	ldr	r3, [r5, #28]
 8009a1c:	2b01      	cmp	r3, #1
 8009a1e:	d118      	bne.n	8009a52 <prvTimerTask+0x10a>
 8009a20:	69a9      	ldr	r1, [r5, #24]
 8009a22:	4653      	mov	r3, sl
 8009a24:	4622      	mov	r2, r4
 8009a26:	4628      	mov	r0, r5
 8009a28:	4451      	add	r1, sl
 8009a2a:	f7ff fe71 	bl	8009710 <prvInsertTimerInActiveList>
 8009a2e:	b180      	cbz	r0, 8009a52 <prvTimerTask+0x10a>
 8009a30:	2300      	movs	r3, #0
 8009a32:	4652      	mov	r2, sl
 8009a34:	4619      	mov	r1, r3
 8009a36:	4628      	mov	r0, r5
 8009a38:	9300      	str	r3, [sp, #0]
 8009a3a:	f7ff ff1d 	bl	8009878 <xTimerGenericCommand>
 8009a3e:	b940      	cbnz	r0, 8009a52 <prvTimerTask+0x10a>
 8009a40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a44:	f383 8811 	msr	BASEPRI, r3
 8009a48:	f3bf 8f6f 	isb	sy
 8009a4c:	f3bf 8f4f 	dsb	sy
 8009a50:	e7fe      	b.n	8009a50 <prvTimerTask+0x108>
 8009a52:	4628      	mov	r0, r5
 8009a54:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8009a56:	4798      	blx	r3
 8009a58:	e795      	b.n	8009986 <prvTimerTask+0x3e>
 8009a5a:	4b31      	ldr	r3, [pc, #196]	; (8009b20 <prvTimerTask+0x1d8>)
 8009a5c:	681b      	ldr	r3, [r3, #0]
 8009a5e:	681a      	ldr	r2, [r3, #0]
 8009a60:	fab2 f282 	clz	r2, r2
 8009a64:	0952      	lsrs	r2, r2, #5
 8009a66:	4b2f      	ldr	r3, [pc, #188]	; (8009b24 <prvTimerTask+0x1dc>)
 8009a68:	ebaa 0104 	sub.w	r1, sl, r4
 8009a6c:	6818      	ldr	r0, [r3, #0]
 8009a6e:	f7ff f985 	bl	8008d7c <vQueueWaitForMessageRestricted>
 8009a72:	f7ff fc6b 	bl	800934c <xTaskResumeAll>
 8009a76:	2800      	cmp	r0, #0
 8009a78:	d185      	bne.n	8009986 <prvTimerTask+0x3e>
 8009a7a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009a7e:	f8c9 3000 	str.w	r3, [r9]
 8009a82:	f3bf 8f4f 	dsb	sy
 8009a86:	f3bf 8f6f 	isb	sy
 8009a8a:	e77c      	b.n	8009986 <prvTimerTask+0x3e>
 8009a8c:	2200      	movs	r2, #0
 8009a8e:	e7ea      	b.n	8009a66 <prvTimerTask+0x11e>
 8009a90:	69a1      	ldr	r1, [r4, #24]
 8009a92:	9b04      	ldr	r3, [sp, #16]
 8009a94:	462a      	mov	r2, r5
 8009a96:	4620      	mov	r0, r4
 8009a98:	4419      	add	r1, r3
 8009a9a:	f7ff fe39 	bl	8009710 <prvInsertTimerInActiveList>
 8009a9e:	2800      	cmp	r0, #0
 8009aa0:	f43f af75 	beq.w	800998e <prvTimerTask+0x46>
 8009aa4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009aa6:	4620      	mov	r0, r4
 8009aa8:	4798      	blx	r3
 8009aaa:	69e3      	ldr	r3, [r4, #28]
 8009aac:	2b01      	cmp	r3, #1
 8009aae:	f47f af6e 	bne.w	800998e <prvTimerTask+0x46>
 8009ab2:	2300      	movs	r3, #0
 8009ab4:	69a2      	ldr	r2, [r4, #24]
 8009ab6:	9904      	ldr	r1, [sp, #16]
 8009ab8:	4620      	mov	r0, r4
 8009aba:	440a      	add	r2, r1
 8009abc:	f8cd b000 	str.w	fp, [sp]
 8009ac0:	4619      	mov	r1, r3
 8009ac2:	f7ff fed9 	bl	8009878 <xTimerGenericCommand>
 8009ac6:	2800      	cmp	r0, #0
 8009ac8:	f47f af61 	bne.w	800998e <prvTimerTask+0x46>
 8009acc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ad0:	f383 8811 	msr	BASEPRI, r3
 8009ad4:	f3bf 8f6f 	isb	sy
 8009ad8:	f3bf 8f4f 	dsb	sy
 8009adc:	e7fe      	b.n	8009adc <prvTimerTask+0x194>
 8009ade:	9904      	ldr	r1, [sp, #16]
 8009ae0:	61a1      	str	r1, [r4, #24]
 8009ae2:	b941      	cbnz	r1, 8009af6 <prvTimerTask+0x1ae>
 8009ae4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ae8:	f383 8811 	msr	BASEPRI, r3
 8009aec:	f3bf 8f6f 	isb	sy
 8009af0:	f3bf 8f4f 	dsb	sy
 8009af4:	e7fe      	b.n	8009af4 <prvTimerTask+0x1ac>
 8009af6:	462b      	mov	r3, r5
 8009af8:	462a      	mov	r2, r5
 8009afa:	4620      	mov	r0, r4
 8009afc:	4429      	add	r1, r5
 8009afe:	f7ff fe07 	bl	8009710 <prvInsertTimerInActiveList>
 8009b02:	e744      	b.n	800998e <prvTimerTask+0x46>
 8009b04:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009b08:	2b00      	cmp	r3, #0
 8009b0a:	f47f af40 	bne.w	800998e <prvTimerTask+0x46>
 8009b0e:	4620      	mov	r0, r4
 8009b10:	f000 fa1c 	bl	8009f4c <vPortFree>
 8009b14:	e73b      	b.n	800998e <prvTimerTask+0x46>
 8009b16:	bf00      	nop
 8009b18:	20000c5c 	.word	0x20000c5c
 8009b1c:	20000d04 	.word	0x20000d04
 8009b20:	20000c60 	.word	0x20000c60
 8009b24:	20000d50 	.word	0x20000d50
 8009b28:	e000ed04 	.word	0xe000ed04

08009b2c <prvPortStartFirstTask>:
 8009b2c:	4806      	ldr	r0, [pc, #24]	; (8009b48 <prvPortStartFirstTask+0x1c>)
 8009b2e:	6800      	ldr	r0, [r0, #0]
 8009b30:	6800      	ldr	r0, [r0, #0]
 8009b32:	f380 8808 	msr	MSP, r0
 8009b36:	b662      	cpsie	i
 8009b38:	b661      	cpsie	f
 8009b3a:	f3bf 8f4f 	dsb	sy
 8009b3e:	f3bf 8f6f 	isb	sy
 8009b42:	df00      	svc	0
 8009b44:	bf00      	nop
 8009b46:	0000      	.short	0x0000
 8009b48:	e000ed08 	.word	0xe000ed08

08009b4c <prvTaskExitError>:
 8009b4c:	2300      	movs	r3, #0
 8009b4e:	b082      	sub	sp, #8
 8009b50:	9301      	str	r3, [sp, #4]
 8009b52:	4b0d      	ldr	r3, [pc, #52]	; (8009b88 <prvTaskExitError+0x3c>)
 8009b54:	681b      	ldr	r3, [r3, #0]
 8009b56:	3301      	adds	r3, #1
 8009b58:	d008      	beq.n	8009b6c <prvTaskExitError+0x20>
 8009b5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b5e:	f383 8811 	msr	BASEPRI, r3
 8009b62:	f3bf 8f6f 	isb	sy
 8009b66:	f3bf 8f4f 	dsb	sy
 8009b6a:	e7fe      	b.n	8009b6a <prvTaskExitError+0x1e>
 8009b6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b70:	f383 8811 	msr	BASEPRI, r3
 8009b74:	f3bf 8f6f 	isb	sy
 8009b78:	f3bf 8f4f 	dsb	sy
 8009b7c:	9b01      	ldr	r3, [sp, #4]
 8009b7e:	2b00      	cmp	r3, #0
 8009b80:	d0fc      	beq.n	8009b7c <prvTaskExitError+0x30>
 8009b82:	b002      	add	sp, #8
 8009b84:	4770      	bx	lr
 8009b86:	bf00      	nop
 8009b88:	2000011c 	.word	0x2000011c

08009b8c <pxPortInitialiseStack>:
 8009b8c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009b90:	f840 3c04 	str.w	r3, [r0, #-4]
 8009b94:	4b05      	ldr	r3, [pc, #20]	; (8009bac <pxPortInitialiseStack+0x20>)
 8009b96:	f021 0101 	bic.w	r1, r1, #1
 8009b9a:	f840 1c08 	str.w	r1, [r0, #-8]
 8009b9e:	f840 3c0c 	str.w	r3, [r0, #-12]
 8009ba2:	f840 2c20 	str.w	r2, [r0, #-32]
 8009ba6:	3840      	subs	r0, #64	; 0x40
 8009ba8:	4770      	bx	lr
 8009baa:	bf00      	nop
 8009bac:	08009b4d 	.word	0x08009b4d

08009bb0 <SVC_Handler>:
 8009bb0:	4b07      	ldr	r3, [pc, #28]	; (8009bd0 <pxCurrentTCBConst2>)
 8009bb2:	6819      	ldr	r1, [r3, #0]
 8009bb4:	6808      	ldr	r0, [r1, #0]
 8009bb6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8009bba:	f380 8809 	msr	PSP, r0
 8009bbe:	f3bf 8f6f 	isb	sy
 8009bc2:	f04f 0000 	mov.w	r0, #0
 8009bc6:	f380 8811 	msr	BASEPRI, r0
 8009bca:	f04e 0e0d 	orr.w	lr, lr, #13
 8009bce:	4770      	bx	lr

08009bd0 <pxCurrentTCBConst2>:
 8009bd0:	20000b34 	.word	0x20000b34

08009bd4 <vPortEnterCritical>:
 8009bd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bd8:	f383 8811 	msr	BASEPRI, r3
 8009bdc:	f3bf 8f6f 	isb	sy
 8009be0:	f3bf 8f4f 	dsb	sy
 8009be4:	4a0a      	ldr	r2, [pc, #40]	; (8009c10 <vPortEnterCritical+0x3c>)
 8009be6:	6813      	ldr	r3, [r2, #0]
 8009be8:	3301      	adds	r3, #1
 8009bea:	2b01      	cmp	r3, #1
 8009bec:	6013      	str	r3, [r2, #0]
 8009bee:	d10d      	bne.n	8009c0c <vPortEnterCritical+0x38>
 8009bf0:	4b08      	ldr	r3, [pc, #32]	; (8009c14 <vPortEnterCritical+0x40>)
 8009bf2:	681b      	ldr	r3, [r3, #0]
 8009bf4:	f013 0fff 	tst.w	r3, #255	; 0xff
 8009bf8:	d008      	beq.n	8009c0c <vPortEnterCritical+0x38>
 8009bfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bfe:	f383 8811 	msr	BASEPRI, r3
 8009c02:	f3bf 8f6f 	isb	sy
 8009c06:	f3bf 8f4f 	dsb	sy
 8009c0a:	e7fe      	b.n	8009c0a <vPortEnterCritical+0x36>
 8009c0c:	4770      	bx	lr
 8009c0e:	bf00      	nop
 8009c10:	2000011c 	.word	0x2000011c
 8009c14:	e000ed04 	.word	0xe000ed04

08009c18 <vPortExitCritical>:
 8009c18:	4a08      	ldr	r2, [pc, #32]	; (8009c3c <vPortExitCritical+0x24>)
 8009c1a:	6813      	ldr	r3, [r2, #0]
 8009c1c:	b943      	cbnz	r3, 8009c30 <vPortExitCritical+0x18>
 8009c1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c22:	f383 8811 	msr	BASEPRI, r3
 8009c26:	f3bf 8f6f 	isb	sy
 8009c2a:	f3bf 8f4f 	dsb	sy
 8009c2e:	e7fe      	b.n	8009c2e <vPortExitCritical+0x16>
 8009c30:	3b01      	subs	r3, #1
 8009c32:	6013      	str	r3, [r2, #0]
 8009c34:	b90b      	cbnz	r3, 8009c3a <vPortExitCritical+0x22>
 8009c36:	f383 8811 	msr	BASEPRI, r3
 8009c3a:	4770      	bx	lr
 8009c3c:	2000011c 	.word	0x2000011c

08009c40 <PendSV_Handler>:
 8009c40:	f3ef 8009 	mrs	r0, PSP
 8009c44:	f3bf 8f6f 	isb	sy
 8009c48:	4b0d      	ldr	r3, [pc, #52]	; (8009c80 <pxCurrentTCBConst>)
 8009c4a:	681a      	ldr	r2, [r3, #0]
 8009c4c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8009c50:	6010      	str	r0, [r2, #0]
 8009c52:	e92d 4008 	stmdb	sp!, {r3, lr}
 8009c56:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009c5a:	f380 8811 	msr	BASEPRI, r0
 8009c5e:	f7ff fc0f 	bl	8009480 <vTaskSwitchContext>
 8009c62:	f04f 0000 	mov.w	r0, #0
 8009c66:	f380 8811 	msr	BASEPRI, r0
 8009c6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009c6e:	6819      	ldr	r1, [r3, #0]
 8009c70:	6808      	ldr	r0, [r1, #0]
 8009c72:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8009c76:	f380 8809 	msr	PSP, r0
 8009c7a:	f3bf 8f6f 	isb	sy
 8009c7e:	4770      	bx	lr

08009c80 <pxCurrentTCBConst>:
 8009c80:	20000b34 	.word	0x20000b34

08009c84 <SysTick_Handler>:
 8009c84:	b508      	push	{r3, lr}
 8009c86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c8a:	f383 8811 	msr	BASEPRI, r3
 8009c8e:	f3bf 8f6f 	isb	sy
 8009c92:	f3bf 8f4f 	dsb	sy
 8009c96:	f7ff fac7 	bl	8009228 <xTaskIncrementTick>
 8009c9a:	b118      	cbz	r0, 8009ca4 <SysTick_Handler+0x20>
 8009c9c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ca0:	4b02      	ldr	r3, [pc, #8]	; (8009cac <SysTick_Handler+0x28>)
 8009ca2:	601a      	str	r2, [r3, #0]
 8009ca4:	2300      	movs	r3, #0
 8009ca6:	f383 8811 	msr	BASEPRI, r3
 8009caa:	bd08      	pop	{r3, pc}
 8009cac:	e000ed04 	.word	0xe000ed04

08009cb0 <vPortSetupTimerInterrupt>:
 8009cb0:	2300      	movs	r3, #0
 8009cb2:	4a08      	ldr	r2, [pc, #32]	; (8009cd4 <vPortSetupTimerInterrupt+0x24>)
 8009cb4:	4908      	ldr	r1, [pc, #32]	; (8009cd8 <vPortSetupTimerInterrupt+0x28>)
 8009cb6:	6013      	str	r3, [r2, #0]
 8009cb8:	600b      	str	r3, [r1, #0]
 8009cba:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009cbe:	4b07      	ldr	r3, [pc, #28]	; (8009cdc <vPortSetupTimerInterrupt+0x2c>)
 8009cc0:	681b      	ldr	r3, [r3, #0]
 8009cc2:	fbb3 f3f1 	udiv	r3, r3, r1
 8009cc6:	4906      	ldr	r1, [pc, #24]	; (8009ce0 <vPortSetupTimerInterrupt+0x30>)
 8009cc8:	3b01      	subs	r3, #1
 8009cca:	600b      	str	r3, [r1, #0]
 8009ccc:	2307      	movs	r3, #7
 8009cce:	6013      	str	r3, [r2, #0]
 8009cd0:	4770      	bx	lr
 8009cd2:	bf00      	nop
 8009cd4:	e000e010 	.word	0xe000e010
 8009cd8:	e000e018 	.word	0xe000e018
 8009cdc:	20000000 	.word	0x20000000
 8009ce0:	e000e014 	.word	0xe000e014

08009ce4 <xPortStartScheduler>:
 8009ce4:	b513      	push	{r0, r1, r4, lr}
 8009ce6:	4b26      	ldr	r3, [pc, #152]	; (8009d80 <xPortStartScheduler+0x9c>)
 8009ce8:	2100      	movs	r1, #0
 8009cea:	781a      	ldrb	r2, [r3, #0]
 8009cec:	b2d2      	uxtb	r2, r2
 8009cee:	9201      	str	r2, [sp, #4]
 8009cf0:	22ff      	movs	r2, #255	; 0xff
 8009cf2:	701a      	strb	r2, [r3, #0]
 8009cf4:	781b      	ldrb	r3, [r3, #0]
 8009cf6:	4a23      	ldr	r2, [pc, #140]	; (8009d84 <xPortStartScheduler+0xa0>)
 8009cf8:	b2db      	uxtb	r3, r3
 8009cfa:	f88d 3003 	strb.w	r3, [sp, #3]
 8009cfe:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009d02:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8009d06:	7013      	strb	r3, [r2, #0]
 8009d08:	2307      	movs	r3, #7
 8009d0a:	4a1f      	ldr	r2, [pc, #124]	; (8009d88 <xPortStartScheduler+0xa4>)
 8009d0c:	6013      	str	r3, [r2, #0]
 8009d0e:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8009d12:	1e5c      	subs	r4, r3, #1
 8009d14:	0600      	lsls	r0, r0, #24
 8009d16:	d40c      	bmi.n	8009d32 <xPortStartScheduler+0x4e>
 8009d18:	b111      	cbz	r1, 8009d20 <xPortStartScheduler+0x3c>
 8009d1a:	2b03      	cmp	r3, #3
 8009d1c:	6013      	str	r3, [r2, #0]
 8009d1e:	d011      	beq.n	8009d44 <xPortStartScheduler+0x60>
 8009d20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d24:	f383 8811 	msr	BASEPRI, r3
 8009d28:	f3bf 8f6f 	isb	sy
 8009d2c:	f3bf 8f4f 	dsb	sy
 8009d30:	e7fe      	b.n	8009d30 <xPortStartScheduler+0x4c>
 8009d32:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009d36:	2101      	movs	r1, #1
 8009d38:	005b      	lsls	r3, r3, #1
 8009d3a:	b2db      	uxtb	r3, r3
 8009d3c:	f88d 3003 	strb.w	r3, [sp, #3]
 8009d40:	4623      	mov	r3, r4
 8009d42:	e7e4      	b.n	8009d0e <xPortStartScheduler+0x2a>
 8009d44:	f44f 7340 	mov.w	r3, #768	; 0x300
 8009d48:	2400      	movs	r4, #0
 8009d4a:	6013      	str	r3, [r2, #0]
 8009d4c:	9b01      	ldr	r3, [sp, #4]
 8009d4e:	4a0c      	ldr	r2, [pc, #48]	; (8009d80 <xPortStartScheduler+0x9c>)
 8009d50:	b2db      	uxtb	r3, r3
 8009d52:	7013      	strb	r3, [r2, #0]
 8009d54:	4b0d      	ldr	r3, [pc, #52]	; (8009d8c <xPortStartScheduler+0xa8>)
 8009d56:	681a      	ldr	r2, [r3, #0]
 8009d58:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009d5c:	601a      	str	r2, [r3, #0]
 8009d5e:	681a      	ldr	r2, [r3, #0]
 8009d60:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 8009d64:	601a      	str	r2, [r3, #0]
 8009d66:	f7ff ffa3 	bl	8009cb0 <vPortSetupTimerInterrupt>
 8009d6a:	4b09      	ldr	r3, [pc, #36]	; (8009d90 <xPortStartScheduler+0xac>)
 8009d6c:	601c      	str	r4, [r3, #0]
 8009d6e:	f7ff fedd 	bl	8009b2c <prvPortStartFirstTask>
 8009d72:	f7ff fb85 	bl	8009480 <vTaskSwitchContext>
 8009d76:	f7ff fee9 	bl	8009b4c <prvTaskExitError>
 8009d7a:	4620      	mov	r0, r4
 8009d7c:	b002      	add	sp, #8
 8009d7e:	bd10      	pop	{r4, pc}
 8009d80:	e000e400 	.word	0xe000e400
 8009d84:	20000d58 	.word	0x20000d58
 8009d88:	20000d5c 	.word	0x20000d5c
 8009d8c:	e000ed20 	.word	0xe000ed20
 8009d90:	2000011c 	.word	0x2000011c

08009d94 <vPortValidateInterruptPriority>:
 8009d94:	f3ef 8305 	mrs	r3, IPSR
 8009d98:	2b0f      	cmp	r3, #15
 8009d9a:	d90e      	bls.n	8009dba <vPortValidateInterruptPriority+0x26>
 8009d9c:	4a10      	ldr	r2, [pc, #64]	; (8009de0 <vPortValidateInterruptPriority+0x4c>)
 8009d9e:	5c9b      	ldrb	r3, [r3, r2]
 8009da0:	4a10      	ldr	r2, [pc, #64]	; (8009de4 <vPortValidateInterruptPriority+0x50>)
 8009da2:	7812      	ldrb	r2, [r2, #0]
 8009da4:	429a      	cmp	r2, r3
 8009da6:	d908      	bls.n	8009dba <vPortValidateInterruptPriority+0x26>
 8009da8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dac:	f383 8811 	msr	BASEPRI, r3
 8009db0:	f3bf 8f6f 	isb	sy
 8009db4:	f3bf 8f4f 	dsb	sy
 8009db8:	e7fe      	b.n	8009db8 <vPortValidateInterruptPriority+0x24>
 8009dba:	4b0b      	ldr	r3, [pc, #44]	; (8009de8 <vPortValidateInterruptPriority+0x54>)
 8009dbc:	4a0b      	ldr	r2, [pc, #44]	; (8009dec <vPortValidateInterruptPriority+0x58>)
 8009dbe:	681b      	ldr	r3, [r3, #0]
 8009dc0:	6812      	ldr	r2, [r2, #0]
 8009dc2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8009dc6:	4293      	cmp	r3, r2
 8009dc8:	d908      	bls.n	8009ddc <vPortValidateInterruptPriority+0x48>
 8009dca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dce:	f383 8811 	msr	BASEPRI, r3
 8009dd2:	f3bf 8f6f 	isb	sy
 8009dd6:	f3bf 8f4f 	dsb	sy
 8009dda:	e7fe      	b.n	8009dda <vPortValidateInterruptPriority+0x46>
 8009ddc:	4770      	bx	lr
 8009dde:	bf00      	nop
 8009de0:	e000e3f0 	.word	0xe000e3f0
 8009de4:	20000d58 	.word	0x20000d58
 8009de8:	e000ed0c 	.word	0xe000ed0c
 8009dec:	20000d5c 	.word	0x20000d5c

08009df0 <prvInsertBlockIntoFreeList>:
 8009df0:	b510      	push	{r4, lr}
 8009df2:	4b0f      	ldr	r3, [pc, #60]	; (8009e30 <prvInsertBlockIntoFreeList+0x40>)
 8009df4:	461a      	mov	r2, r3
 8009df6:	681b      	ldr	r3, [r3, #0]
 8009df8:	4283      	cmp	r3, r0
 8009dfa:	d3fb      	bcc.n	8009df4 <prvInsertBlockIntoFreeList+0x4>
 8009dfc:	6854      	ldr	r4, [r2, #4]
 8009dfe:	1911      	adds	r1, r2, r4
 8009e00:	4288      	cmp	r0, r1
 8009e02:	bf01      	itttt	eq
 8009e04:	6841      	ldreq	r1, [r0, #4]
 8009e06:	4610      	moveq	r0, r2
 8009e08:	1909      	addeq	r1, r1, r4
 8009e0a:	6051      	streq	r1, [r2, #4]
 8009e0c:	6844      	ldr	r4, [r0, #4]
 8009e0e:	1901      	adds	r1, r0, r4
 8009e10:	428b      	cmp	r3, r1
 8009e12:	d107      	bne.n	8009e24 <prvInsertBlockIntoFreeList+0x34>
 8009e14:	4907      	ldr	r1, [pc, #28]	; (8009e34 <prvInsertBlockIntoFreeList+0x44>)
 8009e16:	6809      	ldr	r1, [r1, #0]
 8009e18:	428b      	cmp	r3, r1
 8009e1a:	bf1f      	itttt	ne
 8009e1c:	6859      	ldrne	r1, [r3, #4]
 8009e1e:	681b      	ldrne	r3, [r3, #0]
 8009e20:	1909      	addne	r1, r1, r4
 8009e22:	6041      	strne	r1, [r0, #4]
 8009e24:	4290      	cmp	r0, r2
 8009e26:	6003      	str	r3, [r0, #0]
 8009e28:	bf18      	it	ne
 8009e2a:	6010      	strne	r0, [r2, #0]
 8009e2c:	bd10      	pop	{r4, pc}
 8009e2e:	bf00      	nop
 8009e30:	20001970 	.word	0x20001970
 8009e34:	20000d60 	.word	0x20000d60

08009e38 <pvPortMalloc>:
 8009e38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e3c:	4604      	mov	r4, r0
 8009e3e:	f7ff f9e5 	bl	800920c <vTaskSuspendAll>
 8009e42:	4b3b      	ldr	r3, [pc, #236]	; (8009f30 <pvPortMalloc+0xf8>)
 8009e44:	483b      	ldr	r0, [pc, #236]	; (8009f34 <pvPortMalloc+0xfc>)
 8009e46:	681a      	ldr	r2, [r3, #0]
 8009e48:	469c      	mov	ip, r3
 8009e4a:	b9d2      	cbnz	r2, 8009e82 <pvPortMalloc+0x4a>
 8009e4c:	2100      	movs	r1, #0
 8009e4e:	4a3a      	ldr	r2, [pc, #232]	; (8009f38 <pvPortMalloc+0x100>)
 8009e50:	4b3a      	ldr	r3, [pc, #232]	; (8009f3c <pvPortMalloc+0x104>)
 8009e52:	0755      	lsls	r5, r2, #29
 8009e54:	bf1c      	itt	ne
 8009e56:	3207      	addne	r2, #7
 8009e58:	f022 0207 	bicne.w	r2, r2, #7
 8009e5c:	601a      	str	r2, [r3, #0]
 8009e5e:	6059      	str	r1, [r3, #4]
 8009e60:	4b37      	ldr	r3, [pc, #220]	; (8009f40 <pvPortMalloc+0x108>)
 8009e62:	f023 0307 	bic.w	r3, r3, #7
 8009e66:	e9c3 1100 	strd	r1, r1, [r3]
 8009e6a:	1a99      	subs	r1, r3, r2
 8009e6c:	e9c2 3100 	strd	r3, r1, [r2]
 8009e70:	f8cc 3000 	str.w	r3, [ip]
 8009e74:	4b33      	ldr	r3, [pc, #204]	; (8009f44 <pvPortMalloc+0x10c>)
 8009e76:	6019      	str	r1, [r3, #0]
 8009e78:	4b33      	ldr	r3, [pc, #204]	; (8009f48 <pvPortMalloc+0x110>)
 8009e7a:	6019      	str	r1, [r3, #0]
 8009e7c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009e80:	6003      	str	r3, [r0, #0]
 8009e82:	6807      	ldr	r7, [r0, #0]
 8009e84:	4227      	tst	r7, r4
 8009e86:	d14e      	bne.n	8009f26 <pvPortMalloc+0xee>
 8009e88:	2c00      	cmp	r4, #0
 8009e8a:	d03f      	beq.n	8009f0c <pvPortMalloc+0xd4>
 8009e8c:	f104 0308 	add.w	r3, r4, #8
 8009e90:	0761      	lsls	r1, r4, #29
 8009e92:	bf1c      	itt	ne
 8009e94:	f023 0307 	bicne.w	r3, r3, #7
 8009e98:	3308      	addne	r3, #8
 8009e9a:	2b00      	cmp	r3, #0
 8009e9c:	d043      	beq.n	8009f26 <pvPortMalloc+0xee>
 8009e9e:	4a2a      	ldr	r2, [pc, #168]	; (8009f48 <pvPortMalloc+0x110>)
 8009ea0:	6816      	ldr	r6, [r2, #0]
 8009ea2:	4690      	mov	r8, r2
 8009ea4:	429e      	cmp	r6, r3
 8009ea6:	d33e      	bcc.n	8009f26 <pvPortMalloc+0xee>
 8009ea8:	4a24      	ldr	r2, [pc, #144]	; (8009f3c <pvPortMalloc+0x104>)
 8009eaa:	6815      	ldr	r5, [r2, #0]
 8009eac:	6869      	ldr	r1, [r5, #4]
 8009eae:	4299      	cmp	r1, r3
 8009eb0:	d201      	bcs.n	8009eb6 <pvPortMalloc+0x7e>
 8009eb2:	6828      	ldr	r0, [r5, #0]
 8009eb4:	b9a8      	cbnz	r0, 8009ee2 <pvPortMalloc+0xaa>
 8009eb6:	f8dc 0000 	ldr.w	r0, [ip]
 8009eba:	42a8      	cmp	r0, r5
 8009ebc:	d033      	beq.n	8009f26 <pvPortMalloc+0xee>
 8009ebe:	6828      	ldr	r0, [r5, #0]
 8009ec0:	1ac9      	subs	r1, r1, r3
 8009ec2:	2910      	cmp	r1, #16
 8009ec4:	6814      	ldr	r4, [r2, #0]
 8009ec6:	6010      	str	r0, [r2, #0]
 8009ec8:	d912      	bls.n	8009ef0 <pvPortMalloc+0xb8>
 8009eca:	18e8      	adds	r0, r5, r3
 8009ecc:	0742      	lsls	r2, r0, #29
 8009ece:	d00b      	beq.n	8009ee8 <pvPortMalloc+0xb0>
 8009ed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ed4:	f383 8811 	msr	BASEPRI, r3
 8009ed8:	f3bf 8f6f 	isb	sy
 8009edc:	f3bf 8f4f 	dsb	sy
 8009ee0:	e7fe      	b.n	8009ee0 <pvPortMalloc+0xa8>
 8009ee2:	462a      	mov	r2, r5
 8009ee4:	4605      	mov	r5, r0
 8009ee6:	e7e1      	b.n	8009eac <pvPortMalloc+0x74>
 8009ee8:	6041      	str	r1, [r0, #4]
 8009eea:	606b      	str	r3, [r5, #4]
 8009eec:	f7ff ff80 	bl	8009df0 <prvInsertBlockIntoFreeList>
 8009ef0:	686b      	ldr	r3, [r5, #4]
 8009ef2:	4914      	ldr	r1, [pc, #80]	; (8009f44 <pvPortMalloc+0x10c>)
 8009ef4:	1af6      	subs	r6, r6, r3
 8009ef6:	431f      	orrs	r7, r3
 8009ef8:	2300      	movs	r3, #0
 8009efa:	6808      	ldr	r0, [r1, #0]
 8009efc:	f8c8 6000 	str.w	r6, [r8]
 8009f00:	4286      	cmp	r6, r0
 8009f02:	bf38      	it	cc
 8009f04:	600e      	strcc	r6, [r1, #0]
 8009f06:	3408      	adds	r4, #8
 8009f08:	606f      	str	r7, [r5, #4]
 8009f0a:	602b      	str	r3, [r5, #0]
 8009f0c:	f7ff fa1e 	bl	800934c <xTaskResumeAll>
 8009f10:	0763      	lsls	r3, r4, #29
 8009f12:	d00a      	beq.n	8009f2a <pvPortMalloc+0xf2>
 8009f14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f18:	f383 8811 	msr	BASEPRI, r3
 8009f1c:	f3bf 8f6f 	isb	sy
 8009f20:	f3bf 8f4f 	dsb	sy
 8009f24:	e7fe      	b.n	8009f24 <pvPortMalloc+0xec>
 8009f26:	2400      	movs	r4, #0
 8009f28:	e7f0      	b.n	8009f0c <pvPortMalloc+0xd4>
 8009f2a:	4620      	mov	r0, r4
 8009f2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f30:	20000d60 	.word	0x20000d60
 8009f34:	20001964 	.word	0x20001964
 8009f38:	20000d64 	.word	0x20000d64
 8009f3c:	20001970 	.word	0x20001970
 8009f40:	2000195c 	.word	0x2000195c
 8009f44:	2000196c 	.word	0x2000196c
 8009f48:	20001968 	.word	0x20001968

08009f4c <vPortFree>:
 8009f4c:	b510      	push	{r4, lr}
 8009f4e:	4604      	mov	r4, r0
 8009f50:	b370      	cbz	r0, 8009fb0 <vPortFree+0x64>
 8009f52:	4a18      	ldr	r2, [pc, #96]	; (8009fb4 <vPortFree+0x68>)
 8009f54:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009f58:	6812      	ldr	r2, [r2, #0]
 8009f5a:	4213      	tst	r3, r2
 8009f5c:	d108      	bne.n	8009f70 <vPortFree+0x24>
 8009f5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f62:	f383 8811 	msr	BASEPRI, r3
 8009f66:	f3bf 8f6f 	isb	sy
 8009f6a:	f3bf 8f4f 	dsb	sy
 8009f6e:	e7fe      	b.n	8009f6e <vPortFree+0x22>
 8009f70:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8009f74:	b141      	cbz	r1, 8009f88 <vPortFree+0x3c>
 8009f76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f7a:	f383 8811 	msr	BASEPRI, r3
 8009f7e:	f3bf 8f6f 	isb	sy
 8009f82:	f3bf 8f4f 	dsb	sy
 8009f86:	e7fe      	b.n	8009f86 <vPortFree+0x3a>
 8009f88:	ea23 0302 	bic.w	r3, r3, r2
 8009f8c:	f840 3c04 	str.w	r3, [r0, #-4]
 8009f90:	f7ff f93c 	bl	800920c <vTaskSuspendAll>
 8009f94:	4a08      	ldr	r2, [pc, #32]	; (8009fb8 <vPortFree+0x6c>)
 8009f96:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009f9a:	6811      	ldr	r1, [r2, #0]
 8009f9c:	f1a4 0008 	sub.w	r0, r4, #8
 8009fa0:	440b      	add	r3, r1
 8009fa2:	6013      	str	r3, [r2, #0]
 8009fa4:	f7ff ff24 	bl	8009df0 <prvInsertBlockIntoFreeList>
 8009fa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009fac:	f7ff b9ce 	b.w	800934c <xTaskResumeAll>
 8009fb0:	bd10      	pop	{r4, pc}
 8009fb2:	bf00      	nop
 8009fb4:	20001964 	.word	0x20001964
 8009fb8:	20001968 	.word	0x20001968

08009fbc <MX_USB_DEVICE_Init>:
 8009fbc:	b508      	push	{r3, lr}
 8009fbe:	2200      	movs	r2, #0
 8009fc0:	490e      	ldr	r1, [pc, #56]	; (8009ffc <MX_USB_DEVICE_Init+0x40>)
 8009fc2:	480f      	ldr	r0, [pc, #60]	; (800a000 <MX_USB_DEVICE_Init+0x44>)
 8009fc4:	f7fd ff8a 	bl	8007edc <USBD_Init>
 8009fc8:	b108      	cbz	r0, 8009fce <MX_USB_DEVICE_Init+0x12>
 8009fca:	f7f7 fe1d 	bl	8001c08 <Error_Handler>
 8009fce:	490d      	ldr	r1, [pc, #52]	; (800a004 <MX_USB_DEVICE_Init+0x48>)
 8009fd0:	480b      	ldr	r0, [pc, #44]	; (800a000 <MX_USB_DEVICE_Init+0x44>)
 8009fd2:	f7fd ff98 	bl	8007f06 <USBD_RegisterClass>
 8009fd6:	b108      	cbz	r0, 8009fdc <MX_USB_DEVICE_Init+0x20>
 8009fd8:	f7f7 fe16 	bl	8001c08 <Error_Handler>
 8009fdc:	490a      	ldr	r1, [pc, #40]	; (800a008 <MX_USB_DEVICE_Init+0x4c>)
 8009fde:	4808      	ldr	r0, [pc, #32]	; (800a000 <MX_USB_DEVICE_Init+0x44>)
 8009fe0:	f7fd ff37 	bl	8007e52 <USBD_CDC_RegisterInterface>
 8009fe4:	b108      	cbz	r0, 8009fea <MX_USB_DEVICE_Init+0x2e>
 8009fe6:	f7f7 fe0f 	bl	8001c08 <Error_Handler>
 8009fea:	4805      	ldr	r0, [pc, #20]	; (800a000 <MX_USB_DEVICE_Init+0x44>)
 8009fec:	f7fd ff92 	bl	8007f14 <USBD_Start>
 8009ff0:	b118      	cbz	r0, 8009ffa <MX_USB_DEVICE_Init+0x3e>
 8009ff2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009ff6:	f7f7 be07 	b.w	8001c08 <Error_Handler>
 8009ffa:	bd08      	pop	{r3, pc}
 8009ffc:	20000130 	.word	0x20000130
 800a000:	20002470 	.word	0x20002470
 800a004:	2000000c 	.word	0x2000000c
 800a008:	20000120 	.word	0x20000120

0800a00c <CDC_DeInit_FS>:
 800a00c:	2000      	movs	r0, #0
 800a00e:	4770      	bx	lr

0800a010 <CDC_Control_FS>:
 800a010:	2000      	movs	r0, #0
 800a012:	4770      	bx	lr

0800a014 <CDC_Receive_FS>:
 800a014:	b510      	push	{r4, lr}
 800a016:	4c05      	ldr	r4, [pc, #20]	; (800a02c <CDC_Receive_FS+0x18>)
 800a018:	4601      	mov	r1, r0
 800a01a:	4620      	mov	r0, r4
 800a01c:	f7fd ff28 	bl	8007e70 <USBD_CDC_SetRxBuffer>
 800a020:	4620      	mov	r0, r4
 800a022:	f7fd ff44 	bl	8007eae <USBD_CDC_ReceivePacket>
 800a026:	2000      	movs	r0, #0
 800a028:	bd10      	pop	{r4, pc}
 800a02a:	bf00      	nop
 800a02c:	20002470 	.word	0x20002470

0800a030 <CDC_Init_FS>:
 800a030:	b510      	push	{r4, lr}
 800a032:	4c06      	ldr	r4, [pc, #24]	; (800a04c <CDC_Init_FS+0x1c>)
 800a034:	2200      	movs	r2, #0
 800a036:	4620      	mov	r0, r4
 800a038:	4905      	ldr	r1, [pc, #20]	; (800a050 <CDC_Init_FS+0x20>)
 800a03a:	f7fd ff11 	bl	8007e60 <USBD_CDC_SetTxBuffer>
 800a03e:	4620      	mov	r0, r4
 800a040:	4904      	ldr	r1, [pc, #16]	; (800a054 <CDC_Init_FS+0x24>)
 800a042:	f7fd ff15 	bl	8007e70 <USBD_CDC_SetRxBuffer>
 800a046:	2000      	movs	r0, #0
 800a048:	bd10      	pop	{r4, pc}
 800a04a:	bf00      	nop
 800a04c:	20002470 	.word	0x20002470
 800a050:	20002734 	.word	0x20002734
 800a054:	20002b1c 	.word	0x20002b1c

0800a058 <CDC_Transmit_FS>:
 800a058:	b510      	push	{r4, lr}
 800a05a:	4c09      	ldr	r4, [pc, #36]	; (800a080 <CDC_Transmit_FS+0x28>)
 800a05c:	460a      	mov	r2, r1
 800a05e:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 800a062:	f8d3 3214 	ldr.w	r3, [r3, #532]	; 0x214
 800a066:	b943      	cbnz	r3, 800a07a <CDC_Transmit_FS+0x22>
 800a068:	4601      	mov	r1, r0
 800a06a:	4620      	mov	r0, r4
 800a06c:	f7fd fef8 	bl	8007e60 <USBD_CDC_SetTxBuffer>
 800a070:	4620      	mov	r0, r4
 800a072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a076:	f7fd bf01 	b.w	8007e7c <USBD_CDC_TransmitPacket>
 800a07a:	2001      	movs	r0, #1
 800a07c:	bd10      	pop	{r4, pc}
 800a07e:	bf00      	nop
 800a080:	20002470 	.word	0x20002470

0800a084 <USBD_FS_DeviceDescriptor>:
 800a084:	2312      	movs	r3, #18
 800a086:	4801      	ldr	r0, [pc, #4]	; (800a08c <USBD_FS_DeviceDescriptor+0x8>)
 800a088:	800b      	strh	r3, [r1, #0]
 800a08a:	4770      	bx	lr
 800a08c:	2000014c 	.word	0x2000014c

0800a090 <USBD_FS_LangIDStrDescriptor>:
 800a090:	2304      	movs	r3, #4
 800a092:	4801      	ldr	r0, [pc, #4]	; (800a098 <USBD_FS_LangIDStrDescriptor+0x8>)
 800a094:	800b      	strh	r3, [r1, #0]
 800a096:	4770      	bx	lr
 800a098:	20000160 	.word	0x20000160

0800a09c <IntToUnicode>:
 800a09c:	2300      	movs	r3, #0
 800a09e:	b570      	push	{r4, r5, r6, lr}
 800a0a0:	461e      	mov	r6, r3
 800a0a2:	1c4d      	adds	r5, r1, #1
 800a0a4:	0f04      	lsrs	r4, r0, #28
 800a0a6:	f1b0 4f20 	cmp.w	r0, #2684354560	; 0xa0000000
 800a0aa:	bf34      	ite	cc
 800a0ac:	3430      	addcc	r4, #48	; 0x30
 800a0ae:	3437      	addcs	r4, #55	; 0x37
 800a0b0:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
 800a0b4:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
 800a0b8:	3301      	adds	r3, #1
 800a0ba:	b2dc      	uxtb	r4, r3
 800a0bc:	42a2      	cmp	r2, r4
 800a0be:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800a0c2:	d8ef      	bhi.n	800a0a4 <IntToUnicode+0x8>
 800a0c4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800a0c8 <USBD_FS_SerialStrDescriptor>:
 800a0c8:	231a      	movs	r3, #26
 800a0ca:	b510      	push	{r4, lr}
 800a0cc:	800b      	strh	r3, [r1, #0]
 800a0ce:	4b09      	ldr	r3, [pc, #36]	; (800a0f4 <USBD_FS_SerialStrDescriptor+0x2c>)
 800a0d0:	6818      	ldr	r0, [r3, #0]
 800a0d2:	3308      	adds	r3, #8
 800a0d4:	681b      	ldr	r3, [r3, #0]
 800a0d6:	18c0      	adds	r0, r0, r3
 800a0d8:	d00a      	beq.n	800a0f0 <USBD_FS_SerialStrDescriptor+0x28>
 800a0da:	4b07      	ldr	r3, [pc, #28]	; (800a0f8 <USBD_FS_SerialStrDescriptor+0x30>)
 800a0dc:	2208      	movs	r2, #8
 800a0de:	681c      	ldr	r4, [r3, #0]
 800a0e0:	4906      	ldr	r1, [pc, #24]	; (800a0fc <USBD_FS_SerialStrDescriptor+0x34>)
 800a0e2:	f7ff ffdb 	bl	800a09c <IntToUnicode>
 800a0e6:	2204      	movs	r2, #4
 800a0e8:	4620      	mov	r0, r4
 800a0ea:	4905      	ldr	r1, [pc, #20]	; (800a100 <USBD_FS_SerialStrDescriptor+0x38>)
 800a0ec:	f7ff ffd6 	bl	800a09c <IntToUnicode>
 800a0f0:	4804      	ldr	r0, [pc, #16]	; (800a104 <USBD_FS_SerialStrDescriptor+0x3c>)
 800a0f2:	bd10      	pop	{r4, pc}
 800a0f4:	1ffff7e8 	.word	0x1ffff7e8
 800a0f8:	1ffff7ec 	.word	0x1ffff7ec
 800a0fc:	20000166 	.word	0x20000166
 800a100:	20000176 	.word	0x20000176
 800a104:	20000164 	.word	0x20000164

0800a108 <USBD_FS_ManufacturerStrDescriptor>:
 800a108:	b510      	push	{r4, lr}
 800a10a:	4c04      	ldr	r4, [pc, #16]	; (800a11c <USBD_FS_ManufacturerStrDescriptor+0x14>)
 800a10c:	460a      	mov	r2, r1
 800a10e:	4804      	ldr	r0, [pc, #16]	; (800a120 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 800a110:	4621      	mov	r1, r4
 800a112:	f7fe fa24 	bl	800855e <USBD_GetString>
 800a116:	4620      	mov	r0, r4
 800a118:	bd10      	pop	{r4, pc}
 800a11a:	bf00      	nop
 800a11c:	20002f04 	.word	0x20002f04
 800a120:	0800ee8b 	.word	0x0800ee8b

0800a124 <USBD_FS_ProductStrDescriptor>:
 800a124:	b510      	push	{r4, lr}
 800a126:	4c04      	ldr	r4, [pc, #16]	; (800a138 <USBD_FS_ProductStrDescriptor+0x14>)
 800a128:	460a      	mov	r2, r1
 800a12a:	4804      	ldr	r0, [pc, #16]	; (800a13c <USBD_FS_ProductStrDescriptor+0x18>)
 800a12c:	4621      	mov	r1, r4
 800a12e:	f7fe fa16 	bl	800855e <USBD_GetString>
 800a132:	4620      	mov	r0, r4
 800a134:	bd10      	pop	{r4, pc}
 800a136:	bf00      	nop
 800a138:	20002f04 	.word	0x20002f04
 800a13c:	0800ee9e 	.word	0x0800ee9e

0800a140 <USBD_FS_ConfigStrDescriptor>:
 800a140:	b510      	push	{r4, lr}
 800a142:	4c04      	ldr	r4, [pc, #16]	; (800a154 <USBD_FS_ConfigStrDescriptor+0x14>)
 800a144:	460a      	mov	r2, r1
 800a146:	4804      	ldr	r0, [pc, #16]	; (800a158 <USBD_FS_ConfigStrDescriptor+0x18>)
 800a148:	4621      	mov	r1, r4
 800a14a:	f7fe fa08 	bl	800855e <USBD_GetString>
 800a14e:	4620      	mov	r0, r4
 800a150:	bd10      	pop	{r4, pc}
 800a152:	bf00      	nop
 800a154:	20002f04 	.word	0x20002f04
 800a158:	0800eeb4 	.word	0x0800eeb4

0800a15c <USBD_FS_InterfaceStrDescriptor>:
 800a15c:	b510      	push	{r4, lr}
 800a15e:	4c04      	ldr	r4, [pc, #16]	; (800a170 <USBD_FS_InterfaceStrDescriptor+0x14>)
 800a160:	460a      	mov	r2, r1
 800a162:	4804      	ldr	r0, [pc, #16]	; (800a174 <USBD_FS_InterfaceStrDescriptor+0x18>)
 800a164:	4621      	mov	r1, r4
 800a166:	f7fe f9fa 	bl	800855e <USBD_GetString>
 800a16a:	4620      	mov	r0, r4
 800a16c:	bd10      	pop	{r4, pc}
 800a16e:	bf00      	nop
 800a170:	20002f04 	.word	0x20002f04
 800a174:	0800eebf 	.word	0x0800eebf

0800a178 <HAL_PCD_MspInit>:
 800a178:	b507      	push	{r0, r1, r2, lr}
 800a17a:	4b0e      	ldr	r3, [pc, #56]	; (800a1b4 <HAL_PCD_MspInit+0x3c>)
 800a17c:	6802      	ldr	r2, [r0, #0]
 800a17e:	429a      	cmp	r2, r3
 800a180:	d115      	bne.n	800a1ae <HAL_PCD_MspInit+0x36>
 800a182:	f503 33da 	add.w	r3, r3, #111616	; 0x1b400
 800a186:	69da      	ldr	r2, [r3, #28]
 800a188:	2105      	movs	r1, #5
 800a18a:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800a18e:	61da      	str	r2, [r3, #28]
 800a190:	69db      	ldr	r3, [r3, #28]
 800a192:	2200      	movs	r2, #0
 800a194:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800a198:	9301      	str	r3, [sp, #4]
 800a19a:	2014      	movs	r0, #20
 800a19c:	9b01      	ldr	r3, [sp, #4]
 800a19e:	f7f9 fb85 	bl	80038ac <HAL_NVIC_SetPriority>
 800a1a2:	2014      	movs	r0, #20
 800a1a4:	b003      	add	sp, #12
 800a1a6:	f85d eb04 	ldr.w	lr, [sp], #4
 800a1aa:	f7f9 bbb1 	b.w	8003910 <HAL_NVIC_EnableIRQ>
 800a1ae:	b003      	add	sp, #12
 800a1b0:	f85d fb04 	ldr.w	pc, [sp], #4
 800a1b4:	40005c00 	.word	0x40005c00

0800a1b8 <HAL_PCD_SetupStageCallback>:
 800a1b8:	f500 712c 	add.w	r1, r0, #688	; 0x2b0
 800a1bc:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a1c0:	f7fd bebf 	b.w	8007f42 <USBD_LL_SetupStage>

0800a1c4 <HAL_PCD_DataOutStageCallback>:
 800a1c4:	2328      	movs	r3, #40	; 0x28
 800a1c6:	fb03 0301 	mla	r3, r3, r1, r0
 800a1ca:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a1ce:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
 800a1d2:	f7fd bee3 	b.w	8007f9c <USBD_LL_DataOutStage>

0800a1d6 <HAL_PCD_DataInStageCallback>:
 800a1d6:	2328      	movs	r3, #40	; 0x28
 800a1d8:	fb03 0301 	mla	r3, r3, r1, r0
 800a1dc:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a1e0:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a1e2:	f7fd bf15 	b.w	8008010 <USBD_LL_DataInStage>

0800a1e6 <HAL_PCD_SOFCallback>:
 800a1e6:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a1ea:	f7fd bfa9 	b.w	8008140 <USBD_LL_SOF>

0800a1ee <HAL_PCD_ResetCallback>:
 800a1ee:	6883      	ldr	r3, [r0, #8]
 800a1f0:	b510      	push	{r4, lr}
 800a1f2:	2b02      	cmp	r3, #2
 800a1f4:	4604      	mov	r4, r0
 800a1f6:	d001      	beq.n	800a1fc <HAL_PCD_ResetCallback+0xe>
 800a1f8:	f7f7 fd06 	bl	8001c08 <Error_Handler>
 800a1fc:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800a200:	2101      	movs	r1, #1
 800a202:	f7fd ff87 	bl	8008114 <USBD_LL_SetSpeed>
 800a206:	f8d4 02e8 	ldr.w	r0, [r4, #744]	; 0x2e8
 800a20a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a20e:	f7fd bf5a 	b.w	80080c6 <USBD_LL_Reset>
	...

0800a214 <HAL_PCD_SuspendCallback>:
 800a214:	b510      	push	{r4, lr}
 800a216:	4604      	mov	r4, r0
 800a218:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a21c:	f7fd ff7d 	bl	800811a <USBD_LL_Suspend>
 800a220:	69a3      	ldr	r3, [r4, #24]
 800a222:	b123      	cbz	r3, 800a22e <HAL_PCD_SuspendCallback+0x1a>
 800a224:	4a02      	ldr	r2, [pc, #8]	; (800a230 <HAL_PCD_SuspendCallback+0x1c>)
 800a226:	6913      	ldr	r3, [r2, #16]
 800a228:	f043 0306 	orr.w	r3, r3, #6
 800a22c:	6113      	str	r3, [r2, #16]
 800a22e:	bd10      	pop	{r4, pc}
 800a230:	e000ed00 	.word	0xe000ed00

0800a234 <HAL_PCD_ResumeCallback>:
 800a234:	f8d0 02e8 	ldr.w	r0, [r0, #744]	; 0x2e8
 800a238:	f7fd bf78 	b.w	800812c <USBD_LL_Resume>

0800a23c <USBD_LL_Init>:
 800a23c:	2308      	movs	r3, #8
 800a23e:	b510      	push	{r4, lr}
 800a240:	4a1d      	ldr	r2, [pc, #116]	; (800a2b8 <USBD_LL_Init+0x7c>)
 800a242:	4604      	mov	r4, r0
 800a244:	481d      	ldr	r0, [pc, #116]	; (800a2bc <USBD_LL_Init+0x80>)
 800a246:	e9c0 2300 	strd	r2, r3, [r0]
 800a24a:	2302      	movs	r3, #2
 800a24c:	6083      	str	r3, [r0, #8]
 800a24e:	2300      	movs	r3, #0
 800a250:	f8c0 42e8 	str.w	r4, [r0, #744]	; 0x2e8
 800a254:	f8c4 02c0 	str.w	r0, [r4, #704]	; 0x2c0
 800a258:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800a25c:	6203      	str	r3, [r0, #32]
 800a25e:	f7fa fe07 	bl	8004e70 <HAL_PCD_Init>
 800a262:	b108      	cbz	r0, 800a268 <USBD_LL_Init+0x2c>
 800a264:	f7f7 fcd0 	bl	8001c08 <Error_Handler>
 800a268:	2200      	movs	r2, #0
 800a26a:	2318      	movs	r3, #24
 800a26c:	4611      	mov	r1, r2
 800a26e:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 800a272:	f7fb fbdb 	bl	8005a2c <HAL_PCDEx_PMAConfig>
 800a276:	2358      	movs	r3, #88	; 0x58
 800a278:	2200      	movs	r2, #0
 800a27a:	2180      	movs	r1, #128	; 0x80
 800a27c:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 800a280:	f7fb fbd4 	bl	8005a2c <HAL_PCDEx_PMAConfig>
 800a284:	23c0      	movs	r3, #192	; 0xc0
 800a286:	2200      	movs	r2, #0
 800a288:	2181      	movs	r1, #129	; 0x81
 800a28a:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 800a28e:	f7fb fbcd 	bl	8005a2c <HAL_PCDEx_PMAConfig>
 800a292:	f44f 7388 	mov.w	r3, #272	; 0x110
 800a296:	2200      	movs	r2, #0
 800a298:	2101      	movs	r1, #1
 800a29a:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 800a29e:	f7fb fbc5 	bl	8005a2c <HAL_PCDEx_PMAConfig>
 800a2a2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a2a6:	2200      	movs	r2, #0
 800a2a8:	2182      	movs	r1, #130	; 0x82
 800a2aa:	f8d4 02c0 	ldr.w	r0, [r4, #704]	; 0x2c0
 800a2ae:	f7fb fbbd 	bl	8005a2c <HAL_PCDEx_PMAConfig>
 800a2b2:	2000      	movs	r0, #0
 800a2b4:	bd10      	pop	{r4, pc}
 800a2b6:	bf00      	nop
 800a2b8:	40005c00 	.word	0x40005c00
 800a2bc:	20003104 	.word	0x20003104

0800a2c0 <USBD_LL_Start>:
 800a2c0:	b508      	push	{r3, lr}
 800a2c2:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a2c6:	f7fa fe4c 	bl	8004f62 <HAL_PCD_Start>
 800a2ca:	2803      	cmp	r0, #3
 800a2cc:	bf96      	itet	ls
 800a2ce:	4b02      	ldrls	r3, [pc, #8]	; (800a2d8 <USBD_LL_Start+0x18>)
 800a2d0:	2002      	movhi	r0, #2
 800a2d2:	5c18      	ldrbls	r0, [r3, r0]
 800a2d4:	bd08      	pop	{r3, pc}
 800a2d6:	bf00      	nop
 800a2d8:	0800eecd 	.word	0x0800eecd

0800a2dc <USBD_LL_OpenEP>:
 800a2dc:	b510      	push	{r4, lr}
 800a2de:	4614      	mov	r4, r2
 800a2e0:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a2e4:	461a      	mov	r2, r3
 800a2e6:	4623      	mov	r3, r4
 800a2e8:	f7fb faa6 	bl	8005838 <HAL_PCD_EP_Open>
 800a2ec:	2803      	cmp	r0, #3
 800a2ee:	bf96      	itet	ls
 800a2f0:	4b01      	ldrls	r3, [pc, #4]	; (800a2f8 <USBD_LL_OpenEP+0x1c>)
 800a2f2:	2002      	movhi	r0, #2
 800a2f4:	5c18      	ldrbls	r0, [r3, r0]
 800a2f6:	bd10      	pop	{r4, pc}
 800a2f8:	0800eecd 	.word	0x0800eecd

0800a2fc <USBD_LL_CloseEP>:
 800a2fc:	b508      	push	{r3, lr}
 800a2fe:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a302:	f7fb facb 	bl	800589c <HAL_PCD_EP_Close>
 800a306:	2803      	cmp	r0, #3
 800a308:	bf96      	itet	ls
 800a30a:	4b02      	ldrls	r3, [pc, #8]	; (800a314 <USBD_LL_CloseEP+0x18>)
 800a30c:	2002      	movhi	r0, #2
 800a30e:	5c18      	ldrbls	r0, [r3, r0]
 800a310:	bd08      	pop	{r3, pc}
 800a312:	bf00      	nop
 800a314:	0800eecd 	.word	0x0800eecd

0800a318 <USBD_LL_StallEP>:
 800a318:	b508      	push	{r3, lr}
 800a31a:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a31e:	f7fb fb1f 	bl	8005960 <HAL_PCD_EP_SetStall>
 800a322:	2803      	cmp	r0, #3
 800a324:	bf96      	itet	ls
 800a326:	4b02      	ldrls	r3, [pc, #8]	; (800a330 <USBD_LL_StallEP+0x18>)
 800a328:	2002      	movhi	r0, #2
 800a32a:	5c18      	ldrbls	r0, [r3, r0]
 800a32c:	bd08      	pop	{r3, pc}
 800a32e:	bf00      	nop
 800a330:	0800eecd 	.word	0x0800eecd

0800a334 <USBD_LL_ClearStallEP>:
 800a334:	b508      	push	{r3, lr}
 800a336:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a33a:	f7fb fb45 	bl	80059c8 <HAL_PCD_EP_ClrStall>
 800a33e:	2803      	cmp	r0, #3
 800a340:	bf96      	itet	ls
 800a342:	4b02      	ldrls	r3, [pc, #8]	; (800a34c <USBD_LL_ClearStallEP+0x18>)
 800a344:	2002      	movhi	r0, #2
 800a346:	5c18      	ldrbls	r0, [r3, r0]
 800a348:	bd08      	pop	{r3, pc}
 800a34a:	bf00      	nop
 800a34c:	0800eecd 	.word	0x0800eecd

0800a350 <USBD_LL_IsStallEP>:
 800a350:	2328      	movs	r3, #40	; 0x28
 800a352:	f011 0f80 	tst.w	r1, #128	; 0x80
 800a356:	f8d0 22c0 	ldr.w	r2, [r0, #704]	; 0x2c0
 800a35a:	bf1b      	ittet	ne
 800a35c:	f001 017f 	andne.w	r1, r1, #127	; 0x7f
 800a360:	fb01 3103 	mlane	r1, r1, r3, r3
 800a364:	fb03 2101 	mlaeq	r1, r3, r1, r2
 800a368:	1889      	addne	r1, r1, r2
 800a36a:	bf14      	ite	ne
 800a36c:	7888      	ldrbne	r0, [r1, #2]
 800a36e:	f891 016a 	ldrbeq.w	r0, [r1, #362]	; 0x16a
 800a372:	4770      	bx	lr

0800a374 <USBD_LL_SetUSBAddress>:
 800a374:	b508      	push	{r3, lr}
 800a376:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a37a:	f7fa fe0b 	bl	8004f94 <HAL_PCD_SetAddress>
 800a37e:	2803      	cmp	r0, #3
 800a380:	bf96      	itet	ls
 800a382:	4b02      	ldrls	r3, [pc, #8]	; (800a38c <USBD_LL_SetUSBAddress+0x18>)
 800a384:	2002      	movhi	r0, #2
 800a386:	5c18      	ldrbls	r0, [r3, r0]
 800a388:	bd08      	pop	{r3, pc}
 800a38a:	bf00      	nop
 800a38c:	0800eecd 	.word	0x0800eecd

0800a390 <USBD_LL_Transmit>:
 800a390:	b508      	push	{r3, lr}
 800a392:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a396:	f7fb fac9 	bl	800592c <HAL_PCD_EP_Transmit>
 800a39a:	2803      	cmp	r0, #3
 800a39c:	bf96      	itet	ls
 800a39e:	4b02      	ldrls	r3, [pc, #8]	; (800a3a8 <USBD_LL_Transmit+0x18>)
 800a3a0:	2002      	movhi	r0, #2
 800a3a2:	5c18      	ldrbls	r0, [r3, r0]
 800a3a4:	bd08      	pop	{r3, pc}
 800a3a6:	bf00      	nop
 800a3a8:	0800eecd 	.word	0x0800eecd

0800a3ac <USBD_LL_PrepareReceive>:
 800a3ac:	b508      	push	{r3, lr}
 800a3ae:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a3b2:	f7fb fa9c 	bl	80058ee <HAL_PCD_EP_Receive>
 800a3b6:	2803      	cmp	r0, #3
 800a3b8:	bf96      	itet	ls
 800a3ba:	4b02      	ldrls	r3, [pc, #8]	; (800a3c4 <USBD_LL_PrepareReceive+0x18>)
 800a3bc:	2002      	movhi	r0, #2
 800a3be:	5c18      	ldrbls	r0, [r3, r0]
 800a3c0:	bd08      	pop	{r3, pc}
 800a3c2:	bf00      	nop
 800a3c4:	0800eecd 	.word	0x0800eecd

0800a3c8 <USBD_LL_GetRxDataSize>:
 800a3c8:	f8d0 02c0 	ldr.w	r0, [r0, #704]	; 0x2c0
 800a3cc:	f7fb baa6 	b.w	800591c <HAL_PCD_EP_GetRxCount>

0800a3d0 <USBD_static_malloc>:
 800a3d0:	4800      	ldr	r0, [pc, #0]	; (800a3d4 <USBD_static_malloc+0x4>)
 800a3d2:	4770      	bx	lr
 800a3d4:	20001978 	.word	0x20001978

0800a3d8 <USBD_static_free>:
 800a3d8:	4770      	bx	lr

0800a3da <HAL_PCDEx_SetConnectionState>:
 800a3da:	4770      	bx	lr

0800a3dc <abs>:
 800a3dc:	2800      	cmp	r0, #0
 800a3de:	bfb8      	it	lt
 800a3e0:	4240      	neglt	r0, r0
 800a3e2:	4770      	bx	lr

0800a3e4 <__errno>:
 800a3e4:	4b01      	ldr	r3, [pc, #4]	; (800a3ec <__errno+0x8>)
 800a3e6:	6818      	ldr	r0, [r3, #0]
 800a3e8:	4770      	bx	lr
 800a3ea:	bf00      	nop
 800a3ec:	20000180 	.word	0x20000180

0800a3f0 <__libc_init_array>:
 800a3f0:	b570      	push	{r4, r5, r6, lr}
 800a3f2:	2600      	movs	r6, #0
 800a3f4:	4d0c      	ldr	r5, [pc, #48]	; (800a428 <__libc_init_array+0x38>)
 800a3f6:	4c0d      	ldr	r4, [pc, #52]	; (800a42c <__libc_init_array+0x3c>)
 800a3f8:	1b64      	subs	r4, r4, r5
 800a3fa:	10a4      	asrs	r4, r4, #2
 800a3fc:	42a6      	cmp	r6, r4
 800a3fe:	d109      	bne.n	800a414 <__libc_init_array+0x24>
 800a400:	f002 feda 	bl	800d1b8 <_init>
 800a404:	2600      	movs	r6, #0
 800a406:	4d0a      	ldr	r5, [pc, #40]	; (800a430 <__libc_init_array+0x40>)
 800a408:	4c0a      	ldr	r4, [pc, #40]	; (800a434 <__libc_init_array+0x44>)
 800a40a:	1b64      	subs	r4, r4, r5
 800a40c:	10a4      	asrs	r4, r4, #2
 800a40e:	42a6      	cmp	r6, r4
 800a410:	d105      	bne.n	800a41e <__libc_init_array+0x2e>
 800a412:	bd70      	pop	{r4, r5, r6, pc}
 800a414:	f855 3b04 	ldr.w	r3, [r5], #4
 800a418:	4798      	blx	r3
 800a41a:	3601      	adds	r6, #1
 800a41c:	e7ee      	b.n	800a3fc <__libc_init_array+0xc>
 800a41e:	f855 3b04 	ldr.w	r3, [r5], #4
 800a422:	4798      	blx	r3
 800a424:	3601      	adds	r6, #1
 800a426:	e7f2      	b.n	800a40e <__libc_init_array+0x1e>
 800a428:	0800f2b0 	.word	0x0800f2b0
 800a42c:	0800f2b0 	.word	0x0800f2b0
 800a430:	0800f2b0 	.word	0x0800f2b0
 800a434:	0800f2b4 	.word	0x0800f2b4

0800a438 <memcpy>:
 800a438:	440a      	add	r2, r1
 800a43a:	4291      	cmp	r1, r2
 800a43c:	f100 33ff 	add.w	r3, r0, #4294967295
 800a440:	d100      	bne.n	800a444 <memcpy+0xc>
 800a442:	4770      	bx	lr
 800a444:	b510      	push	{r4, lr}
 800a446:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a44a:	4291      	cmp	r1, r2
 800a44c:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a450:	d1f9      	bne.n	800a446 <memcpy+0xe>
 800a452:	bd10      	pop	{r4, pc}

0800a454 <memset>:
 800a454:	4603      	mov	r3, r0
 800a456:	4402      	add	r2, r0
 800a458:	4293      	cmp	r3, r2
 800a45a:	d100      	bne.n	800a45e <memset+0xa>
 800a45c:	4770      	bx	lr
 800a45e:	f803 1b01 	strb.w	r1, [r3], #1
 800a462:	e7f9      	b.n	800a458 <memset+0x4>

0800a464 <__cvt>:
 800a464:	2b00      	cmp	r3, #0
 800a466:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a46a:	461f      	mov	r7, r3
 800a46c:	bfbb      	ittet	lt
 800a46e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800a472:	461f      	movlt	r7, r3
 800a474:	2300      	movge	r3, #0
 800a476:	232d      	movlt	r3, #45	; 0x2d
 800a478:	b088      	sub	sp, #32
 800a47a:	4614      	mov	r4, r2
 800a47c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800a47e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800a480:	7013      	strb	r3, [r2, #0]
 800a482:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a484:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800a488:	f023 0820 	bic.w	r8, r3, #32
 800a48c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800a490:	d005      	beq.n	800a49e <__cvt+0x3a>
 800a492:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800a496:	d100      	bne.n	800a49a <__cvt+0x36>
 800a498:	3501      	adds	r5, #1
 800a49a:	2302      	movs	r3, #2
 800a49c:	e000      	b.n	800a4a0 <__cvt+0x3c>
 800a49e:	2303      	movs	r3, #3
 800a4a0:	aa07      	add	r2, sp, #28
 800a4a2:	9204      	str	r2, [sp, #16]
 800a4a4:	aa06      	add	r2, sp, #24
 800a4a6:	e9cd a202 	strd	sl, r2, [sp, #8]
 800a4aa:	e9cd 3500 	strd	r3, r5, [sp]
 800a4ae:	4622      	mov	r2, r4
 800a4b0:	463b      	mov	r3, r7
 800a4b2:	f000 fd05 	bl	800aec0 <_dtoa_r>
 800a4b6:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800a4ba:	4606      	mov	r6, r0
 800a4bc:	d102      	bne.n	800a4c4 <__cvt+0x60>
 800a4be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a4c0:	07db      	lsls	r3, r3, #31
 800a4c2:	d522      	bpl.n	800a50a <__cvt+0xa6>
 800a4c4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800a4c8:	eb06 0905 	add.w	r9, r6, r5
 800a4cc:	d110      	bne.n	800a4f0 <__cvt+0x8c>
 800a4ce:	7833      	ldrb	r3, [r6, #0]
 800a4d0:	2b30      	cmp	r3, #48	; 0x30
 800a4d2:	d10a      	bne.n	800a4ea <__cvt+0x86>
 800a4d4:	2200      	movs	r2, #0
 800a4d6:	2300      	movs	r3, #0
 800a4d8:	4620      	mov	r0, r4
 800a4da:	4639      	mov	r1, r7
 800a4dc:	f7f6 fa64 	bl	80009a8 <__aeabi_dcmpeq>
 800a4e0:	b918      	cbnz	r0, 800a4ea <__cvt+0x86>
 800a4e2:	f1c5 0501 	rsb	r5, r5, #1
 800a4e6:	f8ca 5000 	str.w	r5, [sl]
 800a4ea:	f8da 3000 	ldr.w	r3, [sl]
 800a4ee:	4499      	add	r9, r3
 800a4f0:	2200      	movs	r2, #0
 800a4f2:	2300      	movs	r3, #0
 800a4f4:	4620      	mov	r0, r4
 800a4f6:	4639      	mov	r1, r7
 800a4f8:	f7f6 fa56 	bl	80009a8 <__aeabi_dcmpeq>
 800a4fc:	b108      	cbz	r0, 800a502 <__cvt+0x9e>
 800a4fe:	f8cd 901c 	str.w	r9, [sp, #28]
 800a502:	2230      	movs	r2, #48	; 0x30
 800a504:	9b07      	ldr	r3, [sp, #28]
 800a506:	454b      	cmp	r3, r9
 800a508:	d307      	bcc.n	800a51a <__cvt+0xb6>
 800a50a:	4630      	mov	r0, r6
 800a50c:	9b07      	ldr	r3, [sp, #28]
 800a50e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800a510:	1b9b      	subs	r3, r3, r6
 800a512:	6013      	str	r3, [r2, #0]
 800a514:	b008      	add	sp, #32
 800a516:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a51a:	1c59      	adds	r1, r3, #1
 800a51c:	9107      	str	r1, [sp, #28]
 800a51e:	701a      	strb	r2, [r3, #0]
 800a520:	e7f0      	b.n	800a504 <__cvt+0xa0>

0800a522 <__exponent>:
 800a522:	4603      	mov	r3, r0
 800a524:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a526:	2900      	cmp	r1, #0
 800a528:	f803 2b02 	strb.w	r2, [r3], #2
 800a52c:	bfb6      	itet	lt
 800a52e:	222d      	movlt	r2, #45	; 0x2d
 800a530:	222b      	movge	r2, #43	; 0x2b
 800a532:	4249      	neglt	r1, r1
 800a534:	2909      	cmp	r1, #9
 800a536:	7042      	strb	r2, [r0, #1]
 800a538:	dd2b      	ble.n	800a592 <__exponent+0x70>
 800a53a:	f10d 0407 	add.w	r4, sp, #7
 800a53e:	46a4      	mov	ip, r4
 800a540:	270a      	movs	r7, #10
 800a542:	fb91 f6f7 	sdiv	r6, r1, r7
 800a546:	460a      	mov	r2, r1
 800a548:	46a6      	mov	lr, r4
 800a54a:	fb07 1516 	mls	r5, r7, r6, r1
 800a54e:	2a63      	cmp	r2, #99	; 0x63
 800a550:	f105 0530 	add.w	r5, r5, #48	; 0x30
 800a554:	4631      	mov	r1, r6
 800a556:	f104 34ff 	add.w	r4, r4, #4294967295
 800a55a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800a55e:	dcf0      	bgt.n	800a542 <__exponent+0x20>
 800a560:	3130      	adds	r1, #48	; 0x30
 800a562:	f1ae 0502 	sub.w	r5, lr, #2
 800a566:	f804 1c01 	strb.w	r1, [r4, #-1]
 800a56a:	4629      	mov	r1, r5
 800a56c:	1c44      	adds	r4, r0, #1
 800a56e:	4561      	cmp	r1, ip
 800a570:	d30a      	bcc.n	800a588 <__exponent+0x66>
 800a572:	f10d 0209 	add.w	r2, sp, #9
 800a576:	eba2 020e 	sub.w	r2, r2, lr
 800a57a:	4565      	cmp	r5, ip
 800a57c:	bf88      	it	hi
 800a57e:	2200      	movhi	r2, #0
 800a580:	4413      	add	r3, r2
 800a582:	1a18      	subs	r0, r3, r0
 800a584:	b003      	add	sp, #12
 800a586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a588:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a58c:	f804 2f01 	strb.w	r2, [r4, #1]!
 800a590:	e7ed      	b.n	800a56e <__exponent+0x4c>
 800a592:	2330      	movs	r3, #48	; 0x30
 800a594:	3130      	adds	r1, #48	; 0x30
 800a596:	7083      	strb	r3, [r0, #2]
 800a598:	70c1      	strb	r1, [r0, #3]
 800a59a:	1d03      	adds	r3, r0, #4
 800a59c:	e7f1      	b.n	800a582 <__exponent+0x60>
	...

0800a5a0 <_printf_float>:
 800a5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5a4:	b091      	sub	sp, #68	; 0x44
 800a5a6:	460c      	mov	r4, r1
 800a5a8:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800a5ac:	4616      	mov	r6, r2
 800a5ae:	461f      	mov	r7, r3
 800a5b0:	4605      	mov	r5, r0
 800a5b2:	f001 fb69 	bl	800bc88 <_localeconv_r>
 800a5b6:	6803      	ldr	r3, [r0, #0]
 800a5b8:	4618      	mov	r0, r3
 800a5ba:	9309      	str	r3, [sp, #36]	; 0x24
 800a5bc:	f7f5 fdc8 	bl	8000150 <strlen>
 800a5c0:	2300      	movs	r3, #0
 800a5c2:	930e      	str	r3, [sp, #56]	; 0x38
 800a5c4:	f8d8 3000 	ldr.w	r3, [r8]
 800a5c8:	900a      	str	r0, [sp, #40]	; 0x28
 800a5ca:	3307      	adds	r3, #7
 800a5cc:	f023 0307 	bic.w	r3, r3, #7
 800a5d0:	f103 0208 	add.w	r2, r3, #8
 800a5d4:	f894 9018 	ldrb.w	r9, [r4, #24]
 800a5d8:	f8d4 b000 	ldr.w	fp, [r4]
 800a5dc:	f8c8 2000 	str.w	r2, [r8]
 800a5e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5e4:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800a5e8:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 800a5ec:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 800a5f0:	930b      	str	r3, [sp, #44]	; 0x2c
 800a5f2:	f04f 32ff 	mov.w	r2, #4294967295
 800a5f6:	4640      	mov	r0, r8
 800a5f8:	4b9c      	ldr	r3, [pc, #624]	; (800a86c <_printf_float+0x2cc>)
 800a5fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a5fc:	f7f6 fa06 	bl	8000a0c <__aeabi_dcmpun>
 800a600:	bb70      	cbnz	r0, 800a660 <_printf_float+0xc0>
 800a602:	f04f 32ff 	mov.w	r2, #4294967295
 800a606:	4640      	mov	r0, r8
 800a608:	4b98      	ldr	r3, [pc, #608]	; (800a86c <_printf_float+0x2cc>)
 800a60a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a60c:	f7f6 f9e0 	bl	80009d0 <__aeabi_dcmple>
 800a610:	bb30      	cbnz	r0, 800a660 <_printf_float+0xc0>
 800a612:	2200      	movs	r2, #0
 800a614:	2300      	movs	r3, #0
 800a616:	4640      	mov	r0, r8
 800a618:	4651      	mov	r1, sl
 800a61a:	f7f6 f9cf 	bl	80009bc <__aeabi_dcmplt>
 800a61e:	b110      	cbz	r0, 800a626 <_printf_float+0x86>
 800a620:	232d      	movs	r3, #45	; 0x2d
 800a622:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a626:	4b92      	ldr	r3, [pc, #584]	; (800a870 <_printf_float+0x2d0>)
 800a628:	4892      	ldr	r0, [pc, #584]	; (800a874 <_printf_float+0x2d4>)
 800a62a:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800a62e:	bf94      	ite	ls
 800a630:	4698      	movls	r8, r3
 800a632:	4680      	movhi	r8, r0
 800a634:	2303      	movs	r3, #3
 800a636:	f04f 0a00 	mov.w	sl, #0
 800a63a:	6123      	str	r3, [r4, #16]
 800a63c:	f02b 0304 	bic.w	r3, fp, #4
 800a640:	6023      	str	r3, [r4, #0]
 800a642:	4633      	mov	r3, r6
 800a644:	4621      	mov	r1, r4
 800a646:	4628      	mov	r0, r5
 800a648:	9700      	str	r7, [sp, #0]
 800a64a:	aa0f      	add	r2, sp, #60	; 0x3c
 800a64c:	f000 f9d4 	bl	800a9f8 <_printf_common>
 800a650:	3001      	adds	r0, #1
 800a652:	f040 8090 	bne.w	800a776 <_printf_float+0x1d6>
 800a656:	f04f 30ff 	mov.w	r0, #4294967295
 800a65a:	b011      	add	sp, #68	; 0x44
 800a65c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a660:	4642      	mov	r2, r8
 800a662:	4653      	mov	r3, sl
 800a664:	4640      	mov	r0, r8
 800a666:	4651      	mov	r1, sl
 800a668:	f7f6 f9d0 	bl	8000a0c <__aeabi_dcmpun>
 800a66c:	b148      	cbz	r0, 800a682 <_printf_float+0xe2>
 800a66e:	f1ba 0f00 	cmp.w	sl, #0
 800a672:	bfb8      	it	lt
 800a674:	232d      	movlt	r3, #45	; 0x2d
 800a676:	4880      	ldr	r0, [pc, #512]	; (800a878 <_printf_float+0x2d8>)
 800a678:	bfb8      	it	lt
 800a67a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800a67e:	4b7f      	ldr	r3, [pc, #508]	; (800a87c <_printf_float+0x2dc>)
 800a680:	e7d3      	b.n	800a62a <_printf_float+0x8a>
 800a682:	6863      	ldr	r3, [r4, #4]
 800a684:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800a688:	1c5a      	adds	r2, r3, #1
 800a68a:	d142      	bne.n	800a712 <_printf_float+0x172>
 800a68c:	2306      	movs	r3, #6
 800a68e:	6063      	str	r3, [r4, #4]
 800a690:	2200      	movs	r2, #0
 800a692:	9206      	str	r2, [sp, #24]
 800a694:	aa0e      	add	r2, sp, #56	; 0x38
 800a696:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800a69a:	aa0d      	add	r2, sp, #52	; 0x34
 800a69c:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 800a6a0:	9203      	str	r2, [sp, #12]
 800a6a2:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 800a6a6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800a6aa:	6023      	str	r3, [r4, #0]
 800a6ac:	6863      	ldr	r3, [r4, #4]
 800a6ae:	4642      	mov	r2, r8
 800a6b0:	9300      	str	r3, [sp, #0]
 800a6b2:	4628      	mov	r0, r5
 800a6b4:	4653      	mov	r3, sl
 800a6b6:	910b      	str	r1, [sp, #44]	; 0x2c
 800a6b8:	f7ff fed4 	bl	800a464 <__cvt>
 800a6bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a6be:	4680      	mov	r8, r0
 800a6c0:	2947      	cmp	r1, #71	; 0x47
 800a6c2:	990d      	ldr	r1, [sp, #52]	; 0x34
 800a6c4:	d108      	bne.n	800a6d8 <_printf_float+0x138>
 800a6c6:	1cc8      	adds	r0, r1, #3
 800a6c8:	db02      	blt.n	800a6d0 <_printf_float+0x130>
 800a6ca:	6863      	ldr	r3, [r4, #4]
 800a6cc:	4299      	cmp	r1, r3
 800a6ce:	dd40      	ble.n	800a752 <_printf_float+0x1b2>
 800a6d0:	f1a9 0902 	sub.w	r9, r9, #2
 800a6d4:	fa5f f989 	uxtb.w	r9, r9
 800a6d8:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800a6dc:	d81f      	bhi.n	800a71e <_printf_float+0x17e>
 800a6de:	464a      	mov	r2, r9
 800a6e0:	3901      	subs	r1, #1
 800a6e2:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800a6e6:	910d      	str	r1, [sp, #52]	; 0x34
 800a6e8:	f7ff ff1b 	bl	800a522 <__exponent>
 800a6ec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a6ee:	4682      	mov	sl, r0
 800a6f0:	1813      	adds	r3, r2, r0
 800a6f2:	2a01      	cmp	r2, #1
 800a6f4:	6123      	str	r3, [r4, #16]
 800a6f6:	dc02      	bgt.n	800a6fe <_printf_float+0x15e>
 800a6f8:	6822      	ldr	r2, [r4, #0]
 800a6fa:	07d2      	lsls	r2, r2, #31
 800a6fc:	d501      	bpl.n	800a702 <_printf_float+0x162>
 800a6fe:	3301      	adds	r3, #1
 800a700:	6123      	str	r3, [r4, #16]
 800a702:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800a706:	2b00      	cmp	r3, #0
 800a708:	d09b      	beq.n	800a642 <_printf_float+0xa2>
 800a70a:	232d      	movs	r3, #45	; 0x2d
 800a70c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a710:	e797      	b.n	800a642 <_printf_float+0xa2>
 800a712:	2947      	cmp	r1, #71	; 0x47
 800a714:	d1bc      	bne.n	800a690 <_printf_float+0xf0>
 800a716:	2b00      	cmp	r3, #0
 800a718:	d1ba      	bne.n	800a690 <_printf_float+0xf0>
 800a71a:	2301      	movs	r3, #1
 800a71c:	e7b7      	b.n	800a68e <_printf_float+0xee>
 800a71e:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800a722:	d118      	bne.n	800a756 <_printf_float+0x1b6>
 800a724:	2900      	cmp	r1, #0
 800a726:	6863      	ldr	r3, [r4, #4]
 800a728:	dd0b      	ble.n	800a742 <_printf_float+0x1a2>
 800a72a:	6121      	str	r1, [r4, #16]
 800a72c:	b913      	cbnz	r3, 800a734 <_printf_float+0x194>
 800a72e:	6822      	ldr	r2, [r4, #0]
 800a730:	07d0      	lsls	r0, r2, #31
 800a732:	d502      	bpl.n	800a73a <_printf_float+0x19a>
 800a734:	3301      	adds	r3, #1
 800a736:	440b      	add	r3, r1
 800a738:	6123      	str	r3, [r4, #16]
 800a73a:	f04f 0a00 	mov.w	sl, #0
 800a73e:	65a1      	str	r1, [r4, #88]	; 0x58
 800a740:	e7df      	b.n	800a702 <_printf_float+0x162>
 800a742:	b913      	cbnz	r3, 800a74a <_printf_float+0x1aa>
 800a744:	6822      	ldr	r2, [r4, #0]
 800a746:	07d2      	lsls	r2, r2, #31
 800a748:	d501      	bpl.n	800a74e <_printf_float+0x1ae>
 800a74a:	3302      	adds	r3, #2
 800a74c:	e7f4      	b.n	800a738 <_printf_float+0x198>
 800a74e:	2301      	movs	r3, #1
 800a750:	e7f2      	b.n	800a738 <_printf_float+0x198>
 800a752:	f04f 0967 	mov.w	r9, #103	; 0x67
 800a756:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a758:	4299      	cmp	r1, r3
 800a75a:	db05      	blt.n	800a768 <_printf_float+0x1c8>
 800a75c:	6823      	ldr	r3, [r4, #0]
 800a75e:	6121      	str	r1, [r4, #16]
 800a760:	07d8      	lsls	r0, r3, #31
 800a762:	d5ea      	bpl.n	800a73a <_printf_float+0x19a>
 800a764:	1c4b      	adds	r3, r1, #1
 800a766:	e7e7      	b.n	800a738 <_printf_float+0x198>
 800a768:	2900      	cmp	r1, #0
 800a76a:	bfcc      	ite	gt
 800a76c:	2201      	movgt	r2, #1
 800a76e:	f1c1 0202 	rsble	r2, r1, #2
 800a772:	4413      	add	r3, r2
 800a774:	e7e0      	b.n	800a738 <_printf_float+0x198>
 800a776:	6823      	ldr	r3, [r4, #0]
 800a778:	055a      	lsls	r2, r3, #21
 800a77a:	d407      	bmi.n	800a78c <_printf_float+0x1ec>
 800a77c:	6923      	ldr	r3, [r4, #16]
 800a77e:	4642      	mov	r2, r8
 800a780:	4631      	mov	r1, r6
 800a782:	4628      	mov	r0, r5
 800a784:	47b8      	blx	r7
 800a786:	3001      	adds	r0, #1
 800a788:	d12b      	bne.n	800a7e2 <_printf_float+0x242>
 800a78a:	e764      	b.n	800a656 <_printf_float+0xb6>
 800a78c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800a790:	f240 80dd 	bls.w	800a94e <_printf_float+0x3ae>
 800a794:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800a798:	2200      	movs	r2, #0
 800a79a:	2300      	movs	r3, #0
 800a79c:	f7f6 f904 	bl	80009a8 <__aeabi_dcmpeq>
 800a7a0:	2800      	cmp	r0, #0
 800a7a2:	d033      	beq.n	800a80c <_printf_float+0x26c>
 800a7a4:	2301      	movs	r3, #1
 800a7a6:	4631      	mov	r1, r6
 800a7a8:	4628      	mov	r0, r5
 800a7aa:	4a35      	ldr	r2, [pc, #212]	; (800a880 <_printf_float+0x2e0>)
 800a7ac:	47b8      	blx	r7
 800a7ae:	3001      	adds	r0, #1
 800a7b0:	f43f af51 	beq.w	800a656 <_printf_float+0xb6>
 800a7b4:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800a7b8:	429a      	cmp	r2, r3
 800a7ba:	db02      	blt.n	800a7c2 <_printf_float+0x222>
 800a7bc:	6823      	ldr	r3, [r4, #0]
 800a7be:	07d8      	lsls	r0, r3, #31
 800a7c0:	d50f      	bpl.n	800a7e2 <_printf_float+0x242>
 800a7c2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800a7c6:	4631      	mov	r1, r6
 800a7c8:	4628      	mov	r0, r5
 800a7ca:	47b8      	blx	r7
 800a7cc:	3001      	adds	r0, #1
 800a7ce:	f43f af42 	beq.w	800a656 <_printf_float+0xb6>
 800a7d2:	f04f 0800 	mov.w	r8, #0
 800a7d6:	f104 091a 	add.w	r9, r4, #26
 800a7da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a7dc:	3b01      	subs	r3, #1
 800a7de:	4543      	cmp	r3, r8
 800a7e0:	dc09      	bgt.n	800a7f6 <_printf_float+0x256>
 800a7e2:	6823      	ldr	r3, [r4, #0]
 800a7e4:	079b      	lsls	r3, r3, #30
 800a7e6:	f100 8102 	bmi.w	800a9ee <_printf_float+0x44e>
 800a7ea:	68e0      	ldr	r0, [r4, #12]
 800a7ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a7ee:	4298      	cmp	r0, r3
 800a7f0:	bfb8      	it	lt
 800a7f2:	4618      	movlt	r0, r3
 800a7f4:	e731      	b.n	800a65a <_printf_float+0xba>
 800a7f6:	2301      	movs	r3, #1
 800a7f8:	464a      	mov	r2, r9
 800a7fa:	4631      	mov	r1, r6
 800a7fc:	4628      	mov	r0, r5
 800a7fe:	47b8      	blx	r7
 800a800:	3001      	adds	r0, #1
 800a802:	f43f af28 	beq.w	800a656 <_printf_float+0xb6>
 800a806:	f108 0801 	add.w	r8, r8, #1
 800a80a:	e7e6      	b.n	800a7da <_printf_float+0x23a>
 800a80c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a80e:	2b00      	cmp	r3, #0
 800a810:	dc38      	bgt.n	800a884 <_printf_float+0x2e4>
 800a812:	2301      	movs	r3, #1
 800a814:	4631      	mov	r1, r6
 800a816:	4628      	mov	r0, r5
 800a818:	4a19      	ldr	r2, [pc, #100]	; (800a880 <_printf_float+0x2e0>)
 800a81a:	47b8      	blx	r7
 800a81c:	3001      	adds	r0, #1
 800a81e:	f43f af1a 	beq.w	800a656 <_printf_float+0xb6>
 800a822:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800a826:	4313      	orrs	r3, r2
 800a828:	d102      	bne.n	800a830 <_printf_float+0x290>
 800a82a:	6823      	ldr	r3, [r4, #0]
 800a82c:	07d9      	lsls	r1, r3, #31
 800a82e:	d5d8      	bpl.n	800a7e2 <_printf_float+0x242>
 800a830:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800a834:	4631      	mov	r1, r6
 800a836:	4628      	mov	r0, r5
 800a838:	47b8      	blx	r7
 800a83a:	3001      	adds	r0, #1
 800a83c:	f43f af0b 	beq.w	800a656 <_printf_float+0xb6>
 800a840:	f04f 0900 	mov.w	r9, #0
 800a844:	f104 0a1a 	add.w	sl, r4, #26
 800a848:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a84a:	425b      	negs	r3, r3
 800a84c:	454b      	cmp	r3, r9
 800a84e:	dc01      	bgt.n	800a854 <_printf_float+0x2b4>
 800a850:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a852:	e794      	b.n	800a77e <_printf_float+0x1de>
 800a854:	2301      	movs	r3, #1
 800a856:	4652      	mov	r2, sl
 800a858:	4631      	mov	r1, r6
 800a85a:	4628      	mov	r0, r5
 800a85c:	47b8      	blx	r7
 800a85e:	3001      	adds	r0, #1
 800a860:	f43f aef9 	beq.w	800a656 <_printf_float+0xb6>
 800a864:	f109 0901 	add.w	r9, r9, #1
 800a868:	e7ee      	b.n	800a848 <_printf_float+0x2a8>
 800a86a:	bf00      	nop
 800a86c:	7fefffff 	.word	0x7fefffff
 800a870:	0800eed8 	.word	0x0800eed8
 800a874:	0800eedc 	.word	0x0800eedc
 800a878:	0800eee4 	.word	0x0800eee4
 800a87c:	0800eee0 	.word	0x0800eee0
 800a880:	0800eee8 	.word	0x0800eee8
 800a884:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a886:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800a888:	429a      	cmp	r2, r3
 800a88a:	bfa8      	it	ge
 800a88c:	461a      	movge	r2, r3
 800a88e:	2a00      	cmp	r2, #0
 800a890:	4691      	mov	r9, r2
 800a892:	dc37      	bgt.n	800a904 <_printf_float+0x364>
 800a894:	f04f 0b00 	mov.w	fp, #0
 800a898:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800a89c:	f104 021a 	add.w	r2, r4, #26
 800a8a0:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 800a8a4:	ebaa 0309 	sub.w	r3, sl, r9
 800a8a8:	455b      	cmp	r3, fp
 800a8aa:	dc33      	bgt.n	800a914 <_printf_float+0x374>
 800a8ac:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800a8b0:	429a      	cmp	r2, r3
 800a8b2:	db3b      	blt.n	800a92c <_printf_float+0x38c>
 800a8b4:	6823      	ldr	r3, [r4, #0]
 800a8b6:	07da      	lsls	r2, r3, #31
 800a8b8:	d438      	bmi.n	800a92c <_printf_float+0x38c>
 800a8ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a8bc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800a8be:	eba2 030a 	sub.w	r3, r2, sl
 800a8c2:	eba2 0901 	sub.w	r9, r2, r1
 800a8c6:	4599      	cmp	r9, r3
 800a8c8:	bfa8      	it	ge
 800a8ca:	4699      	movge	r9, r3
 800a8cc:	f1b9 0f00 	cmp.w	r9, #0
 800a8d0:	dc34      	bgt.n	800a93c <_printf_float+0x39c>
 800a8d2:	f04f 0800 	mov.w	r8, #0
 800a8d6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800a8da:	f104 0a1a 	add.w	sl, r4, #26
 800a8de:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800a8e2:	1a9b      	subs	r3, r3, r2
 800a8e4:	eba3 0309 	sub.w	r3, r3, r9
 800a8e8:	4543      	cmp	r3, r8
 800a8ea:	f77f af7a 	ble.w	800a7e2 <_printf_float+0x242>
 800a8ee:	2301      	movs	r3, #1
 800a8f0:	4652      	mov	r2, sl
 800a8f2:	4631      	mov	r1, r6
 800a8f4:	4628      	mov	r0, r5
 800a8f6:	47b8      	blx	r7
 800a8f8:	3001      	adds	r0, #1
 800a8fa:	f43f aeac 	beq.w	800a656 <_printf_float+0xb6>
 800a8fe:	f108 0801 	add.w	r8, r8, #1
 800a902:	e7ec      	b.n	800a8de <_printf_float+0x33e>
 800a904:	4613      	mov	r3, r2
 800a906:	4631      	mov	r1, r6
 800a908:	4642      	mov	r2, r8
 800a90a:	4628      	mov	r0, r5
 800a90c:	47b8      	blx	r7
 800a90e:	3001      	adds	r0, #1
 800a910:	d1c0      	bne.n	800a894 <_printf_float+0x2f4>
 800a912:	e6a0      	b.n	800a656 <_printf_float+0xb6>
 800a914:	2301      	movs	r3, #1
 800a916:	4631      	mov	r1, r6
 800a918:	4628      	mov	r0, r5
 800a91a:	920b      	str	r2, [sp, #44]	; 0x2c
 800a91c:	47b8      	blx	r7
 800a91e:	3001      	adds	r0, #1
 800a920:	f43f ae99 	beq.w	800a656 <_printf_float+0xb6>
 800a924:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a926:	f10b 0b01 	add.w	fp, fp, #1
 800a92a:	e7b9      	b.n	800a8a0 <_printf_float+0x300>
 800a92c:	4631      	mov	r1, r6
 800a92e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800a932:	4628      	mov	r0, r5
 800a934:	47b8      	blx	r7
 800a936:	3001      	adds	r0, #1
 800a938:	d1bf      	bne.n	800a8ba <_printf_float+0x31a>
 800a93a:	e68c      	b.n	800a656 <_printf_float+0xb6>
 800a93c:	464b      	mov	r3, r9
 800a93e:	4631      	mov	r1, r6
 800a940:	4628      	mov	r0, r5
 800a942:	eb08 020a 	add.w	r2, r8, sl
 800a946:	47b8      	blx	r7
 800a948:	3001      	adds	r0, #1
 800a94a:	d1c2      	bne.n	800a8d2 <_printf_float+0x332>
 800a94c:	e683      	b.n	800a656 <_printf_float+0xb6>
 800a94e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a950:	2a01      	cmp	r2, #1
 800a952:	dc01      	bgt.n	800a958 <_printf_float+0x3b8>
 800a954:	07db      	lsls	r3, r3, #31
 800a956:	d537      	bpl.n	800a9c8 <_printf_float+0x428>
 800a958:	2301      	movs	r3, #1
 800a95a:	4642      	mov	r2, r8
 800a95c:	4631      	mov	r1, r6
 800a95e:	4628      	mov	r0, r5
 800a960:	47b8      	blx	r7
 800a962:	3001      	adds	r0, #1
 800a964:	f43f ae77 	beq.w	800a656 <_printf_float+0xb6>
 800a968:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800a96c:	4631      	mov	r1, r6
 800a96e:	4628      	mov	r0, r5
 800a970:	47b8      	blx	r7
 800a972:	3001      	adds	r0, #1
 800a974:	f43f ae6f 	beq.w	800a656 <_printf_float+0xb6>
 800a978:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800a97c:	2200      	movs	r2, #0
 800a97e:	2300      	movs	r3, #0
 800a980:	f7f6 f812 	bl	80009a8 <__aeabi_dcmpeq>
 800a984:	b9d8      	cbnz	r0, 800a9be <_printf_float+0x41e>
 800a986:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a988:	f108 0201 	add.w	r2, r8, #1
 800a98c:	3b01      	subs	r3, #1
 800a98e:	4631      	mov	r1, r6
 800a990:	4628      	mov	r0, r5
 800a992:	47b8      	blx	r7
 800a994:	3001      	adds	r0, #1
 800a996:	d10e      	bne.n	800a9b6 <_printf_float+0x416>
 800a998:	e65d      	b.n	800a656 <_printf_float+0xb6>
 800a99a:	2301      	movs	r3, #1
 800a99c:	464a      	mov	r2, r9
 800a99e:	4631      	mov	r1, r6
 800a9a0:	4628      	mov	r0, r5
 800a9a2:	47b8      	blx	r7
 800a9a4:	3001      	adds	r0, #1
 800a9a6:	f43f ae56 	beq.w	800a656 <_printf_float+0xb6>
 800a9aa:	f108 0801 	add.w	r8, r8, #1
 800a9ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a9b0:	3b01      	subs	r3, #1
 800a9b2:	4543      	cmp	r3, r8
 800a9b4:	dcf1      	bgt.n	800a99a <_printf_float+0x3fa>
 800a9b6:	4653      	mov	r3, sl
 800a9b8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800a9bc:	e6e0      	b.n	800a780 <_printf_float+0x1e0>
 800a9be:	f04f 0800 	mov.w	r8, #0
 800a9c2:	f104 091a 	add.w	r9, r4, #26
 800a9c6:	e7f2      	b.n	800a9ae <_printf_float+0x40e>
 800a9c8:	2301      	movs	r3, #1
 800a9ca:	4642      	mov	r2, r8
 800a9cc:	e7df      	b.n	800a98e <_printf_float+0x3ee>
 800a9ce:	2301      	movs	r3, #1
 800a9d0:	464a      	mov	r2, r9
 800a9d2:	4631      	mov	r1, r6
 800a9d4:	4628      	mov	r0, r5
 800a9d6:	47b8      	blx	r7
 800a9d8:	3001      	adds	r0, #1
 800a9da:	f43f ae3c 	beq.w	800a656 <_printf_float+0xb6>
 800a9de:	f108 0801 	add.w	r8, r8, #1
 800a9e2:	68e3      	ldr	r3, [r4, #12]
 800a9e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800a9e6:	1a5b      	subs	r3, r3, r1
 800a9e8:	4543      	cmp	r3, r8
 800a9ea:	dcf0      	bgt.n	800a9ce <_printf_float+0x42e>
 800a9ec:	e6fd      	b.n	800a7ea <_printf_float+0x24a>
 800a9ee:	f04f 0800 	mov.w	r8, #0
 800a9f2:	f104 0919 	add.w	r9, r4, #25
 800a9f6:	e7f4      	b.n	800a9e2 <_printf_float+0x442>

0800a9f8 <_printf_common>:
 800a9f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a9fc:	4616      	mov	r6, r2
 800a9fe:	4699      	mov	r9, r3
 800aa00:	688a      	ldr	r2, [r1, #8]
 800aa02:	690b      	ldr	r3, [r1, #16]
 800aa04:	4607      	mov	r7, r0
 800aa06:	4293      	cmp	r3, r2
 800aa08:	bfb8      	it	lt
 800aa0a:	4613      	movlt	r3, r2
 800aa0c:	6033      	str	r3, [r6, #0]
 800aa0e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800aa12:	460c      	mov	r4, r1
 800aa14:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800aa18:	b10a      	cbz	r2, 800aa1e <_printf_common+0x26>
 800aa1a:	3301      	adds	r3, #1
 800aa1c:	6033      	str	r3, [r6, #0]
 800aa1e:	6823      	ldr	r3, [r4, #0]
 800aa20:	0699      	lsls	r1, r3, #26
 800aa22:	bf42      	ittt	mi
 800aa24:	6833      	ldrmi	r3, [r6, #0]
 800aa26:	3302      	addmi	r3, #2
 800aa28:	6033      	strmi	r3, [r6, #0]
 800aa2a:	6825      	ldr	r5, [r4, #0]
 800aa2c:	f015 0506 	ands.w	r5, r5, #6
 800aa30:	d106      	bne.n	800aa40 <_printf_common+0x48>
 800aa32:	f104 0a19 	add.w	sl, r4, #25
 800aa36:	68e3      	ldr	r3, [r4, #12]
 800aa38:	6832      	ldr	r2, [r6, #0]
 800aa3a:	1a9b      	subs	r3, r3, r2
 800aa3c:	42ab      	cmp	r3, r5
 800aa3e:	dc28      	bgt.n	800aa92 <_printf_common+0x9a>
 800aa40:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800aa44:	1e13      	subs	r3, r2, #0
 800aa46:	6822      	ldr	r2, [r4, #0]
 800aa48:	bf18      	it	ne
 800aa4a:	2301      	movne	r3, #1
 800aa4c:	0692      	lsls	r2, r2, #26
 800aa4e:	d42d      	bmi.n	800aaac <_printf_common+0xb4>
 800aa50:	4649      	mov	r1, r9
 800aa52:	4638      	mov	r0, r7
 800aa54:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800aa58:	47c0      	blx	r8
 800aa5a:	3001      	adds	r0, #1
 800aa5c:	d020      	beq.n	800aaa0 <_printf_common+0xa8>
 800aa5e:	6823      	ldr	r3, [r4, #0]
 800aa60:	68e5      	ldr	r5, [r4, #12]
 800aa62:	f003 0306 	and.w	r3, r3, #6
 800aa66:	2b04      	cmp	r3, #4
 800aa68:	bf18      	it	ne
 800aa6a:	2500      	movne	r5, #0
 800aa6c:	6832      	ldr	r2, [r6, #0]
 800aa6e:	f04f 0600 	mov.w	r6, #0
 800aa72:	68a3      	ldr	r3, [r4, #8]
 800aa74:	bf08      	it	eq
 800aa76:	1aad      	subeq	r5, r5, r2
 800aa78:	6922      	ldr	r2, [r4, #16]
 800aa7a:	bf08      	it	eq
 800aa7c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800aa80:	4293      	cmp	r3, r2
 800aa82:	bfc4      	itt	gt
 800aa84:	1a9b      	subgt	r3, r3, r2
 800aa86:	18ed      	addgt	r5, r5, r3
 800aa88:	341a      	adds	r4, #26
 800aa8a:	42b5      	cmp	r5, r6
 800aa8c:	d11a      	bne.n	800aac4 <_printf_common+0xcc>
 800aa8e:	2000      	movs	r0, #0
 800aa90:	e008      	b.n	800aaa4 <_printf_common+0xac>
 800aa92:	2301      	movs	r3, #1
 800aa94:	4652      	mov	r2, sl
 800aa96:	4649      	mov	r1, r9
 800aa98:	4638      	mov	r0, r7
 800aa9a:	47c0      	blx	r8
 800aa9c:	3001      	adds	r0, #1
 800aa9e:	d103      	bne.n	800aaa8 <_printf_common+0xb0>
 800aaa0:	f04f 30ff 	mov.w	r0, #4294967295
 800aaa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aaa8:	3501      	adds	r5, #1
 800aaaa:	e7c4      	b.n	800aa36 <_printf_common+0x3e>
 800aaac:	2030      	movs	r0, #48	; 0x30
 800aaae:	18e1      	adds	r1, r4, r3
 800aab0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800aab4:	1c5a      	adds	r2, r3, #1
 800aab6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800aaba:	4422      	add	r2, r4
 800aabc:	3302      	adds	r3, #2
 800aabe:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800aac2:	e7c5      	b.n	800aa50 <_printf_common+0x58>
 800aac4:	2301      	movs	r3, #1
 800aac6:	4622      	mov	r2, r4
 800aac8:	4649      	mov	r1, r9
 800aaca:	4638      	mov	r0, r7
 800aacc:	47c0      	blx	r8
 800aace:	3001      	adds	r0, #1
 800aad0:	d0e6      	beq.n	800aaa0 <_printf_common+0xa8>
 800aad2:	3601      	adds	r6, #1
 800aad4:	e7d9      	b.n	800aa8a <_printf_common+0x92>
	...

0800aad8 <_printf_i>:
 800aad8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800aadc:	460c      	mov	r4, r1
 800aade:	7e27      	ldrb	r7, [r4, #24]
 800aae0:	4691      	mov	r9, r2
 800aae2:	2f78      	cmp	r7, #120	; 0x78
 800aae4:	4680      	mov	r8, r0
 800aae6:	469a      	mov	sl, r3
 800aae8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800aaea:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800aaee:	d807      	bhi.n	800ab00 <_printf_i+0x28>
 800aaf0:	2f62      	cmp	r7, #98	; 0x62
 800aaf2:	d80a      	bhi.n	800ab0a <_printf_i+0x32>
 800aaf4:	2f00      	cmp	r7, #0
 800aaf6:	f000 80d9 	beq.w	800acac <_printf_i+0x1d4>
 800aafa:	2f58      	cmp	r7, #88	; 0x58
 800aafc:	f000 80a4 	beq.w	800ac48 <_printf_i+0x170>
 800ab00:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800ab04:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800ab08:	e03a      	b.n	800ab80 <_printf_i+0xa8>
 800ab0a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800ab0e:	2b15      	cmp	r3, #21
 800ab10:	d8f6      	bhi.n	800ab00 <_printf_i+0x28>
 800ab12:	a001      	add	r0, pc, #4	; (adr r0, 800ab18 <_printf_i+0x40>)
 800ab14:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800ab18:	0800ab71 	.word	0x0800ab71
 800ab1c:	0800ab85 	.word	0x0800ab85
 800ab20:	0800ab01 	.word	0x0800ab01
 800ab24:	0800ab01 	.word	0x0800ab01
 800ab28:	0800ab01 	.word	0x0800ab01
 800ab2c:	0800ab01 	.word	0x0800ab01
 800ab30:	0800ab85 	.word	0x0800ab85
 800ab34:	0800ab01 	.word	0x0800ab01
 800ab38:	0800ab01 	.word	0x0800ab01
 800ab3c:	0800ab01 	.word	0x0800ab01
 800ab40:	0800ab01 	.word	0x0800ab01
 800ab44:	0800ac93 	.word	0x0800ac93
 800ab48:	0800abb5 	.word	0x0800abb5
 800ab4c:	0800ac75 	.word	0x0800ac75
 800ab50:	0800ab01 	.word	0x0800ab01
 800ab54:	0800ab01 	.word	0x0800ab01
 800ab58:	0800acb5 	.word	0x0800acb5
 800ab5c:	0800ab01 	.word	0x0800ab01
 800ab60:	0800abb5 	.word	0x0800abb5
 800ab64:	0800ab01 	.word	0x0800ab01
 800ab68:	0800ab01 	.word	0x0800ab01
 800ab6c:	0800ac7d 	.word	0x0800ac7d
 800ab70:	680b      	ldr	r3, [r1, #0]
 800ab72:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800ab76:	1d1a      	adds	r2, r3, #4
 800ab78:	681b      	ldr	r3, [r3, #0]
 800ab7a:	600a      	str	r2, [r1, #0]
 800ab7c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ab80:	2301      	movs	r3, #1
 800ab82:	e0a4      	b.n	800acce <_printf_i+0x1f6>
 800ab84:	6825      	ldr	r5, [r4, #0]
 800ab86:	6808      	ldr	r0, [r1, #0]
 800ab88:	062e      	lsls	r6, r5, #24
 800ab8a:	f100 0304 	add.w	r3, r0, #4
 800ab8e:	d50a      	bpl.n	800aba6 <_printf_i+0xce>
 800ab90:	6805      	ldr	r5, [r0, #0]
 800ab92:	600b      	str	r3, [r1, #0]
 800ab94:	2d00      	cmp	r5, #0
 800ab96:	da03      	bge.n	800aba0 <_printf_i+0xc8>
 800ab98:	232d      	movs	r3, #45	; 0x2d
 800ab9a:	426d      	negs	r5, r5
 800ab9c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800aba0:	230a      	movs	r3, #10
 800aba2:	485e      	ldr	r0, [pc, #376]	; (800ad1c <_printf_i+0x244>)
 800aba4:	e019      	b.n	800abda <_printf_i+0x102>
 800aba6:	f015 0f40 	tst.w	r5, #64	; 0x40
 800abaa:	6805      	ldr	r5, [r0, #0]
 800abac:	600b      	str	r3, [r1, #0]
 800abae:	bf18      	it	ne
 800abb0:	b22d      	sxthne	r5, r5
 800abb2:	e7ef      	b.n	800ab94 <_printf_i+0xbc>
 800abb4:	680b      	ldr	r3, [r1, #0]
 800abb6:	6825      	ldr	r5, [r4, #0]
 800abb8:	1d18      	adds	r0, r3, #4
 800abba:	6008      	str	r0, [r1, #0]
 800abbc:	0628      	lsls	r0, r5, #24
 800abbe:	d501      	bpl.n	800abc4 <_printf_i+0xec>
 800abc0:	681d      	ldr	r5, [r3, #0]
 800abc2:	e002      	b.n	800abca <_printf_i+0xf2>
 800abc4:	0669      	lsls	r1, r5, #25
 800abc6:	d5fb      	bpl.n	800abc0 <_printf_i+0xe8>
 800abc8:	881d      	ldrh	r5, [r3, #0]
 800abca:	2f6f      	cmp	r7, #111	; 0x6f
 800abcc:	bf0c      	ite	eq
 800abce:	2308      	moveq	r3, #8
 800abd0:	230a      	movne	r3, #10
 800abd2:	4852      	ldr	r0, [pc, #328]	; (800ad1c <_printf_i+0x244>)
 800abd4:	2100      	movs	r1, #0
 800abd6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800abda:	6866      	ldr	r6, [r4, #4]
 800abdc:	2e00      	cmp	r6, #0
 800abde:	bfa8      	it	ge
 800abe0:	6821      	ldrge	r1, [r4, #0]
 800abe2:	60a6      	str	r6, [r4, #8]
 800abe4:	bfa4      	itt	ge
 800abe6:	f021 0104 	bicge.w	r1, r1, #4
 800abea:	6021      	strge	r1, [r4, #0]
 800abec:	b90d      	cbnz	r5, 800abf2 <_printf_i+0x11a>
 800abee:	2e00      	cmp	r6, #0
 800abf0:	d04d      	beq.n	800ac8e <_printf_i+0x1b6>
 800abf2:	4616      	mov	r6, r2
 800abf4:	fbb5 f1f3 	udiv	r1, r5, r3
 800abf8:	fb03 5711 	mls	r7, r3, r1, r5
 800abfc:	5dc7      	ldrb	r7, [r0, r7]
 800abfe:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800ac02:	462f      	mov	r7, r5
 800ac04:	42bb      	cmp	r3, r7
 800ac06:	460d      	mov	r5, r1
 800ac08:	d9f4      	bls.n	800abf4 <_printf_i+0x11c>
 800ac0a:	2b08      	cmp	r3, #8
 800ac0c:	d10b      	bne.n	800ac26 <_printf_i+0x14e>
 800ac0e:	6823      	ldr	r3, [r4, #0]
 800ac10:	07df      	lsls	r7, r3, #31
 800ac12:	d508      	bpl.n	800ac26 <_printf_i+0x14e>
 800ac14:	6923      	ldr	r3, [r4, #16]
 800ac16:	6861      	ldr	r1, [r4, #4]
 800ac18:	4299      	cmp	r1, r3
 800ac1a:	bfde      	ittt	le
 800ac1c:	2330      	movle	r3, #48	; 0x30
 800ac1e:	f806 3c01 	strble.w	r3, [r6, #-1]
 800ac22:	f106 36ff 	addle.w	r6, r6, #4294967295
 800ac26:	1b92      	subs	r2, r2, r6
 800ac28:	6122      	str	r2, [r4, #16]
 800ac2a:	464b      	mov	r3, r9
 800ac2c:	4621      	mov	r1, r4
 800ac2e:	4640      	mov	r0, r8
 800ac30:	f8cd a000 	str.w	sl, [sp]
 800ac34:	aa03      	add	r2, sp, #12
 800ac36:	f7ff fedf 	bl	800a9f8 <_printf_common>
 800ac3a:	3001      	adds	r0, #1
 800ac3c:	d14c      	bne.n	800acd8 <_printf_i+0x200>
 800ac3e:	f04f 30ff 	mov.w	r0, #4294967295
 800ac42:	b004      	add	sp, #16
 800ac44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ac48:	4834      	ldr	r0, [pc, #208]	; (800ad1c <_printf_i+0x244>)
 800ac4a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800ac4e:	680e      	ldr	r6, [r1, #0]
 800ac50:	6823      	ldr	r3, [r4, #0]
 800ac52:	f856 5b04 	ldr.w	r5, [r6], #4
 800ac56:	061f      	lsls	r7, r3, #24
 800ac58:	600e      	str	r6, [r1, #0]
 800ac5a:	d514      	bpl.n	800ac86 <_printf_i+0x1ae>
 800ac5c:	07d9      	lsls	r1, r3, #31
 800ac5e:	bf44      	itt	mi
 800ac60:	f043 0320 	orrmi.w	r3, r3, #32
 800ac64:	6023      	strmi	r3, [r4, #0]
 800ac66:	b91d      	cbnz	r5, 800ac70 <_printf_i+0x198>
 800ac68:	6823      	ldr	r3, [r4, #0]
 800ac6a:	f023 0320 	bic.w	r3, r3, #32
 800ac6e:	6023      	str	r3, [r4, #0]
 800ac70:	2310      	movs	r3, #16
 800ac72:	e7af      	b.n	800abd4 <_printf_i+0xfc>
 800ac74:	6823      	ldr	r3, [r4, #0]
 800ac76:	f043 0320 	orr.w	r3, r3, #32
 800ac7a:	6023      	str	r3, [r4, #0]
 800ac7c:	2378      	movs	r3, #120	; 0x78
 800ac7e:	4828      	ldr	r0, [pc, #160]	; (800ad20 <_printf_i+0x248>)
 800ac80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800ac84:	e7e3      	b.n	800ac4e <_printf_i+0x176>
 800ac86:	065e      	lsls	r6, r3, #25
 800ac88:	bf48      	it	mi
 800ac8a:	b2ad      	uxthmi	r5, r5
 800ac8c:	e7e6      	b.n	800ac5c <_printf_i+0x184>
 800ac8e:	4616      	mov	r6, r2
 800ac90:	e7bb      	b.n	800ac0a <_printf_i+0x132>
 800ac92:	680b      	ldr	r3, [r1, #0]
 800ac94:	6826      	ldr	r6, [r4, #0]
 800ac96:	1d1d      	adds	r5, r3, #4
 800ac98:	6960      	ldr	r0, [r4, #20]
 800ac9a:	600d      	str	r5, [r1, #0]
 800ac9c:	0635      	lsls	r5, r6, #24
 800ac9e:	681b      	ldr	r3, [r3, #0]
 800aca0:	d501      	bpl.n	800aca6 <_printf_i+0x1ce>
 800aca2:	6018      	str	r0, [r3, #0]
 800aca4:	e002      	b.n	800acac <_printf_i+0x1d4>
 800aca6:	0671      	lsls	r1, r6, #25
 800aca8:	d5fb      	bpl.n	800aca2 <_printf_i+0x1ca>
 800acaa:	8018      	strh	r0, [r3, #0]
 800acac:	2300      	movs	r3, #0
 800acae:	4616      	mov	r6, r2
 800acb0:	6123      	str	r3, [r4, #16]
 800acb2:	e7ba      	b.n	800ac2a <_printf_i+0x152>
 800acb4:	680b      	ldr	r3, [r1, #0]
 800acb6:	1d1a      	adds	r2, r3, #4
 800acb8:	600a      	str	r2, [r1, #0]
 800acba:	681e      	ldr	r6, [r3, #0]
 800acbc:	2100      	movs	r1, #0
 800acbe:	4630      	mov	r0, r6
 800acc0:	6862      	ldr	r2, [r4, #4]
 800acc2:	f000 fff1 	bl	800bca8 <memchr>
 800acc6:	b108      	cbz	r0, 800accc <_printf_i+0x1f4>
 800acc8:	1b80      	subs	r0, r0, r6
 800acca:	6060      	str	r0, [r4, #4]
 800accc:	6863      	ldr	r3, [r4, #4]
 800acce:	6123      	str	r3, [r4, #16]
 800acd0:	2300      	movs	r3, #0
 800acd2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800acd6:	e7a8      	b.n	800ac2a <_printf_i+0x152>
 800acd8:	4632      	mov	r2, r6
 800acda:	4649      	mov	r1, r9
 800acdc:	4640      	mov	r0, r8
 800acde:	6923      	ldr	r3, [r4, #16]
 800ace0:	47d0      	blx	sl
 800ace2:	3001      	adds	r0, #1
 800ace4:	d0ab      	beq.n	800ac3e <_printf_i+0x166>
 800ace6:	6823      	ldr	r3, [r4, #0]
 800ace8:	079b      	lsls	r3, r3, #30
 800acea:	d413      	bmi.n	800ad14 <_printf_i+0x23c>
 800acec:	68e0      	ldr	r0, [r4, #12]
 800acee:	9b03      	ldr	r3, [sp, #12]
 800acf0:	4298      	cmp	r0, r3
 800acf2:	bfb8      	it	lt
 800acf4:	4618      	movlt	r0, r3
 800acf6:	e7a4      	b.n	800ac42 <_printf_i+0x16a>
 800acf8:	2301      	movs	r3, #1
 800acfa:	4632      	mov	r2, r6
 800acfc:	4649      	mov	r1, r9
 800acfe:	4640      	mov	r0, r8
 800ad00:	47d0      	blx	sl
 800ad02:	3001      	adds	r0, #1
 800ad04:	d09b      	beq.n	800ac3e <_printf_i+0x166>
 800ad06:	3501      	adds	r5, #1
 800ad08:	68e3      	ldr	r3, [r4, #12]
 800ad0a:	9903      	ldr	r1, [sp, #12]
 800ad0c:	1a5b      	subs	r3, r3, r1
 800ad0e:	42ab      	cmp	r3, r5
 800ad10:	dcf2      	bgt.n	800acf8 <_printf_i+0x220>
 800ad12:	e7eb      	b.n	800acec <_printf_i+0x214>
 800ad14:	2500      	movs	r5, #0
 800ad16:	f104 0619 	add.w	r6, r4, #25
 800ad1a:	e7f5      	b.n	800ad08 <_printf_i+0x230>
 800ad1c:	0800eeea 	.word	0x0800eeea
 800ad20:	0800eefb 	.word	0x0800eefb

0800ad24 <iprintf>:
 800ad24:	b40f      	push	{r0, r1, r2, r3}
 800ad26:	4b0a      	ldr	r3, [pc, #40]	; (800ad50 <iprintf+0x2c>)
 800ad28:	b513      	push	{r0, r1, r4, lr}
 800ad2a:	681c      	ldr	r4, [r3, #0]
 800ad2c:	b124      	cbz	r4, 800ad38 <iprintf+0x14>
 800ad2e:	69a3      	ldr	r3, [r4, #24]
 800ad30:	b913      	cbnz	r3, 800ad38 <iprintf+0x14>
 800ad32:	4620      	mov	r0, r4
 800ad34:	f000 ff0a 	bl	800bb4c <__sinit>
 800ad38:	ab05      	add	r3, sp, #20
 800ad3a:	4620      	mov	r0, r4
 800ad3c:	9a04      	ldr	r2, [sp, #16]
 800ad3e:	68a1      	ldr	r1, [r4, #8]
 800ad40:	9301      	str	r3, [sp, #4]
 800ad42:	f001 fd79 	bl	800c838 <_vfiprintf_r>
 800ad46:	b002      	add	sp, #8
 800ad48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ad4c:	b004      	add	sp, #16
 800ad4e:	4770      	bx	lr
 800ad50:	20000180 	.word	0x20000180

0800ad54 <siprintf>:
 800ad54:	b40e      	push	{r1, r2, r3}
 800ad56:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800ad5a:	b500      	push	{lr}
 800ad5c:	b09c      	sub	sp, #112	; 0x70
 800ad5e:	ab1d      	add	r3, sp, #116	; 0x74
 800ad60:	9002      	str	r0, [sp, #8]
 800ad62:	9006      	str	r0, [sp, #24]
 800ad64:	9107      	str	r1, [sp, #28]
 800ad66:	9104      	str	r1, [sp, #16]
 800ad68:	4808      	ldr	r0, [pc, #32]	; (800ad8c <siprintf+0x38>)
 800ad6a:	4909      	ldr	r1, [pc, #36]	; (800ad90 <siprintf+0x3c>)
 800ad6c:	f853 2b04 	ldr.w	r2, [r3], #4
 800ad70:	9105      	str	r1, [sp, #20]
 800ad72:	6800      	ldr	r0, [r0, #0]
 800ad74:	a902      	add	r1, sp, #8
 800ad76:	9301      	str	r3, [sp, #4]
 800ad78:	f001 fc36 	bl	800c5e8 <_svfiprintf_r>
 800ad7c:	2200      	movs	r2, #0
 800ad7e:	9b02      	ldr	r3, [sp, #8]
 800ad80:	701a      	strb	r2, [r3, #0]
 800ad82:	b01c      	add	sp, #112	; 0x70
 800ad84:	f85d eb04 	ldr.w	lr, [sp], #4
 800ad88:	b003      	add	sp, #12
 800ad8a:	4770      	bx	lr
 800ad8c:	20000180 	.word	0x20000180
 800ad90:	ffff0208 	.word	0xffff0208

0800ad94 <strcpy>:
 800ad94:	4603      	mov	r3, r0
 800ad96:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ad9a:	f803 2b01 	strb.w	r2, [r3], #1
 800ad9e:	2a00      	cmp	r2, #0
 800ada0:	d1f9      	bne.n	800ad96 <strcpy+0x2>
 800ada2:	4770      	bx	lr

0800ada4 <quorem>:
 800ada4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ada8:	6903      	ldr	r3, [r0, #16]
 800adaa:	690c      	ldr	r4, [r1, #16]
 800adac:	4607      	mov	r7, r0
 800adae:	42a3      	cmp	r3, r4
 800adb0:	f2c0 8083 	blt.w	800aeba <quorem+0x116>
 800adb4:	3c01      	subs	r4, #1
 800adb6:	f100 0514 	add.w	r5, r0, #20
 800adba:	f101 0814 	add.w	r8, r1, #20
 800adbe:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800adc2:	9301      	str	r3, [sp, #4]
 800adc4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800adc8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800adcc:	3301      	adds	r3, #1
 800adce:	429a      	cmp	r2, r3
 800add0:	fbb2 f6f3 	udiv	r6, r2, r3
 800add4:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800add8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800addc:	d332      	bcc.n	800ae44 <quorem+0xa0>
 800adde:	f04f 0e00 	mov.w	lr, #0
 800ade2:	4640      	mov	r0, r8
 800ade4:	46ac      	mov	ip, r5
 800ade6:	46f2      	mov	sl, lr
 800ade8:	f850 2b04 	ldr.w	r2, [r0], #4
 800adec:	b293      	uxth	r3, r2
 800adee:	fb06 e303 	mla	r3, r6, r3, lr
 800adf2:	0c12      	lsrs	r2, r2, #16
 800adf4:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800adf8:	fb06 e202 	mla	r2, r6, r2, lr
 800adfc:	b29b      	uxth	r3, r3
 800adfe:	ebaa 0303 	sub.w	r3, sl, r3
 800ae02:	f8dc a000 	ldr.w	sl, [ip]
 800ae06:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800ae0a:	fa1f fa8a 	uxth.w	sl, sl
 800ae0e:	4453      	add	r3, sl
 800ae10:	fa1f fa82 	uxth.w	sl, r2
 800ae14:	f8dc 2000 	ldr.w	r2, [ip]
 800ae18:	4581      	cmp	r9, r0
 800ae1a:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 800ae1e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800ae22:	b29b      	uxth	r3, r3
 800ae24:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800ae28:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800ae2c:	f84c 3b04 	str.w	r3, [ip], #4
 800ae30:	d2da      	bcs.n	800ade8 <quorem+0x44>
 800ae32:	f855 300b 	ldr.w	r3, [r5, fp]
 800ae36:	b92b      	cbnz	r3, 800ae44 <quorem+0xa0>
 800ae38:	9b01      	ldr	r3, [sp, #4]
 800ae3a:	3b04      	subs	r3, #4
 800ae3c:	429d      	cmp	r5, r3
 800ae3e:	461a      	mov	r2, r3
 800ae40:	d32f      	bcc.n	800aea2 <quorem+0xfe>
 800ae42:	613c      	str	r4, [r7, #16]
 800ae44:	4638      	mov	r0, r7
 800ae46:	f001 f9b7 	bl	800c1b8 <__mcmp>
 800ae4a:	2800      	cmp	r0, #0
 800ae4c:	db25      	blt.n	800ae9a <quorem+0xf6>
 800ae4e:	4628      	mov	r0, r5
 800ae50:	f04f 0c00 	mov.w	ip, #0
 800ae54:	3601      	adds	r6, #1
 800ae56:	f858 1b04 	ldr.w	r1, [r8], #4
 800ae5a:	f8d0 e000 	ldr.w	lr, [r0]
 800ae5e:	b28b      	uxth	r3, r1
 800ae60:	ebac 0303 	sub.w	r3, ip, r3
 800ae64:	fa1f f28e 	uxth.w	r2, lr
 800ae68:	4413      	add	r3, r2
 800ae6a:	0c0a      	lsrs	r2, r1, #16
 800ae6c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800ae70:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800ae74:	b29b      	uxth	r3, r3
 800ae76:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800ae7a:	45c1      	cmp	r9, r8
 800ae7c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800ae80:	f840 3b04 	str.w	r3, [r0], #4
 800ae84:	d2e7      	bcs.n	800ae56 <quorem+0xb2>
 800ae86:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800ae8a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800ae8e:	b922      	cbnz	r2, 800ae9a <quorem+0xf6>
 800ae90:	3b04      	subs	r3, #4
 800ae92:	429d      	cmp	r5, r3
 800ae94:	461a      	mov	r2, r3
 800ae96:	d30a      	bcc.n	800aeae <quorem+0x10a>
 800ae98:	613c      	str	r4, [r7, #16]
 800ae9a:	4630      	mov	r0, r6
 800ae9c:	b003      	add	sp, #12
 800ae9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aea2:	6812      	ldr	r2, [r2, #0]
 800aea4:	3b04      	subs	r3, #4
 800aea6:	2a00      	cmp	r2, #0
 800aea8:	d1cb      	bne.n	800ae42 <quorem+0x9e>
 800aeaa:	3c01      	subs	r4, #1
 800aeac:	e7c6      	b.n	800ae3c <quorem+0x98>
 800aeae:	6812      	ldr	r2, [r2, #0]
 800aeb0:	3b04      	subs	r3, #4
 800aeb2:	2a00      	cmp	r2, #0
 800aeb4:	d1f0      	bne.n	800ae98 <quorem+0xf4>
 800aeb6:	3c01      	subs	r4, #1
 800aeb8:	e7eb      	b.n	800ae92 <quorem+0xee>
 800aeba:	2000      	movs	r0, #0
 800aebc:	e7ee      	b.n	800ae9c <quorem+0xf8>
	...

0800aec0 <_dtoa_r>:
 800aec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aec4:	4616      	mov	r6, r2
 800aec6:	461f      	mov	r7, r3
 800aec8:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800aeca:	b099      	sub	sp, #100	; 0x64
 800aecc:	4605      	mov	r5, r0
 800aece:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800aed2:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800aed6:	b974      	cbnz	r4, 800aef6 <_dtoa_r+0x36>
 800aed8:	2010      	movs	r0, #16
 800aeda:	f000 fedd 	bl	800bc98 <malloc>
 800aede:	4602      	mov	r2, r0
 800aee0:	6268      	str	r0, [r5, #36]	; 0x24
 800aee2:	b920      	cbnz	r0, 800aeee <_dtoa_r+0x2e>
 800aee4:	21ea      	movs	r1, #234	; 0xea
 800aee6:	4bae      	ldr	r3, [pc, #696]	; (800b1a0 <_dtoa_r+0x2e0>)
 800aee8:	48ae      	ldr	r0, [pc, #696]	; (800b1a4 <_dtoa_r+0x2e4>)
 800aeea:	f001 fefb 	bl	800cce4 <__assert_func>
 800aeee:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800aef2:	6004      	str	r4, [r0, #0]
 800aef4:	60c4      	str	r4, [r0, #12]
 800aef6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800aef8:	6819      	ldr	r1, [r3, #0]
 800aefa:	b151      	cbz	r1, 800af12 <_dtoa_r+0x52>
 800aefc:	685a      	ldr	r2, [r3, #4]
 800aefe:	2301      	movs	r3, #1
 800af00:	4093      	lsls	r3, r2
 800af02:	604a      	str	r2, [r1, #4]
 800af04:	608b      	str	r3, [r1, #8]
 800af06:	4628      	mov	r0, r5
 800af08:	f000 ff1c 	bl	800bd44 <_Bfree>
 800af0c:	2200      	movs	r2, #0
 800af0e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800af10:	601a      	str	r2, [r3, #0]
 800af12:	1e3b      	subs	r3, r7, #0
 800af14:	bfaf      	iteee	ge
 800af16:	2300      	movge	r3, #0
 800af18:	2201      	movlt	r2, #1
 800af1a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800af1e:	9305      	strlt	r3, [sp, #20]
 800af20:	bfa8      	it	ge
 800af22:	f8c8 3000 	strge.w	r3, [r8]
 800af26:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800af2a:	4b9f      	ldr	r3, [pc, #636]	; (800b1a8 <_dtoa_r+0x2e8>)
 800af2c:	bfb8      	it	lt
 800af2e:	f8c8 2000 	strlt.w	r2, [r8]
 800af32:	ea33 0309 	bics.w	r3, r3, r9
 800af36:	d119      	bne.n	800af6c <_dtoa_r+0xac>
 800af38:	f242 730f 	movw	r3, #9999	; 0x270f
 800af3c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800af3e:	6013      	str	r3, [r2, #0]
 800af40:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800af44:	4333      	orrs	r3, r6
 800af46:	f000 8580 	beq.w	800ba4a <_dtoa_r+0xb8a>
 800af4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800af4c:	b953      	cbnz	r3, 800af64 <_dtoa_r+0xa4>
 800af4e:	4b97      	ldr	r3, [pc, #604]	; (800b1ac <_dtoa_r+0x2ec>)
 800af50:	e022      	b.n	800af98 <_dtoa_r+0xd8>
 800af52:	4b97      	ldr	r3, [pc, #604]	; (800b1b0 <_dtoa_r+0x2f0>)
 800af54:	9308      	str	r3, [sp, #32]
 800af56:	3308      	adds	r3, #8
 800af58:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800af5a:	6013      	str	r3, [r2, #0]
 800af5c:	9808      	ldr	r0, [sp, #32]
 800af5e:	b019      	add	sp, #100	; 0x64
 800af60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af64:	4b91      	ldr	r3, [pc, #580]	; (800b1ac <_dtoa_r+0x2ec>)
 800af66:	9308      	str	r3, [sp, #32]
 800af68:	3303      	adds	r3, #3
 800af6a:	e7f5      	b.n	800af58 <_dtoa_r+0x98>
 800af6c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800af70:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800af74:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800af78:	2200      	movs	r2, #0
 800af7a:	2300      	movs	r3, #0
 800af7c:	f7f5 fd14 	bl	80009a8 <__aeabi_dcmpeq>
 800af80:	4680      	mov	r8, r0
 800af82:	b158      	cbz	r0, 800af9c <_dtoa_r+0xdc>
 800af84:	2301      	movs	r3, #1
 800af86:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800af88:	6013      	str	r3, [r2, #0]
 800af8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800af8c:	2b00      	cmp	r3, #0
 800af8e:	f000 8559 	beq.w	800ba44 <_dtoa_r+0xb84>
 800af92:	4888      	ldr	r0, [pc, #544]	; (800b1b4 <_dtoa_r+0x2f4>)
 800af94:	6018      	str	r0, [r3, #0]
 800af96:	1e43      	subs	r3, r0, #1
 800af98:	9308      	str	r3, [sp, #32]
 800af9a:	e7df      	b.n	800af5c <_dtoa_r+0x9c>
 800af9c:	ab16      	add	r3, sp, #88	; 0x58
 800af9e:	9301      	str	r3, [sp, #4]
 800afa0:	ab17      	add	r3, sp, #92	; 0x5c
 800afa2:	9300      	str	r3, [sp, #0]
 800afa4:	4628      	mov	r0, r5
 800afa6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800afaa:	f001 f9b1 	bl	800c310 <__d2b>
 800afae:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800afb2:	4682      	mov	sl, r0
 800afb4:	2c00      	cmp	r4, #0
 800afb6:	d07e      	beq.n	800b0b6 <_dtoa_r+0x1f6>
 800afb8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800afbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800afbe:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800afc2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800afc6:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800afca:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800afce:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800afd2:	2200      	movs	r2, #0
 800afd4:	4b78      	ldr	r3, [pc, #480]	; (800b1b8 <_dtoa_r+0x2f8>)
 800afd6:	f7f5 f8c7 	bl	8000168 <__aeabi_dsub>
 800afda:	a36b      	add	r3, pc, #428	; (adr r3, 800b188 <_dtoa_r+0x2c8>)
 800afdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800afe0:	f7f5 fa7a 	bl	80004d8 <__aeabi_dmul>
 800afe4:	a36a      	add	r3, pc, #424	; (adr r3, 800b190 <_dtoa_r+0x2d0>)
 800afe6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800afea:	f7f5 f8bf 	bl	800016c <__adddf3>
 800afee:	4606      	mov	r6, r0
 800aff0:	4620      	mov	r0, r4
 800aff2:	460f      	mov	r7, r1
 800aff4:	f7f5 fa06 	bl	8000404 <__aeabi_i2d>
 800aff8:	a367      	add	r3, pc, #412	; (adr r3, 800b198 <_dtoa_r+0x2d8>)
 800affa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800affe:	f7f5 fa6b 	bl	80004d8 <__aeabi_dmul>
 800b002:	4602      	mov	r2, r0
 800b004:	460b      	mov	r3, r1
 800b006:	4630      	mov	r0, r6
 800b008:	4639      	mov	r1, r7
 800b00a:	f7f5 f8af 	bl	800016c <__adddf3>
 800b00e:	4606      	mov	r6, r0
 800b010:	460f      	mov	r7, r1
 800b012:	f7f5 fd11 	bl	8000a38 <__aeabi_d2iz>
 800b016:	2200      	movs	r2, #0
 800b018:	4681      	mov	r9, r0
 800b01a:	2300      	movs	r3, #0
 800b01c:	4630      	mov	r0, r6
 800b01e:	4639      	mov	r1, r7
 800b020:	f7f5 fccc 	bl	80009bc <__aeabi_dcmplt>
 800b024:	b148      	cbz	r0, 800b03a <_dtoa_r+0x17a>
 800b026:	4648      	mov	r0, r9
 800b028:	f7f5 f9ec 	bl	8000404 <__aeabi_i2d>
 800b02c:	4632      	mov	r2, r6
 800b02e:	463b      	mov	r3, r7
 800b030:	f7f5 fcba 	bl	80009a8 <__aeabi_dcmpeq>
 800b034:	b908      	cbnz	r0, 800b03a <_dtoa_r+0x17a>
 800b036:	f109 39ff 	add.w	r9, r9, #4294967295
 800b03a:	f1b9 0f16 	cmp.w	r9, #22
 800b03e:	d857      	bhi.n	800b0f0 <_dtoa_r+0x230>
 800b040:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800b044:	4b5d      	ldr	r3, [pc, #372]	; (800b1bc <_dtoa_r+0x2fc>)
 800b046:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 800b04a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b04e:	f7f5 fcb5 	bl	80009bc <__aeabi_dcmplt>
 800b052:	2800      	cmp	r0, #0
 800b054:	d04e      	beq.n	800b0f4 <_dtoa_r+0x234>
 800b056:	2300      	movs	r3, #0
 800b058:	f109 39ff 	add.w	r9, r9, #4294967295
 800b05c:	930f      	str	r3, [sp, #60]	; 0x3c
 800b05e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800b060:	1b1c      	subs	r4, r3, r4
 800b062:	1e63      	subs	r3, r4, #1
 800b064:	9309      	str	r3, [sp, #36]	; 0x24
 800b066:	bf49      	itett	mi
 800b068:	f1c4 0301 	rsbmi	r3, r4, #1
 800b06c:	2300      	movpl	r3, #0
 800b06e:	9306      	strmi	r3, [sp, #24]
 800b070:	2300      	movmi	r3, #0
 800b072:	bf54      	ite	pl
 800b074:	9306      	strpl	r3, [sp, #24]
 800b076:	9309      	strmi	r3, [sp, #36]	; 0x24
 800b078:	f1b9 0f00 	cmp.w	r9, #0
 800b07c:	db3c      	blt.n	800b0f8 <_dtoa_r+0x238>
 800b07e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b080:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800b084:	444b      	add	r3, r9
 800b086:	9309      	str	r3, [sp, #36]	; 0x24
 800b088:	2300      	movs	r3, #0
 800b08a:	930a      	str	r3, [sp, #40]	; 0x28
 800b08c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b08e:	2b09      	cmp	r3, #9
 800b090:	d86c      	bhi.n	800b16c <_dtoa_r+0x2ac>
 800b092:	2b05      	cmp	r3, #5
 800b094:	bfc4      	itt	gt
 800b096:	3b04      	subgt	r3, #4
 800b098:	9322      	strgt	r3, [sp, #136]	; 0x88
 800b09a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b09c:	bfc8      	it	gt
 800b09e:	2400      	movgt	r4, #0
 800b0a0:	f1a3 0302 	sub.w	r3, r3, #2
 800b0a4:	bfd8      	it	le
 800b0a6:	2401      	movle	r4, #1
 800b0a8:	2b03      	cmp	r3, #3
 800b0aa:	f200 808b 	bhi.w	800b1c4 <_dtoa_r+0x304>
 800b0ae:	e8df f003 	tbb	[pc, r3]
 800b0b2:	4f2d      	.short	0x4f2d
 800b0b4:	5b4d      	.short	0x5b4d
 800b0b6:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800b0ba:	441c      	add	r4, r3
 800b0bc:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800b0c0:	2b20      	cmp	r3, #32
 800b0c2:	bfc3      	ittte	gt
 800b0c4:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800b0c8:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 800b0cc:	fa09 f303 	lslgt.w	r3, r9, r3
 800b0d0:	f1c3 0320 	rsble	r3, r3, #32
 800b0d4:	bfc6      	itte	gt
 800b0d6:	fa26 f000 	lsrgt.w	r0, r6, r0
 800b0da:	4318      	orrgt	r0, r3
 800b0dc:	fa06 f003 	lslle.w	r0, r6, r3
 800b0e0:	f7f5 f980 	bl	80003e4 <__aeabi_ui2d>
 800b0e4:	2301      	movs	r3, #1
 800b0e6:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800b0ea:	3c01      	subs	r4, #1
 800b0ec:	9313      	str	r3, [sp, #76]	; 0x4c
 800b0ee:	e770      	b.n	800afd2 <_dtoa_r+0x112>
 800b0f0:	2301      	movs	r3, #1
 800b0f2:	e7b3      	b.n	800b05c <_dtoa_r+0x19c>
 800b0f4:	900f      	str	r0, [sp, #60]	; 0x3c
 800b0f6:	e7b2      	b.n	800b05e <_dtoa_r+0x19e>
 800b0f8:	9b06      	ldr	r3, [sp, #24]
 800b0fa:	eba3 0309 	sub.w	r3, r3, r9
 800b0fe:	9306      	str	r3, [sp, #24]
 800b100:	f1c9 0300 	rsb	r3, r9, #0
 800b104:	930a      	str	r3, [sp, #40]	; 0x28
 800b106:	2300      	movs	r3, #0
 800b108:	930e      	str	r3, [sp, #56]	; 0x38
 800b10a:	e7bf      	b.n	800b08c <_dtoa_r+0x1cc>
 800b10c:	2300      	movs	r3, #0
 800b10e:	930b      	str	r3, [sp, #44]	; 0x2c
 800b110:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800b112:	2b00      	cmp	r3, #0
 800b114:	dc59      	bgt.n	800b1ca <_dtoa_r+0x30a>
 800b116:	f04f 0b01 	mov.w	fp, #1
 800b11a:	465b      	mov	r3, fp
 800b11c:	f8cd b008 	str.w	fp, [sp, #8]
 800b120:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 800b124:	2200      	movs	r2, #0
 800b126:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800b128:	6042      	str	r2, [r0, #4]
 800b12a:	2204      	movs	r2, #4
 800b12c:	f102 0614 	add.w	r6, r2, #20
 800b130:	429e      	cmp	r6, r3
 800b132:	6841      	ldr	r1, [r0, #4]
 800b134:	d94f      	bls.n	800b1d6 <_dtoa_r+0x316>
 800b136:	4628      	mov	r0, r5
 800b138:	f000 fdc4 	bl	800bcc4 <_Balloc>
 800b13c:	9008      	str	r0, [sp, #32]
 800b13e:	2800      	cmp	r0, #0
 800b140:	d14d      	bne.n	800b1de <_dtoa_r+0x31e>
 800b142:	4602      	mov	r2, r0
 800b144:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800b148:	4b1d      	ldr	r3, [pc, #116]	; (800b1c0 <_dtoa_r+0x300>)
 800b14a:	e6cd      	b.n	800aee8 <_dtoa_r+0x28>
 800b14c:	2301      	movs	r3, #1
 800b14e:	e7de      	b.n	800b10e <_dtoa_r+0x24e>
 800b150:	2300      	movs	r3, #0
 800b152:	930b      	str	r3, [sp, #44]	; 0x2c
 800b154:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800b156:	eb09 0b03 	add.w	fp, r9, r3
 800b15a:	f10b 0301 	add.w	r3, fp, #1
 800b15e:	2b01      	cmp	r3, #1
 800b160:	9302      	str	r3, [sp, #8]
 800b162:	bfb8      	it	lt
 800b164:	2301      	movlt	r3, #1
 800b166:	e7dd      	b.n	800b124 <_dtoa_r+0x264>
 800b168:	2301      	movs	r3, #1
 800b16a:	e7f2      	b.n	800b152 <_dtoa_r+0x292>
 800b16c:	2401      	movs	r4, #1
 800b16e:	2300      	movs	r3, #0
 800b170:	940b      	str	r4, [sp, #44]	; 0x2c
 800b172:	9322      	str	r3, [sp, #136]	; 0x88
 800b174:	f04f 3bff 	mov.w	fp, #4294967295
 800b178:	2200      	movs	r2, #0
 800b17a:	2312      	movs	r3, #18
 800b17c:	f8cd b008 	str.w	fp, [sp, #8]
 800b180:	9223      	str	r2, [sp, #140]	; 0x8c
 800b182:	e7cf      	b.n	800b124 <_dtoa_r+0x264>
 800b184:	f3af 8000 	nop.w
 800b188:	636f4361 	.word	0x636f4361
 800b18c:	3fd287a7 	.word	0x3fd287a7
 800b190:	8b60c8b3 	.word	0x8b60c8b3
 800b194:	3fc68a28 	.word	0x3fc68a28
 800b198:	509f79fb 	.word	0x509f79fb
 800b19c:	3fd34413 	.word	0x3fd34413
 800b1a0:	0800ef19 	.word	0x0800ef19
 800b1a4:	0800ef30 	.word	0x0800ef30
 800b1a8:	7ff00000 	.word	0x7ff00000
 800b1ac:	0800ef15 	.word	0x0800ef15
 800b1b0:	0800ef0c 	.word	0x0800ef0c
 800b1b4:	0800eee9 	.word	0x0800eee9
 800b1b8:	3ff80000 	.word	0x3ff80000
 800b1bc:	0800f088 	.word	0x0800f088
 800b1c0:	0800ef8f 	.word	0x0800ef8f
 800b1c4:	2301      	movs	r3, #1
 800b1c6:	930b      	str	r3, [sp, #44]	; 0x2c
 800b1c8:	e7d4      	b.n	800b174 <_dtoa_r+0x2b4>
 800b1ca:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 800b1ce:	465b      	mov	r3, fp
 800b1d0:	f8cd b008 	str.w	fp, [sp, #8]
 800b1d4:	e7a6      	b.n	800b124 <_dtoa_r+0x264>
 800b1d6:	3101      	adds	r1, #1
 800b1d8:	6041      	str	r1, [r0, #4]
 800b1da:	0052      	lsls	r2, r2, #1
 800b1dc:	e7a6      	b.n	800b12c <_dtoa_r+0x26c>
 800b1de:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800b1e0:	9a08      	ldr	r2, [sp, #32]
 800b1e2:	601a      	str	r2, [r3, #0]
 800b1e4:	9b02      	ldr	r3, [sp, #8]
 800b1e6:	2b0e      	cmp	r3, #14
 800b1e8:	f200 80a8 	bhi.w	800b33c <_dtoa_r+0x47c>
 800b1ec:	2c00      	cmp	r4, #0
 800b1ee:	f000 80a5 	beq.w	800b33c <_dtoa_r+0x47c>
 800b1f2:	f1b9 0f00 	cmp.w	r9, #0
 800b1f6:	dd34      	ble.n	800b262 <_dtoa_r+0x3a2>
 800b1f8:	4a9a      	ldr	r2, [pc, #616]	; (800b464 <_dtoa_r+0x5a4>)
 800b1fa:	f009 030f 	and.w	r3, r9, #15
 800b1fe:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b202:	f419 7f80 	tst.w	r9, #256	; 0x100
 800b206:	e9d3 3400 	ldrd	r3, r4, [r3]
 800b20a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800b20e:	ea4f 1429 	mov.w	r4, r9, asr #4
 800b212:	d016      	beq.n	800b242 <_dtoa_r+0x382>
 800b214:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800b218:	4b93      	ldr	r3, [pc, #588]	; (800b468 <_dtoa_r+0x5a8>)
 800b21a:	2703      	movs	r7, #3
 800b21c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800b220:	f7f5 fa84 	bl	800072c <__aeabi_ddiv>
 800b224:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800b228:	f004 040f 	and.w	r4, r4, #15
 800b22c:	4e8e      	ldr	r6, [pc, #568]	; (800b468 <_dtoa_r+0x5a8>)
 800b22e:	b954      	cbnz	r4, 800b246 <_dtoa_r+0x386>
 800b230:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800b234:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b238:	f7f5 fa78 	bl	800072c <__aeabi_ddiv>
 800b23c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800b240:	e029      	b.n	800b296 <_dtoa_r+0x3d6>
 800b242:	2702      	movs	r7, #2
 800b244:	e7f2      	b.n	800b22c <_dtoa_r+0x36c>
 800b246:	07e1      	lsls	r1, r4, #31
 800b248:	d508      	bpl.n	800b25c <_dtoa_r+0x39c>
 800b24a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800b24e:	e9d6 2300 	ldrd	r2, r3, [r6]
 800b252:	f7f5 f941 	bl	80004d8 <__aeabi_dmul>
 800b256:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800b25a:	3701      	adds	r7, #1
 800b25c:	1064      	asrs	r4, r4, #1
 800b25e:	3608      	adds	r6, #8
 800b260:	e7e5      	b.n	800b22e <_dtoa_r+0x36e>
 800b262:	f000 80a5 	beq.w	800b3b0 <_dtoa_r+0x4f0>
 800b266:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800b26a:	f1c9 0400 	rsb	r4, r9, #0
 800b26e:	4b7d      	ldr	r3, [pc, #500]	; (800b464 <_dtoa_r+0x5a4>)
 800b270:	f004 020f 	and.w	r2, r4, #15
 800b274:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800b278:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b27c:	f7f5 f92c 	bl	80004d8 <__aeabi_dmul>
 800b280:	2702      	movs	r7, #2
 800b282:	2300      	movs	r3, #0
 800b284:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800b288:	4e77      	ldr	r6, [pc, #476]	; (800b468 <_dtoa_r+0x5a8>)
 800b28a:	1124      	asrs	r4, r4, #4
 800b28c:	2c00      	cmp	r4, #0
 800b28e:	f040 8084 	bne.w	800b39a <_dtoa_r+0x4da>
 800b292:	2b00      	cmp	r3, #0
 800b294:	d1d2      	bne.n	800b23c <_dtoa_r+0x37c>
 800b296:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b298:	2b00      	cmp	r3, #0
 800b29a:	f000 808b 	beq.w	800b3b4 <_dtoa_r+0x4f4>
 800b29e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800b2a2:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800b2a6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800b2aa:	2200      	movs	r2, #0
 800b2ac:	4b6f      	ldr	r3, [pc, #444]	; (800b46c <_dtoa_r+0x5ac>)
 800b2ae:	f7f5 fb85 	bl	80009bc <__aeabi_dcmplt>
 800b2b2:	2800      	cmp	r0, #0
 800b2b4:	d07e      	beq.n	800b3b4 <_dtoa_r+0x4f4>
 800b2b6:	9b02      	ldr	r3, [sp, #8]
 800b2b8:	2b00      	cmp	r3, #0
 800b2ba:	d07b      	beq.n	800b3b4 <_dtoa_r+0x4f4>
 800b2bc:	f1bb 0f00 	cmp.w	fp, #0
 800b2c0:	dd38      	ble.n	800b334 <_dtoa_r+0x474>
 800b2c2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800b2c6:	2200      	movs	r2, #0
 800b2c8:	4b69      	ldr	r3, [pc, #420]	; (800b470 <_dtoa_r+0x5b0>)
 800b2ca:	f7f5 f905 	bl	80004d8 <__aeabi_dmul>
 800b2ce:	465c      	mov	r4, fp
 800b2d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800b2d4:	f109 38ff 	add.w	r8, r9, #4294967295
 800b2d8:	3701      	adds	r7, #1
 800b2da:	4638      	mov	r0, r7
 800b2dc:	f7f5 f892 	bl	8000404 <__aeabi_i2d>
 800b2e0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800b2e4:	f7f5 f8f8 	bl	80004d8 <__aeabi_dmul>
 800b2e8:	2200      	movs	r2, #0
 800b2ea:	4b62      	ldr	r3, [pc, #392]	; (800b474 <_dtoa_r+0x5b4>)
 800b2ec:	f7f4 ff3e 	bl	800016c <__adddf3>
 800b2f0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800b2f4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800b2f8:	9611      	str	r6, [sp, #68]	; 0x44
 800b2fa:	2c00      	cmp	r4, #0
 800b2fc:	d15d      	bne.n	800b3ba <_dtoa_r+0x4fa>
 800b2fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b302:	2200      	movs	r2, #0
 800b304:	4b5c      	ldr	r3, [pc, #368]	; (800b478 <_dtoa_r+0x5b8>)
 800b306:	f7f4 ff2f 	bl	8000168 <__aeabi_dsub>
 800b30a:	4602      	mov	r2, r0
 800b30c:	460b      	mov	r3, r1
 800b30e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800b312:	4633      	mov	r3, r6
 800b314:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b316:	f7f5 fb6f 	bl	80009f8 <__aeabi_dcmpgt>
 800b31a:	2800      	cmp	r0, #0
 800b31c:	f040 829e 	bne.w	800b85c <_dtoa_r+0x99c>
 800b320:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b324:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b326:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800b32a:	f7f5 fb47 	bl	80009bc <__aeabi_dcmplt>
 800b32e:	2800      	cmp	r0, #0
 800b330:	f040 8292 	bne.w	800b858 <_dtoa_r+0x998>
 800b334:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800b338:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800b33c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b33e:	2b00      	cmp	r3, #0
 800b340:	f2c0 8153 	blt.w	800b5ea <_dtoa_r+0x72a>
 800b344:	f1b9 0f0e 	cmp.w	r9, #14
 800b348:	f300 814f 	bgt.w	800b5ea <_dtoa_r+0x72a>
 800b34c:	4b45      	ldr	r3, [pc, #276]	; (800b464 <_dtoa_r+0x5a4>)
 800b34e:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 800b352:	e9d3 3400 	ldrd	r3, r4, [r3]
 800b356:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800b35a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800b35c:	2b00      	cmp	r3, #0
 800b35e:	f280 80db 	bge.w	800b518 <_dtoa_r+0x658>
 800b362:	9b02      	ldr	r3, [sp, #8]
 800b364:	2b00      	cmp	r3, #0
 800b366:	f300 80d7 	bgt.w	800b518 <_dtoa_r+0x658>
 800b36a:	f040 8274 	bne.w	800b856 <_dtoa_r+0x996>
 800b36e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800b372:	2200      	movs	r2, #0
 800b374:	4b40      	ldr	r3, [pc, #256]	; (800b478 <_dtoa_r+0x5b8>)
 800b376:	f7f5 f8af 	bl	80004d8 <__aeabi_dmul>
 800b37a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800b37e:	f7f5 fb31 	bl	80009e4 <__aeabi_dcmpge>
 800b382:	9c02      	ldr	r4, [sp, #8]
 800b384:	4626      	mov	r6, r4
 800b386:	2800      	cmp	r0, #0
 800b388:	f040 824a 	bne.w	800b820 <_dtoa_r+0x960>
 800b38c:	2331      	movs	r3, #49	; 0x31
 800b38e:	9f08      	ldr	r7, [sp, #32]
 800b390:	f109 0901 	add.w	r9, r9, #1
 800b394:	f807 3b01 	strb.w	r3, [r7], #1
 800b398:	e246      	b.n	800b828 <_dtoa_r+0x968>
 800b39a:	07e2      	lsls	r2, r4, #31
 800b39c:	d505      	bpl.n	800b3aa <_dtoa_r+0x4ea>
 800b39e:	e9d6 2300 	ldrd	r2, r3, [r6]
 800b3a2:	f7f5 f899 	bl	80004d8 <__aeabi_dmul>
 800b3a6:	2301      	movs	r3, #1
 800b3a8:	3701      	adds	r7, #1
 800b3aa:	1064      	asrs	r4, r4, #1
 800b3ac:	3608      	adds	r6, #8
 800b3ae:	e76d      	b.n	800b28c <_dtoa_r+0x3cc>
 800b3b0:	2702      	movs	r7, #2
 800b3b2:	e770      	b.n	800b296 <_dtoa_r+0x3d6>
 800b3b4:	46c8      	mov	r8, r9
 800b3b6:	9c02      	ldr	r4, [sp, #8]
 800b3b8:	e78f      	b.n	800b2da <_dtoa_r+0x41a>
 800b3ba:	9908      	ldr	r1, [sp, #32]
 800b3bc:	4b29      	ldr	r3, [pc, #164]	; (800b464 <_dtoa_r+0x5a4>)
 800b3be:	4421      	add	r1, r4
 800b3c0:	9112      	str	r1, [sp, #72]	; 0x48
 800b3c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b3c4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800b3c8:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800b3cc:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800b3d0:	2900      	cmp	r1, #0
 800b3d2:	d055      	beq.n	800b480 <_dtoa_r+0x5c0>
 800b3d4:	2000      	movs	r0, #0
 800b3d6:	4929      	ldr	r1, [pc, #164]	; (800b47c <_dtoa_r+0x5bc>)
 800b3d8:	f7f5 f9a8 	bl	800072c <__aeabi_ddiv>
 800b3dc:	463b      	mov	r3, r7
 800b3de:	4632      	mov	r2, r6
 800b3e0:	f7f4 fec2 	bl	8000168 <__aeabi_dsub>
 800b3e4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800b3e8:	9f08      	ldr	r7, [sp, #32]
 800b3ea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b3ee:	f7f5 fb23 	bl	8000a38 <__aeabi_d2iz>
 800b3f2:	4604      	mov	r4, r0
 800b3f4:	f7f5 f806 	bl	8000404 <__aeabi_i2d>
 800b3f8:	4602      	mov	r2, r0
 800b3fa:	460b      	mov	r3, r1
 800b3fc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b400:	f7f4 feb2 	bl	8000168 <__aeabi_dsub>
 800b404:	4602      	mov	r2, r0
 800b406:	460b      	mov	r3, r1
 800b408:	3430      	adds	r4, #48	; 0x30
 800b40a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800b40e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800b412:	f807 4b01 	strb.w	r4, [r7], #1
 800b416:	f7f5 fad1 	bl	80009bc <__aeabi_dcmplt>
 800b41a:	2800      	cmp	r0, #0
 800b41c:	d174      	bne.n	800b508 <_dtoa_r+0x648>
 800b41e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800b422:	2000      	movs	r0, #0
 800b424:	4911      	ldr	r1, [pc, #68]	; (800b46c <_dtoa_r+0x5ac>)
 800b426:	f7f4 fe9f 	bl	8000168 <__aeabi_dsub>
 800b42a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800b42e:	f7f5 fac5 	bl	80009bc <__aeabi_dcmplt>
 800b432:	2800      	cmp	r0, #0
 800b434:	f040 80b6 	bne.w	800b5a4 <_dtoa_r+0x6e4>
 800b438:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b43a:	429f      	cmp	r7, r3
 800b43c:	f43f af7a 	beq.w	800b334 <_dtoa_r+0x474>
 800b440:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800b444:	2200      	movs	r2, #0
 800b446:	4b0a      	ldr	r3, [pc, #40]	; (800b470 <_dtoa_r+0x5b0>)
 800b448:	f7f5 f846 	bl	80004d8 <__aeabi_dmul>
 800b44c:	2200      	movs	r2, #0
 800b44e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800b452:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b456:	4b06      	ldr	r3, [pc, #24]	; (800b470 <_dtoa_r+0x5b0>)
 800b458:	f7f5 f83e 	bl	80004d8 <__aeabi_dmul>
 800b45c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800b460:	e7c3      	b.n	800b3ea <_dtoa_r+0x52a>
 800b462:	bf00      	nop
 800b464:	0800f088 	.word	0x0800f088
 800b468:	0800f060 	.word	0x0800f060
 800b46c:	3ff00000 	.word	0x3ff00000
 800b470:	40240000 	.word	0x40240000
 800b474:	401c0000 	.word	0x401c0000
 800b478:	40140000 	.word	0x40140000
 800b47c:	3fe00000 	.word	0x3fe00000
 800b480:	4630      	mov	r0, r6
 800b482:	4639      	mov	r1, r7
 800b484:	f7f5 f828 	bl	80004d8 <__aeabi_dmul>
 800b488:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b48a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800b48e:	9c08      	ldr	r4, [sp, #32]
 800b490:	9314      	str	r3, [sp, #80]	; 0x50
 800b492:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b496:	f7f5 facf 	bl	8000a38 <__aeabi_d2iz>
 800b49a:	9015      	str	r0, [sp, #84]	; 0x54
 800b49c:	f7f4 ffb2 	bl	8000404 <__aeabi_i2d>
 800b4a0:	4602      	mov	r2, r0
 800b4a2:	460b      	mov	r3, r1
 800b4a4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b4a8:	f7f4 fe5e 	bl	8000168 <__aeabi_dsub>
 800b4ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b4ae:	4606      	mov	r6, r0
 800b4b0:	3330      	adds	r3, #48	; 0x30
 800b4b2:	f804 3b01 	strb.w	r3, [r4], #1
 800b4b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b4b8:	460f      	mov	r7, r1
 800b4ba:	429c      	cmp	r4, r3
 800b4bc:	f04f 0200 	mov.w	r2, #0
 800b4c0:	d124      	bne.n	800b50c <_dtoa_r+0x64c>
 800b4c2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800b4c6:	4bb3      	ldr	r3, [pc, #716]	; (800b794 <_dtoa_r+0x8d4>)
 800b4c8:	f7f4 fe50 	bl	800016c <__adddf3>
 800b4cc:	4602      	mov	r2, r0
 800b4ce:	460b      	mov	r3, r1
 800b4d0:	4630      	mov	r0, r6
 800b4d2:	4639      	mov	r1, r7
 800b4d4:	f7f5 fa90 	bl	80009f8 <__aeabi_dcmpgt>
 800b4d8:	2800      	cmp	r0, #0
 800b4da:	d162      	bne.n	800b5a2 <_dtoa_r+0x6e2>
 800b4dc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800b4e0:	2000      	movs	r0, #0
 800b4e2:	49ac      	ldr	r1, [pc, #688]	; (800b794 <_dtoa_r+0x8d4>)
 800b4e4:	f7f4 fe40 	bl	8000168 <__aeabi_dsub>
 800b4e8:	4602      	mov	r2, r0
 800b4ea:	460b      	mov	r3, r1
 800b4ec:	4630      	mov	r0, r6
 800b4ee:	4639      	mov	r1, r7
 800b4f0:	f7f5 fa64 	bl	80009bc <__aeabi_dcmplt>
 800b4f4:	2800      	cmp	r0, #0
 800b4f6:	f43f af1d 	beq.w	800b334 <_dtoa_r+0x474>
 800b4fa:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800b4fc:	1e7b      	subs	r3, r7, #1
 800b4fe:	9314      	str	r3, [sp, #80]	; 0x50
 800b500:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800b504:	2b30      	cmp	r3, #48	; 0x30
 800b506:	d0f8      	beq.n	800b4fa <_dtoa_r+0x63a>
 800b508:	46c1      	mov	r9, r8
 800b50a:	e03a      	b.n	800b582 <_dtoa_r+0x6c2>
 800b50c:	4ba2      	ldr	r3, [pc, #648]	; (800b798 <_dtoa_r+0x8d8>)
 800b50e:	f7f4 ffe3 	bl	80004d8 <__aeabi_dmul>
 800b512:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800b516:	e7bc      	b.n	800b492 <_dtoa_r+0x5d2>
 800b518:	9f08      	ldr	r7, [sp, #32]
 800b51a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b51e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b522:	f7f5 f903 	bl	800072c <__aeabi_ddiv>
 800b526:	f7f5 fa87 	bl	8000a38 <__aeabi_d2iz>
 800b52a:	4604      	mov	r4, r0
 800b52c:	f7f4 ff6a 	bl	8000404 <__aeabi_i2d>
 800b530:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b534:	f7f4 ffd0 	bl	80004d8 <__aeabi_dmul>
 800b538:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800b53c:	460b      	mov	r3, r1
 800b53e:	4602      	mov	r2, r0
 800b540:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800b544:	f7f4 fe10 	bl	8000168 <__aeabi_dsub>
 800b548:	f807 6b01 	strb.w	r6, [r7], #1
 800b54c:	9e08      	ldr	r6, [sp, #32]
 800b54e:	9b02      	ldr	r3, [sp, #8]
 800b550:	1bbe      	subs	r6, r7, r6
 800b552:	42b3      	cmp	r3, r6
 800b554:	d13a      	bne.n	800b5cc <_dtoa_r+0x70c>
 800b556:	4602      	mov	r2, r0
 800b558:	460b      	mov	r3, r1
 800b55a:	f7f4 fe07 	bl	800016c <__adddf3>
 800b55e:	4602      	mov	r2, r0
 800b560:	460b      	mov	r3, r1
 800b562:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800b566:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b56a:	f7f5 fa45 	bl	80009f8 <__aeabi_dcmpgt>
 800b56e:	bb58      	cbnz	r0, 800b5c8 <_dtoa_r+0x708>
 800b570:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b574:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b578:	f7f5 fa16 	bl	80009a8 <__aeabi_dcmpeq>
 800b57c:	b108      	cbz	r0, 800b582 <_dtoa_r+0x6c2>
 800b57e:	07e1      	lsls	r1, r4, #31
 800b580:	d422      	bmi.n	800b5c8 <_dtoa_r+0x708>
 800b582:	4628      	mov	r0, r5
 800b584:	4651      	mov	r1, sl
 800b586:	f000 fbdd 	bl	800bd44 <_Bfree>
 800b58a:	2300      	movs	r3, #0
 800b58c:	703b      	strb	r3, [r7, #0]
 800b58e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800b590:	f109 0001 	add.w	r0, r9, #1
 800b594:	6018      	str	r0, [r3, #0]
 800b596:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800b598:	2b00      	cmp	r3, #0
 800b59a:	f43f acdf 	beq.w	800af5c <_dtoa_r+0x9c>
 800b59e:	601f      	str	r7, [r3, #0]
 800b5a0:	e4dc      	b.n	800af5c <_dtoa_r+0x9c>
 800b5a2:	4627      	mov	r7, r4
 800b5a4:	463b      	mov	r3, r7
 800b5a6:	461f      	mov	r7, r3
 800b5a8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800b5ac:	2a39      	cmp	r2, #57	; 0x39
 800b5ae:	d107      	bne.n	800b5c0 <_dtoa_r+0x700>
 800b5b0:	9a08      	ldr	r2, [sp, #32]
 800b5b2:	429a      	cmp	r2, r3
 800b5b4:	d1f7      	bne.n	800b5a6 <_dtoa_r+0x6e6>
 800b5b6:	2230      	movs	r2, #48	; 0x30
 800b5b8:	9908      	ldr	r1, [sp, #32]
 800b5ba:	f108 0801 	add.w	r8, r8, #1
 800b5be:	700a      	strb	r2, [r1, #0]
 800b5c0:	781a      	ldrb	r2, [r3, #0]
 800b5c2:	3201      	adds	r2, #1
 800b5c4:	701a      	strb	r2, [r3, #0]
 800b5c6:	e79f      	b.n	800b508 <_dtoa_r+0x648>
 800b5c8:	46c8      	mov	r8, r9
 800b5ca:	e7eb      	b.n	800b5a4 <_dtoa_r+0x6e4>
 800b5cc:	2200      	movs	r2, #0
 800b5ce:	4b72      	ldr	r3, [pc, #456]	; (800b798 <_dtoa_r+0x8d8>)
 800b5d0:	f7f4 ff82 	bl	80004d8 <__aeabi_dmul>
 800b5d4:	4602      	mov	r2, r0
 800b5d6:	460b      	mov	r3, r1
 800b5d8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800b5dc:	2200      	movs	r2, #0
 800b5de:	2300      	movs	r3, #0
 800b5e0:	f7f5 f9e2 	bl	80009a8 <__aeabi_dcmpeq>
 800b5e4:	2800      	cmp	r0, #0
 800b5e6:	d098      	beq.n	800b51a <_dtoa_r+0x65a>
 800b5e8:	e7cb      	b.n	800b582 <_dtoa_r+0x6c2>
 800b5ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b5ec:	2a00      	cmp	r2, #0
 800b5ee:	f000 80cd 	beq.w	800b78c <_dtoa_r+0x8cc>
 800b5f2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800b5f4:	2a01      	cmp	r2, #1
 800b5f6:	f300 80af 	bgt.w	800b758 <_dtoa_r+0x898>
 800b5fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b5fc:	2a00      	cmp	r2, #0
 800b5fe:	f000 80a7 	beq.w	800b750 <_dtoa_r+0x890>
 800b602:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800b606:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800b608:	9f06      	ldr	r7, [sp, #24]
 800b60a:	9a06      	ldr	r2, [sp, #24]
 800b60c:	2101      	movs	r1, #1
 800b60e:	441a      	add	r2, r3
 800b610:	9206      	str	r2, [sp, #24]
 800b612:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b614:	4628      	mov	r0, r5
 800b616:	441a      	add	r2, r3
 800b618:	9209      	str	r2, [sp, #36]	; 0x24
 800b61a:	f000 fc4d 	bl	800beb8 <__i2b>
 800b61e:	4606      	mov	r6, r0
 800b620:	2f00      	cmp	r7, #0
 800b622:	dd0c      	ble.n	800b63e <_dtoa_r+0x77e>
 800b624:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b626:	2b00      	cmp	r3, #0
 800b628:	dd09      	ble.n	800b63e <_dtoa_r+0x77e>
 800b62a:	42bb      	cmp	r3, r7
 800b62c:	bfa8      	it	ge
 800b62e:	463b      	movge	r3, r7
 800b630:	9a06      	ldr	r2, [sp, #24]
 800b632:	1aff      	subs	r7, r7, r3
 800b634:	1ad2      	subs	r2, r2, r3
 800b636:	9206      	str	r2, [sp, #24]
 800b638:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b63a:	1ad3      	subs	r3, r2, r3
 800b63c:	9309      	str	r3, [sp, #36]	; 0x24
 800b63e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b640:	b1f3      	cbz	r3, 800b680 <_dtoa_r+0x7c0>
 800b642:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b644:	2b00      	cmp	r3, #0
 800b646:	f000 80a9 	beq.w	800b79c <_dtoa_r+0x8dc>
 800b64a:	2c00      	cmp	r4, #0
 800b64c:	dd10      	ble.n	800b670 <_dtoa_r+0x7b0>
 800b64e:	4631      	mov	r1, r6
 800b650:	4622      	mov	r2, r4
 800b652:	4628      	mov	r0, r5
 800b654:	f000 fcea 	bl	800c02c <__pow5mult>
 800b658:	4652      	mov	r2, sl
 800b65a:	4601      	mov	r1, r0
 800b65c:	4606      	mov	r6, r0
 800b65e:	4628      	mov	r0, r5
 800b660:	f000 fc40 	bl	800bee4 <__multiply>
 800b664:	4680      	mov	r8, r0
 800b666:	4651      	mov	r1, sl
 800b668:	4628      	mov	r0, r5
 800b66a:	f000 fb6b 	bl	800bd44 <_Bfree>
 800b66e:	46c2      	mov	sl, r8
 800b670:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b672:	1b1a      	subs	r2, r3, r4
 800b674:	d004      	beq.n	800b680 <_dtoa_r+0x7c0>
 800b676:	4651      	mov	r1, sl
 800b678:	4628      	mov	r0, r5
 800b67a:	f000 fcd7 	bl	800c02c <__pow5mult>
 800b67e:	4682      	mov	sl, r0
 800b680:	2101      	movs	r1, #1
 800b682:	4628      	mov	r0, r5
 800b684:	f000 fc18 	bl	800beb8 <__i2b>
 800b688:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b68a:	4604      	mov	r4, r0
 800b68c:	2b00      	cmp	r3, #0
 800b68e:	f340 8087 	ble.w	800b7a0 <_dtoa_r+0x8e0>
 800b692:	461a      	mov	r2, r3
 800b694:	4601      	mov	r1, r0
 800b696:	4628      	mov	r0, r5
 800b698:	f000 fcc8 	bl	800c02c <__pow5mult>
 800b69c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b69e:	4604      	mov	r4, r0
 800b6a0:	2b01      	cmp	r3, #1
 800b6a2:	f340 8080 	ble.w	800b7a6 <_dtoa_r+0x8e6>
 800b6a6:	f04f 0800 	mov.w	r8, #0
 800b6aa:	6923      	ldr	r3, [r4, #16]
 800b6ac:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800b6b0:	6918      	ldr	r0, [r3, #16]
 800b6b2:	f000 fbb3 	bl	800be1c <__hi0bits>
 800b6b6:	f1c0 0020 	rsb	r0, r0, #32
 800b6ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b6bc:	4418      	add	r0, r3
 800b6be:	f010 001f 	ands.w	r0, r0, #31
 800b6c2:	f000 8092 	beq.w	800b7ea <_dtoa_r+0x92a>
 800b6c6:	f1c0 0320 	rsb	r3, r0, #32
 800b6ca:	2b04      	cmp	r3, #4
 800b6cc:	f340 808a 	ble.w	800b7e4 <_dtoa_r+0x924>
 800b6d0:	f1c0 001c 	rsb	r0, r0, #28
 800b6d4:	9b06      	ldr	r3, [sp, #24]
 800b6d6:	4407      	add	r7, r0
 800b6d8:	4403      	add	r3, r0
 800b6da:	9306      	str	r3, [sp, #24]
 800b6dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b6de:	4403      	add	r3, r0
 800b6e0:	9309      	str	r3, [sp, #36]	; 0x24
 800b6e2:	9b06      	ldr	r3, [sp, #24]
 800b6e4:	2b00      	cmp	r3, #0
 800b6e6:	dd05      	ble.n	800b6f4 <_dtoa_r+0x834>
 800b6e8:	4651      	mov	r1, sl
 800b6ea:	461a      	mov	r2, r3
 800b6ec:	4628      	mov	r0, r5
 800b6ee:	f000 fcf7 	bl	800c0e0 <__lshift>
 800b6f2:	4682      	mov	sl, r0
 800b6f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b6f6:	2b00      	cmp	r3, #0
 800b6f8:	dd05      	ble.n	800b706 <_dtoa_r+0x846>
 800b6fa:	4621      	mov	r1, r4
 800b6fc:	461a      	mov	r2, r3
 800b6fe:	4628      	mov	r0, r5
 800b700:	f000 fcee 	bl	800c0e0 <__lshift>
 800b704:	4604      	mov	r4, r0
 800b706:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b708:	2b00      	cmp	r3, #0
 800b70a:	d070      	beq.n	800b7ee <_dtoa_r+0x92e>
 800b70c:	4621      	mov	r1, r4
 800b70e:	4650      	mov	r0, sl
 800b710:	f000 fd52 	bl	800c1b8 <__mcmp>
 800b714:	2800      	cmp	r0, #0
 800b716:	da6a      	bge.n	800b7ee <_dtoa_r+0x92e>
 800b718:	2300      	movs	r3, #0
 800b71a:	4651      	mov	r1, sl
 800b71c:	220a      	movs	r2, #10
 800b71e:	4628      	mov	r0, r5
 800b720:	f000 fb32 	bl	800bd88 <__multadd>
 800b724:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b726:	4682      	mov	sl, r0
 800b728:	f109 39ff 	add.w	r9, r9, #4294967295
 800b72c:	2b00      	cmp	r3, #0
 800b72e:	f000 8193 	beq.w	800ba58 <_dtoa_r+0xb98>
 800b732:	4631      	mov	r1, r6
 800b734:	2300      	movs	r3, #0
 800b736:	220a      	movs	r2, #10
 800b738:	4628      	mov	r0, r5
 800b73a:	f000 fb25 	bl	800bd88 <__multadd>
 800b73e:	f1bb 0f00 	cmp.w	fp, #0
 800b742:	4606      	mov	r6, r0
 800b744:	f300 8093 	bgt.w	800b86e <_dtoa_r+0x9ae>
 800b748:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b74a:	2b02      	cmp	r3, #2
 800b74c:	dc57      	bgt.n	800b7fe <_dtoa_r+0x93e>
 800b74e:	e08e      	b.n	800b86e <_dtoa_r+0x9ae>
 800b750:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800b752:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800b756:	e756      	b.n	800b606 <_dtoa_r+0x746>
 800b758:	9b02      	ldr	r3, [sp, #8]
 800b75a:	1e5c      	subs	r4, r3, #1
 800b75c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b75e:	42a3      	cmp	r3, r4
 800b760:	bfb7      	itett	lt
 800b762:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800b764:	1b1c      	subge	r4, r3, r4
 800b766:	1ae2      	sublt	r2, r4, r3
 800b768:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800b76a:	bfbe      	ittt	lt
 800b76c:	940a      	strlt	r4, [sp, #40]	; 0x28
 800b76e:	189b      	addlt	r3, r3, r2
 800b770:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b772:	9b02      	ldr	r3, [sp, #8]
 800b774:	bfb8      	it	lt
 800b776:	2400      	movlt	r4, #0
 800b778:	2b00      	cmp	r3, #0
 800b77a:	bfbb      	ittet	lt
 800b77c:	9b06      	ldrlt	r3, [sp, #24]
 800b77e:	9a02      	ldrlt	r2, [sp, #8]
 800b780:	9f06      	ldrge	r7, [sp, #24]
 800b782:	1a9f      	sublt	r7, r3, r2
 800b784:	bfac      	ite	ge
 800b786:	9b02      	ldrge	r3, [sp, #8]
 800b788:	2300      	movlt	r3, #0
 800b78a:	e73e      	b.n	800b60a <_dtoa_r+0x74a>
 800b78c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800b78e:	9f06      	ldr	r7, [sp, #24]
 800b790:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800b792:	e745      	b.n	800b620 <_dtoa_r+0x760>
 800b794:	3fe00000 	.word	0x3fe00000
 800b798:	40240000 	.word	0x40240000
 800b79c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b79e:	e76a      	b.n	800b676 <_dtoa_r+0x7b6>
 800b7a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b7a2:	2b01      	cmp	r3, #1
 800b7a4:	dc19      	bgt.n	800b7da <_dtoa_r+0x91a>
 800b7a6:	9b04      	ldr	r3, [sp, #16]
 800b7a8:	b9bb      	cbnz	r3, 800b7da <_dtoa_r+0x91a>
 800b7aa:	9b05      	ldr	r3, [sp, #20]
 800b7ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800b7b0:	b99b      	cbnz	r3, 800b7da <_dtoa_r+0x91a>
 800b7b2:	9b05      	ldr	r3, [sp, #20]
 800b7b4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800b7b8:	0d1b      	lsrs	r3, r3, #20
 800b7ba:	051b      	lsls	r3, r3, #20
 800b7bc:	b183      	cbz	r3, 800b7e0 <_dtoa_r+0x920>
 800b7be:	f04f 0801 	mov.w	r8, #1
 800b7c2:	9b06      	ldr	r3, [sp, #24]
 800b7c4:	3301      	adds	r3, #1
 800b7c6:	9306      	str	r3, [sp, #24]
 800b7c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b7ca:	3301      	adds	r3, #1
 800b7cc:	9309      	str	r3, [sp, #36]	; 0x24
 800b7ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b7d0:	2b00      	cmp	r3, #0
 800b7d2:	f47f af6a 	bne.w	800b6aa <_dtoa_r+0x7ea>
 800b7d6:	2001      	movs	r0, #1
 800b7d8:	e76f      	b.n	800b6ba <_dtoa_r+0x7fa>
 800b7da:	f04f 0800 	mov.w	r8, #0
 800b7de:	e7f6      	b.n	800b7ce <_dtoa_r+0x90e>
 800b7e0:	4698      	mov	r8, r3
 800b7e2:	e7f4      	b.n	800b7ce <_dtoa_r+0x90e>
 800b7e4:	f43f af7d 	beq.w	800b6e2 <_dtoa_r+0x822>
 800b7e8:	4618      	mov	r0, r3
 800b7ea:	301c      	adds	r0, #28
 800b7ec:	e772      	b.n	800b6d4 <_dtoa_r+0x814>
 800b7ee:	9b02      	ldr	r3, [sp, #8]
 800b7f0:	2b00      	cmp	r3, #0
 800b7f2:	dc36      	bgt.n	800b862 <_dtoa_r+0x9a2>
 800b7f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b7f6:	2b02      	cmp	r3, #2
 800b7f8:	dd33      	ble.n	800b862 <_dtoa_r+0x9a2>
 800b7fa:	f8dd b008 	ldr.w	fp, [sp, #8]
 800b7fe:	f1bb 0f00 	cmp.w	fp, #0
 800b802:	d10d      	bne.n	800b820 <_dtoa_r+0x960>
 800b804:	4621      	mov	r1, r4
 800b806:	465b      	mov	r3, fp
 800b808:	2205      	movs	r2, #5
 800b80a:	4628      	mov	r0, r5
 800b80c:	f000 fabc 	bl	800bd88 <__multadd>
 800b810:	4601      	mov	r1, r0
 800b812:	4604      	mov	r4, r0
 800b814:	4650      	mov	r0, sl
 800b816:	f000 fccf 	bl	800c1b8 <__mcmp>
 800b81a:	2800      	cmp	r0, #0
 800b81c:	f73f adb6 	bgt.w	800b38c <_dtoa_r+0x4cc>
 800b820:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800b822:	9f08      	ldr	r7, [sp, #32]
 800b824:	ea6f 0903 	mvn.w	r9, r3
 800b828:	f04f 0800 	mov.w	r8, #0
 800b82c:	4621      	mov	r1, r4
 800b82e:	4628      	mov	r0, r5
 800b830:	f000 fa88 	bl	800bd44 <_Bfree>
 800b834:	2e00      	cmp	r6, #0
 800b836:	f43f aea4 	beq.w	800b582 <_dtoa_r+0x6c2>
 800b83a:	f1b8 0f00 	cmp.w	r8, #0
 800b83e:	d005      	beq.n	800b84c <_dtoa_r+0x98c>
 800b840:	45b0      	cmp	r8, r6
 800b842:	d003      	beq.n	800b84c <_dtoa_r+0x98c>
 800b844:	4641      	mov	r1, r8
 800b846:	4628      	mov	r0, r5
 800b848:	f000 fa7c 	bl	800bd44 <_Bfree>
 800b84c:	4631      	mov	r1, r6
 800b84e:	4628      	mov	r0, r5
 800b850:	f000 fa78 	bl	800bd44 <_Bfree>
 800b854:	e695      	b.n	800b582 <_dtoa_r+0x6c2>
 800b856:	2400      	movs	r4, #0
 800b858:	4626      	mov	r6, r4
 800b85a:	e7e1      	b.n	800b820 <_dtoa_r+0x960>
 800b85c:	46c1      	mov	r9, r8
 800b85e:	4626      	mov	r6, r4
 800b860:	e594      	b.n	800b38c <_dtoa_r+0x4cc>
 800b862:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b864:	f8dd b008 	ldr.w	fp, [sp, #8]
 800b868:	2b00      	cmp	r3, #0
 800b86a:	f000 80fc 	beq.w	800ba66 <_dtoa_r+0xba6>
 800b86e:	2f00      	cmp	r7, #0
 800b870:	dd05      	ble.n	800b87e <_dtoa_r+0x9be>
 800b872:	4631      	mov	r1, r6
 800b874:	463a      	mov	r2, r7
 800b876:	4628      	mov	r0, r5
 800b878:	f000 fc32 	bl	800c0e0 <__lshift>
 800b87c:	4606      	mov	r6, r0
 800b87e:	f1b8 0f00 	cmp.w	r8, #0
 800b882:	d05c      	beq.n	800b93e <_dtoa_r+0xa7e>
 800b884:	4628      	mov	r0, r5
 800b886:	6871      	ldr	r1, [r6, #4]
 800b888:	f000 fa1c 	bl	800bcc4 <_Balloc>
 800b88c:	4607      	mov	r7, r0
 800b88e:	b928      	cbnz	r0, 800b89c <_dtoa_r+0x9dc>
 800b890:	4602      	mov	r2, r0
 800b892:	f240 21ea 	movw	r1, #746	; 0x2ea
 800b896:	4b7e      	ldr	r3, [pc, #504]	; (800ba90 <_dtoa_r+0xbd0>)
 800b898:	f7ff bb26 	b.w	800aee8 <_dtoa_r+0x28>
 800b89c:	6932      	ldr	r2, [r6, #16]
 800b89e:	f106 010c 	add.w	r1, r6, #12
 800b8a2:	3202      	adds	r2, #2
 800b8a4:	0092      	lsls	r2, r2, #2
 800b8a6:	300c      	adds	r0, #12
 800b8a8:	f7fe fdc6 	bl	800a438 <memcpy>
 800b8ac:	2201      	movs	r2, #1
 800b8ae:	4639      	mov	r1, r7
 800b8b0:	4628      	mov	r0, r5
 800b8b2:	f000 fc15 	bl	800c0e0 <__lshift>
 800b8b6:	46b0      	mov	r8, r6
 800b8b8:	4606      	mov	r6, r0
 800b8ba:	9b08      	ldr	r3, [sp, #32]
 800b8bc:	3301      	adds	r3, #1
 800b8be:	9302      	str	r3, [sp, #8]
 800b8c0:	9b08      	ldr	r3, [sp, #32]
 800b8c2:	445b      	add	r3, fp
 800b8c4:	930a      	str	r3, [sp, #40]	; 0x28
 800b8c6:	9b04      	ldr	r3, [sp, #16]
 800b8c8:	f003 0301 	and.w	r3, r3, #1
 800b8cc:	9309      	str	r3, [sp, #36]	; 0x24
 800b8ce:	9b02      	ldr	r3, [sp, #8]
 800b8d0:	4621      	mov	r1, r4
 800b8d2:	4650      	mov	r0, sl
 800b8d4:	f103 3bff 	add.w	fp, r3, #4294967295
 800b8d8:	f7ff fa64 	bl	800ada4 <quorem>
 800b8dc:	4603      	mov	r3, r0
 800b8de:	4641      	mov	r1, r8
 800b8e0:	3330      	adds	r3, #48	; 0x30
 800b8e2:	9004      	str	r0, [sp, #16]
 800b8e4:	4650      	mov	r0, sl
 800b8e6:	930b      	str	r3, [sp, #44]	; 0x2c
 800b8e8:	f000 fc66 	bl	800c1b8 <__mcmp>
 800b8ec:	4632      	mov	r2, r6
 800b8ee:	9006      	str	r0, [sp, #24]
 800b8f0:	4621      	mov	r1, r4
 800b8f2:	4628      	mov	r0, r5
 800b8f4:	f000 fc7c 	bl	800c1f0 <__mdiff>
 800b8f8:	68c2      	ldr	r2, [r0, #12]
 800b8fa:	4607      	mov	r7, r0
 800b8fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b8fe:	bb02      	cbnz	r2, 800b942 <_dtoa_r+0xa82>
 800b900:	4601      	mov	r1, r0
 800b902:	4650      	mov	r0, sl
 800b904:	f000 fc58 	bl	800c1b8 <__mcmp>
 800b908:	4602      	mov	r2, r0
 800b90a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b90c:	4639      	mov	r1, r7
 800b90e:	4628      	mov	r0, r5
 800b910:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 800b914:	f000 fa16 	bl	800bd44 <_Bfree>
 800b918:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b91a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b91c:	9f02      	ldr	r7, [sp, #8]
 800b91e:	ea43 0102 	orr.w	r1, r3, r2
 800b922:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b924:	430b      	orrs	r3, r1
 800b926:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b928:	d10d      	bne.n	800b946 <_dtoa_r+0xa86>
 800b92a:	2b39      	cmp	r3, #57	; 0x39
 800b92c:	d027      	beq.n	800b97e <_dtoa_r+0xabe>
 800b92e:	9a06      	ldr	r2, [sp, #24]
 800b930:	2a00      	cmp	r2, #0
 800b932:	dd01      	ble.n	800b938 <_dtoa_r+0xa78>
 800b934:	9b04      	ldr	r3, [sp, #16]
 800b936:	3331      	adds	r3, #49	; 0x31
 800b938:	f88b 3000 	strb.w	r3, [fp]
 800b93c:	e776      	b.n	800b82c <_dtoa_r+0x96c>
 800b93e:	4630      	mov	r0, r6
 800b940:	e7b9      	b.n	800b8b6 <_dtoa_r+0x9f6>
 800b942:	2201      	movs	r2, #1
 800b944:	e7e2      	b.n	800b90c <_dtoa_r+0xa4c>
 800b946:	9906      	ldr	r1, [sp, #24]
 800b948:	2900      	cmp	r1, #0
 800b94a:	db04      	blt.n	800b956 <_dtoa_r+0xa96>
 800b94c:	9822      	ldr	r0, [sp, #136]	; 0x88
 800b94e:	4301      	orrs	r1, r0
 800b950:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b952:	4301      	orrs	r1, r0
 800b954:	d120      	bne.n	800b998 <_dtoa_r+0xad8>
 800b956:	2a00      	cmp	r2, #0
 800b958:	ddee      	ble.n	800b938 <_dtoa_r+0xa78>
 800b95a:	4651      	mov	r1, sl
 800b95c:	2201      	movs	r2, #1
 800b95e:	4628      	mov	r0, r5
 800b960:	9302      	str	r3, [sp, #8]
 800b962:	f000 fbbd 	bl	800c0e0 <__lshift>
 800b966:	4621      	mov	r1, r4
 800b968:	4682      	mov	sl, r0
 800b96a:	f000 fc25 	bl	800c1b8 <__mcmp>
 800b96e:	2800      	cmp	r0, #0
 800b970:	9b02      	ldr	r3, [sp, #8]
 800b972:	dc02      	bgt.n	800b97a <_dtoa_r+0xaba>
 800b974:	d1e0      	bne.n	800b938 <_dtoa_r+0xa78>
 800b976:	07da      	lsls	r2, r3, #31
 800b978:	d5de      	bpl.n	800b938 <_dtoa_r+0xa78>
 800b97a:	2b39      	cmp	r3, #57	; 0x39
 800b97c:	d1da      	bne.n	800b934 <_dtoa_r+0xa74>
 800b97e:	2339      	movs	r3, #57	; 0x39
 800b980:	f88b 3000 	strb.w	r3, [fp]
 800b984:	463b      	mov	r3, r7
 800b986:	461f      	mov	r7, r3
 800b988:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800b98c:	3b01      	subs	r3, #1
 800b98e:	2a39      	cmp	r2, #57	; 0x39
 800b990:	d050      	beq.n	800ba34 <_dtoa_r+0xb74>
 800b992:	3201      	adds	r2, #1
 800b994:	701a      	strb	r2, [r3, #0]
 800b996:	e749      	b.n	800b82c <_dtoa_r+0x96c>
 800b998:	2a00      	cmp	r2, #0
 800b99a:	dd03      	ble.n	800b9a4 <_dtoa_r+0xae4>
 800b99c:	2b39      	cmp	r3, #57	; 0x39
 800b99e:	d0ee      	beq.n	800b97e <_dtoa_r+0xabe>
 800b9a0:	3301      	adds	r3, #1
 800b9a2:	e7c9      	b.n	800b938 <_dtoa_r+0xa78>
 800b9a4:	9a02      	ldr	r2, [sp, #8]
 800b9a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b9a8:	f802 3c01 	strb.w	r3, [r2, #-1]
 800b9ac:	428a      	cmp	r2, r1
 800b9ae:	d02a      	beq.n	800ba06 <_dtoa_r+0xb46>
 800b9b0:	4651      	mov	r1, sl
 800b9b2:	2300      	movs	r3, #0
 800b9b4:	220a      	movs	r2, #10
 800b9b6:	4628      	mov	r0, r5
 800b9b8:	f000 f9e6 	bl	800bd88 <__multadd>
 800b9bc:	45b0      	cmp	r8, r6
 800b9be:	4682      	mov	sl, r0
 800b9c0:	f04f 0300 	mov.w	r3, #0
 800b9c4:	f04f 020a 	mov.w	r2, #10
 800b9c8:	4641      	mov	r1, r8
 800b9ca:	4628      	mov	r0, r5
 800b9cc:	d107      	bne.n	800b9de <_dtoa_r+0xb1e>
 800b9ce:	f000 f9db 	bl	800bd88 <__multadd>
 800b9d2:	4680      	mov	r8, r0
 800b9d4:	4606      	mov	r6, r0
 800b9d6:	9b02      	ldr	r3, [sp, #8]
 800b9d8:	3301      	adds	r3, #1
 800b9da:	9302      	str	r3, [sp, #8]
 800b9dc:	e777      	b.n	800b8ce <_dtoa_r+0xa0e>
 800b9de:	f000 f9d3 	bl	800bd88 <__multadd>
 800b9e2:	4631      	mov	r1, r6
 800b9e4:	4680      	mov	r8, r0
 800b9e6:	2300      	movs	r3, #0
 800b9e8:	220a      	movs	r2, #10
 800b9ea:	4628      	mov	r0, r5
 800b9ec:	f000 f9cc 	bl	800bd88 <__multadd>
 800b9f0:	4606      	mov	r6, r0
 800b9f2:	e7f0      	b.n	800b9d6 <_dtoa_r+0xb16>
 800b9f4:	f1bb 0f00 	cmp.w	fp, #0
 800b9f8:	bfcc      	ite	gt
 800b9fa:	465f      	movgt	r7, fp
 800b9fc:	2701      	movle	r7, #1
 800b9fe:	f04f 0800 	mov.w	r8, #0
 800ba02:	9a08      	ldr	r2, [sp, #32]
 800ba04:	4417      	add	r7, r2
 800ba06:	4651      	mov	r1, sl
 800ba08:	2201      	movs	r2, #1
 800ba0a:	4628      	mov	r0, r5
 800ba0c:	9302      	str	r3, [sp, #8]
 800ba0e:	f000 fb67 	bl	800c0e0 <__lshift>
 800ba12:	4621      	mov	r1, r4
 800ba14:	4682      	mov	sl, r0
 800ba16:	f000 fbcf 	bl	800c1b8 <__mcmp>
 800ba1a:	2800      	cmp	r0, #0
 800ba1c:	dcb2      	bgt.n	800b984 <_dtoa_r+0xac4>
 800ba1e:	d102      	bne.n	800ba26 <_dtoa_r+0xb66>
 800ba20:	9b02      	ldr	r3, [sp, #8]
 800ba22:	07db      	lsls	r3, r3, #31
 800ba24:	d4ae      	bmi.n	800b984 <_dtoa_r+0xac4>
 800ba26:	463b      	mov	r3, r7
 800ba28:	461f      	mov	r7, r3
 800ba2a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ba2e:	2a30      	cmp	r2, #48	; 0x30
 800ba30:	d0fa      	beq.n	800ba28 <_dtoa_r+0xb68>
 800ba32:	e6fb      	b.n	800b82c <_dtoa_r+0x96c>
 800ba34:	9a08      	ldr	r2, [sp, #32]
 800ba36:	429a      	cmp	r2, r3
 800ba38:	d1a5      	bne.n	800b986 <_dtoa_r+0xac6>
 800ba3a:	2331      	movs	r3, #49	; 0x31
 800ba3c:	f109 0901 	add.w	r9, r9, #1
 800ba40:	7013      	strb	r3, [r2, #0]
 800ba42:	e6f3      	b.n	800b82c <_dtoa_r+0x96c>
 800ba44:	4b13      	ldr	r3, [pc, #76]	; (800ba94 <_dtoa_r+0xbd4>)
 800ba46:	f7ff baa7 	b.w	800af98 <_dtoa_r+0xd8>
 800ba4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800ba4c:	2b00      	cmp	r3, #0
 800ba4e:	f47f aa80 	bne.w	800af52 <_dtoa_r+0x92>
 800ba52:	4b11      	ldr	r3, [pc, #68]	; (800ba98 <_dtoa_r+0xbd8>)
 800ba54:	f7ff baa0 	b.w	800af98 <_dtoa_r+0xd8>
 800ba58:	f1bb 0f00 	cmp.w	fp, #0
 800ba5c:	dc03      	bgt.n	800ba66 <_dtoa_r+0xba6>
 800ba5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ba60:	2b02      	cmp	r3, #2
 800ba62:	f73f aecc 	bgt.w	800b7fe <_dtoa_r+0x93e>
 800ba66:	9f08      	ldr	r7, [sp, #32]
 800ba68:	4621      	mov	r1, r4
 800ba6a:	4650      	mov	r0, sl
 800ba6c:	f7ff f99a 	bl	800ada4 <quorem>
 800ba70:	9a08      	ldr	r2, [sp, #32]
 800ba72:	f100 0330 	add.w	r3, r0, #48	; 0x30
 800ba76:	f807 3b01 	strb.w	r3, [r7], #1
 800ba7a:	1aba      	subs	r2, r7, r2
 800ba7c:	4593      	cmp	fp, r2
 800ba7e:	ddb9      	ble.n	800b9f4 <_dtoa_r+0xb34>
 800ba80:	4651      	mov	r1, sl
 800ba82:	2300      	movs	r3, #0
 800ba84:	220a      	movs	r2, #10
 800ba86:	4628      	mov	r0, r5
 800ba88:	f000 f97e 	bl	800bd88 <__multadd>
 800ba8c:	4682      	mov	sl, r0
 800ba8e:	e7eb      	b.n	800ba68 <_dtoa_r+0xba8>
 800ba90:	0800ef8f 	.word	0x0800ef8f
 800ba94:	0800eee8 	.word	0x0800eee8
 800ba98:	0800ef0c 	.word	0x0800ef0c

0800ba9c <std>:
 800ba9c:	2300      	movs	r3, #0
 800ba9e:	b510      	push	{r4, lr}
 800baa0:	4604      	mov	r4, r0
 800baa2:	e9c0 3300 	strd	r3, r3, [r0]
 800baa6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800baaa:	6083      	str	r3, [r0, #8]
 800baac:	8181      	strh	r1, [r0, #12]
 800baae:	6643      	str	r3, [r0, #100]	; 0x64
 800bab0:	81c2      	strh	r2, [r0, #14]
 800bab2:	6183      	str	r3, [r0, #24]
 800bab4:	4619      	mov	r1, r3
 800bab6:	2208      	movs	r2, #8
 800bab8:	305c      	adds	r0, #92	; 0x5c
 800baba:	f7fe fccb 	bl	800a454 <memset>
 800babe:	4b05      	ldr	r3, [pc, #20]	; (800bad4 <std+0x38>)
 800bac0:	6224      	str	r4, [r4, #32]
 800bac2:	6263      	str	r3, [r4, #36]	; 0x24
 800bac4:	4b04      	ldr	r3, [pc, #16]	; (800bad8 <std+0x3c>)
 800bac6:	62a3      	str	r3, [r4, #40]	; 0x28
 800bac8:	4b04      	ldr	r3, [pc, #16]	; (800badc <std+0x40>)
 800baca:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bacc:	4b04      	ldr	r3, [pc, #16]	; (800bae0 <std+0x44>)
 800bace:	6323      	str	r3, [r4, #48]	; 0x30
 800bad0:	bd10      	pop	{r4, pc}
 800bad2:	bf00      	nop
 800bad4:	0800cab9 	.word	0x0800cab9
 800bad8:	0800cadb 	.word	0x0800cadb
 800badc:	0800cb13 	.word	0x0800cb13
 800bae0:	0800cb37 	.word	0x0800cb37

0800bae4 <_cleanup_r>:
 800bae4:	4901      	ldr	r1, [pc, #4]	; (800baec <_cleanup_r+0x8>)
 800bae6:	f000 b8af 	b.w	800bc48 <_fwalk_reent>
 800baea:	bf00      	nop
 800baec:	0800ce4d 	.word	0x0800ce4d

0800baf0 <__sfmoreglue>:
 800baf0:	b570      	push	{r4, r5, r6, lr}
 800baf2:	2568      	movs	r5, #104	; 0x68
 800baf4:	1e4a      	subs	r2, r1, #1
 800baf6:	4355      	muls	r5, r2
 800baf8:	460e      	mov	r6, r1
 800bafa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800bafe:	f000 fcbd 	bl	800c47c <_malloc_r>
 800bb02:	4604      	mov	r4, r0
 800bb04:	b140      	cbz	r0, 800bb18 <__sfmoreglue+0x28>
 800bb06:	2100      	movs	r1, #0
 800bb08:	e9c0 1600 	strd	r1, r6, [r0]
 800bb0c:	300c      	adds	r0, #12
 800bb0e:	60a0      	str	r0, [r4, #8]
 800bb10:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800bb14:	f7fe fc9e 	bl	800a454 <memset>
 800bb18:	4620      	mov	r0, r4
 800bb1a:	bd70      	pop	{r4, r5, r6, pc}

0800bb1c <__sfp_lock_acquire>:
 800bb1c:	4801      	ldr	r0, [pc, #4]	; (800bb24 <__sfp_lock_acquire+0x8>)
 800bb1e:	f000 b8b8 	b.w	800bc92 <__retarget_lock_acquire_recursive>
 800bb22:	bf00      	nop
 800bb24:	200033f4 	.word	0x200033f4

0800bb28 <__sfp_lock_release>:
 800bb28:	4801      	ldr	r0, [pc, #4]	; (800bb30 <__sfp_lock_release+0x8>)
 800bb2a:	f000 b8b3 	b.w	800bc94 <__retarget_lock_release_recursive>
 800bb2e:	bf00      	nop
 800bb30:	200033f4 	.word	0x200033f4

0800bb34 <__sinit_lock_acquire>:
 800bb34:	4801      	ldr	r0, [pc, #4]	; (800bb3c <__sinit_lock_acquire+0x8>)
 800bb36:	f000 b8ac 	b.w	800bc92 <__retarget_lock_acquire_recursive>
 800bb3a:	bf00      	nop
 800bb3c:	200033f3 	.word	0x200033f3

0800bb40 <__sinit_lock_release>:
 800bb40:	4801      	ldr	r0, [pc, #4]	; (800bb48 <__sinit_lock_release+0x8>)
 800bb42:	f000 b8a7 	b.w	800bc94 <__retarget_lock_release_recursive>
 800bb46:	bf00      	nop
 800bb48:	200033f3 	.word	0x200033f3

0800bb4c <__sinit>:
 800bb4c:	b510      	push	{r4, lr}
 800bb4e:	4604      	mov	r4, r0
 800bb50:	f7ff fff0 	bl	800bb34 <__sinit_lock_acquire>
 800bb54:	69a3      	ldr	r3, [r4, #24]
 800bb56:	b11b      	cbz	r3, 800bb60 <__sinit+0x14>
 800bb58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb5c:	f7ff bff0 	b.w	800bb40 <__sinit_lock_release>
 800bb60:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800bb64:	6523      	str	r3, [r4, #80]	; 0x50
 800bb66:	4b13      	ldr	r3, [pc, #76]	; (800bbb4 <__sinit+0x68>)
 800bb68:	4a13      	ldr	r2, [pc, #76]	; (800bbb8 <__sinit+0x6c>)
 800bb6a:	681b      	ldr	r3, [r3, #0]
 800bb6c:	62a2      	str	r2, [r4, #40]	; 0x28
 800bb6e:	42a3      	cmp	r3, r4
 800bb70:	bf08      	it	eq
 800bb72:	2301      	moveq	r3, #1
 800bb74:	4620      	mov	r0, r4
 800bb76:	bf08      	it	eq
 800bb78:	61a3      	streq	r3, [r4, #24]
 800bb7a:	f000 f81f 	bl	800bbbc <__sfp>
 800bb7e:	6060      	str	r0, [r4, #4]
 800bb80:	4620      	mov	r0, r4
 800bb82:	f000 f81b 	bl	800bbbc <__sfp>
 800bb86:	60a0      	str	r0, [r4, #8]
 800bb88:	4620      	mov	r0, r4
 800bb8a:	f000 f817 	bl	800bbbc <__sfp>
 800bb8e:	2200      	movs	r2, #0
 800bb90:	2104      	movs	r1, #4
 800bb92:	60e0      	str	r0, [r4, #12]
 800bb94:	6860      	ldr	r0, [r4, #4]
 800bb96:	f7ff ff81 	bl	800ba9c <std>
 800bb9a:	2201      	movs	r2, #1
 800bb9c:	2109      	movs	r1, #9
 800bb9e:	68a0      	ldr	r0, [r4, #8]
 800bba0:	f7ff ff7c 	bl	800ba9c <std>
 800bba4:	2202      	movs	r2, #2
 800bba6:	2112      	movs	r1, #18
 800bba8:	68e0      	ldr	r0, [r4, #12]
 800bbaa:	f7ff ff77 	bl	800ba9c <std>
 800bbae:	2301      	movs	r3, #1
 800bbb0:	61a3      	str	r3, [r4, #24]
 800bbb2:	e7d1      	b.n	800bb58 <__sinit+0xc>
 800bbb4:	0800eed4 	.word	0x0800eed4
 800bbb8:	0800bae5 	.word	0x0800bae5

0800bbbc <__sfp>:
 800bbbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bbbe:	4607      	mov	r7, r0
 800bbc0:	f7ff ffac 	bl	800bb1c <__sfp_lock_acquire>
 800bbc4:	4b1e      	ldr	r3, [pc, #120]	; (800bc40 <__sfp+0x84>)
 800bbc6:	681e      	ldr	r6, [r3, #0]
 800bbc8:	69b3      	ldr	r3, [r6, #24]
 800bbca:	b913      	cbnz	r3, 800bbd2 <__sfp+0x16>
 800bbcc:	4630      	mov	r0, r6
 800bbce:	f7ff ffbd 	bl	800bb4c <__sinit>
 800bbd2:	3648      	adds	r6, #72	; 0x48
 800bbd4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800bbd8:	3b01      	subs	r3, #1
 800bbda:	d503      	bpl.n	800bbe4 <__sfp+0x28>
 800bbdc:	6833      	ldr	r3, [r6, #0]
 800bbde:	b30b      	cbz	r3, 800bc24 <__sfp+0x68>
 800bbe0:	6836      	ldr	r6, [r6, #0]
 800bbe2:	e7f7      	b.n	800bbd4 <__sfp+0x18>
 800bbe4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800bbe8:	b9d5      	cbnz	r5, 800bc20 <__sfp+0x64>
 800bbea:	4b16      	ldr	r3, [pc, #88]	; (800bc44 <__sfp+0x88>)
 800bbec:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800bbf0:	60e3      	str	r3, [r4, #12]
 800bbf2:	6665      	str	r5, [r4, #100]	; 0x64
 800bbf4:	f000 f84c 	bl	800bc90 <__retarget_lock_init_recursive>
 800bbf8:	f7ff ff96 	bl	800bb28 <__sfp_lock_release>
 800bbfc:	2208      	movs	r2, #8
 800bbfe:	4629      	mov	r1, r5
 800bc00:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800bc04:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800bc08:	6025      	str	r5, [r4, #0]
 800bc0a:	61a5      	str	r5, [r4, #24]
 800bc0c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800bc10:	f7fe fc20 	bl	800a454 <memset>
 800bc14:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800bc18:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800bc1c:	4620      	mov	r0, r4
 800bc1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bc20:	3468      	adds	r4, #104	; 0x68
 800bc22:	e7d9      	b.n	800bbd8 <__sfp+0x1c>
 800bc24:	2104      	movs	r1, #4
 800bc26:	4638      	mov	r0, r7
 800bc28:	f7ff ff62 	bl	800baf0 <__sfmoreglue>
 800bc2c:	4604      	mov	r4, r0
 800bc2e:	6030      	str	r0, [r6, #0]
 800bc30:	2800      	cmp	r0, #0
 800bc32:	d1d5      	bne.n	800bbe0 <__sfp+0x24>
 800bc34:	f7ff ff78 	bl	800bb28 <__sfp_lock_release>
 800bc38:	230c      	movs	r3, #12
 800bc3a:	603b      	str	r3, [r7, #0]
 800bc3c:	e7ee      	b.n	800bc1c <__sfp+0x60>
 800bc3e:	bf00      	nop
 800bc40:	0800eed4 	.word	0x0800eed4
 800bc44:	ffff0001 	.word	0xffff0001

0800bc48 <_fwalk_reent>:
 800bc48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bc4c:	4606      	mov	r6, r0
 800bc4e:	4688      	mov	r8, r1
 800bc50:	2700      	movs	r7, #0
 800bc52:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800bc56:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800bc5a:	f1b9 0901 	subs.w	r9, r9, #1
 800bc5e:	d505      	bpl.n	800bc6c <_fwalk_reent+0x24>
 800bc60:	6824      	ldr	r4, [r4, #0]
 800bc62:	2c00      	cmp	r4, #0
 800bc64:	d1f7      	bne.n	800bc56 <_fwalk_reent+0xe>
 800bc66:	4638      	mov	r0, r7
 800bc68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bc6c:	89ab      	ldrh	r3, [r5, #12]
 800bc6e:	2b01      	cmp	r3, #1
 800bc70:	d907      	bls.n	800bc82 <_fwalk_reent+0x3a>
 800bc72:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800bc76:	3301      	adds	r3, #1
 800bc78:	d003      	beq.n	800bc82 <_fwalk_reent+0x3a>
 800bc7a:	4629      	mov	r1, r5
 800bc7c:	4630      	mov	r0, r6
 800bc7e:	47c0      	blx	r8
 800bc80:	4307      	orrs	r7, r0
 800bc82:	3568      	adds	r5, #104	; 0x68
 800bc84:	e7e9      	b.n	800bc5a <_fwalk_reent+0x12>
	...

0800bc88 <_localeconv_r>:
 800bc88:	4800      	ldr	r0, [pc, #0]	; (800bc8c <_localeconv_r+0x4>)
 800bc8a:	4770      	bx	lr
 800bc8c:	200002d4 	.word	0x200002d4

0800bc90 <__retarget_lock_init_recursive>:
 800bc90:	4770      	bx	lr

0800bc92 <__retarget_lock_acquire_recursive>:
 800bc92:	4770      	bx	lr

0800bc94 <__retarget_lock_release_recursive>:
 800bc94:	4770      	bx	lr
	...

0800bc98 <malloc>:
 800bc98:	4b02      	ldr	r3, [pc, #8]	; (800bca4 <malloc+0xc>)
 800bc9a:	4601      	mov	r1, r0
 800bc9c:	6818      	ldr	r0, [r3, #0]
 800bc9e:	f000 bbed 	b.w	800c47c <_malloc_r>
 800bca2:	bf00      	nop
 800bca4:	20000180 	.word	0x20000180

0800bca8 <memchr>:
 800bca8:	4603      	mov	r3, r0
 800bcaa:	b510      	push	{r4, lr}
 800bcac:	b2c9      	uxtb	r1, r1
 800bcae:	4402      	add	r2, r0
 800bcb0:	4293      	cmp	r3, r2
 800bcb2:	4618      	mov	r0, r3
 800bcb4:	d101      	bne.n	800bcba <memchr+0x12>
 800bcb6:	2000      	movs	r0, #0
 800bcb8:	e003      	b.n	800bcc2 <memchr+0x1a>
 800bcba:	7804      	ldrb	r4, [r0, #0]
 800bcbc:	3301      	adds	r3, #1
 800bcbe:	428c      	cmp	r4, r1
 800bcc0:	d1f6      	bne.n	800bcb0 <memchr+0x8>
 800bcc2:	bd10      	pop	{r4, pc}

0800bcc4 <_Balloc>:
 800bcc4:	b570      	push	{r4, r5, r6, lr}
 800bcc6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800bcc8:	4604      	mov	r4, r0
 800bcca:	460d      	mov	r5, r1
 800bccc:	b976      	cbnz	r6, 800bcec <_Balloc+0x28>
 800bcce:	2010      	movs	r0, #16
 800bcd0:	f7ff ffe2 	bl	800bc98 <malloc>
 800bcd4:	4602      	mov	r2, r0
 800bcd6:	6260      	str	r0, [r4, #36]	; 0x24
 800bcd8:	b920      	cbnz	r0, 800bce4 <_Balloc+0x20>
 800bcda:	2166      	movs	r1, #102	; 0x66
 800bcdc:	4b17      	ldr	r3, [pc, #92]	; (800bd3c <_Balloc+0x78>)
 800bcde:	4818      	ldr	r0, [pc, #96]	; (800bd40 <_Balloc+0x7c>)
 800bce0:	f001 f800 	bl	800cce4 <__assert_func>
 800bce4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800bce8:	6006      	str	r6, [r0, #0]
 800bcea:	60c6      	str	r6, [r0, #12]
 800bcec:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800bcee:	68f3      	ldr	r3, [r6, #12]
 800bcf0:	b183      	cbz	r3, 800bd14 <_Balloc+0x50>
 800bcf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bcf4:	68db      	ldr	r3, [r3, #12]
 800bcf6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800bcfa:	b9b8      	cbnz	r0, 800bd2c <_Balloc+0x68>
 800bcfc:	2101      	movs	r1, #1
 800bcfe:	fa01 f605 	lsl.w	r6, r1, r5
 800bd02:	1d72      	adds	r2, r6, #5
 800bd04:	4620      	mov	r0, r4
 800bd06:	0092      	lsls	r2, r2, #2
 800bd08:	f000 fb5e 	bl	800c3c8 <_calloc_r>
 800bd0c:	b160      	cbz	r0, 800bd28 <_Balloc+0x64>
 800bd0e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800bd12:	e00e      	b.n	800bd32 <_Balloc+0x6e>
 800bd14:	2221      	movs	r2, #33	; 0x21
 800bd16:	2104      	movs	r1, #4
 800bd18:	4620      	mov	r0, r4
 800bd1a:	f000 fb55 	bl	800c3c8 <_calloc_r>
 800bd1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bd20:	60f0      	str	r0, [r6, #12]
 800bd22:	68db      	ldr	r3, [r3, #12]
 800bd24:	2b00      	cmp	r3, #0
 800bd26:	d1e4      	bne.n	800bcf2 <_Balloc+0x2e>
 800bd28:	2000      	movs	r0, #0
 800bd2a:	bd70      	pop	{r4, r5, r6, pc}
 800bd2c:	6802      	ldr	r2, [r0, #0]
 800bd2e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800bd32:	2300      	movs	r3, #0
 800bd34:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800bd38:	e7f7      	b.n	800bd2a <_Balloc+0x66>
 800bd3a:	bf00      	nop
 800bd3c:	0800ef19 	.word	0x0800ef19
 800bd40:	0800f000 	.word	0x0800f000

0800bd44 <_Bfree>:
 800bd44:	b570      	push	{r4, r5, r6, lr}
 800bd46:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800bd48:	4605      	mov	r5, r0
 800bd4a:	460c      	mov	r4, r1
 800bd4c:	b976      	cbnz	r6, 800bd6c <_Bfree+0x28>
 800bd4e:	2010      	movs	r0, #16
 800bd50:	f7ff ffa2 	bl	800bc98 <malloc>
 800bd54:	4602      	mov	r2, r0
 800bd56:	6268      	str	r0, [r5, #36]	; 0x24
 800bd58:	b920      	cbnz	r0, 800bd64 <_Bfree+0x20>
 800bd5a:	218a      	movs	r1, #138	; 0x8a
 800bd5c:	4b08      	ldr	r3, [pc, #32]	; (800bd80 <_Bfree+0x3c>)
 800bd5e:	4809      	ldr	r0, [pc, #36]	; (800bd84 <_Bfree+0x40>)
 800bd60:	f000 ffc0 	bl	800cce4 <__assert_func>
 800bd64:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800bd68:	6006      	str	r6, [r0, #0]
 800bd6a:	60c6      	str	r6, [r0, #12]
 800bd6c:	b13c      	cbz	r4, 800bd7e <_Bfree+0x3a>
 800bd6e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800bd70:	6862      	ldr	r2, [r4, #4]
 800bd72:	68db      	ldr	r3, [r3, #12]
 800bd74:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800bd78:	6021      	str	r1, [r4, #0]
 800bd7a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800bd7e:	bd70      	pop	{r4, r5, r6, pc}
 800bd80:	0800ef19 	.word	0x0800ef19
 800bd84:	0800f000 	.word	0x0800f000

0800bd88 <__multadd>:
 800bd88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd8c:	4698      	mov	r8, r3
 800bd8e:	460c      	mov	r4, r1
 800bd90:	2300      	movs	r3, #0
 800bd92:	690e      	ldr	r6, [r1, #16]
 800bd94:	4607      	mov	r7, r0
 800bd96:	f101 0014 	add.w	r0, r1, #20
 800bd9a:	6805      	ldr	r5, [r0, #0]
 800bd9c:	3301      	adds	r3, #1
 800bd9e:	b2a9      	uxth	r1, r5
 800bda0:	fb02 8101 	mla	r1, r2, r1, r8
 800bda4:	0c2d      	lsrs	r5, r5, #16
 800bda6:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 800bdaa:	fb02 c505 	mla	r5, r2, r5, ip
 800bdae:	b289      	uxth	r1, r1
 800bdb0:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 800bdb4:	429e      	cmp	r6, r3
 800bdb6:	ea4f 4815 	mov.w	r8, r5, lsr #16
 800bdba:	f840 1b04 	str.w	r1, [r0], #4
 800bdbe:	dcec      	bgt.n	800bd9a <__multadd+0x12>
 800bdc0:	f1b8 0f00 	cmp.w	r8, #0
 800bdc4:	d022      	beq.n	800be0c <__multadd+0x84>
 800bdc6:	68a3      	ldr	r3, [r4, #8]
 800bdc8:	42b3      	cmp	r3, r6
 800bdca:	dc19      	bgt.n	800be00 <__multadd+0x78>
 800bdcc:	6861      	ldr	r1, [r4, #4]
 800bdce:	4638      	mov	r0, r7
 800bdd0:	3101      	adds	r1, #1
 800bdd2:	f7ff ff77 	bl	800bcc4 <_Balloc>
 800bdd6:	4605      	mov	r5, r0
 800bdd8:	b928      	cbnz	r0, 800bde6 <__multadd+0x5e>
 800bdda:	4602      	mov	r2, r0
 800bddc:	21b5      	movs	r1, #181	; 0xb5
 800bdde:	4b0d      	ldr	r3, [pc, #52]	; (800be14 <__multadd+0x8c>)
 800bde0:	480d      	ldr	r0, [pc, #52]	; (800be18 <__multadd+0x90>)
 800bde2:	f000 ff7f 	bl	800cce4 <__assert_func>
 800bde6:	6922      	ldr	r2, [r4, #16]
 800bde8:	f104 010c 	add.w	r1, r4, #12
 800bdec:	3202      	adds	r2, #2
 800bdee:	0092      	lsls	r2, r2, #2
 800bdf0:	300c      	adds	r0, #12
 800bdf2:	f7fe fb21 	bl	800a438 <memcpy>
 800bdf6:	4621      	mov	r1, r4
 800bdf8:	4638      	mov	r0, r7
 800bdfa:	f7ff ffa3 	bl	800bd44 <_Bfree>
 800bdfe:	462c      	mov	r4, r5
 800be00:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 800be04:	3601      	adds	r6, #1
 800be06:	f8c3 8014 	str.w	r8, [r3, #20]
 800be0a:	6126      	str	r6, [r4, #16]
 800be0c:	4620      	mov	r0, r4
 800be0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be12:	bf00      	nop
 800be14:	0800ef8f 	.word	0x0800ef8f
 800be18:	0800f000 	.word	0x0800f000

0800be1c <__hi0bits>:
 800be1c:	0c02      	lsrs	r2, r0, #16
 800be1e:	0412      	lsls	r2, r2, #16
 800be20:	4603      	mov	r3, r0
 800be22:	b9ca      	cbnz	r2, 800be58 <__hi0bits+0x3c>
 800be24:	0403      	lsls	r3, r0, #16
 800be26:	2010      	movs	r0, #16
 800be28:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800be2c:	bf04      	itt	eq
 800be2e:	021b      	lsleq	r3, r3, #8
 800be30:	3008      	addeq	r0, #8
 800be32:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800be36:	bf04      	itt	eq
 800be38:	011b      	lsleq	r3, r3, #4
 800be3a:	3004      	addeq	r0, #4
 800be3c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800be40:	bf04      	itt	eq
 800be42:	009b      	lsleq	r3, r3, #2
 800be44:	3002      	addeq	r0, #2
 800be46:	2b00      	cmp	r3, #0
 800be48:	db05      	blt.n	800be56 <__hi0bits+0x3a>
 800be4a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800be4e:	f100 0001 	add.w	r0, r0, #1
 800be52:	bf08      	it	eq
 800be54:	2020      	moveq	r0, #32
 800be56:	4770      	bx	lr
 800be58:	2000      	movs	r0, #0
 800be5a:	e7e5      	b.n	800be28 <__hi0bits+0xc>

0800be5c <__lo0bits>:
 800be5c:	6803      	ldr	r3, [r0, #0]
 800be5e:	4602      	mov	r2, r0
 800be60:	f013 0007 	ands.w	r0, r3, #7
 800be64:	d00b      	beq.n	800be7e <__lo0bits+0x22>
 800be66:	07d9      	lsls	r1, r3, #31
 800be68:	d422      	bmi.n	800beb0 <__lo0bits+0x54>
 800be6a:	0798      	lsls	r0, r3, #30
 800be6c:	bf49      	itett	mi
 800be6e:	085b      	lsrmi	r3, r3, #1
 800be70:	089b      	lsrpl	r3, r3, #2
 800be72:	2001      	movmi	r0, #1
 800be74:	6013      	strmi	r3, [r2, #0]
 800be76:	bf5c      	itt	pl
 800be78:	2002      	movpl	r0, #2
 800be7a:	6013      	strpl	r3, [r2, #0]
 800be7c:	4770      	bx	lr
 800be7e:	b299      	uxth	r1, r3
 800be80:	b909      	cbnz	r1, 800be86 <__lo0bits+0x2a>
 800be82:	2010      	movs	r0, #16
 800be84:	0c1b      	lsrs	r3, r3, #16
 800be86:	f013 0fff 	tst.w	r3, #255	; 0xff
 800be8a:	bf04      	itt	eq
 800be8c:	0a1b      	lsreq	r3, r3, #8
 800be8e:	3008      	addeq	r0, #8
 800be90:	0719      	lsls	r1, r3, #28
 800be92:	bf04      	itt	eq
 800be94:	091b      	lsreq	r3, r3, #4
 800be96:	3004      	addeq	r0, #4
 800be98:	0799      	lsls	r1, r3, #30
 800be9a:	bf04      	itt	eq
 800be9c:	089b      	lsreq	r3, r3, #2
 800be9e:	3002      	addeq	r0, #2
 800bea0:	07d9      	lsls	r1, r3, #31
 800bea2:	d403      	bmi.n	800beac <__lo0bits+0x50>
 800bea4:	085b      	lsrs	r3, r3, #1
 800bea6:	f100 0001 	add.w	r0, r0, #1
 800beaa:	d003      	beq.n	800beb4 <__lo0bits+0x58>
 800beac:	6013      	str	r3, [r2, #0]
 800beae:	4770      	bx	lr
 800beb0:	2000      	movs	r0, #0
 800beb2:	4770      	bx	lr
 800beb4:	2020      	movs	r0, #32
 800beb6:	4770      	bx	lr

0800beb8 <__i2b>:
 800beb8:	b510      	push	{r4, lr}
 800beba:	460c      	mov	r4, r1
 800bebc:	2101      	movs	r1, #1
 800bebe:	f7ff ff01 	bl	800bcc4 <_Balloc>
 800bec2:	4602      	mov	r2, r0
 800bec4:	b928      	cbnz	r0, 800bed2 <__i2b+0x1a>
 800bec6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800beca:	4b04      	ldr	r3, [pc, #16]	; (800bedc <__i2b+0x24>)
 800becc:	4804      	ldr	r0, [pc, #16]	; (800bee0 <__i2b+0x28>)
 800bece:	f000 ff09 	bl	800cce4 <__assert_func>
 800bed2:	2301      	movs	r3, #1
 800bed4:	6144      	str	r4, [r0, #20]
 800bed6:	6103      	str	r3, [r0, #16]
 800bed8:	bd10      	pop	{r4, pc}
 800beda:	bf00      	nop
 800bedc:	0800ef8f 	.word	0x0800ef8f
 800bee0:	0800f000 	.word	0x0800f000

0800bee4 <__multiply>:
 800bee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bee8:	4614      	mov	r4, r2
 800beea:	690a      	ldr	r2, [r1, #16]
 800beec:	6923      	ldr	r3, [r4, #16]
 800beee:	460d      	mov	r5, r1
 800bef0:	429a      	cmp	r2, r3
 800bef2:	bfbe      	ittt	lt
 800bef4:	460b      	movlt	r3, r1
 800bef6:	4625      	movlt	r5, r4
 800bef8:	461c      	movlt	r4, r3
 800befa:	f8d5 a010 	ldr.w	sl, [r5, #16]
 800befe:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800bf02:	68ab      	ldr	r3, [r5, #8]
 800bf04:	6869      	ldr	r1, [r5, #4]
 800bf06:	eb0a 0709 	add.w	r7, sl, r9
 800bf0a:	42bb      	cmp	r3, r7
 800bf0c:	b085      	sub	sp, #20
 800bf0e:	bfb8      	it	lt
 800bf10:	3101      	addlt	r1, #1
 800bf12:	f7ff fed7 	bl	800bcc4 <_Balloc>
 800bf16:	b930      	cbnz	r0, 800bf26 <__multiply+0x42>
 800bf18:	4602      	mov	r2, r0
 800bf1a:	f240 115d 	movw	r1, #349	; 0x15d
 800bf1e:	4b41      	ldr	r3, [pc, #260]	; (800c024 <__multiply+0x140>)
 800bf20:	4841      	ldr	r0, [pc, #260]	; (800c028 <__multiply+0x144>)
 800bf22:	f000 fedf 	bl	800cce4 <__assert_func>
 800bf26:	f100 0614 	add.w	r6, r0, #20
 800bf2a:	4633      	mov	r3, r6
 800bf2c:	2200      	movs	r2, #0
 800bf2e:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 800bf32:	4543      	cmp	r3, r8
 800bf34:	d31e      	bcc.n	800bf74 <__multiply+0x90>
 800bf36:	f105 0c14 	add.w	ip, r5, #20
 800bf3a:	f104 0314 	add.w	r3, r4, #20
 800bf3e:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 800bf42:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 800bf46:	9202      	str	r2, [sp, #8]
 800bf48:	ebac 0205 	sub.w	r2, ip, r5
 800bf4c:	3a15      	subs	r2, #21
 800bf4e:	f022 0203 	bic.w	r2, r2, #3
 800bf52:	3204      	adds	r2, #4
 800bf54:	f105 0115 	add.w	r1, r5, #21
 800bf58:	458c      	cmp	ip, r1
 800bf5a:	bf38      	it	cc
 800bf5c:	2204      	movcc	r2, #4
 800bf5e:	9201      	str	r2, [sp, #4]
 800bf60:	9a02      	ldr	r2, [sp, #8]
 800bf62:	9303      	str	r3, [sp, #12]
 800bf64:	429a      	cmp	r2, r3
 800bf66:	d808      	bhi.n	800bf7a <__multiply+0x96>
 800bf68:	2f00      	cmp	r7, #0
 800bf6a:	dc55      	bgt.n	800c018 <__multiply+0x134>
 800bf6c:	6107      	str	r7, [r0, #16]
 800bf6e:	b005      	add	sp, #20
 800bf70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf74:	f843 2b04 	str.w	r2, [r3], #4
 800bf78:	e7db      	b.n	800bf32 <__multiply+0x4e>
 800bf7a:	f8b3 a000 	ldrh.w	sl, [r3]
 800bf7e:	f1ba 0f00 	cmp.w	sl, #0
 800bf82:	d020      	beq.n	800bfc6 <__multiply+0xe2>
 800bf84:	46b1      	mov	r9, r6
 800bf86:	2200      	movs	r2, #0
 800bf88:	f105 0e14 	add.w	lr, r5, #20
 800bf8c:	f85e 4b04 	ldr.w	r4, [lr], #4
 800bf90:	f8d9 b000 	ldr.w	fp, [r9]
 800bf94:	b2a1      	uxth	r1, r4
 800bf96:	fa1f fb8b 	uxth.w	fp, fp
 800bf9a:	fb0a b101 	mla	r1, sl, r1, fp
 800bf9e:	4411      	add	r1, r2
 800bfa0:	f8d9 2000 	ldr.w	r2, [r9]
 800bfa4:	0c24      	lsrs	r4, r4, #16
 800bfa6:	0c12      	lsrs	r2, r2, #16
 800bfa8:	fb0a 2404 	mla	r4, sl, r4, r2
 800bfac:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 800bfb0:	b289      	uxth	r1, r1
 800bfb2:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800bfb6:	45f4      	cmp	ip, lr
 800bfb8:	ea4f 4214 	mov.w	r2, r4, lsr #16
 800bfbc:	f849 1b04 	str.w	r1, [r9], #4
 800bfc0:	d8e4      	bhi.n	800bf8c <__multiply+0xa8>
 800bfc2:	9901      	ldr	r1, [sp, #4]
 800bfc4:	5072      	str	r2, [r6, r1]
 800bfc6:	9a03      	ldr	r2, [sp, #12]
 800bfc8:	3304      	adds	r3, #4
 800bfca:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800bfce:	f1b9 0f00 	cmp.w	r9, #0
 800bfd2:	d01f      	beq.n	800c014 <__multiply+0x130>
 800bfd4:	46b6      	mov	lr, r6
 800bfd6:	f04f 0a00 	mov.w	sl, #0
 800bfda:	6834      	ldr	r4, [r6, #0]
 800bfdc:	f105 0114 	add.w	r1, r5, #20
 800bfe0:	880a      	ldrh	r2, [r1, #0]
 800bfe2:	f8be b002 	ldrh.w	fp, [lr, #2]
 800bfe6:	b2a4      	uxth	r4, r4
 800bfe8:	fb09 b202 	mla	r2, r9, r2, fp
 800bfec:	4492      	add	sl, r2
 800bfee:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800bff2:	f84e 4b04 	str.w	r4, [lr], #4
 800bff6:	f851 4b04 	ldr.w	r4, [r1], #4
 800bffa:	f8be 2000 	ldrh.w	r2, [lr]
 800bffe:	0c24      	lsrs	r4, r4, #16
 800c000:	fb09 2404 	mla	r4, r9, r4, r2
 800c004:	458c      	cmp	ip, r1
 800c006:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 800c00a:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 800c00e:	d8e7      	bhi.n	800bfe0 <__multiply+0xfc>
 800c010:	9a01      	ldr	r2, [sp, #4]
 800c012:	50b4      	str	r4, [r6, r2]
 800c014:	3604      	adds	r6, #4
 800c016:	e7a3      	b.n	800bf60 <__multiply+0x7c>
 800c018:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800c01c:	2b00      	cmp	r3, #0
 800c01e:	d1a5      	bne.n	800bf6c <__multiply+0x88>
 800c020:	3f01      	subs	r7, #1
 800c022:	e7a1      	b.n	800bf68 <__multiply+0x84>
 800c024:	0800ef8f 	.word	0x0800ef8f
 800c028:	0800f000 	.word	0x0800f000

0800c02c <__pow5mult>:
 800c02c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c030:	4615      	mov	r5, r2
 800c032:	f012 0203 	ands.w	r2, r2, #3
 800c036:	4606      	mov	r6, r0
 800c038:	460f      	mov	r7, r1
 800c03a:	d007      	beq.n	800c04c <__pow5mult+0x20>
 800c03c:	4c25      	ldr	r4, [pc, #148]	; (800c0d4 <__pow5mult+0xa8>)
 800c03e:	3a01      	subs	r2, #1
 800c040:	2300      	movs	r3, #0
 800c042:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800c046:	f7ff fe9f 	bl	800bd88 <__multadd>
 800c04a:	4607      	mov	r7, r0
 800c04c:	10ad      	asrs	r5, r5, #2
 800c04e:	d03d      	beq.n	800c0cc <__pow5mult+0xa0>
 800c050:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800c052:	b97c      	cbnz	r4, 800c074 <__pow5mult+0x48>
 800c054:	2010      	movs	r0, #16
 800c056:	f7ff fe1f 	bl	800bc98 <malloc>
 800c05a:	4602      	mov	r2, r0
 800c05c:	6270      	str	r0, [r6, #36]	; 0x24
 800c05e:	b928      	cbnz	r0, 800c06c <__pow5mult+0x40>
 800c060:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800c064:	4b1c      	ldr	r3, [pc, #112]	; (800c0d8 <__pow5mult+0xac>)
 800c066:	481d      	ldr	r0, [pc, #116]	; (800c0dc <__pow5mult+0xb0>)
 800c068:	f000 fe3c 	bl	800cce4 <__assert_func>
 800c06c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800c070:	6004      	str	r4, [r0, #0]
 800c072:	60c4      	str	r4, [r0, #12]
 800c074:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800c078:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800c07c:	b94c      	cbnz	r4, 800c092 <__pow5mult+0x66>
 800c07e:	f240 2171 	movw	r1, #625	; 0x271
 800c082:	4630      	mov	r0, r6
 800c084:	f7ff ff18 	bl	800beb8 <__i2b>
 800c088:	2300      	movs	r3, #0
 800c08a:	4604      	mov	r4, r0
 800c08c:	f8c8 0008 	str.w	r0, [r8, #8]
 800c090:	6003      	str	r3, [r0, #0]
 800c092:	f04f 0900 	mov.w	r9, #0
 800c096:	07eb      	lsls	r3, r5, #31
 800c098:	d50a      	bpl.n	800c0b0 <__pow5mult+0x84>
 800c09a:	4639      	mov	r1, r7
 800c09c:	4622      	mov	r2, r4
 800c09e:	4630      	mov	r0, r6
 800c0a0:	f7ff ff20 	bl	800bee4 <__multiply>
 800c0a4:	4680      	mov	r8, r0
 800c0a6:	4639      	mov	r1, r7
 800c0a8:	4630      	mov	r0, r6
 800c0aa:	f7ff fe4b 	bl	800bd44 <_Bfree>
 800c0ae:	4647      	mov	r7, r8
 800c0b0:	106d      	asrs	r5, r5, #1
 800c0b2:	d00b      	beq.n	800c0cc <__pow5mult+0xa0>
 800c0b4:	6820      	ldr	r0, [r4, #0]
 800c0b6:	b938      	cbnz	r0, 800c0c8 <__pow5mult+0x9c>
 800c0b8:	4622      	mov	r2, r4
 800c0ba:	4621      	mov	r1, r4
 800c0bc:	4630      	mov	r0, r6
 800c0be:	f7ff ff11 	bl	800bee4 <__multiply>
 800c0c2:	6020      	str	r0, [r4, #0]
 800c0c4:	f8c0 9000 	str.w	r9, [r0]
 800c0c8:	4604      	mov	r4, r0
 800c0ca:	e7e4      	b.n	800c096 <__pow5mult+0x6a>
 800c0cc:	4638      	mov	r0, r7
 800c0ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c0d2:	bf00      	nop
 800c0d4:	0800f150 	.word	0x0800f150
 800c0d8:	0800ef19 	.word	0x0800ef19
 800c0dc:	0800f000 	.word	0x0800f000

0800c0e0 <__lshift>:
 800c0e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c0e4:	460c      	mov	r4, r1
 800c0e6:	4607      	mov	r7, r0
 800c0e8:	4691      	mov	r9, r2
 800c0ea:	6923      	ldr	r3, [r4, #16]
 800c0ec:	6849      	ldr	r1, [r1, #4]
 800c0ee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800c0f2:	68a3      	ldr	r3, [r4, #8]
 800c0f4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800c0f8:	f108 0601 	add.w	r6, r8, #1
 800c0fc:	42b3      	cmp	r3, r6
 800c0fe:	db0b      	blt.n	800c118 <__lshift+0x38>
 800c100:	4638      	mov	r0, r7
 800c102:	f7ff fddf 	bl	800bcc4 <_Balloc>
 800c106:	4605      	mov	r5, r0
 800c108:	b948      	cbnz	r0, 800c11e <__lshift+0x3e>
 800c10a:	4602      	mov	r2, r0
 800c10c:	f240 11d9 	movw	r1, #473	; 0x1d9
 800c110:	4b27      	ldr	r3, [pc, #156]	; (800c1b0 <__lshift+0xd0>)
 800c112:	4828      	ldr	r0, [pc, #160]	; (800c1b4 <__lshift+0xd4>)
 800c114:	f000 fde6 	bl	800cce4 <__assert_func>
 800c118:	3101      	adds	r1, #1
 800c11a:	005b      	lsls	r3, r3, #1
 800c11c:	e7ee      	b.n	800c0fc <__lshift+0x1c>
 800c11e:	2300      	movs	r3, #0
 800c120:	f100 0114 	add.w	r1, r0, #20
 800c124:	f100 0210 	add.w	r2, r0, #16
 800c128:	4618      	mov	r0, r3
 800c12a:	4553      	cmp	r3, sl
 800c12c:	db33      	blt.n	800c196 <__lshift+0xb6>
 800c12e:	6920      	ldr	r0, [r4, #16]
 800c130:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800c134:	f104 0314 	add.w	r3, r4, #20
 800c138:	f019 091f 	ands.w	r9, r9, #31
 800c13c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800c140:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800c144:	d02b      	beq.n	800c19e <__lshift+0xbe>
 800c146:	468a      	mov	sl, r1
 800c148:	2200      	movs	r2, #0
 800c14a:	f1c9 0e20 	rsb	lr, r9, #32
 800c14e:	6818      	ldr	r0, [r3, #0]
 800c150:	fa00 f009 	lsl.w	r0, r0, r9
 800c154:	4302      	orrs	r2, r0
 800c156:	f84a 2b04 	str.w	r2, [sl], #4
 800c15a:	f853 2b04 	ldr.w	r2, [r3], #4
 800c15e:	459c      	cmp	ip, r3
 800c160:	fa22 f20e 	lsr.w	r2, r2, lr
 800c164:	d8f3      	bhi.n	800c14e <__lshift+0x6e>
 800c166:	ebac 0304 	sub.w	r3, ip, r4
 800c16a:	3b15      	subs	r3, #21
 800c16c:	f023 0303 	bic.w	r3, r3, #3
 800c170:	3304      	adds	r3, #4
 800c172:	f104 0015 	add.w	r0, r4, #21
 800c176:	4584      	cmp	ip, r0
 800c178:	bf38      	it	cc
 800c17a:	2304      	movcc	r3, #4
 800c17c:	50ca      	str	r2, [r1, r3]
 800c17e:	b10a      	cbz	r2, 800c184 <__lshift+0xa4>
 800c180:	f108 0602 	add.w	r6, r8, #2
 800c184:	3e01      	subs	r6, #1
 800c186:	4638      	mov	r0, r7
 800c188:	4621      	mov	r1, r4
 800c18a:	612e      	str	r6, [r5, #16]
 800c18c:	f7ff fdda 	bl	800bd44 <_Bfree>
 800c190:	4628      	mov	r0, r5
 800c192:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c196:	f842 0f04 	str.w	r0, [r2, #4]!
 800c19a:	3301      	adds	r3, #1
 800c19c:	e7c5      	b.n	800c12a <__lshift+0x4a>
 800c19e:	3904      	subs	r1, #4
 800c1a0:	f853 2b04 	ldr.w	r2, [r3], #4
 800c1a4:	459c      	cmp	ip, r3
 800c1a6:	f841 2f04 	str.w	r2, [r1, #4]!
 800c1aa:	d8f9      	bhi.n	800c1a0 <__lshift+0xc0>
 800c1ac:	e7ea      	b.n	800c184 <__lshift+0xa4>
 800c1ae:	bf00      	nop
 800c1b0:	0800ef8f 	.word	0x0800ef8f
 800c1b4:	0800f000 	.word	0x0800f000

0800c1b8 <__mcmp>:
 800c1b8:	4603      	mov	r3, r0
 800c1ba:	690a      	ldr	r2, [r1, #16]
 800c1bc:	6900      	ldr	r0, [r0, #16]
 800c1be:	b530      	push	{r4, r5, lr}
 800c1c0:	1a80      	subs	r0, r0, r2
 800c1c2:	d10d      	bne.n	800c1e0 <__mcmp+0x28>
 800c1c4:	3314      	adds	r3, #20
 800c1c6:	3114      	adds	r1, #20
 800c1c8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800c1cc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800c1d0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800c1d4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800c1d8:	4295      	cmp	r5, r2
 800c1da:	d002      	beq.n	800c1e2 <__mcmp+0x2a>
 800c1dc:	d304      	bcc.n	800c1e8 <__mcmp+0x30>
 800c1de:	2001      	movs	r0, #1
 800c1e0:	bd30      	pop	{r4, r5, pc}
 800c1e2:	42a3      	cmp	r3, r4
 800c1e4:	d3f4      	bcc.n	800c1d0 <__mcmp+0x18>
 800c1e6:	e7fb      	b.n	800c1e0 <__mcmp+0x28>
 800c1e8:	f04f 30ff 	mov.w	r0, #4294967295
 800c1ec:	e7f8      	b.n	800c1e0 <__mcmp+0x28>
	...

0800c1f0 <__mdiff>:
 800c1f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1f4:	460c      	mov	r4, r1
 800c1f6:	4606      	mov	r6, r0
 800c1f8:	4611      	mov	r1, r2
 800c1fa:	4620      	mov	r0, r4
 800c1fc:	4692      	mov	sl, r2
 800c1fe:	f7ff ffdb 	bl	800c1b8 <__mcmp>
 800c202:	1e05      	subs	r5, r0, #0
 800c204:	d111      	bne.n	800c22a <__mdiff+0x3a>
 800c206:	4629      	mov	r1, r5
 800c208:	4630      	mov	r0, r6
 800c20a:	f7ff fd5b 	bl	800bcc4 <_Balloc>
 800c20e:	4602      	mov	r2, r0
 800c210:	b928      	cbnz	r0, 800c21e <__mdiff+0x2e>
 800c212:	f240 2132 	movw	r1, #562	; 0x232
 800c216:	4b3c      	ldr	r3, [pc, #240]	; (800c308 <__mdiff+0x118>)
 800c218:	483c      	ldr	r0, [pc, #240]	; (800c30c <__mdiff+0x11c>)
 800c21a:	f000 fd63 	bl	800cce4 <__assert_func>
 800c21e:	2301      	movs	r3, #1
 800c220:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800c224:	4610      	mov	r0, r2
 800c226:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c22a:	bfa4      	itt	ge
 800c22c:	4653      	movge	r3, sl
 800c22e:	46a2      	movge	sl, r4
 800c230:	4630      	mov	r0, r6
 800c232:	f8da 1004 	ldr.w	r1, [sl, #4]
 800c236:	bfa6      	itte	ge
 800c238:	461c      	movge	r4, r3
 800c23a:	2500      	movge	r5, #0
 800c23c:	2501      	movlt	r5, #1
 800c23e:	f7ff fd41 	bl	800bcc4 <_Balloc>
 800c242:	4602      	mov	r2, r0
 800c244:	b918      	cbnz	r0, 800c24e <__mdiff+0x5e>
 800c246:	f44f 7110 	mov.w	r1, #576	; 0x240
 800c24a:	4b2f      	ldr	r3, [pc, #188]	; (800c308 <__mdiff+0x118>)
 800c24c:	e7e4      	b.n	800c218 <__mdiff+0x28>
 800c24e:	f100 0814 	add.w	r8, r0, #20
 800c252:	f8da 7010 	ldr.w	r7, [sl, #16]
 800c256:	60c5      	str	r5, [r0, #12]
 800c258:	f04f 0c00 	mov.w	ip, #0
 800c25c:	f10a 0514 	add.w	r5, sl, #20
 800c260:	f10a 0010 	add.w	r0, sl, #16
 800c264:	46c2      	mov	sl, r8
 800c266:	6926      	ldr	r6, [r4, #16]
 800c268:	f104 0914 	add.w	r9, r4, #20
 800c26c:	eb05 0e87 	add.w	lr, r5, r7, lsl #2
 800c270:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800c274:	f850 bf04 	ldr.w	fp, [r0, #4]!
 800c278:	f859 3b04 	ldr.w	r3, [r9], #4
 800c27c:	fa1f f18b 	uxth.w	r1, fp
 800c280:	4461      	add	r1, ip
 800c282:	fa1f fc83 	uxth.w	ip, r3
 800c286:	0c1b      	lsrs	r3, r3, #16
 800c288:	eba1 010c 	sub.w	r1, r1, ip
 800c28c:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800c290:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800c294:	b289      	uxth	r1, r1
 800c296:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800c29a:	454e      	cmp	r6, r9
 800c29c:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800c2a0:	f84a 3b04 	str.w	r3, [sl], #4
 800c2a4:	d8e6      	bhi.n	800c274 <__mdiff+0x84>
 800c2a6:	1b33      	subs	r3, r6, r4
 800c2a8:	3b15      	subs	r3, #21
 800c2aa:	f023 0303 	bic.w	r3, r3, #3
 800c2ae:	3415      	adds	r4, #21
 800c2b0:	3304      	adds	r3, #4
 800c2b2:	42a6      	cmp	r6, r4
 800c2b4:	bf38      	it	cc
 800c2b6:	2304      	movcc	r3, #4
 800c2b8:	441d      	add	r5, r3
 800c2ba:	4443      	add	r3, r8
 800c2bc:	461e      	mov	r6, r3
 800c2be:	462c      	mov	r4, r5
 800c2c0:	4574      	cmp	r4, lr
 800c2c2:	d30e      	bcc.n	800c2e2 <__mdiff+0xf2>
 800c2c4:	f10e 0103 	add.w	r1, lr, #3
 800c2c8:	1b49      	subs	r1, r1, r5
 800c2ca:	f021 0103 	bic.w	r1, r1, #3
 800c2ce:	3d03      	subs	r5, #3
 800c2d0:	45ae      	cmp	lr, r5
 800c2d2:	bf38      	it	cc
 800c2d4:	2100      	movcc	r1, #0
 800c2d6:	4419      	add	r1, r3
 800c2d8:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 800c2dc:	b18b      	cbz	r3, 800c302 <__mdiff+0x112>
 800c2de:	6117      	str	r7, [r2, #16]
 800c2e0:	e7a0      	b.n	800c224 <__mdiff+0x34>
 800c2e2:	f854 8b04 	ldr.w	r8, [r4], #4
 800c2e6:	fa1f f188 	uxth.w	r1, r8
 800c2ea:	4461      	add	r1, ip
 800c2ec:	1408      	asrs	r0, r1, #16
 800c2ee:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 800c2f2:	b289      	uxth	r1, r1
 800c2f4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800c2f8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800c2fc:	f846 1b04 	str.w	r1, [r6], #4
 800c300:	e7de      	b.n	800c2c0 <__mdiff+0xd0>
 800c302:	3f01      	subs	r7, #1
 800c304:	e7e8      	b.n	800c2d8 <__mdiff+0xe8>
 800c306:	bf00      	nop
 800c308:	0800ef8f 	.word	0x0800ef8f
 800c30c:	0800f000 	.word	0x0800f000

0800c310 <__d2b>:
 800c310:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c314:	2101      	movs	r1, #1
 800c316:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800c31a:	4690      	mov	r8, r2
 800c31c:	461d      	mov	r5, r3
 800c31e:	f7ff fcd1 	bl	800bcc4 <_Balloc>
 800c322:	4604      	mov	r4, r0
 800c324:	b930      	cbnz	r0, 800c334 <__d2b+0x24>
 800c326:	4602      	mov	r2, r0
 800c328:	f240 310a 	movw	r1, #778	; 0x30a
 800c32c:	4b24      	ldr	r3, [pc, #144]	; (800c3c0 <__d2b+0xb0>)
 800c32e:	4825      	ldr	r0, [pc, #148]	; (800c3c4 <__d2b+0xb4>)
 800c330:	f000 fcd8 	bl	800cce4 <__assert_func>
 800c334:	f3c5 0313 	ubfx	r3, r5, #0, #20
 800c338:	f3c5 550a 	ubfx	r5, r5, #20, #11
 800c33c:	bb2d      	cbnz	r5, 800c38a <__d2b+0x7a>
 800c33e:	9301      	str	r3, [sp, #4]
 800c340:	f1b8 0300 	subs.w	r3, r8, #0
 800c344:	d026      	beq.n	800c394 <__d2b+0x84>
 800c346:	4668      	mov	r0, sp
 800c348:	9300      	str	r3, [sp, #0]
 800c34a:	f7ff fd87 	bl	800be5c <__lo0bits>
 800c34e:	9900      	ldr	r1, [sp, #0]
 800c350:	b1f0      	cbz	r0, 800c390 <__d2b+0x80>
 800c352:	9a01      	ldr	r2, [sp, #4]
 800c354:	f1c0 0320 	rsb	r3, r0, #32
 800c358:	fa02 f303 	lsl.w	r3, r2, r3
 800c35c:	430b      	orrs	r3, r1
 800c35e:	40c2      	lsrs	r2, r0
 800c360:	6163      	str	r3, [r4, #20]
 800c362:	9201      	str	r2, [sp, #4]
 800c364:	9b01      	ldr	r3, [sp, #4]
 800c366:	2b00      	cmp	r3, #0
 800c368:	bf14      	ite	ne
 800c36a:	2102      	movne	r1, #2
 800c36c:	2101      	moveq	r1, #1
 800c36e:	61a3      	str	r3, [r4, #24]
 800c370:	6121      	str	r1, [r4, #16]
 800c372:	b1c5      	cbz	r5, 800c3a6 <__d2b+0x96>
 800c374:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800c378:	4405      	add	r5, r0
 800c37a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800c37e:	603d      	str	r5, [r7, #0]
 800c380:	6030      	str	r0, [r6, #0]
 800c382:	4620      	mov	r0, r4
 800c384:	b002      	add	sp, #8
 800c386:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c38a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800c38e:	e7d6      	b.n	800c33e <__d2b+0x2e>
 800c390:	6161      	str	r1, [r4, #20]
 800c392:	e7e7      	b.n	800c364 <__d2b+0x54>
 800c394:	a801      	add	r0, sp, #4
 800c396:	f7ff fd61 	bl	800be5c <__lo0bits>
 800c39a:	2101      	movs	r1, #1
 800c39c:	9b01      	ldr	r3, [sp, #4]
 800c39e:	6121      	str	r1, [r4, #16]
 800c3a0:	6163      	str	r3, [r4, #20]
 800c3a2:	3020      	adds	r0, #32
 800c3a4:	e7e5      	b.n	800c372 <__d2b+0x62>
 800c3a6:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800c3aa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800c3ae:	6038      	str	r0, [r7, #0]
 800c3b0:	6918      	ldr	r0, [r3, #16]
 800c3b2:	f7ff fd33 	bl	800be1c <__hi0bits>
 800c3b6:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800c3ba:	6031      	str	r1, [r6, #0]
 800c3bc:	e7e1      	b.n	800c382 <__d2b+0x72>
 800c3be:	bf00      	nop
 800c3c0:	0800ef8f 	.word	0x0800ef8f
 800c3c4:	0800f000 	.word	0x0800f000

0800c3c8 <_calloc_r>:
 800c3c8:	b538      	push	{r3, r4, r5, lr}
 800c3ca:	fb02 f501 	mul.w	r5, r2, r1
 800c3ce:	4629      	mov	r1, r5
 800c3d0:	f000 f854 	bl	800c47c <_malloc_r>
 800c3d4:	4604      	mov	r4, r0
 800c3d6:	b118      	cbz	r0, 800c3e0 <_calloc_r+0x18>
 800c3d8:	462a      	mov	r2, r5
 800c3da:	2100      	movs	r1, #0
 800c3dc:	f7fe f83a 	bl	800a454 <memset>
 800c3e0:	4620      	mov	r0, r4
 800c3e2:	bd38      	pop	{r3, r4, r5, pc}

0800c3e4 <_free_r>:
 800c3e4:	b538      	push	{r3, r4, r5, lr}
 800c3e6:	4605      	mov	r5, r0
 800c3e8:	2900      	cmp	r1, #0
 800c3ea:	d043      	beq.n	800c474 <_free_r+0x90>
 800c3ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c3f0:	1f0c      	subs	r4, r1, #4
 800c3f2:	2b00      	cmp	r3, #0
 800c3f4:	bfb8      	it	lt
 800c3f6:	18e4      	addlt	r4, r4, r3
 800c3f8:	f000 fe18 	bl	800d02c <__malloc_lock>
 800c3fc:	4a1e      	ldr	r2, [pc, #120]	; (800c478 <_free_r+0x94>)
 800c3fe:	6813      	ldr	r3, [r2, #0]
 800c400:	4610      	mov	r0, r2
 800c402:	b933      	cbnz	r3, 800c412 <_free_r+0x2e>
 800c404:	6063      	str	r3, [r4, #4]
 800c406:	6014      	str	r4, [r2, #0]
 800c408:	4628      	mov	r0, r5
 800c40a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c40e:	f000 be13 	b.w	800d038 <__malloc_unlock>
 800c412:	42a3      	cmp	r3, r4
 800c414:	d90a      	bls.n	800c42c <_free_r+0x48>
 800c416:	6821      	ldr	r1, [r4, #0]
 800c418:	1862      	adds	r2, r4, r1
 800c41a:	4293      	cmp	r3, r2
 800c41c:	bf01      	itttt	eq
 800c41e:	681a      	ldreq	r2, [r3, #0]
 800c420:	685b      	ldreq	r3, [r3, #4]
 800c422:	1852      	addeq	r2, r2, r1
 800c424:	6022      	streq	r2, [r4, #0]
 800c426:	6063      	str	r3, [r4, #4]
 800c428:	6004      	str	r4, [r0, #0]
 800c42a:	e7ed      	b.n	800c408 <_free_r+0x24>
 800c42c:	461a      	mov	r2, r3
 800c42e:	685b      	ldr	r3, [r3, #4]
 800c430:	b10b      	cbz	r3, 800c436 <_free_r+0x52>
 800c432:	42a3      	cmp	r3, r4
 800c434:	d9fa      	bls.n	800c42c <_free_r+0x48>
 800c436:	6811      	ldr	r1, [r2, #0]
 800c438:	1850      	adds	r0, r2, r1
 800c43a:	42a0      	cmp	r0, r4
 800c43c:	d10b      	bne.n	800c456 <_free_r+0x72>
 800c43e:	6820      	ldr	r0, [r4, #0]
 800c440:	4401      	add	r1, r0
 800c442:	1850      	adds	r0, r2, r1
 800c444:	4283      	cmp	r3, r0
 800c446:	6011      	str	r1, [r2, #0]
 800c448:	d1de      	bne.n	800c408 <_free_r+0x24>
 800c44a:	6818      	ldr	r0, [r3, #0]
 800c44c:	685b      	ldr	r3, [r3, #4]
 800c44e:	4401      	add	r1, r0
 800c450:	6011      	str	r1, [r2, #0]
 800c452:	6053      	str	r3, [r2, #4]
 800c454:	e7d8      	b.n	800c408 <_free_r+0x24>
 800c456:	d902      	bls.n	800c45e <_free_r+0x7a>
 800c458:	230c      	movs	r3, #12
 800c45a:	602b      	str	r3, [r5, #0]
 800c45c:	e7d4      	b.n	800c408 <_free_r+0x24>
 800c45e:	6820      	ldr	r0, [r4, #0]
 800c460:	1821      	adds	r1, r4, r0
 800c462:	428b      	cmp	r3, r1
 800c464:	bf01      	itttt	eq
 800c466:	6819      	ldreq	r1, [r3, #0]
 800c468:	685b      	ldreq	r3, [r3, #4]
 800c46a:	1809      	addeq	r1, r1, r0
 800c46c:	6021      	streq	r1, [r4, #0]
 800c46e:	6063      	str	r3, [r4, #4]
 800c470:	6054      	str	r4, [r2, #4]
 800c472:	e7c9      	b.n	800c408 <_free_r+0x24>
 800c474:	bd38      	pop	{r3, r4, r5, pc}
 800c476:	bf00      	nop
 800c478:	20001b98 	.word	0x20001b98

0800c47c <_malloc_r>:
 800c47c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c47e:	1ccd      	adds	r5, r1, #3
 800c480:	f025 0503 	bic.w	r5, r5, #3
 800c484:	3508      	adds	r5, #8
 800c486:	2d0c      	cmp	r5, #12
 800c488:	bf38      	it	cc
 800c48a:	250c      	movcc	r5, #12
 800c48c:	2d00      	cmp	r5, #0
 800c48e:	4606      	mov	r6, r0
 800c490:	db01      	blt.n	800c496 <_malloc_r+0x1a>
 800c492:	42a9      	cmp	r1, r5
 800c494:	d903      	bls.n	800c49e <_malloc_r+0x22>
 800c496:	230c      	movs	r3, #12
 800c498:	6033      	str	r3, [r6, #0]
 800c49a:	2000      	movs	r0, #0
 800c49c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c49e:	f000 fdc5 	bl	800d02c <__malloc_lock>
 800c4a2:	4921      	ldr	r1, [pc, #132]	; (800c528 <_malloc_r+0xac>)
 800c4a4:	680a      	ldr	r2, [r1, #0]
 800c4a6:	4614      	mov	r4, r2
 800c4a8:	b99c      	cbnz	r4, 800c4d2 <_malloc_r+0x56>
 800c4aa:	4f20      	ldr	r7, [pc, #128]	; (800c52c <_malloc_r+0xb0>)
 800c4ac:	683b      	ldr	r3, [r7, #0]
 800c4ae:	b923      	cbnz	r3, 800c4ba <_malloc_r+0x3e>
 800c4b0:	4621      	mov	r1, r4
 800c4b2:	4630      	mov	r0, r6
 800c4b4:	f000 faf0 	bl	800ca98 <_sbrk_r>
 800c4b8:	6038      	str	r0, [r7, #0]
 800c4ba:	4629      	mov	r1, r5
 800c4bc:	4630      	mov	r0, r6
 800c4be:	f000 faeb 	bl	800ca98 <_sbrk_r>
 800c4c2:	1c43      	adds	r3, r0, #1
 800c4c4:	d123      	bne.n	800c50e <_malloc_r+0x92>
 800c4c6:	230c      	movs	r3, #12
 800c4c8:	4630      	mov	r0, r6
 800c4ca:	6033      	str	r3, [r6, #0]
 800c4cc:	f000 fdb4 	bl	800d038 <__malloc_unlock>
 800c4d0:	e7e3      	b.n	800c49a <_malloc_r+0x1e>
 800c4d2:	6823      	ldr	r3, [r4, #0]
 800c4d4:	1b5b      	subs	r3, r3, r5
 800c4d6:	d417      	bmi.n	800c508 <_malloc_r+0x8c>
 800c4d8:	2b0b      	cmp	r3, #11
 800c4da:	d903      	bls.n	800c4e4 <_malloc_r+0x68>
 800c4dc:	6023      	str	r3, [r4, #0]
 800c4de:	441c      	add	r4, r3
 800c4e0:	6025      	str	r5, [r4, #0]
 800c4e2:	e004      	b.n	800c4ee <_malloc_r+0x72>
 800c4e4:	6863      	ldr	r3, [r4, #4]
 800c4e6:	42a2      	cmp	r2, r4
 800c4e8:	bf0c      	ite	eq
 800c4ea:	600b      	streq	r3, [r1, #0]
 800c4ec:	6053      	strne	r3, [r2, #4]
 800c4ee:	4630      	mov	r0, r6
 800c4f0:	f000 fda2 	bl	800d038 <__malloc_unlock>
 800c4f4:	f104 000b 	add.w	r0, r4, #11
 800c4f8:	1d23      	adds	r3, r4, #4
 800c4fa:	f020 0007 	bic.w	r0, r0, #7
 800c4fe:	1ac2      	subs	r2, r0, r3
 800c500:	d0cc      	beq.n	800c49c <_malloc_r+0x20>
 800c502:	1a1b      	subs	r3, r3, r0
 800c504:	50a3      	str	r3, [r4, r2]
 800c506:	e7c9      	b.n	800c49c <_malloc_r+0x20>
 800c508:	4622      	mov	r2, r4
 800c50a:	6864      	ldr	r4, [r4, #4]
 800c50c:	e7cc      	b.n	800c4a8 <_malloc_r+0x2c>
 800c50e:	1cc4      	adds	r4, r0, #3
 800c510:	f024 0403 	bic.w	r4, r4, #3
 800c514:	42a0      	cmp	r0, r4
 800c516:	d0e3      	beq.n	800c4e0 <_malloc_r+0x64>
 800c518:	1a21      	subs	r1, r4, r0
 800c51a:	4630      	mov	r0, r6
 800c51c:	f000 fabc 	bl	800ca98 <_sbrk_r>
 800c520:	3001      	adds	r0, #1
 800c522:	d1dd      	bne.n	800c4e0 <_malloc_r+0x64>
 800c524:	e7cf      	b.n	800c4c6 <_malloc_r+0x4a>
 800c526:	bf00      	nop
 800c528:	20001b98 	.word	0x20001b98
 800c52c:	20001b9c 	.word	0x20001b9c

0800c530 <__ssputs_r>:
 800c530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c534:	688e      	ldr	r6, [r1, #8]
 800c536:	4682      	mov	sl, r0
 800c538:	429e      	cmp	r6, r3
 800c53a:	460c      	mov	r4, r1
 800c53c:	4690      	mov	r8, r2
 800c53e:	461f      	mov	r7, r3
 800c540:	d838      	bhi.n	800c5b4 <__ssputs_r+0x84>
 800c542:	898a      	ldrh	r2, [r1, #12]
 800c544:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800c548:	d032      	beq.n	800c5b0 <__ssputs_r+0x80>
 800c54a:	6825      	ldr	r5, [r4, #0]
 800c54c:	6909      	ldr	r1, [r1, #16]
 800c54e:	3301      	adds	r3, #1
 800c550:	eba5 0901 	sub.w	r9, r5, r1
 800c554:	6965      	ldr	r5, [r4, #20]
 800c556:	444b      	add	r3, r9
 800c558:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c55c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800c560:	106d      	asrs	r5, r5, #1
 800c562:	429d      	cmp	r5, r3
 800c564:	bf38      	it	cc
 800c566:	461d      	movcc	r5, r3
 800c568:	0553      	lsls	r3, r2, #21
 800c56a:	d531      	bpl.n	800c5d0 <__ssputs_r+0xa0>
 800c56c:	4629      	mov	r1, r5
 800c56e:	f7ff ff85 	bl	800c47c <_malloc_r>
 800c572:	4606      	mov	r6, r0
 800c574:	b950      	cbnz	r0, 800c58c <__ssputs_r+0x5c>
 800c576:	230c      	movs	r3, #12
 800c578:	f04f 30ff 	mov.w	r0, #4294967295
 800c57c:	f8ca 3000 	str.w	r3, [sl]
 800c580:	89a3      	ldrh	r3, [r4, #12]
 800c582:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c586:	81a3      	strh	r3, [r4, #12]
 800c588:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c58c:	464a      	mov	r2, r9
 800c58e:	6921      	ldr	r1, [r4, #16]
 800c590:	f7fd ff52 	bl	800a438 <memcpy>
 800c594:	89a3      	ldrh	r3, [r4, #12]
 800c596:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800c59a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c59e:	81a3      	strh	r3, [r4, #12]
 800c5a0:	6126      	str	r6, [r4, #16]
 800c5a2:	444e      	add	r6, r9
 800c5a4:	6026      	str	r6, [r4, #0]
 800c5a6:	463e      	mov	r6, r7
 800c5a8:	6165      	str	r5, [r4, #20]
 800c5aa:	eba5 0509 	sub.w	r5, r5, r9
 800c5ae:	60a5      	str	r5, [r4, #8]
 800c5b0:	42be      	cmp	r6, r7
 800c5b2:	d900      	bls.n	800c5b6 <__ssputs_r+0x86>
 800c5b4:	463e      	mov	r6, r7
 800c5b6:	4632      	mov	r2, r6
 800c5b8:	4641      	mov	r1, r8
 800c5ba:	6820      	ldr	r0, [r4, #0]
 800c5bc:	f000 fd1c 	bl	800cff8 <memmove>
 800c5c0:	68a3      	ldr	r3, [r4, #8]
 800c5c2:	6822      	ldr	r2, [r4, #0]
 800c5c4:	1b9b      	subs	r3, r3, r6
 800c5c6:	4432      	add	r2, r6
 800c5c8:	2000      	movs	r0, #0
 800c5ca:	60a3      	str	r3, [r4, #8]
 800c5cc:	6022      	str	r2, [r4, #0]
 800c5ce:	e7db      	b.n	800c588 <__ssputs_r+0x58>
 800c5d0:	462a      	mov	r2, r5
 800c5d2:	f000 fd37 	bl	800d044 <_realloc_r>
 800c5d6:	4606      	mov	r6, r0
 800c5d8:	2800      	cmp	r0, #0
 800c5da:	d1e1      	bne.n	800c5a0 <__ssputs_r+0x70>
 800c5dc:	4650      	mov	r0, sl
 800c5de:	6921      	ldr	r1, [r4, #16]
 800c5e0:	f7ff ff00 	bl	800c3e4 <_free_r>
 800c5e4:	e7c7      	b.n	800c576 <__ssputs_r+0x46>
	...

0800c5e8 <_svfiprintf_r>:
 800c5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5ec:	4698      	mov	r8, r3
 800c5ee:	898b      	ldrh	r3, [r1, #12]
 800c5f0:	4607      	mov	r7, r0
 800c5f2:	061b      	lsls	r3, r3, #24
 800c5f4:	460d      	mov	r5, r1
 800c5f6:	4614      	mov	r4, r2
 800c5f8:	b09d      	sub	sp, #116	; 0x74
 800c5fa:	d50e      	bpl.n	800c61a <_svfiprintf_r+0x32>
 800c5fc:	690b      	ldr	r3, [r1, #16]
 800c5fe:	b963      	cbnz	r3, 800c61a <_svfiprintf_r+0x32>
 800c600:	2140      	movs	r1, #64	; 0x40
 800c602:	f7ff ff3b 	bl	800c47c <_malloc_r>
 800c606:	6028      	str	r0, [r5, #0]
 800c608:	6128      	str	r0, [r5, #16]
 800c60a:	b920      	cbnz	r0, 800c616 <_svfiprintf_r+0x2e>
 800c60c:	230c      	movs	r3, #12
 800c60e:	603b      	str	r3, [r7, #0]
 800c610:	f04f 30ff 	mov.w	r0, #4294967295
 800c614:	e0d1      	b.n	800c7ba <_svfiprintf_r+0x1d2>
 800c616:	2340      	movs	r3, #64	; 0x40
 800c618:	616b      	str	r3, [r5, #20]
 800c61a:	2300      	movs	r3, #0
 800c61c:	9309      	str	r3, [sp, #36]	; 0x24
 800c61e:	2320      	movs	r3, #32
 800c620:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c624:	2330      	movs	r3, #48	; 0x30
 800c626:	f04f 0901 	mov.w	r9, #1
 800c62a:	f8cd 800c 	str.w	r8, [sp, #12]
 800c62e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800c7d4 <_svfiprintf_r+0x1ec>
 800c632:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800c636:	4623      	mov	r3, r4
 800c638:	469a      	mov	sl, r3
 800c63a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c63e:	b10a      	cbz	r2, 800c644 <_svfiprintf_r+0x5c>
 800c640:	2a25      	cmp	r2, #37	; 0x25
 800c642:	d1f9      	bne.n	800c638 <_svfiprintf_r+0x50>
 800c644:	ebba 0b04 	subs.w	fp, sl, r4
 800c648:	d00b      	beq.n	800c662 <_svfiprintf_r+0x7a>
 800c64a:	465b      	mov	r3, fp
 800c64c:	4622      	mov	r2, r4
 800c64e:	4629      	mov	r1, r5
 800c650:	4638      	mov	r0, r7
 800c652:	f7ff ff6d 	bl	800c530 <__ssputs_r>
 800c656:	3001      	adds	r0, #1
 800c658:	f000 80aa 	beq.w	800c7b0 <_svfiprintf_r+0x1c8>
 800c65c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c65e:	445a      	add	r2, fp
 800c660:	9209      	str	r2, [sp, #36]	; 0x24
 800c662:	f89a 3000 	ldrb.w	r3, [sl]
 800c666:	2b00      	cmp	r3, #0
 800c668:	f000 80a2 	beq.w	800c7b0 <_svfiprintf_r+0x1c8>
 800c66c:	2300      	movs	r3, #0
 800c66e:	f04f 32ff 	mov.w	r2, #4294967295
 800c672:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c676:	f10a 0a01 	add.w	sl, sl, #1
 800c67a:	9304      	str	r3, [sp, #16]
 800c67c:	9307      	str	r3, [sp, #28]
 800c67e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800c682:	931a      	str	r3, [sp, #104]	; 0x68
 800c684:	4654      	mov	r4, sl
 800c686:	2205      	movs	r2, #5
 800c688:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c68c:	4851      	ldr	r0, [pc, #324]	; (800c7d4 <_svfiprintf_r+0x1ec>)
 800c68e:	f7ff fb0b 	bl	800bca8 <memchr>
 800c692:	9a04      	ldr	r2, [sp, #16]
 800c694:	b9d8      	cbnz	r0, 800c6ce <_svfiprintf_r+0xe6>
 800c696:	06d0      	lsls	r0, r2, #27
 800c698:	bf44      	itt	mi
 800c69a:	2320      	movmi	r3, #32
 800c69c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c6a0:	0711      	lsls	r1, r2, #28
 800c6a2:	bf44      	itt	mi
 800c6a4:	232b      	movmi	r3, #43	; 0x2b
 800c6a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c6aa:	f89a 3000 	ldrb.w	r3, [sl]
 800c6ae:	2b2a      	cmp	r3, #42	; 0x2a
 800c6b0:	d015      	beq.n	800c6de <_svfiprintf_r+0xf6>
 800c6b2:	4654      	mov	r4, sl
 800c6b4:	2000      	movs	r0, #0
 800c6b6:	f04f 0c0a 	mov.w	ip, #10
 800c6ba:	9a07      	ldr	r2, [sp, #28]
 800c6bc:	4621      	mov	r1, r4
 800c6be:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c6c2:	3b30      	subs	r3, #48	; 0x30
 800c6c4:	2b09      	cmp	r3, #9
 800c6c6:	d94e      	bls.n	800c766 <_svfiprintf_r+0x17e>
 800c6c8:	b1b0      	cbz	r0, 800c6f8 <_svfiprintf_r+0x110>
 800c6ca:	9207      	str	r2, [sp, #28]
 800c6cc:	e014      	b.n	800c6f8 <_svfiprintf_r+0x110>
 800c6ce:	eba0 0308 	sub.w	r3, r0, r8
 800c6d2:	fa09 f303 	lsl.w	r3, r9, r3
 800c6d6:	4313      	orrs	r3, r2
 800c6d8:	46a2      	mov	sl, r4
 800c6da:	9304      	str	r3, [sp, #16]
 800c6dc:	e7d2      	b.n	800c684 <_svfiprintf_r+0x9c>
 800c6de:	9b03      	ldr	r3, [sp, #12]
 800c6e0:	1d19      	adds	r1, r3, #4
 800c6e2:	681b      	ldr	r3, [r3, #0]
 800c6e4:	9103      	str	r1, [sp, #12]
 800c6e6:	2b00      	cmp	r3, #0
 800c6e8:	bfbb      	ittet	lt
 800c6ea:	425b      	neglt	r3, r3
 800c6ec:	f042 0202 	orrlt.w	r2, r2, #2
 800c6f0:	9307      	strge	r3, [sp, #28]
 800c6f2:	9307      	strlt	r3, [sp, #28]
 800c6f4:	bfb8      	it	lt
 800c6f6:	9204      	strlt	r2, [sp, #16]
 800c6f8:	7823      	ldrb	r3, [r4, #0]
 800c6fa:	2b2e      	cmp	r3, #46	; 0x2e
 800c6fc:	d10c      	bne.n	800c718 <_svfiprintf_r+0x130>
 800c6fe:	7863      	ldrb	r3, [r4, #1]
 800c700:	2b2a      	cmp	r3, #42	; 0x2a
 800c702:	d135      	bne.n	800c770 <_svfiprintf_r+0x188>
 800c704:	9b03      	ldr	r3, [sp, #12]
 800c706:	3402      	adds	r4, #2
 800c708:	1d1a      	adds	r2, r3, #4
 800c70a:	681b      	ldr	r3, [r3, #0]
 800c70c:	9203      	str	r2, [sp, #12]
 800c70e:	2b00      	cmp	r3, #0
 800c710:	bfb8      	it	lt
 800c712:	f04f 33ff 	movlt.w	r3, #4294967295
 800c716:	9305      	str	r3, [sp, #20]
 800c718:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800c7e4 <_svfiprintf_r+0x1fc>
 800c71c:	2203      	movs	r2, #3
 800c71e:	4650      	mov	r0, sl
 800c720:	7821      	ldrb	r1, [r4, #0]
 800c722:	f7ff fac1 	bl	800bca8 <memchr>
 800c726:	b140      	cbz	r0, 800c73a <_svfiprintf_r+0x152>
 800c728:	2340      	movs	r3, #64	; 0x40
 800c72a:	eba0 000a 	sub.w	r0, r0, sl
 800c72e:	fa03 f000 	lsl.w	r0, r3, r0
 800c732:	9b04      	ldr	r3, [sp, #16]
 800c734:	3401      	adds	r4, #1
 800c736:	4303      	orrs	r3, r0
 800c738:	9304      	str	r3, [sp, #16]
 800c73a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c73e:	2206      	movs	r2, #6
 800c740:	4825      	ldr	r0, [pc, #148]	; (800c7d8 <_svfiprintf_r+0x1f0>)
 800c742:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800c746:	f7ff faaf 	bl	800bca8 <memchr>
 800c74a:	2800      	cmp	r0, #0
 800c74c:	d038      	beq.n	800c7c0 <_svfiprintf_r+0x1d8>
 800c74e:	4b23      	ldr	r3, [pc, #140]	; (800c7dc <_svfiprintf_r+0x1f4>)
 800c750:	bb1b      	cbnz	r3, 800c79a <_svfiprintf_r+0x1b2>
 800c752:	9b03      	ldr	r3, [sp, #12]
 800c754:	3307      	adds	r3, #7
 800c756:	f023 0307 	bic.w	r3, r3, #7
 800c75a:	3308      	adds	r3, #8
 800c75c:	9303      	str	r3, [sp, #12]
 800c75e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c760:	4433      	add	r3, r6
 800c762:	9309      	str	r3, [sp, #36]	; 0x24
 800c764:	e767      	b.n	800c636 <_svfiprintf_r+0x4e>
 800c766:	460c      	mov	r4, r1
 800c768:	2001      	movs	r0, #1
 800c76a:	fb0c 3202 	mla	r2, ip, r2, r3
 800c76e:	e7a5      	b.n	800c6bc <_svfiprintf_r+0xd4>
 800c770:	2300      	movs	r3, #0
 800c772:	f04f 0c0a 	mov.w	ip, #10
 800c776:	4619      	mov	r1, r3
 800c778:	3401      	adds	r4, #1
 800c77a:	9305      	str	r3, [sp, #20]
 800c77c:	4620      	mov	r0, r4
 800c77e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c782:	3a30      	subs	r2, #48	; 0x30
 800c784:	2a09      	cmp	r2, #9
 800c786:	d903      	bls.n	800c790 <_svfiprintf_r+0x1a8>
 800c788:	2b00      	cmp	r3, #0
 800c78a:	d0c5      	beq.n	800c718 <_svfiprintf_r+0x130>
 800c78c:	9105      	str	r1, [sp, #20]
 800c78e:	e7c3      	b.n	800c718 <_svfiprintf_r+0x130>
 800c790:	4604      	mov	r4, r0
 800c792:	2301      	movs	r3, #1
 800c794:	fb0c 2101 	mla	r1, ip, r1, r2
 800c798:	e7f0      	b.n	800c77c <_svfiprintf_r+0x194>
 800c79a:	ab03      	add	r3, sp, #12
 800c79c:	9300      	str	r3, [sp, #0]
 800c79e:	462a      	mov	r2, r5
 800c7a0:	4638      	mov	r0, r7
 800c7a2:	4b0f      	ldr	r3, [pc, #60]	; (800c7e0 <_svfiprintf_r+0x1f8>)
 800c7a4:	a904      	add	r1, sp, #16
 800c7a6:	f7fd fefb 	bl	800a5a0 <_printf_float>
 800c7aa:	1c42      	adds	r2, r0, #1
 800c7ac:	4606      	mov	r6, r0
 800c7ae:	d1d6      	bne.n	800c75e <_svfiprintf_r+0x176>
 800c7b0:	89ab      	ldrh	r3, [r5, #12]
 800c7b2:	065b      	lsls	r3, r3, #25
 800c7b4:	f53f af2c 	bmi.w	800c610 <_svfiprintf_r+0x28>
 800c7b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c7ba:	b01d      	add	sp, #116	; 0x74
 800c7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c7c0:	ab03      	add	r3, sp, #12
 800c7c2:	9300      	str	r3, [sp, #0]
 800c7c4:	462a      	mov	r2, r5
 800c7c6:	4638      	mov	r0, r7
 800c7c8:	4b05      	ldr	r3, [pc, #20]	; (800c7e0 <_svfiprintf_r+0x1f8>)
 800c7ca:	a904      	add	r1, sp, #16
 800c7cc:	f7fe f984 	bl	800aad8 <_printf_i>
 800c7d0:	e7eb      	b.n	800c7aa <_svfiprintf_r+0x1c2>
 800c7d2:	bf00      	nop
 800c7d4:	0800f15c 	.word	0x0800f15c
 800c7d8:	0800f166 	.word	0x0800f166
 800c7dc:	0800a5a1 	.word	0x0800a5a1
 800c7e0:	0800c531 	.word	0x0800c531
 800c7e4:	0800f162 	.word	0x0800f162

0800c7e8 <__sfputc_r>:
 800c7e8:	6893      	ldr	r3, [r2, #8]
 800c7ea:	b410      	push	{r4}
 800c7ec:	3b01      	subs	r3, #1
 800c7ee:	2b00      	cmp	r3, #0
 800c7f0:	6093      	str	r3, [r2, #8]
 800c7f2:	da07      	bge.n	800c804 <__sfputc_r+0x1c>
 800c7f4:	6994      	ldr	r4, [r2, #24]
 800c7f6:	42a3      	cmp	r3, r4
 800c7f8:	db01      	blt.n	800c7fe <__sfputc_r+0x16>
 800c7fa:	290a      	cmp	r1, #10
 800c7fc:	d102      	bne.n	800c804 <__sfputc_r+0x1c>
 800c7fe:	bc10      	pop	{r4}
 800c800:	f000 b99e 	b.w	800cb40 <__swbuf_r>
 800c804:	6813      	ldr	r3, [r2, #0]
 800c806:	1c58      	adds	r0, r3, #1
 800c808:	6010      	str	r0, [r2, #0]
 800c80a:	7019      	strb	r1, [r3, #0]
 800c80c:	4608      	mov	r0, r1
 800c80e:	bc10      	pop	{r4}
 800c810:	4770      	bx	lr

0800c812 <__sfputs_r>:
 800c812:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c814:	4606      	mov	r6, r0
 800c816:	460f      	mov	r7, r1
 800c818:	4614      	mov	r4, r2
 800c81a:	18d5      	adds	r5, r2, r3
 800c81c:	42ac      	cmp	r4, r5
 800c81e:	d101      	bne.n	800c824 <__sfputs_r+0x12>
 800c820:	2000      	movs	r0, #0
 800c822:	e007      	b.n	800c834 <__sfputs_r+0x22>
 800c824:	463a      	mov	r2, r7
 800c826:	4630      	mov	r0, r6
 800c828:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c82c:	f7ff ffdc 	bl	800c7e8 <__sfputc_r>
 800c830:	1c43      	adds	r3, r0, #1
 800c832:	d1f3      	bne.n	800c81c <__sfputs_r+0xa>
 800c834:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c838 <_vfiprintf_r>:
 800c838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c83c:	460d      	mov	r5, r1
 800c83e:	4614      	mov	r4, r2
 800c840:	4698      	mov	r8, r3
 800c842:	4606      	mov	r6, r0
 800c844:	b09d      	sub	sp, #116	; 0x74
 800c846:	b118      	cbz	r0, 800c850 <_vfiprintf_r+0x18>
 800c848:	6983      	ldr	r3, [r0, #24]
 800c84a:	b90b      	cbnz	r3, 800c850 <_vfiprintf_r+0x18>
 800c84c:	f7ff f97e 	bl	800bb4c <__sinit>
 800c850:	4b89      	ldr	r3, [pc, #548]	; (800ca78 <_vfiprintf_r+0x240>)
 800c852:	429d      	cmp	r5, r3
 800c854:	d11b      	bne.n	800c88e <_vfiprintf_r+0x56>
 800c856:	6875      	ldr	r5, [r6, #4]
 800c858:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800c85a:	07d9      	lsls	r1, r3, #31
 800c85c:	d405      	bmi.n	800c86a <_vfiprintf_r+0x32>
 800c85e:	89ab      	ldrh	r3, [r5, #12]
 800c860:	059a      	lsls	r2, r3, #22
 800c862:	d402      	bmi.n	800c86a <_vfiprintf_r+0x32>
 800c864:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800c866:	f7ff fa14 	bl	800bc92 <__retarget_lock_acquire_recursive>
 800c86a:	89ab      	ldrh	r3, [r5, #12]
 800c86c:	071b      	lsls	r3, r3, #28
 800c86e:	d501      	bpl.n	800c874 <_vfiprintf_r+0x3c>
 800c870:	692b      	ldr	r3, [r5, #16]
 800c872:	b9eb      	cbnz	r3, 800c8b0 <_vfiprintf_r+0x78>
 800c874:	4629      	mov	r1, r5
 800c876:	4630      	mov	r0, r6
 800c878:	f000 f9c6 	bl	800cc08 <__swsetup_r>
 800c87c:	b1c0      	cbz	r0, 800c8b0 <_vfiprintf_r+0x78>
 800c87e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800c880:	07dc      	lsls	r4, r3, #31
 800c882:	d50e      	bpl.n	800c8a2 <_vfiprintf_r+0x6a>
 800c884:	f04f 30ff 	mov.w	r0, #4294967295
 800c888:	b01d      	add	sp, #116	; 0x74
 800c88a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c88e:	4b7b      	ldr	r3, [pc, #492]	; (800ca7c <_vfiprintf_r+0x244>)
 800c890:	429d      	cmp	r5, r3
 800c892:	d101      	bne.n	800c898 <_vfiprintf_r+0x60>
 800c894:	68b5      	ldr	r5, [r6, #8]
 800c896:	e7df      	b.n	800c858 <_vfiprintf_r+0x20>
 800c898:	4b79      	ldr	r3, [pc, #484]	; (800ca80 <_vfiprintf_r+0x248>)
 800c89a:	429d      	cmp	r5, r3
 800c89c:	bf08      	it	eq
 800c89e:	68f5      	ldreq	r5, [r6, #12]
 800c8a0:	e7da      	b.n	800c858 <_vfiprintf_r+0x20>
 800c8a2:	89ab      	ldrh	r3, [r5, #12]
 800c8a4:	0598      	lsls	r0, r3, #22
 800c8a6:	d4ed      	bmi.n	800c884 <_vfiprintf_r+0x4c>
 800c8a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800c8aa:	f7ff f9f3 	bl	800bc94 <__retarget_lock_release_recursive>
 800c8ae:	e7e9      	b.n	800c884 <_vfiprintf_r+0x4c>
 800c8b0:	2300      	movs	r3, #0
 800c8b2:	9309      	str	r3, [sp, #36]	; 0x24
 800c8b4:	2320      	movs	r3, #32
 800c8b6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c8ba:	2330      	movs	r3, #48	; 0x30
 800c8bc:	f04f 0901 	mov.w	r9, #1
 800c8c0:	f8cd 800c 	str.w	r8, [sp, #12]
 800c8c4:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 800ca84 <_vfiprintf_r+0x24c>
 800c8c8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800c8cc:	4623      	mov	r3, r4
 800c8ce:	469a      	mov	sl, r3
 800c8d0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c8d4:	b10a      	cbz	r2, 800c8da <_vfiprintf_r+0xa2>
 800c8d6:	2a25      	cmp	r2, #37	; 0x25
 800c8d8:	d1f9      	bne.n	800c8ce <_vfiprintf_r+0x96>
 800c8da:	ebba 0b04 	subs.w	fp, sl, r4
 800c8de:	d00b      	beq.n	800c8f8 <_vfiprintf_r+0xc0>
 800c8e0:	465b      	mov	r3, fp
 800c8e2:	4622      	mov	r2, r4
 800c8e4:	4629      	mov	r1, r5
 800c8e6:	4630      	mov	r0, r6
 800c8e8:	f7ff ff93 	bl	800c812 <__sfputs_r>
 800c8ec:	3001      	adds	r0, #1
 800c8ee:	f000 80aa 	beq.w	800ca46 <_vfiprintf_r+0x20e>
 800c8f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c8f4:	445a      	add	r2, fp
 800c8f6:	9209      	str	r2, [sp, #36]	; 0x24
 800c8f8:	f89a 3000 	ldrb.w	r3, [sl]
 800c8fc:	2b00      	cmp	r3, #0
 800c8fe:	f000 80a2 	beq.w	800ca46 <_vfiprintf_r+0x20e>
 800c902:	2300      	movs	r3, #0
 800c904:	f04f 32ff 	mov.w	r2, #4294967295
 800c908:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c90c:	f10a 0a01 	add.w	sl, sl, #1
 800c910:	9304      	str	r3, [sp, #16]
 800c912:	9307      	str	r3, [sp, #28]
 800c914:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800c918:	931a      	str	r3, [sp, #104]	; 0x68
 800c91a:	4654      	mov	r4, sl
 800c91c:	2205      	movs	r2, #5
 800c91e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c922:	4858      	ldr	r0, [pc, #352]	; (800ca84 <_vfiprintf_r+0x24c>)
 800c924:	f7ff f9c0 	bl	800bca8 <memchr>
 800c928:	9a04      	ldr	r2, [sp, #16]
 800c92a:	b9d8      	cbnz	r0, 800c964 <_vfiprintf_r+0x12c>
 800c92c:	06d1      	lsls	r1, r2, #27
 800c92e:	bf44      	itt	mi
 800c930:	2320      	movmi	r3, #32
 800c932:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c936:	0713      	lsls	r3, r2, #28
 800c938:	bf44      	itt	mi
 800c93a:	232b      	movmi	r3, #43	; 0x2b
 800c93c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c940:	f89a 3000 	ldrb.w	r3, [sl]
 800c944:	2b2a      	cmp	r3, #42	; 0x2a
 800c946:	d015      	beq.n	800c974 <_vfiprintf_r+0x13c>
 800c948:	4654      	mov	r4, sl
 800c94a:	2000      	movs	r0, #0
 800c94c:	f04f 0c0a 	mov.w	ip, #10
 800c950:	9a07      	ldr	r2, [sp, #28]
 800c952:	4621      	mov	r1, r4
 800c954:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c958:	3b30      	subs	r3, #48	; 0x30
 800c95a:	2b09      	cmp	r3, #9
 800c95c:	d94e      	bls.n	800c9fc <_vfiprintf_r+0x1c4>
 800c95e:	b1b0      	cbz	r0, 800c98e <_vfiprintf_r+0x156>
 800c960:	9207      	str	r2, [sp, #28]
 800c962:	e014      	b.n	800c98e <_vfiprintf_r+0x156>
 800c964:	eba0 0308 	sub.w	r3, r0, r8
 800c968:	fa09 f303 	lsl.w	r3, r9, r3
 800c96c:	4313      	orrs	r3, r2
 800c96e:	46a2      	mov	sl, r4
 800c970:	9304      	str	r3, [sp, #16]
 800c972:	e7d2      	b.n	800c91a <_vfiprintf_r+0xe2>
 800c974:	9b03      	ldr	r3, [sp, #12]
 800c976:	1d19      	adds	r1, r3, #4
 800c978:	681b      	ldr	r3, [r3, #0]
 800c97a:	9103      	str	r1, [sp, #12]
 800c97c:	2b00      	cmp	r3, #0
 800c97e:	bfbb      	ittet	lt
 800c980:	425b      	neglt	r3, r3
 800c982:	f042 0202 	orrlt.w	r2, r2, #2
 800c986:	9307      	strge	r3, [sp, #28]
 800c988:	9307      	strlt	r3, [sp, #28]
 800c98a:	bfb8      	it	lt
 800c98c:	9204      	strlt	r2, [sp, #16]
 800c98e:	7823      	ldrb	r3, [r4, #0]
 800c990:	2b2e      	cmp	r3, #46	; 0x2e
 800c992:	d10c      	bne.n	800c9ae <_vfiprintf_r+0x176>
 800c994:	7863      	ldrb	r3, [r4, #1]
 800c996:	2b2a      	cmp	r3, #42	; 0x2a
 800c998:	d135      	bne.n	800ca06 <_vfiprintf_r+0x1ce>
 800c99a:	9b03      	ldr	r3, [sp, #12]
 800c99c:	3402      	adds	r4, #2
 800c99e:	1d1a      	adds	r2, r3, #4
 800c9a0:	681b      	ldr	r3, [r3, #0]
 800c9a2:	9203      	str	r2, [sp, #12]
 800c9a4:	2b00      	cmp	r3, #0
 800c9a6:	bfb8      	it	lt
 800c9a8:	f04f 33ff 	movlt.w	r3, #4294967295
 800c9ac:	9305      	str	r3, [sp, #20]
 800c9ae:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800ca94 <_vfiprintf_r+0x25c>
 800c9b2:	2203      	movs	r2, #3
 800c9b4:	4650      	mov	r0, sl
 800c9b6:	7821      	ldrb	r1, [r4, #0]
 800c9b8:	f7ff f976 	bl	800bca8 <memchr>
 800c9bc:	b140      	cbz	r0, 800c9d0 <_vfiprintf_r+0x198>
 800c9be:	2340      	movs	r3, #64	; 0x40
 800c9c0:	eba0 000a 	sub.w	r0, r0, sl
 800c9c4:	fa03 f000 	lsl.w	r0, r3, r0
 800c9c8:	9b04      	ldr	r3, [sp, #16]
 800c9ca:	3401      	adds	r4, #1
 800c9cc:	4303      	orrs	r3, r0
 800c9ce:	9304      	str	r3, [sp, #16]
 800c9d0:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c9d4:	2206      	movs	r2, #6
 800c9d6:	482c      	ldr	r0, [pc, #176]	; (800ca88 <_vfiprintf_r+0x250>)
 800c9d8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800c9dc:	f7ff f964 	bl	800bca8 <memchr>
 800c9e0:	2800      	cmp	r0, #0
 800c9e2:	d03f      	beq.n	800ca64 <_vfiprintf_r+0x22c>
 800c9e4:	4b29      	ldr	r3, [pc, #164]	; (800ca8c <_vfiprintf_r+0x254>)
 800c9e6:	bb1b      	cbnz	r3, 800ca30 <_vfiprintf_r+0x1f8>
 800c9e8:	9b03      	ldr	r3, [sp, #12]
 800c9ea:	3307      	adds	r3, #7
 800c9ec:	f023 0307 	bic.w	r3, r3, #7
 800c9f0:	3308      	adds	r3, #8
 800c9f2:	9303      	str	r3, [sp, #12]
 800c9f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c9f6:	443b      	add	r3, r7
 800c9f8:	9309      	str	r3, [sp, #36]	; 0x24
 800c9fa:	e767      	b.n	800c8cc <_vfiprintf_r+0x94>
 800c9fc:	460c      	mov	r4, r1
 800c9fe:	2001      	movs	r0, #1
 800ca00:	fb0c 3202 	mla	r2, ip, r2, r3
 800ca04:	e7a5      	b.n	800c952 <_vfiprintf_r+0x11a>
 800ca06:	2300      	movs	r3, #0
 800ca08:	f04f 0c0a 	mov.w	ip, #10
 800ca0c:	4619      	mov	r1, r3
 800ca0e:	3401      	adds	r4, #1
 800ca10:	9305      	str	r3, [sp, #20]
 800ca12:	4620      	mov	r0, r4
 800ca14:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ca18:	3a30      	subs	r2, #48	; 0x30
 800ca1a:	2a09      	cmp	r2, #9
 800ca1c:	d903      	bls.n	800ca26 <_vfiprintf_r+0x1ee>
 800ca1e:	2b00      	cmp	r3, #0
 800ca20:	d0c5      	beq.n	800c9ae <_vfiprintf_r+0x176>
 800ca22:	9105      	str	r1, [sp, #20]
 800ca24:	e7c3      	b.n	800c9ae <_vfiprintf_r+0x176>
 800ca26:	4604      	mov	r4, r0
 800ca28:	2301      	movs	r3, #1
 800ca2a:	fb0c 2101 	mla	r1, ip, r1, r2
 800ca2e:	e7f0      	b.n	800ca12 <_vfiprintf_r+0x1da>
 800ca30:	ab03      	add	r3, sp, #12
 800ca32:	9300      	str	r3, [sp, #0]
 800ca34:	462a      	mov	r2, r5
 800ca36:	4630      	mov	r0, r6
 800ca38:	4b15      	ldr	r3, [pc, #84]	; (800ca90 <_vfiprintf_r+0x258>)
 800ca3a:	a904      	add	r1, sp, #16
 800ca3c:	f7fd fdb0 	bl	800a5a0 <_printf_float>
 800ca40:	4607      	mov	r7, r0
 800ca42:	1c78      	adds	r0, r7, #1
 800ca44:	d1d6      	bne.n	800c9f4 <_vfiprintf_r+0x1bc>
 800ca46:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800ca48:	07d9      	lsls	r1, r3, #31
 800ca4a:	d405      	bmi.n	800ca58 <_vfiprintf_r+0x220>
 800ca4c:	89ab      	ldrh	r3, [r5, #12]
 800ca4e:	059a      	lsls	r2, r3, #22
 800ca50:	d402      	bmi.n	800ca58 <_vfiprintf_r+0x220>
 800ca52:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800ca54:	f7ff f91e 	bl	800bc94 <__retarget_lock_release_recursive>
 800ca58:	89ab      	ldrh	r3, [r5, #12]
 800ca5a:	065b      	lsls	r3, r3, #25
 800ca5c:	f53f af12 	bmi.w	800c884 <_vfiprintf_r+0x4c>
 800ca60:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ca62:	e711      	b.n	800c888 <_vfiprintf_r+0x50>
 800ca64:	ab03      	add	r3, sp, #12
 800ca66:	9300      	str	r3, [sp, #0]
 800ca68:	462a      	mov	r2, r5
 800ca6a:	4630      	mov	r0, r6
 800ca6c:	4b08      	ldr	r3, [pc, #32]	; (800ca90 <_vfiprintf_r+0x258>)
 800ca6e:	a904      	add	r1, sp, #16
 800ca70:	f7fe f832 	bl	800aad8 <_printf_i>
 800ca74:	e7e4      	b.n	800ca40 <_vfiprintf_r+0x208>
 800ca76:	bf00      	nop
 800ca78:	0800efc0 	.word	0x0800efc0
 800ca7c:	0800efe0 	.word	0x0800efe0
 800ca80:	0800efa0 	.word	0x0800efa0
 800ca84:	0800f15c 	.word	0x0800f15c
 800ca88:	0800f166 	.word	0x0800f166
 800ca8c:	0800a5a1 	.word	0x0800a5a1
 800ca90:	0800c813 	.word	0x0800c813
 800ca94:	0800f162 	.word	0x0800f162

0800ca98 <_sbrk_r>:
 800ca98:	b538      	push	{r3, r4, r5, lr}
 800ca9a:	2300      	movs	r3, #0
 800ca9c:	4d05      	ldr	r5, [pc, #20]	; (800cab4 <_sbrk_r+0x1c>)
 800ca9e:	4604      	mov	r4, r0
 800caa0:	4608      	mov	r0, r1
 800caa2:	602b      	str	r3, [r5, #0]
 800caa4:	f7f5 fe4e 	bl	8002744 <_sbrk>
 800caa8:	1c43      	adds	r3, r0, #1
 800caaa:	d102      	bne.n	800cab2 <_sbrk_r+0x1a>
 800caac:	682b      	ldr	r3, [r5, #0]
 800caae:	b103      	cbz	r3, 800cab2 <_sbrk_r+0x1a>
 800cab0:	6023      	str	r3, [r4, #0]
 800cab2:	bd38      	pop	{r3, r4, r5, pc}
 800cab4:	200033fc 	.word	0x200033fc

0800cab8 <__sread>:
 800cab8:	b510      	push	{r4, lr}
 800caba:	460c      	mov	r4, r1
 800cabc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cac0:	f000 fae6 	bl	800d090 <_read_r>
 800cac4:	2800      	cmp	r0, #0
 800cac6:	bfab      	itete	ge
 800cac8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800caca:	89a3      	ldrhlt	r3, [r4, #12]
 800cacc:	181b      	addge	r3, r3, r0
 800cace:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800cad2:	bfac      	ite	ge
 800cad4:	6563      	strge	r3, [r4, #84]	; 0x54
 800cad6:	81a3      	strhlt	r3, [r4, #12]
 800cad8:	bd10      	pop	{r4, pc}

0800cada <__swrite>:
 800cada:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cade:	461f      	mov	r7, r3
 800cae0:	898b      	ldrh	r3, [r1, #12]
 800cae2:	4605      	mov	r5, r0
 800cae4:	05db      	lsls	r3, r3, #23
 800cae6:	460c      	mov	r4, r1
 800cae8:	4616      	mov	r6, r2
 800caea:	d505      	bpl.n	800caf8 <__swrite+0x1e>
 800caec:	2302      	movs	r3, #2
 800caee:	2200      	movs	r2, #0
 800caf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800caf4:	f000 f9f8 	bl	800cee8 <_lseek_r>
 800caf8:	89a3      	ldrh	r3, [r4, #12]
 800cafa:	4632      	mov	r2, r6
 800cafc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800cb00:	81a3      	strh	r3, [r4, #12]
 800cb02:	4628      	mov	r0, r5
 800cb04:	463b      	mov	r3, r7
 800cb06:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800cb0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cb0e:	f000 b869 	b.w	800cbe4 <_write_r>

0800cb12 <__sseek>:
 800cb12:	b510      	push	{r4, lr}
 800cb14:	460c      	mov	r4, r1
 800cb16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cb1a:	f000 f9e5 	bl	800cee8 <_lseek_r>
 800cb1e:	1c43      	adds	r3, r0, #1
 800cb20:	89a3      	ldrh	r3, [r4, #12]
 800cb22:	bf15      	itete	ne
 800cb24:	6560      	strne	r0, [r4, #84]	; 0x54
 800cb26:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800cb2a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800cb2e:	81a3      	strheq	r3, [r4, #12]
 800cb30:	bf18      	it	ne
 800cb32:	81a3      	strhne	r3, [r4, #12]
 800cb34:	bd10      	pop	{r4, pc}

0800cb36 <__sclose>:
 800cb36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cb3a:	f000 b8f1 	b.w	800cd20 <_close_r>
	...

0800cb40 <__swbuf_r>:
 800cb40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb42:	460e      	mov	r6, r1
 800cb44:	4614      	mov	r4, r2
 800cb46:	4605      	mov	r5, r0
 800cb48:	b118      	cbz	r0, 800cb52 <__swbuf_r+0x12>
 800cb4a:	6983      	ldr	r3, [r0, #24]
 800cb4c:	b90b      	cbnz	r3, 800cb52 <__swbuf_r+0x12>
 800cb4e:	f7fe fffd 	bl	800bb4c <__sinit>
 800cb52:	4b21      	ldr	r3, [pc, #132]	; (800cbd8 <__swbuf_r+0x98>)
 800cb54:	429c      	cmp	r4, r3
 800cb56:	d12b      	bne.n	800cbb0 <__swbuf_r+0x70>
 800cb58:	686c      	ldr	r4, [r5, #4]
 800cb5a:	69a3      	ldr	r3, [r4, #24]
 800cb5c:	60a3      	str	r3, [r4, #8]
 800cb5e:	89a3      	ldrh	r3, [r4, #12]
 800cb60:	071a      	lsls	r2, r3, #28
 800cb62:	d52f      	bpl.n	800cbc4 <__swbuf_r+0x84>
 800cb64:	6923      	ldr	r3, [r4, #16]
 800cb66:	b36b      	cbz	r3, 800cbc4 <__swbuf_r+0x84>
 800cb68:	6923      	ldr	r3, [r4, #16]
 800cb6a:	6820      	ldr	r0, [r4, #0]
 800cb6c:	b2f6      	uxtb	r6, r6
 800cb6e:	1ac0      	subs	r0, r0, r3
 800cb70:	6963      	ldr	r3, [r4, #20]
 800cb72:	4637      	mov	r7, r6
 800cb74:	4283      	cmp	r3, r0
 800cb76:	dc04      	bgt.n	800cb82 <__swbuf_r+0x42>
 800cb78:	4621      	mov	r1, r4
 800cb7a:	4628      	mov	r0, r5
 800cb7c:	f000 f966 	bl	800ce4c <_fflush_r>
 800cb80:	bb30      	cbnz	r0, 800cbd0 <__swbuf_r+0x90>
 800cb82:	68a3      	ldr	r3, [r4, #8]
 800cb84:	3001      	adds	r0, #1
 800cb86:	3b01      	subs	r3, #1
 800cb88:	60a3      	str	r3, [r4, #8]
 800cb8a:	6823      	ldr	r3, [r4, #0]
 800cb8c:	1c5a      	adds	r2, r3, #1
 800cb8e:	6022      	str	r2, [r4, #0]
 800cb90:	701e      	strb	r6, [r3, #0]
 800cb92:	6963      	ldr	r3, [r4, #20]
 800cb94:	4283      	cmp	r3, r0
 800cb96:	d004      	beq.n	800cba2 <__swbuf_r+0x62>
 800cb98:	89a3      	ldrh	r3, [r4, #12]
 800cb9a:	07db      	lsls	r3, r3, #31
 800cb9c:	d506      	bpl.n	800cbac <__swbuf_r+0x6c>
 800cb9e:	2e0a      	cmp	r6, #10
 800cba0:	d104      	bne.n	800cbac <__swbuf_r+0x6c>
 800cba2:	4621      	mov	r1, r4
 800cba4:	4628      	mov	r0, r5
 800cba6:	f000 f951 	bl	800ce4c <_fflush_r>
 800cbaa:	b988      	cbnz	r0, 800cbd0 <__swbuf_r+0x90>
 800cbac:	4638      	mov	r0, r7
 800cbae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbb0:	4b0a      	ldr	r3, [pc, #40]	; (800cbdc <__swbuf_r+0x9c>)
 800cbb2:	429c      	cmp	r4, r3
 800cbb4:	d101      	bne.n	800cbba <__swbuf_r+0x7a>
 800cbb6:	68ac      	ldr	r4, [r5, #8]
 800cbb8:	e7cf      	b.n	800cb5a <__swbuf_r+0x1a>
 800cbba:	4b09      	ldr	r3, [pc, #36]	; (800cbe0 <__swbuf_r+0xa0>)
 800cbbc:	429c      	cmp	r4, r3
 800cbbe:	bf08      	it	eq
 800cbc0:	68ec      	ldreq	r4, [r5, #12]
 800cbc2:	e7ca      	b.n	800cb5a <__swbuf_r+0x1a>
 800cbc4:	4621      	mov	r1, r4
 800cbc6:	4628      	mov	r0, r5
 800cbc8:	f000 f81e 	bl	800cc08 <__swsetup_r>
 800cbcc:	2800      	cmp	r0, #0
 800cbce:	d0cb      	beq.n	800cb68 <__swbuf_r+0x28>
 800cbd0:	f04f 37ff 	mov.w	r7, #4294967295
 800cbd4:	e7ea      	b.n	800cbac <__swbuf_r+0x6c>
 800cbd6:	bf00      	nop
 800cbd8:	0800efc0 	.word	0x0800efc0
 800cbdc:	0800efe0 	.word	0x0800efe0
 800cbe0:	0800efa0 	.word	0x0800efa0

0800cbe4 <_write_r>:
 800cbe4:	b538      	push	{r3, r4, r5, lr}
 800cbe6:	4604      	mov	r4, r0
 800cbe8:	4608      	mov	r0, r1
 800cbea:	4611      	mov	r1, r2
 800cbec:	2200      	movs	r2, #0
 800cbee:	4d05      	ldr	r5, [pc, #20]	; (800cc04 <_write_r+0x20>)
 800cbf0:	602a      	str	r2, [r5, #0]
 800cbf2:	461a      	mov	r2, r3
 800cbf4:	f7f4 fccc 	bl	8001590 <_write>
 800cbf8:	1c43      	adds	r3, r0, #1
 800cbfa:	d102      	bne.n	800cc02 <_write_r+0x1e>
 800cbfc:	682b      	ldr	r3, [r5, #0]
 800cbfe:	b103      	cbz	r3, 800cc02 <_write_r+0x1e>
 800cc00:	6023      	str	r3, [r4, #0]
 800cc02:	bd38      	pop	{r3, r4, r5, pc}
 800cc04:	200033fc 	.word	0x200033fc

0800cc08 <__swsetup_r>:
 800cc08:	4b32      	ldr	r3, [pc, #200]	; (800ccd4 <__swsetup_r+0xcc>)
 800cc0a:	b570      	push	{r4, r5, r6, lr}
 800cc0c:	681d      	ldr	r5, [r3, #0]
 800cc0e:	4606      	mov	r6, r0
 800cc10:	460c      	mov	r4, r1
 800cc12:	b125      	cbz	r5, 800cc1e <__swsetup_r+0x16>
 800cc14:	69ab      	ldr	r3, [r5, #24]
 800cc16:	b913      	cbnz	r3, 800cc1e <__swsetup_r+0x16>
 800cc18:	4628      	mov	r0, r5
 800cc1a:	f7fe ff97 	bl	800bb4c <__sinit>
 800cc1e:	4b2e      	ldr	r3, [pc, #184]	; (800ccd8 <__swsetup_r+0xd0>)
 800cc20:	429c      	cmp	r4, r3
 800cc22:	d10f      	bne.n	800cc44 <__swsetup_r+0x3c>
 800cc24:	686c      	ldr	r4, [r5, #4]
 800cc26:	89a3      	ldrh	r3, [r4, #12]
 800cc28:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800cc2c:	0719      	lsls	r1, r3, #28
 800cc2e:	d42c      	bmi.n	800cc8a <__swsetup_r+0x82>
 800cc30:	06dd      	lsls	r5, r3, #27
 800cc32:	d411      	bmi.n	800cc58 <__swsetup_r+0x50>
 800cc34:	2309      	movs	r3, #9
 800cc36:	6033      	str	r3, [r6, #0]
 800cc38:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800cc3c:	f04f 30ff 	mov.w	r0, #4294967295
 800cc40:	81a3      	strh	r3, [r4, #12]
 800cc42:	e03e      	b.n	800ccc2 <__swsetup_r+0xba>
 800cc44:	4b25      	ldr	r3, [pc, #148]	; (800ccdc <__swsetup_r+0xd4>)
 800cc46:	429c      	cmp	r4, r3
 800cc48:	d101      	bne.n	800cc4e <__swsetup_r+0x46>
 800cc4a:	68ac      	ldr	r4, [r5, #8]
 800cc4c:	e7eb      	b.n	800cc26 <__swsetup_r+0x1e>
 800cc4e:	4b24      	ldr	r3, [pc, #144]	; (800cce0 <__swsetup_r+0xd8>)
 800cc50:	429c      	cmp	r4, r3
 800cc52:	bf08      	it	eq
 800cc54:	68ec      	ldreq	r4, [r5, #12]
 800cc56:	e7e6      	b.n	800cc26 <__swsetup_r+0x1e>
 800cc58:	0758      	lsls	r0, r3, #29
 800cc5a:	d512      	bpl.n	800cc82 <__swsetup_r+0x7a>
 800cc5c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cc5e:	b141      	cbz	r1, 800cc72 <__swsetup_r+0x6a>
 800cc60:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800cc64:	4299      	cmp	r1, r3
 800cc66:	d002      	beq.n	800cc6e <__swsetup_r+0x66>
 800cc68:	4630      	mov	r0, r6
 800cc6a:	f7ff fbbb 	bl	800c3e4 <_free_r>
 800cc6e:	2300      	movs	r3, #0
 800cc70:	6363      	str	r3, [r4, #52]	; 0x34
 800cc72:	89a3      	ldrh	r3, [r4, #12]
 800cc74:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800cc78:	81a3      	strh	r3, [r4, #12]
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	6063      	str	r3, [r4, #4]
 800cc7e:	6923      	ldr	r3, [r4, #16]
 800cc80:	6023      	str	r3, [r4, #0]
 800cc82:	89a3      	ldrh	r3, [r4, #12]
 800cc84:	f043 0308 	orr.w	r3, r3, #8
 800cc88:	81a3      	strh	r3, [r4, #12]
 800cc8a:	6923      	ldr	r3, [r4, #16]
 800cc8c:	b94b      	cbnz	r3, 800cca2 <__swsetup_r+0x9a>
 800cc8e:	89a3      	ldrh	r3, [r4, #12]
 800cc90:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800cc94:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cc98:	d003      	beq.n	800cca2 <__swsetup_r+0x9a>
 800cc9a:	4621      	mov	r1, r4
 800cc9c:	4630      	mov	r0, r6
 800cc9e:	f000 f959 	bl	800cf54 <__smakebuf_r>
 800cca2:	89a0      	ldrh	r0, [r4, #12]
 800cca4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800cca8:	f010 0301 	ands.w	r3, r0, #1
 800ccac:	d00a      	beq.n	800ccc4 <__swsetup_r+0xbc>
 800ccae:	2300      	movs	r3, #0
 800ccb0:	60a3      	str	r3, [r4, #8]
 800ccb2:	6963      	ldr	r3, [r4, #20]
 800ccb4:	425b      	negs	r3, r3
 800ccb6:	61a3      	str	r3, [r4, #24]
 800ccb8:	6923      	ldr	r3, [r4, #16]
 800ccba:	b943      	cbnz	r3, 800ccce <__swsetup_r+0xc6>
 800ccbc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800ccc0:	d1ba      	bne.n	800cc38 <__swsetup_r+0x30>
 800ccc2:	bd70      	pop	{r4, r5, r6, pc}
 800ccc4:	0781      	lsls	r1, r0, #30
 800ccc6:	bf58      	it	pl
 800ccc8:	6963      	ldrpl	r3, [r4, #20]
 800ccca:	60a3      	str	r3, [r4, #8]
 800cccc:	e7f4      	b.n	800ccb8 <__swsetup_r+0xb0>
 800ccce:	2000      	movs	r0, #0
 800ccd0:	e7f7      	b.n	800ccc2 <__swsetup_r+0xba>
 800ccd2:	bf00      	nop
 800ccd4:	20000180 	.word	0x20000180
 800ccd8:	0800efc0 	.word	0x0800efc0
 800ccdc:	0800efe0 	.word	0x0800efe0
 800cce0:	0800efa0 	.word	0x0800efa0

0800cce4 <__assert_func>:
 800cce4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cce6:	4614      	mov	r4, r2
 800cce8:	461a      	mov	r2, r3
 800ccea:	4b09      	ldr	r3, [pc, #36]	; (800cd10 <__assert_func+0x2c>)
 800ccec:	4605      	mov	r5, r0
 800ccee:	681b      	ldr	r3, [r3, #0]
 800ccf0:	68d8      	ldr	r0, [r3, #12]
 800ccf2:	b14c      	cbz	r4, 800cd08 <__assert_func+0x24>
 800ccf4:	4b07      	ldr	r3, [pc, #28]	; (800cd14 <__assert_func+0x30>)
 800ccf6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ccfa:	9100      	str	r1, [sp, #0]
 800ccfc:	462b      	mov	r3, r5
 800ccfe:	4906      	ldr	r1, [pc, #24]	; (800cd18 <__assert_func+0x34>)
 800cd00:	f000 f8e0 	bl	800cec4 <fiprintf>
 800cd04:	f000 f9e3 	bl	800d0ce <abort>
 800cd08:	4b04      	ldr	r3, [pc, #16]	; (800cd1c <__assert_func+0x38>)
 800cd0a:	461c      	mov	r4, r3
 800cd0c:	e7f3      	b.n	800ccf6 <__assert_func+0x12>
 800cd0e:	bf00      	nop
 800cd10:	20000180 	.word	0x20000180
 800cd14:	0800f16d 	.word	0x0800f16d
 800cd18:	0800f17a 	.word	0x0800f17a
 800cd1c:	0800d3b4 	.word	0x0800d3b4

0800cd20 <_close_r>:
 800cd20:	b538      	push	{r3, r4, r5, lr}
 800cd22:	2300      	movs	r3, #0
 800cd24:	4d05      	ldr	r5, [pc, #20]	; (800cd3c <_close_r+0x1c>)
 800cd26:	4604      	mov	r4, r0
 800cd28:	4608      	mov	r0, r1
 800cd2a:	602b      	str	r3, [r5, #0]
 800cd2c:	f7f5 fcfe 	bl	800272c <_close>
 800cd30:	1c43      	adds	r3, r0, #1
 800cd32:	d102      	bne.n	800cd3a <_close_r+0x1a>
 800cd34:	682b      	ldr	r3, [r5, #0]
 800cd36:	b103      	cbz	r3, 800cd3a <_close_r+0x1a>
 800cd38:	6023      	str	r3, [r4, #0]
 800cd3a:	bd38      	pop	{r3, r4, r5, pc}
 800cd3c:	200033fc 	.word	0x200033fc

0800cd40 <__sflush_r>:
 800cd40:	898a      	ldrh	r2, [r1, #12]
 800cd42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd46:	4605      	mov	r5, r0
 800cd48:	0710      	lsls	r0, r2, #28
 800cd4a:	460c      	mov	r4, r1
 800cd4c:	d458      	bmi.n	800ce00 <__sflush_r+0xc0>
 800cd4e:	684b      	ldr	r3, [r1, #4]
 800cd50:	2b00      	cmp	r3, #0
 800cd52:	dc05      	bgt.n	800cd60 <__sflush_r+0x20>
 800cd54:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800cd56:	2b00      	cmp	r3, #0
 800cd58:	dc02      	bgt.n	800cd60 <__sflush_r+0x20>
 800cd5a:	2000      	movs	r0, #0
 800cd5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd60:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800cd62:	2e00      	cmp	r6, #0
 800cd64:	d0f9      	beq.n	800cd5a <__sflush_r+0x1a>
 800cd66:	2300      	movs	r3, #0
 800cd68:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800cd6c:	682f      	ldr	r7, [r5, #0]
 800cd6e:	602b      	str	r3, [r5, #0]
 800cd70:	d032      	beq.n	800cdd8 <__sflush_r+0x98>
 800cd72:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800cd74:	89a3      	ldrh	r3, [r4, #12]
 800cd76:	075a      	lsls	r2, r3, #29
 800cd78:	d505      	bpl.n	800cd86 <__sflush_r+0x46>
 800cd7a:	6863      	ldr	r3, [r4, #4]
 800cd7c:	1ac0      	subs	r0, r0, r3
 800cd7e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800cd80:	b10b      	cbz	r3, 800cd86 <__sflush_r+0x46>
 800cd82:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cd84:	1ac0      	subs	r0, r0, r3
 800cd86:	2300      	movs	r3, #0
 800cd88:	4602      	mov	r2, r0
 800cd8a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800cd8c:	4628      	mov	r0, r5
 800cd8e:	6a21      	ldr	r1, [r4, #32]
 800cd90:	47b0      	blx	r6
 800cd92:	1c43      	adds	r3, r0, #1
 800cd94:	89a3      	ldrh	r3, [r4, #12]
 800cd96:	d106      	bne.n	800cda6 <__sflush_r+0x66>
 800cd98:	6829      	ldr	r1, [r5, #0]
 800cd9a:	291d      	cmp	r1, #29
 800cd9c:	d82c      	bhi.n	800cdf8 <__sflush_r+0xb8>
 800cd9e:	4a2a      	ldr	r2, [pc, #168]	; (800ce48 <__sflush_r+0x108>)
 800cda0:	40ca      	lsrs	r2, r1
 800cda2:	07d6      	lsls	r6, r2, #31
 800cda4:	d528      	bpl.n	800cdf8 <__sflush_r+0xb8>
 800cda6:	2200      	movs	r2, #0
 800cda8:	6062      	str	r2, [r4, #4]
 800cdaa:	6922      	ldr	r2, [r4, #16]
 800cdac:	04d9      	lsls	r1, r3, #19
 800cdae:	6022      	str	r2, [r4, #0]
 800cdb0:	d504      	bpl.n	800cdbc <__sflush_r+0x7c>
 800cdb2:	1c42      	adds	r2, r0, #1
 800cdb4:	d101      	bne.n	800cdba <__sflush_r+0x7a>
 800cdb6:	682b      	ldr	r3, [r5, #0]
 800cdb8:	b903      	cbnz	r3, 800cdbc <__sflush_r+0x7c>
 800cdba:	6560      	str	r0, [r4, #84]	; 0x54
 800cdbc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cdbe:	602f      	str	r7, [r5, #0]
 800cdc0:	2900      	cmp	r1, #0
 800cdc2:	d0ca      	beq.n	800cd5a <__sflush_r+0x1a>
 800cdc4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800cdc8:	4299      	cmp	r1, r3
 800cdca:	d002      	beq.n	800cdd2 <__sflush_r+0x92>
 800cdcc:	4628      	mov	r0, r5
 800cdce:	f7ff fb09 	bl	800c3e4 <_free_r>
 800cdd2:	2000      	movs	r0, #0
 800cdd4:	6360      	str	r0, [r4, #52]	; 0x34
 800cdd6:	e7c1      	b.n	800cd5c <__sflush_r+0x1c>
 800cdd8:	6a21      	ldr	r1, [r4, #32]
 800cdda:	2301      	movs	r3, #1
 800cddc:	4628      	mov	r0, r5
 800cdde:	47b0      	blx	r6
 800cde0:	1c41      	adds	r1, r0, #1
 800cde2:	d1c7      	bne.n	800cd74 <__sflush_r+0x34>
 800cde4:	682b      	ldr	r3, [r5, #0]
 800cde6:	2b00      	cmp	r3, #0
 800cde8:	d0c4      	beq.n	800cd74 <__sflush_r+0x34>
 800cdea:	2b1d      	cmp	r3, #29
 800cdec:	d001      	beq.n	800cdf2 <__sflush_r+0xb2>
 800cdee:	2b16      	cmp	r3, #22
 800cdf0:	d101      	bne.n	800cdf6 <__sflush_r+0xb6>
 800cdf2:	602f      	str	r7, [r5, #0]
 800cdf4:	e7b1      	b.n	800cd5a <__sflush_r+0x1a>
 800cdf6:	89a3      	ldrh	r3, [r4, #12]
 800cdf8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cdfc:	81a3      	strh	r3, [r4, #12]
 800cdfe:	e7ad      	b.n	800cd5c <__sflush_r+0x1c>
 800ce00:	690f      	ldr	r7, [r1, #16]
 800ce02:	2f00      	cmp	r7, #0
 800ce04:	d0a9      	beq.n	800cd5a <__sflush_r+0x1a>
 800ce06:	0793      	lsls	r3, r2, #30
 800ce08:	bf18      	it	ne
 800ce0a:	2300      	movne	r3, #0
 800ce0c:	680e      	ldr	r6, [r1, #0]
 800ce0e:	bf08      	it	eq
 800ce10:	694b      	ldreq	r3, [r1, #20]
 800ce12:	eba6 0807 	sub.w	r8, r6, r7
 800ce16:	600f      	str	r7, [r1, #0]
 800ce18:	608b      	str	r3, [r1, #8]
 800ce1a:	f1b8 0f00 	cmp.w	r8, #0
 800ce1e:	dd9c      	ble.n	800cd5a <__sflush_r+0x1a>
 800ce20:	4643      	mov	r3, r8
 800ce22:	463a      	mov	r2, r7
 800ce24:	4628      	mov	r0, r5
 800ce26:	6a21      	ldr	r1, [r4, #32]
 800ce28:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800ce2a:	47b0      	blx	r6
 800ce2c:	2800      	cmp	r0, #0
 800ce2e:	dc06      	bgt.n	800ce3e <__sflush_r+0xfe>
 800ce30:	89a3      	ldrh	r3, [r4, #12]
 800ce32:	f04f 30ff 	mov.w	r0, #4294967295
 800ce36:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ce3a:	81a3      	strh	r3, [r4, #12]
 800ce3c:	e78e      	b.n	800cd5c <__sflush_r+0x1c>
 800ce3e:	4407      	add	r7, r0
 800ce40:	eba8 0800 	sub.w	r8, r8, r0
 800ce44:	e7e9      	b.n	800ce1a <__sflush_r+0xda>
 800ce46:	bf00      	nop
 800ce48:	20400001 	.word	0x20400001

0800ce4c <_fflush_r>:
 800ce4c:	b538      	push	{r3, r4, r5, lr}
 800ce4e:	690b      	ldr	r3, [r1, #16]
 800ce50:	4605      	mov	r5, r0
 800ce52:	460c      	mov	r4, r1
 800ce54:	b913      	cbnz	r3, 800ce5c <_fflush_r+0x10>
 800ce56:	2500      	movs	r5, #0
 800ce58:	4628      	mov	r0, r5
 800ce5a:	bd38      	pop	{r3, r4, r5, pc}
 800ce5c:	b118      	cbz	r0, 800ce66 <_fflush_r+0x1a>
 800ce5e:	6983      	ldr	r3, [r0, #24]
 800ce60:	b90b      	cbnz	r3, 800ce66 <_fflush_r+0x1a>
 800ce62:	f7fe fe73 	bl	800bb4c <__sinit>
 800ce66:	4b14      	ldr	r3, [pc, #80]	; (800ceb8 <_fflush_r+0x6c>)
 800ce68:	429c      	cmp	r4, r3
 800ce6a:	d11b      	bne.n	800cea4 <_fflush_r+0x58>
 800ce6c:	686c      	ldr	r4, [r5, #4]
 800ce6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ce72:	2b00      	cmp	r3, #0
 800ce74:	d0ef      	beq.n	800ce56 <_fflush_r+0xa>
 800ce76:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800ce78:	07d0      	lsls	r0, r2, #31
 800ce7a:	d404      	bmi.n	800ce86 <_fflush_r+0x3a>
 800ce7c:	0599      	lsls	r1, r3, #22
 800ce7e:	d402      	bmi.n	800ce86 <_fflush_r+0x3a>
 800ce80:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ce82:	f7fe ff06 	bl	800bc92 <__retarget_lock_acquire_recursive>
 800ce86:	4628      	mov	r0, r5
 800ce88:	4621      	mov	r1, r4
 800ce8a:	f7ff ff59 	bl	800cd40 <__sflush_r>
 800ce8e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ce90:	4605      	mov	r5, r0
 800ce92:	07da      	lsls	r2, r3, #31
 800ce94:	d4e0      	bmi.n	800ce58 <_fflush_r+0xc>
 800ce96:	89a3      	ldrh	r3, [r4, #12]
 800ce98:	059b      	lsls	r3, r3, #22
 800ce9a:	d4dd      	bmi.n	800ce58 <_fflush_r+0xc>
 800ce9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ce9e:	f7fe fef9 	bl	800bc94 <__retarget_lock_release_recursive>
 800cea2:	e7d9      	b.n	800ce58 <_fflush_r+0xc>
 800cea4:	4b05      	ldr	r3, [pc, #20]	; (800cebc <_fflush_r+0x70>)
 800cea6:	429c      	cmp	r4, r3
 800cea8:	d101      	bne.n	800ceae <_fflush_r+0x62>
 800ceaa:	68ac      	ldr	r4, [r5, #8]
 800ceac:	e7df      	b.n	800ce6e <_fflush_r+0x22>
 800ceae:	4b04      	ldr	r3, [pc, #16]	; (800cec0 <_fflush_r+0x74>)
 800ceb0:	429c      	cmp	r4, r3
 800ceb2:	bf08      	it	eq
 800ceb4:	68ec      	ldreq	r4, [r5, #12]
 800ceb6:	e7da      	b.n	800ce6e <_fflush_r+0x22>
 800ceb8:	0800efc0 	.word	0x0800efc0
 800cebc:	0800efe0 	.word	0x0800efe0
 800cec0:	0800efa0 	.word	0x0800efa0

0800cec4 <fiprintf>:
 800cec4:	b40e      	push	{r1, r2, r3}
 800cec6:	b503      	push	{r0, r1, lr}
 800cec8:	4601      	mov	r1, r0
 800ceca:	ab03      	add	r3, sp, #12
 800cecc:	4805      	ldr	r0, [pc, #20]	; (800cee4 <fiprintf+0x20>)
 800cece:	f853 2b04 	ldr.w	r2, [r3], #4
 800ced2:	6800      	ldr	r0, [r0, #0]
 800ced4:	9301      	str	r3, [sp, #4]
 800ced6:	f7ff fcaf 	bl	800c838 <_vfiprintf_r>
 800ceda:	b002      	add	sp, #8
 800cedc:	f85d eb04 	ldr.w	lr, [sp], #4
 800cee0:	b003      	add	sp, #12
 800cee2:	4770      	bx	lr
 800cee4:	20000180 	.word	0x20000180

0800cee8 <_lseek_r>:
 800cee8:	b538      	push	{r3, r4, r5, lr}
 800ceea:	4604      	mov	r4, r0
 800ceec:	4608      	mov	r0, r1
 800ceee:	4611      	mov	r1, r2
 800cef0:	2200      	movs	r2, #0
 800cef2:	4d05      	ldr	r5, [pc, #20]	; (800cf08 <_lseek_r+0x20>)
 800cef4:	602a      	str	r2, [r5, #0]
 800cef6:	461a      	mov	r2, r3
 800cef8:	f7f5 fc22 	bl	8002740 <_lseek>
 800cefc:	1c43      	adds	r3, r0, #1
 800cefe:	d102      	bne.n	800cf06 <_lseek_r+0x1e>
 800cf00:	682b      	ldr	r3, [r5, #0]
 800cf02:	b103      	cbz	r3, 800cf06 <_lseek_r+0x1e>
 800cf04:	6023      	str	r3, [r4, #0]
 800cf06:	bd38      	pop	{r3, r4, r5, pc}
 800cf08:	200033fc 	.word	0x200033fc

0800cf0c <__swhatbuf_r>:
 800cf0c:	b570      	push	{r4, r5, r6, lr}
 800cf0e:	460e      	mov	r6, r1
 800cf10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cf14:	4614      	mov	r4, r2
 800cf16:	2900      	cmp	r1, #0
 800cf18:	461d      	mov	r5, r3
 800cf1a:	b096      	sub	sp, #88	; 0x58
 800cf1c:	da07      	bge.n	800cf2e <__swhatbuf_r+0x22>
 800cf1e:	2300      	movs	r3, #0
 800cf20:	602b      	str	r3, [r5, #0]
 800cf22:	89b3      	ldrh	r3, [r6, #12]
 800cf24:	061a      	lsls	r2, r3, #24
 800cf26:	d410      	bmi.n	800cf4a <__swhatbuf_r+0x3e>
 800cf28:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cf2c:	e00e      	b.n	800cf4c <__swhatbuf_r+0x40>
 800cf2e:	466a      	mov	r2, sp
 800cf30:	f000 f8d4 	bl	800d0dc <_fstat_r>
 800cf34:	2800      	cmp	r0, #0
 800cf36:	dbf2      	blt.n	800cf1e <__swhatbuf_r+0x12>
 800cf38:	9a01      	ldr	r2, [sp, #4]
 800cf3a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800cf3e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800cf42:	425a      	negs	r2, r3
 800cf44:	415a      	adcs	r2, r3
 800cf46:	602a      	str	r2, [r5, #0]
 800cf48:	e7ee      	b.n	800cf28 <__swhatbuf_r+0x1c>
 800cf4a:	2340      	movs	r3, #64	; 0x40
 800cf4c:	2000      	movs	r0, #0
 800cf4e:	6023      	str	r3, [r4, #0]
 800cf50:	b016      	add	sp, #88	; 0x58
 800cf52:	bd70      	pop	{r4, r5, r6, pc}

0800cf54 <__smakebuf_r>:
 800cf54:	898b      	ldrh	r3, [r1, #12]
 800cf56:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cf58:	079d      	lsls	r5, r3, #30
 800cf5a:	4606      	mov	r6, r0
 800cf5c:	460c      	mov	r4, r1
 800cf5e:	d507      	bpl.n	800cf70 <__smakebuf_r+0x1c>
 800cf60:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800cf64:	6023      	str	r3, [r4, #0]
 800cf66:	6123      	str	r3, [r4, #16]
 800cf68:	2301      	movs	r3, #1
 800cf6a:	6163      	str	r3, [r4, #20]
 800cf6c:	b002      	add	sp, #8
 800cf6e:	bd70      	pop	{r4, r5, r6, pc}
 800cf70:	466a      	mov	r2, sp
 800cf72:	ab01      	add	r3, sp, #4
 800cf74:	f7ff ffca 	bl	800cf0c <__swhatbuf_r>
 800cf78:	9900      	ldr	r1, [sp, #0]
 800cf7a:	4605      	mov	r5, r0
 800cf7c:	4630      	mov	r0, r6
 800cf7e:	f7ff fa7d 	bl	800c47c <_malloc_r>
 800cf82:	b948      	cbnz	r0, 800cf98 <__smakebuf_r+0x44>
 800cf84:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cf88:	059a      	lsls	r2, r3, #22
 800cf8a:	d4ef      	bmi.n	800cf6c <__smakebuf_r+0x18>
 800cf8c:	f023 0303 	bic.w	r3, r3, #3
 800cf90:	f043 0302 	orr.w	r3, r3, #2
 800cf94:	81a3      	strh	r3, [r4, #12]
 800cf96:	e7e3      	b.n	800cf60 <__smakebuf_r+0xc>
 800cf98:	4b0d      	ldr	r3, [pc, #52]	; (800cfd0 <__smakebuf_r+0x7c>)
 800cf9a:	62b3      	str	r3, [r6, #40]	; 0x28
 800cf9c:	89a3      	ldrh	r3, [r4, #12]
 800cf9e:	6020      	str	r0, [r4, #0]
 800cfa0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800cfa4:	81a3      	strh	r3, [r4, #12]
 800cfa6:	9b00      	ldr	r3, [sp, #0]
 800cfa8:	6120      	str	r0, [r4, #16]
 800cfaa:	6163      	str	r3, [r4, #20]
 800cfac:	9b01      	ldr	r3, [sp, #4]
 800cfae:	b15b      	cbz	r3, 800cfc8 <__smakebuf_r+0x74>
 800cfb0:	4630      	mov	r0, r6
 800cfb2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800cfb6:	f000 f8a3 	bl	800d100 <_isatty_r>
 800cfba:	b128      	cbz	r0, 800cfc8 <__smakebuf_r+0x74>
 800cfbc:	89a3      	ldrh	r3, [r4, #12]
 800cfbe:	f023 0303 	bic.w	r3, r3, #3
 800cfc2:	f043 0301 	orr.w	r3, r3, #1
 800cfc6:	81a3      	strh	r3, [r4, #12]
 800cfc8:	89a0      	ldrh	r0, [r4, #12]
 800cfca:	4305      	orrs	r5, r0
 800cfcc:	81a5      	strh	r5, [r4, #12]
 800cfce:	e7cd      	b.n	800cf6c <__smakebuf_r+0x18>
 800cfd0:	0800bae5 	.word	0x0800bae5

0800cfd4 <__ascii_mbtowc>:
 800cfd4:	b082      	sub	sp, #8
 800cfd6:	b901      	cbnz	r1, 800cfda <__ascii_mbtowc+0x6>
 800cfd8:	a901      	add	r1, sp, #4
 800cfda:	b142      	cbz	r2, 800cfee <__ascii_mbtowc+0x1a>
 800cfdc:	b14b      	cbz	r3, 800cff2 <__ascii_mbtowc+0x1e>
 800cfde:	7813      	ldrb	r3, [r2, #0]
 800cfe0:	600b      	str	r3, [r1, #0]
 800cfe2:	7812      	ldrb	r2, [r2, #0]
 800cfe4:	1e10      	subs	r0, r2, #0
 800cfe6:	bf18      	it	ne
 800cfe8:	2001      	movne	r0, #1
 800cfea:	b002      	add	sp, #8
 800cfec:	4770      	bx	lr
 800cfee:	4610      	mov	r0, r2
 800cff0:	e7fb      	b.n	800cfea <__ascii_mbtowc+0x16>
 800cff2:	f06f 0001 	mvn.w	r0, #1
 800cff6:	e7f8      	b.n	800cfea <__ascii_mbtowc+0x16>

0800cff8 <memmove>:
 800cff8:	4288      	cmp	r0, r1
 800cffa:	b510      	push	{r4, lr}
 800cffc:	eb01 0402 	add.w	r4, r1, r2
 800d000:	d902      	bls.n	800d008 <memmove+0x10>
 800d002:	4284      	cmp	r4, r0
 800d004:	4623      	mov	r3, r4
 800d006:	d807      	bhi.n	800d018 <memmove+0x20>
 800d008:	1e43      	subs	r3, r0, #1
 800d00a:	42a1      	cmp	r1, r4
 800d00c:	d008      	beq.n	800d020 <memmove+0x28>
 800d00e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d012:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d016:	e7f8      	b.n	800d00a <memmove+0x12>
 800d018:	4601      	mov	r1, r0
 800d01a:	4402      	add	r2, r0
 800d01c:	428a      	cmp	r2, r1
 800d01e:	d100      	bne.n	800d022 <memmove+0x2a>
 800d020:	bd10      	pop	{r4, pc}
 800d022:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800d026:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800d02a:	e7f7      	b.n	800d01c <memmove+0x24>

0800d02c <__malloc_lock>:
 800d02c:	4801      	ldr	r0, [pc, #4]	; (800d034 <__malloc_lock+0x8>)
 800d02e:	f7fe be30 	b.w	800bc92 <__retarget_lock_acquire_recursive>
 800d032:	bf00      	nop
 800d034:	200033f0 	.word	0x200033f0

0800d038 <__malloc_unlock>:
 800d038:	4801      	ldr	r0, [pc, #4]	; (800d040 <__malloc_unlock+0x8>)
 800d03a:	f7fe be2b 	b.w	800bc94 <__retarget_lock_release_recursive>
 800d03e:	bf00      	nop
 800d040:	200033f0 	.word	0x200033f0

0800d044 <_realloc_r>:
 800d044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d046:	4607      	mov	r7, r0
 800d048:	4614      	mov	r4, r2
 800d04a:	460e      	mov	r6, r1
 800d04c:	b921      	cbnz	r1, 800d058 <_realloc_r+0x14>
 800d04e:	4611      	mov	r1, r2
 800d050:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d054:	f7ff ba12 	b.w	800c47c <_malloc_r>
 800d058:	b922      	cbnz	r2, 800d064 <_realloc_r+0x20>
 800d05a:	f7ff f9c3 	bl	800c3e4 <_free_r>
 800d05e:	4625      	mov	r5, r4
 800d060:	4628      	mov	r0, r5
 800d062:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d064:	f000 f85c 	bl	800d120 <_malloc_usable_size_r>
 800d068:	42a0      	cmp	r0, r4
 800d06a:	d20f      	bcs.n	800d08c <_realloc_r+0x48>
 800d06c:	4621      	mov	r1, r4
 800d06e:	4638      	mov	r0, r7
 800d070:	f7ff fa04 	bl	800c47c <_malloc_r>
 800d074:	4605      	mov	r5, r0
 800d076:	2800      	cmp	r0, #0
 800d078:	d0f2      	beq.n	800d060 <_realloc_r+0x1c>
 800d07a:	4631      	mov	r1, r6
 800d07c:	4622      	mov	r2, r4
 800d07e:	f7fd f9db 	bl	800a438 <memcpy>
 800d082:	4631      	mov	r1, r6
 800d084:	4638      	mov	r0, r7
 800d086:	f7ff f9ad 	bl	800c3e4 <_free_r>
 800d08a:	e7e9      	b.n	800d060 <_realloc_r+0x1c>
 800d08c:	4635      	mov	r5, r6
 800d08e:	e7e7      	b.n	800d060 <_realloc_r+0x1c>

0800d090 <_read_r>:
 800d090:	b538      	push	{r3, r4, r5, lr}
 800d092:	4604      	mov	r4, r0
 800d094:	4608      	mov	r0, r1
 800d096:	4611      	mov	r1, r2
 800d098:	2200      	movs	r2, #0
 800d09a:	4d05      	ldr	r5, [pc, #20]	; (800d0b0 <_read_r+0x20>)
 800d09c:	602a      	str	r2, [r5, #0]
 800d09e:	461a      	mov	r2, r3
 800d0a0:	f7f5 fb37 	bl	8002712 <_read>
 800d0a4:	1c43      	adds	r3, r0, #1
 800d0a6:	d102      	bne.n	800d0ae <_read_r+0x1e>
 800d0a8:	682b      	ldr	r3, [r5, #0]
 800d0aa:	b103      	cbz	r3, 800d0ae <_read_r+0x1e>
 800d0ac:	6023      	str	r3, [r4, #0]
 800d0ae:	bd38      	pop	{r3, r4, r5, pc}
 800d0b0:	200033fc 	.word	0x200033fc

0800d0b4 <__ascii_wctomb>:
 800d0b4:	4603      	mov	r3, r0
 800d0b6:	4608      	mov	r0, r1
 800d0b8:	b141      	cbz	r1, 800d0cc <__ascii_wctomb+0x18>
 800d0ba:	2aff      	cmp	r2, #255	; 0xff
 800d0bc:	d904      	bls.n	800d0c8 <__ascii_wctomb+0x14>
 800d0be:	228a      	movs	r2, #138	; 0x8a
 800d0c0:	f04f 30ff 	mov.w	r0, #4294967295
 800d0c4:	601a      	str	r2, [r3, #0]
 800d0c6:	4770      	bx	lr
 800d0c8:	2001      	movs	r0, #1
 800d0ca:	700a      	strb	r2, [r1, #0]
 800d0cc:	4770      	bx	lr

0800d0ce <abort>:
 800d0ce:	2006      	movs	r0, #6
 800d0d0:	b508      	push	{r3, lr}
 800d0d2:	f000 f855 	bl	800d180 <raise>
 800d0d6:	2001      	movs	r0, #1
 800d0d8:	f7f5 fb15 	bl	8002706 <_exit>

0800d0dc <_fstat_r>:
 800d0dc:	b538      	push	{r3, r4, r5, lr}
 800d0de:	2300      	movs	r3, #0
 800d0e0:	4d06      	ldr	r5, [pc, #24]	; (800d0fc <_fstat_r+0x20>)
 800d0e2:	4604      	mov	r4, r0
 800d0e4:	4608      	mov	r0, r1
 800d0e6:	4611      	mov	r1, r2
 800d0e8:	602b      	str	r3, [r5, #0]
 800d0ea:	f7f5 fb22 	bl	8002732 <_fstat>
 800d0ee:	1c43      	adds	r3, r0, #1
 800d0f0:	d102      	bne.n	800d0f8 <_fstat_r+0x1c>
 800d0f2:	682b      	ldr	r3, [r5, #0]
 800d0f4:	b103      	cbz	r3, 800d0f8 <_fstat_r+0x1c>
 800d0f6:	6023      	str	r3, [r4, #0]
 800d0f8:	bd38      	pop	{r3, r4, r5, pc}
 800d0fa:	bf00      	nop
 800d0fc:	200033fc 	.word	0x200033fc

0800d100 <_isatty_r>:
 800d100:	b538      	push	{r3, r4, r5, lr}
 800d102:	2300      	movs	r3, #0
 800d104:	4d05      	ldr	r5, [pc, #20]	; (800d11c <_isatty_r+0x1c>)
 800d106:	4604      	mov	r4, r0
 800d108:	4608      	mov	r0, r1
 800d10a:	602b      	str	r3, [r5, #0]
 800d10c:	f7f5 fb16 	bl	800273c <_isatty>
 800d110:	1c43      	adds	r3, r0, #1
 800d112:	d102      	bne.n	800d11a <_isatty_r+0x1a>
 800d114:	682b      	ldr	r3, [r5, #0]
 800d116:	b103      	cbz	r3, 800d11a <_isatty_r+0x1a>
 800d118:	6023      	str	r3, [r4, #0]
 800d11a:	bd38      	pop	{r3, r4, r5, pc}
 800d11c:	200033fc 	.word	0x200033fc

0800d120 <_malloc_usable_size_r>:
 800d120:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d124:	1f18      	subs	r0, r3, #4
 800d126:	2b00      	cmp	r3, #0
 800d128:	bfbc      	itt	lt
 800d12a:	580b      	ldrlt	r3, [r1, r0]
 800d12c:	18c0      	addlt	r0, r0, r3
 800d12e:	4770      	bx	lr

0800d130 <_raise_r>:
 800d130:	291f      	cmp	r1, #31
 800d132:	b538      	push	{r3, r4, r5, lr}
 800d134:	4604      	mov	r4, r0
 800d136:	460d      	mov	r5, r1
 800d138:	d904      	bls.n	800d144 <_raise_r+0x14>
 800d13a:	2316      	movs	r3, #22
 800d13c:	6003      	str	r3, [r0, #0]
 800d13e:	f04f 30ff 	mov.w	r0, #4294967295
 800d142:	bd38      	pop	{r3, r4, r5, pc}
 800d144:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800d146:	b112      	cbz	r2, 800d14e <_raise_r+0x1e>
 800d148:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800d14c:	b94b      	cbnz	r3, 800d162 <_raise_r+0x32>
 800d14e:	4620      	mov	r0, r4
 800d150:	f000 f830 	bl	800d1b4 <_getpid_r>
 800d154:	462a      	mov	r2, r5
 800d156:	4601      	mov	r1, r0
 800d158:	4620      	mov	r0, r4
 800d15a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d15e:	f000 b817 	b.w	800d190 <_kill_r>
 800d162:	2b01      	cmp	r3, #1
 800d164:	d00a      	beq.n	800d17c <_raise_r+0x4c>
 800d166:	1c59      	adds	r1, r3, #1
 800d168:	d103      	bne.n	800d172 <_raise_r+0x42>
 800d16a:	2316      	movs	r3, #22
 800d16c:	6003      	str	r3, [r0, #0]
 800d16e:	2001      	movs	r0, #1
 800d170:	e7e7      	b.n	800d142 <_raise_r+0x12>
 800d172:	2400      	movs	r4, #0
 800d174:	4628      	mov	r0, r5
 800d176:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800d17a:	4798      	blx	r3
 800d17c:	2000      	movs	r0, #0
 800d17e:	e7e0      	b.n	800d142 <_raise_r+0x12>

0800d180 <raise>:
 800d180:	4b02      	ldr	r3, [pc, #8]	; (800d18c <raise+0xc>)
 800d182:	4601      	mov	r1, r0
 800d184:	6818      	ldr	r0, [r3, #0]
 800d186:	f7ff bfd3 	b.w	800d130 <_raise_r>
 800d18a:	bf00      	nop
 800d18c:	20000180 	.word	0x20000180

0800d190 <_kill_r>:
 800d190:	b538      	push	{r3, r4, r5, lr}
 800d192:	2300      	movs	r3, #0
 800d194:	4d06      	ldr	r5, [pc, #24]	; (800d1b0 <_kill_r+0x20>)
 800d196:	4604      	mov	r4, r0
 800d198:	4608      	mov	r0, r1
 800d19a:	4611      	mov	r1, r2
 800d19c:	602b      	str	r3, [r5, #0]
 800d19e:	f7f5 faaa 	bl	80026f6 <_kill>
 800d1a2:	1c43      	adds	r3, r0, #1
 800d1a4:	d102      	bne.n	800d1ac <_kill_r+0x1c>
 800d1a6:	682b      	ldr	r3, [r5, #0]
 800d1a8:	b103      	cbz	r3, 800d1ac <_kill_r+0x1c>
 800d1aa:	6023      	str	r3, [r4, #0]
 800d1ac:	bd38      	pop	{r3, r4, r5, pc}
 800d1ae:	bf00      	nop
 800d1b0:	200033fc 	.word	0x200033fc

0800d1b4 <_getpid_r>:
 800d1b4:	f7f5 ba9d 	b.w	80026f2 <_getpid>

0800d1b8 <_init>:
 800d1b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d1ba:	bf00      	nop
 800d1bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d1be:	bc08      	pop	{r3}
 800d1c0:	469e      	mov	lr, r3
 800d1c2:	4770      	bx	lr

0800d1c4 <_fini>:
 800d1c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d1c6:	bf00      	nop
 800d1c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d1ca:	bc08      	pop	{r3}
 800d1cc:	469e      	mov	lr, r3
 800d1ce:	4770      	bx	lr
